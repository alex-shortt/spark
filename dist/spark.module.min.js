import * as Q from "three";
import { Loader as _r, FileLoader as Vr, Quaternion as je, Vector3 as vA, Color as Pe, Matrix4 as de } from "three";
let zA;
const rs = typeof TextDecoder < "u" ? new TextDecoder("utf-8", { ignoreBOM: !0, fatal: !0 }) : { decode: () => {
  throw Error("TextDecoder not available");
} };
typeof TextDecoder < "u" && rs.decode();
let ft = null;
function Zr() {
  return (ft === null || ft.byteLength === 0) && (ft = new Uint8Array(zA.memory.buffer)), ft;
}
function Or(t, A) {
  return t = t >>> 0, rs.decode(Zr().subarray(t, t + A));
}
function Wr(t, A, e, s, i, n, a, r, g, I, B) {
  return zA.raycast_splats(t, A, e, s, i, n, a, r, g, I, B);
}
async function jr(t, A) {
  if (typeof Response == "function" && t instanceof Response) {
    if (typeof WebAssembly.instantiateStreaming == "function")
      try {
        return await WebAssembly.instantiateStreaming(t, A);
      } catch (s) {
        if (t.headers.get("Content-Type") != "application/wasm")
          console.warn("`WebAssembly.instantiateStreaming` failed because your server does not serve Wasm with `application/wasm` MIME type. Falling back to `WebAssembly.instantiate` which is slower. Original error:\n", s);
        else
          throw s;
      }
    const e = await t.arrayBuffer();
    return await WebAssembly.instantiate(e, A);
  } else {
    const e = await WebAssembly.instantiate(t, A);
    return e instanceof WebAssembly.Instance ? { instance: e, module: t } : e;
  }
}
function Pr() {
  const t = {};
  return t.wbg = {}, t.wbg.__wbg_buffer_609cc3eee51ed158 = function(A) {
    return A.buffer;
  }, t.wbg.__wbg_length_3b4f022188ae8db6 = function(A) {
    return A.length;
  }, t.wbg.__wbg_length_6ca527665d89694d = function(A) {
    return A.length;
  }, t.wbg.__wbg_length_8cfd2c6409af88ad = function(A) {
    return A.length;
  }, t.wbg.__wbg_new_9fee97a409b32b68 = function(A) {
    return new Uint16Array(A);
  }, t.wbg.__wbg_new_e3b321dcfef89fc7 = function(A) {
    return new Uint32Array(A);
  }, t.wbg.__wbg_newwithbyteoffsetandlength_e6b7e69acd4c7354 = function(A, e, s) {
    return new Float32Array(A, e >>> 0, s >>> 0);
  }, t.wbg.__wbg_newwithbyteoffsetandlength_f1dead44d1fc7212 = function(A, e, s) {
    return new Uint32Array(A, e >>> 0, s >>> 0);
  }, t.wbg.__wbg_newwithlength_5a5efe313cfd59f1 = function(A) {
    return new Float32Array(A >>> 0);
  }, t.wbg.__wbg_set_10bad9bee0e9c58b = function(A, e, s) {
    A.set(e, s >>> 0);
  }, t.wbg.__wbg_set_d23661d19148b229 = function(A, e, s) {
    A.set(e, s >>> 0);
  }, t.wbg.__wbg_set_f4f1f0daa30696fc = function(A, e, s) {
    A.set(e, s >>> 0);
  }, t.wbg.__wbg_subarray_3aaeec89bb2544f0 = function(A, e, s) {
    return A.subarray(e >>> 0, s >>> 0);
  }, t.wbg.__wbg_subarray_769e1e0f81bb259b = function(A, e, s) {
    return A.subarray(e >>> 0, s >>> 0);
  }, t.wbg.__wbindgen_init_externref_table = function() {
    const A = zA.__wbindgen_export_0, e = A.grow(4);
    A.set(0, void 0), A.set(e + 0, void 0), A.set(e + 1, null), A.set(e + 2, !0), A.set(e + 3, !1);
  }, t.wbg.__wbindgen_memory = function() {
    return zA.memory;
  }, t.wbg.__wbindgen_throw = function(A, e) {
    throw new Error(Or(A, e));
  }, t;
}
function Xr(t, A) {
  return zA = t.exports, gs.__wbindgen_wasm_module = A, ft = null, zA.__wbindgen_start(), zA;
}
async function gs(t) {
  if (zA !== void 0) return zA;
  typeof t < "u" && (Object.getPrototypeOf(t) === Object.prototype ? { module_or_path: t } = t : console.warn("using deprecated parameters for the initialization function; pass a single object instead")), typeof t > "u" && (t = new URL("data:application/wasm;base64,", import.meta.url));
  const A = Pr();
  (typeof t == "string" || typeof Request == "function" && t instanceof Request || typeof URL == "function" && t instanceof URL) && (t = fetch(t));
  const { instance: e, module: s } = await jr(await t, A);
  return Xr(e, s);
}
const YA = -9, $r = 9, _A = ($r - YA) / 254, Ag = 11, tg = 11, j = 1 << Ag, XA = 1 << tg, os = 1;
function ot(t) {
  return t === "bool" || t === "bvec2" || t === "bvec3" || t === "bvec4";
}
function It(t) {
  return t === "int" || t === "uint" || t === "float";
}
function lA(t) {
  return t === "int" || t === "ivec2" || t === "ivec3" || t === "ivec4";
}
function uA(t) {
  return t === "uint" || t === "uvec2" || t === "uvec3" || t === "uvec4";
}
function Rt(t) {
  return t === "float" || t === "vec2" || t === "vec3" || t === "vec4";
}
function Is(t) {
  return t === "mat2" || t === "mat2x2" || t === "mat2x3" || t === "mat2x4" || t === "mat3" || t === "mat3x2" || t === "mat3x3" || t === "mat3x4" || t === "mat4" || t === "mat4x2" || t === "mat4x3" || t === "mat4x4";
}
function tt(t) {
  return Rt(t) || Is(t);
}
function pt(t) {
  return t === "vec2" || t === "ivec2" || t === "uvec2";
}
function yt(t) {
  return t === "vec3" || t === "ivec3" || t === "uvec3";
}
function Ut(t) {
  return t === "vec4" || t === "ivec4" || t === "uvec4";
}
function eg(t) {
  return pt(t) || yt(t) || Ut(t);
}
function et(t) {
  return t === "mat2" || t === "mat2x2";
}
function st(t) {
  return t === "mat3" || t === "mat3x3";
}
function it(t) {
  return t === "mat4" || t === "mat4x4";
}
function Bs(t) {
  switch (t) {
    case "vec2":
      return "float";
    case "vec3":
      return "float";
    case "vec4":
      return "float";
    case "ivec2":
      return "int";
    case "ivec3":
      return "int";
    case "ivec4":
      return "int";
    case "uvec2":
      return "uint";
    case "uvec3":
      return "uint";
    case "uvec4":
      return "uint";
    default:
      throw new Error(`Invalid vector type: ${t}`);
  }
}
function Qs(t) {
  switch (t) {
    case "vec2":
    case "ivec2":
    case "uvec2":
      return 2;
    case "vec3":
    case "ivec3":
    case "uvec3":
      return 3;
    case "vec4":
    case "ivec4":
    case "uvec4":
      return 4;
    default:
      throw new Error(`Invalid vector type: ${t}`);
  }
}
function sg(t) {
  if (It(t))
    return "float";
  if (pt(t))
    return "vec2";
  if (yt(t))
    return "vec3";
  if (Ut(t))
    return "vec4";
  throw new Error(`Invalid vector type: ${t}`);
}
function Cs(t) {
  if (It(t))
    return "uint";
  if (pt(t))
    return "uvec2";
  if (yt(t))
    return "uvec3";
  if (Ut(t))
    return "uvec4";
  throw new Error(`Invalid vector type: ${t}`);
}
function ig(t) {
  if (It(t))
    return "int";
  if (pt(t))
    return "ivec2";
  if (yt(t))
    return "ivec3";
  if (Ut(t))
    return "ivec4";
  throw new Error(`Invalid vector type: ${t}`);
}
function Es(t) {
  if (typeof t == "string")
    return t;
  if (typeof t == "object" && t.type)
    return t.type;
  throw new Error(`Invalid DynoType: ${String(t)}`);
}
function rA(t) {
  return Math.trunc(t).toString();
}
function gA(t) {
  return `${Math.max(0, Math.trunc(t)).toString()}u`;
}
function H(t) {
  return t === Number.POSITIVE_INFINITY ? "INFINITY" : t === Number.NEGATIVE_INFINITY ? "-INFINITY" : Number.isInteger(t) ? t.toFixed(1) : t.toString();
}
function _(t) {
  return t instanceof $A ? t.type : t.dynoOut().type;
}
class $A {
  constructor(A) {
    this.__isDynoValue = !0, this.type = A;
  }
}
class q extends $A {
  constructor(A, e) {
    super(A.outTypes[e]), this.dyno = A, this.key = e;
  }
}
class lt extends $A {
  constructor(A, e) {
    super(A), this.literal = e;
  }
  getLiteral() {
    return this.literal;
  }
}
function Wt(t, A) {
  return new lt(t, A);
}
class cs extends lt {
  constructor(A, e) {
    super(A, ""), this.value = e;
  }
  getLiteral() {
    const { type: A, value: e } = this;
    switch (A) {
      case "bool":
        return e ? "true" : "false";
      case "uint":
        return gA(e);
      case "int":
        return rA(e);
      case "float":
        return H(e);
      case "bvec2": {
        const s = e;
        return `bvec2(${s[0]}, ${s[1]})`;
      }
      case "uvec2": {
        if (e instanceof Q.Vector2)
          return `uvec2(${gA(e.x)}, ${gA(e.y)})`;
        const s = e;
        return `uvec2(${gA(s[0])}, ${gA(s[1])})`;
      }
      case "ivec2": {
        if (e instanceof Q.Vector2)
          return `ivec2(${rA(e.x)}, ${rA(e.y)})`;
        const s = e;
        return `ivec2(${rA(s[0])}, ${rA(s[1])})`;
      }
      case "vec2": {
        if (e instanceof Q.Vector2)
          return `vec2(${H(e.x)}, ${H(e.y)})`;
        const s = e;
        return `vec2(${H(s[0])}, ${H(s[1])})`;
      }
      case "bvec3": {
        const s = e;
        return `bvec3(${s[0]}, ${s[1]}, ${s[2]})`;
      }
      case "uvec3": {
        if (e instanceof Q.Vector3)
          return `uvec3(${gA(e.x)}, ${gA(e.y)}, ${gA(e.z)})`;
        const s = e;
        return `uvec3(${gA(s[0])}, ${gA(s[1])}, ${gA(s[2])})`;
      }
      case "ivec3": {
        if (e instanceof Q.Vector3)
          return `ivec3(${rA(e.x)}, ${rA(e.y)}, ${rA(e.z)})`;
        const s = e;
        return `ivec3(${rA(s[0])}, ${rA(s[1])}, ${rA(s[2])})`;
      }
      case "vec3": {
        if (e instanceof Q.Vector3)
          return `vec3(${H(e.x)}, ${H(e.y)}, ${H(e.z)})`;
        const s = e;
        return `vec3(${H(s[0])}, ${H(s[1])}, ${H(s[2])})`;
      }
      case "bvec4": {
        const s = e;
        return `bvec4(${s[0]}, ${s[1]}, ${s[2]}, ${s[3]})`;
      }
      case "uvec4": {
        if (e instanceof Q.Vector4)
          return `uvec4(${gA(e.x)}, ${gA(e.y)}, ${gA(e.z)}, ${gA(e.w)})`;
        const s = e;
        return `uvec4(${gA(s[0])}, ${gA(s[1])}, ${gA(s[2])}, ${gA(s[3])})`;
      }
      case "ivec4": {
        if (e instanceof Q.Vector4)
          return `ivec4(${rA(e.x)}, ${rA(e.y)}, ${rA(e.z)}, ${rA(e.w)})`;
        const s = e;
        return `ivec4(${rA(s[0])}, ${rA(s[1])}, ${rA(s[2])}, ${rA(s[3])})`;
      }
      case "vec4": {
        if (e instanceof Q.Vector4)
          return `vec4(${H(e.x)}, ${H(e.y)}, ${H(e.z)}, ${H(e.w)})`;
        if (e instanceof Q.Quaternion)
          return `vec4(${H(e.x)}, ${H(e.y)}, ${H(e.z)}, ${H(e.w)})`;
        const s = e;
        return `vec4(${H(s[0])}, ${H(s[1])}, ${H(s[2])}, ${H(s[3])})`;
      }
      case "mat2":
      case "mat2x2": {
        const s = e, i = s instanceof Q.Matrix2 ? s.elements : e, n = new Array(4).fill(0).map((a, r) => H(i[r]));
        return `${A}(${n.join(", ")})`;
      }
      case "mat2x3": {
        const s = e, i = new Array(6).fill(0).map((n, a) => H(s[a]));
        return `${A}(${i.join(", ")})`;
      }
      case "mat2x4": {
        const s = e, i = new Array(8).fill(0).map((n, a) => H(s[a]));
        return `${A}(${i.join(", ")})`;
      }
      case "mat3":
      case "mat3x3": {
        const s = e, i = s instanceof Q.Matrix3 ? s.elements : e, n = new Array(9).fill(0).map((a, r) => H(i[r]));
        return `${A}(${n.join(", ")})`;
      }
      case "mat3x2": {
        const s = e, i = new Array(6).fill(0).map((n, a) => H(s[a]));
        return `${A}(${i.join(", ")})`;
      }
      case "mat3x4": {
        const s = e, i = new Array(12).fill(0).map((n, a) => H(s[a]));
        return `${A}(${i.join(", ")})`;
      }
      case "mat4":
      case "mat4x4": {
        const s = e, i = s instanceof Q.Matrix4 ? s.elements : e, n = new Array(16).fill(0).map((a, r) => H(i[r]));
        return `${A}(${n.join(", ")})`;
      }
      case "mat4x2": {
        const s = e, i = new Array(8).fill(0).map((n, a) => H(s[a]));
        return `${A}(${i.join(", ")})`;
      }
      case "mat4x3": {
        const s = e, i = new Array(12).fill(0).map((n, a) => H(s[a]));
        return `${A}(${i.join(", ")})`;
      }
      default:
        throw new Error(`Type not implemented: ${String(A)}`);
    }
  }
}
function K(t, A) {
  return new cs(t, A);
}
function mt(t) {
  const A = String(t);
  if (ot(t))
    return `${A}(false)`;
  if (tt(t))
    return `${A}(0.0)`;
  if (lA(t))
    return `${A}(0)`;
  if (uA(t))
    return `${A}(0u)`;
  throw new Error(`Type not implemented: ${A}`);
}
function ng(t) {
  const A = String(t);
  if (ot(t))
    return `${A}(true)`;
  if (tt(t))
    return `${A}(1.0)`;
  if (lA(t))
    return `${A}(1)`;
  if (uA(t))
    return `${A}(1u)`;
  throw new Error(`Type not implemented: ${A}`);
}
function ag(t) {
  const A = String(t);
  if (ot(t))
    return `${A}(true)`;
  if (tt(t))
    return `${A}(-1.0)`;
  if (lA(t))
    return `${A}(-1)`;
  if (uA(t))
    return `${A}(0xFFFFFFFFu)`;
  throw new Error(`Type not implemented: ${A}`);
}
const Xe = "    ";
class hs {
  constructor({ indent: A } = {}) {
    this.globals = /* @__PURE__ */ new Set(), this.statements = [], this.uniforms = {}, this.declares = /* @__PURE__ */ new Set(), this.updaters = [], this.sequence = 0, this.indent = Xe, this.indent = A ?? Xe;
  }
  nextSequence() {
    return this.sequence++;
  }
}
class V {
  constructor({
    inTypes: A,
    outTypes: e,
    inputs: s,
    update: i,
    globals: n,
    statements: a,
    generate: r
  }) {
    this.inTypes = A ?? {}, this.outTypes = e ?? {}, this.inputs = s ?? {}, this.update = i, this.globals = n, this.statements = a, this.generate = r ?? (({ inputs: g, outputs: I, compile: B }) => {
      var o, C;
      return {
        globals: (o = this.globals) == null ? void 0 : o.call(this, { inputs: g, outputs: I, compile: B }),
        statements: (C = this.statements) == null ? void 0 : C.call(this, { inputs: g, outputs: I, compile: B })
      };
    });
  }
  get outputs() {
    const A = {};
    for (const e in this.outTypes)
      A[e] = new q(this, e);
    return A;
  }
  apply(A) {
    return Object.assign(this.inputs, A), this.outputs;
  }
  compile({
    inputs: A,
    outputs: e,
    compile: s
  }) {
    const i = [
      `// ${this.constructor.name}(${Object.values(A).join(", ")}) => (${Object.values(e).join(", ")})`
    ], n = [];
    for (const I in e) {
      const B = e[I];
      B && !s.declares.has(B) && (s.declares.add(B), n.push(I));
    }
    const { globals: a, statements: r, uniforms: g } = this.generate({
      inputs: A,
      outputs: e,
      compile: s
    });
    for (const I of a ?? [])
      s.globals.add(I);
    for (const I in g)
      s.uniforms[I] = g[I];
    this.update && s.updaters.push(this.update);
    for (const I of n) {
      const B = e[I];
      B && (s.uniforms[B] || i.push(`${Ye(B, this.outTypes[I])};`));
    }
    return r != null && r.length && (i.push("{"), i.push(...r.map((I) => s.indent + I)), i.push("}")), i;
  }
}
class HA extends V {
  constructor({
    inTypes: A,
    outTypes: e,
    inputs: s,
    update: i,
    globals: n,
    construct: a
  }) {
    super({
      inTypes: A,
      outTypes: e,
      inputs: s,
      update: i,
      globals: n,
      generate: (r) => this.generateBlock(r)
    }), this.construct = a;
  }
  generateBlock({
    inputs: A,
    outputs: e,
    compile: s
  }) {
    var h, c;
    const i = {}, n = {};
    for (const l in A)
      A[l] != null && (i[l] = new lt(this.inTypes[l], A[l]));
    for (const l in e)
      e[l] != null && (n[l] = new $A(this.outTypes[l]));
    const a = { roots: [] }, r = this.construct(i, n, a);
    for (const l of ((h = this.globals) == null ? void 0 : h.call(this, { inputs: A, outputs: e, compile: s })) ?? [])
      s.globals.add(l);
    const g = [], I = /* @__PURE__ */ new Map();
    function B(l, u, w) {
      let d = I.get(l);
      if (!d) {
        d = {
          sequence: s.nextSequence(),
          outNames: /* @__PURE__ */ new Map(),
          newOuts: /* @__PURE__ */ new Set()
        }, I.set(l, d);
        for (const y in l.inputs) {
          let p = l.inputs[y];
          for (; p; ) {
            if (p instanceof $A) {
              p instanceof q && B(p.dyno, p.key);
              break;
            }
            p = p.dynoOut();
          }
        }
        g.push(l);
      }
      u && (w || d.newOuts.add(u), d.outNames.set(u, w ?? `${u}_${d.sequence}`));
    }
    for (const l of a.roots)
      B(l);
    for (const l in n) {
      let u = (r == null ? void 0 : r[l]) ?? n[l];
      for (; u; ) {
        if (u instanceof $A) {
          u instanceof q && B(u.dyno, u.key, e[l]);
          break;
        }
        u = u.dynoOut();
      }
      n[l] = u;
    }
    const o = [];
    for (const l of g) {
      const u = {}, w = {};
      for (const p in l.inputs) {
        let f = l.inputs[p];
        for (; f; ) {
          if (f instanceof $A) {
            if (f instanceof lt)
              u[p] = f.getLiteral();
            else if (f instanceof q) {
              const N = (c = I.get(f.dyno)) == null ? void 0 : c.outNames.get(f.key);
              if (!N)
                throw new Error(
                  `Source not found for ${f.dyno.constructor.name}.${f.key}`
                );
              u[p] = N;
            }
            break;
          }
          f = f.dynoOut();
        }
      }
      const d = I.get(l) ?? { outNames: /* @__PURE__ */ new Map() };
      for (const [p, f] of d.outNames.entries())
        w[p] = f;
      const y = l.compile({ inputs: u, outputs: w, compile: s });
      o.push(y);
    }
    const C = [];
    for (const l in e)
      n[l] instanceof lt && C.push(
        `${e[l]} = ${n[l].getLiteral()};`
      );
    return C.length > 0 && o.push(C), { statements: o.flatMap((l, u) => u === 0 ? l : ["", ...l]) };
  }
}
function SA(t, A, e, { update: s, globals: i } = {}) {
  return new HA({ inTypes: t, outTypes: A, construct: e, update: s, globals: i });
}
function bt({
  inTypes: t,
  outTypes: A,
  inputs: e,
  update: s,
  globals: i,
  statements: n,
  generate: a
}) {
  return new V({
    inTypes: t,
    outTypes: A,
    inputs: e,
    update: s,
    globals: i,
    statements: n,
    generate: a
  });
}
function Ye(t, A, e) {
  const s = typeof A == "string" ? A : A.type;
  if (!s)
    throw new Error(`Invalid DynoType: ${String(A)}`);
  return `${s} ${t}${e != null ? `[${e}]` : ""}`;
}
function GA(t) {
  var n;
  let A = !1;
  const e = t.split(`
`).map((a) => {
    const r = a.trimEnd();
    return A ? r : r.length > 0 ? (A = !0, r) : null;
  }).filter((a) => a != null);
  for (; e.length > 0 && e[e.length - 1].length === 0; )
    e.pop();
  if (e.length === 0)
    return [];
  const s = (n = e[0].match(/^\s*/)) == null ? void 0 : n[0];
  if (!s)
    return e;
  const i = new RegExp(`^${s}`);
  return e.map((a) => a.replace(i, ""));
}
function CA(t) {
  return GA(t).join(`
`);
}
class S extends V {
  constructor({
    a: A,
    outKey: e,
    outTypeFunc: s
  }) {
    const i = { a: _(A) }, n = s(_(A)), a = { [e]: n };
    super({ inTypes: i, outTypes: a, inputs: { a: A } }), this.outKey = e;
  }
  dynoOut() {
    return new q(this, this.outKey);
  }
}
class X extends V {
  constructor({
    a: A,
    b: e,
    outKey: s,
    outTypeFunc: i
  }) {
    const n = { a: _(A), b: _(e) }, a = i(_(A), _(e)), r = { [s]: a };
    super({ inTypes: n, outTypes: r, inputs: { a: A, b: e } }), this.outKey = s;
  }
  dynoOut() {
    return new q(this, this.outKey);
  }
}
class Bt extends V {
  constructor({
    a: A,
    b: e,
    c: s,
    outKey: i,
    outTypeFunc: n
  }) {
    const a = { a: _(A), b: _(e), c: _(s) }, r = n(_(A), _(e), _(s)), g = { [i]: r };
    super({ inTypes: a, outTypes: g, inputs: { a: A, b: e, c: s } }), this.outKey = i;
  }
  dynoOut() {
    return new q(this, this.outKey);
  }
}
const P = { type: "Gsplat" }, vt = { type: "PackedSplats" }, rg = (t) => new us({ packedSplats: t }), kt = (t, A) => new ws({ packedSplats: t, index: A }), ls = (t, A, e, s) => new ps({ packedSplats: t, index: A, base: e, count: s }), nt = (t) => new ys({ gsplat: t }), At = ({
  gsplat: t,
  flags: A,
  index: e,
  center: s,
  scales: i,
  quaternion: n,
  rgba: a,
  rgb: r,
  opacity: g,
  x: I,
  y: B,
  z: o,
  r: C,
  g: E,
  b: h
}) => new Ds({
  gsplat: t,
  flags: A,
  index: e,
  center: s,
  scales: i,
  quaternion: n,
  rgba: a,
  rgb: r,
  opacity: g,
  x: I,
  y: B,
  z: o,
  r: C,
  g: E,
  b: h
}), me = (t) => new ms({ gsplat: t }), Je = (t, {
  scale: A,
  rotate: e,
  translate: s,
  recolor: i
}) => new Ms({ gsplat: t, scale: A, rotate: e, translate: s, recolor: i }), xA = CA(`
  struct Gsplat {
    vec3 center;
    uint flags;
    vec3 scales;
    int index;
    vec4 quaternion;
    vec4 rgba;
  };
  const uint GSPLAT_FLAG_ACTIVE = 1u << 0u;

  bool isGsplatActive(uint flags) {
    return (flags & GSPLAT_FLAG_ACTIVE) != 0u;
  }
`), ne = CA(`
  struct PackedSplats {
    usampler2DArray texture;
    int numSplats;
  };
`);
class us extends S {
  constructor({
    packedSplats: A
  }) {
    super({ a: A, outKey: "numSplats", outTypeFunc: () => "int" }), this.statements = ({ inputs: e, outputs: s }) => [
      `${s.numSplats} = ${e.a}.numSplats;`
    ];
  }
}
const ds = CA(`
  bool readPackedSplat(usampler2DArray texture, int numSplats, int index, out Gsplat gsplat) {
    if ((index >= 0) && (index < numSplats)) {
      uvec4 packed = texelFetch(texture, splatTexCoord(index), 0);
      unpackSplat(packed, gsplat.center, gsplat.scales, gsplat.quaternion, gsplat.rgba);
      return true;
    } else {
      return false;
    }
  }
`);
class ws extends V {
  constructor({
    packedSplats: A,
    index: e
  }) {
    super({
      inTypes: { packedSplats: vt, index: "int" },
      outTypes: { gsplat: P },
      inputs: { packedSplats: A, index: e },
      globals: () => [xA, ne, ds],
      statements: ({ inputs: s, outputs: i }) => {
        const { gsplat: n } = i;
        if (!n)
          return [];
        const { packedSplats: a, index: r } = s;
        let g;
        return a && r ? g = GA(`
            if (readPackedSplat(${a}.texture, ${a}.numSplats, ${r}, ${n})) {
              bool zeroSize = all(equal(${n}.scales, vec3(0.0, 0.0, 0.0)));
              ${n}.flags = zeroSize ? 0u : GSPLAT_FLAG_ACTIVE;
            } else {
              ${n}.flags = 0u;
            }
          `) : g = [`${n}.flags = 0u;`], g.push(`${n}.index = ${r ?? "0"};`), g;
      }
    });
  }
  dynoOut() {
    return new q(this, "gsplat");
  }
}
class ps extends V {
  constructor({
    packedSplats: A,
    index: e,
    base: s,
    count: i
  }) {
    super({
      inTypes: {
        packedSplats: vt,
        index: "int",
        base: "int",
        count: "int"
      },
      outTypes: { gsplat: P },
      inputs: { packedSplats: A, index: e, base: s, count: i },
      globals: () => [xA, ne, ds],
      statements: ({ inputs: n, outputs: a }) => {
        const { gsplat: r } = a;
        if (!r)
          return [];
        const { packedSplats: g, index: I, base: B, count: o } = n;
        let C;
        return g && I && B && o ? C = GA(`
            ${r}.flags = 0u;
            if ((${I} >= ${B}) && (${I} < (${B} + ${o}))) {
              if (readPackedSplat(${g}.texture, ${g}.numSplats, ${I}, ${r})) {
                bool zeroSize = all(equal(${r}.scales, vec3(0.0, 0.0, 0.0)));
                ${r}.flags = zeroSize ? 0u : GSPLAT_FLAG_ACTIVE;
              }
            }
          `) : C = [`${r}.flags = 0u;`], C.push(`${r}.index = ${I ?? "0"};`), C;
      }
    });
  }
  dynoOut() {
    return new q(this, "gsplat");
  }
}
class ys extends V {
  constructor({ gsplat: A }) {
    super({
      inTypes: { gsplat: P },
      outTypes: {
        flags: "uint",
        active: "bool",
        index: "int",
        center: "vec3",
        scales: "vec3",
        quaternion: "vec4",
        rgba: "vec4",
        rgb: "vec3",
        opacity: "float",
        x: "float",
        y: "float",
        z: "float",
        r: "float",
        g: "float",
        b: "float"
      },
      inputs: { gsplat: A },
      globals: () => [xA],
      statements: ({ inputs: e, outputs: s }) => {
        const { gsplat: i } = e, {
          flags: n,
          active: a,
          index: r,
          center: g,
          scales: I,
          quaternion: B,
          rgba: o,
          rgb: C,
          opacity: E,
          x: h,
          y: c,
          z: l,
          r: u,
          g: w,
          b: d
        } = s;
        return [
          n ? `${n} = ${i ? `${i}.flags` : "0u"};` : null,
          a ? `${a} = isGsplatActive(${i ? `${i}.flags` : "0u"});` : null,
          r ? `${r} = ${i ? `${i}.index` : "0"};` : null,
          g ? `${g} = ${i ? `${i}.center` : "vec3(0.0, 0.0, 0.0)"};` : null,
          I ? `${I} = ${i ? `${i}.scales` : "vec3(0.0, 0.0, 0.0)"};` : null,
          B ? `${B} = ${i ? `${i}.quaternion` : "vec4(0.0, 0.0, 0.0, 1.0)"};` : null,
          o ? `${o} = ${i ? `${i}.rgba` : "vec4(0.0, 0.0, 0.0, 0.0)"};` : null,
          C ? `${C} = ${i ? `${i}.rgba.rgb` : "vec3(0.0, 0.0, 0.0)"};` : null,
          E ? `${E} = ${i ? `${i}.rgba.a` : "0.0"};` : null,
          h ? `${h} = ${i ? `${i}.center.x` : "0.0"};` : null,
          c ? `${c} = ${i ? `${i}.center.y` : "0.0"};` : null,
          l ? `${l} = ${i ? `${i}.center.z` : "0.0"};` : null,
          u ? `${u} = ${i ? `${i}.rgba.r` : "0.0"};` : null,
          w ? `${w} = ${i ? `${i}.rgba.g` : "0.0"};` : null,
          d ? `${d} = ${i ? `${i}.rgba.b` : "0.0"};` : null
        ].filter(Boolean);
      }
    });
  }
}
class Ds extends V {
  constructor({
    gsplat: A,
    flags: e,
    index: s,
    center: i,
    scales: n,
    quaternion: a,
    rgba: r,
    rgb: g,
    opacity: I,
    x: B,
    y: o,
    z: C,
    r: E,
    g: h,
    b: c
  }) {
    super({
      inTypes: {
        gsplat: P,
        flags: "uint",
        index: "int",
        center: "vec3",
        scales: "vec3",
        quaternion: "vec4",
        rgba: "vec4",
        rgb: "vec3",
        opacity: "float",
        x: "float",
        y: "float",
        z: "float",
        r: "float",
        g: "float",
        b: "float"
      },
      outTypes: { gsplat: P },
      inputs: {
        gsplat: A,
        flags: e,
        index: s,
        center: i,
        scales: n,
        quaternion: a,
        rgba: r,
        rgb: g,
        opacity: I,
        x: B,
        y: o,
        z: C,
        r: E,
        g: h,
        b: c
      },
      globals: () => [xA],
      statements: ({ inputs: l, outputs: u }) => {
        const { gsplat: w } = u;
        if (!w)
          return [];
        const {
          gsplat: d,
          flags: y,
          index: p,
          center: f,
          scales: N,
          quaternion: m,
          rgba: D,
          rgb: U,
          opacity: x,
          x: M,
          y: b,
          z: F,
          r: G,
          g: R,
          b: J
        } = l;
        return [
          `${w}.flags = ${y ?? (d ? `${d}.flags` : "0u")};`,
          `${w}.index = ${p ?? (d ? `${d}.index` : "0")};`,
          `${w}.center = ${f ?? (d ? `${d}.center` : "vec3(0.0, 0.0, 0.0)")};`,
          `${w}.scales = ${N ?? (d ? `${d}.scales` : "vec3(0.0, 0.0, 0.0)")};`,
          `${w}.quaternion = ${m ?? (d ? `${d}.quaternion` : "vec4(0.0, 0.0, 0.0, 1.0)")};`,
          `${w}.rgba = ${D ?? (d ? `${d}.rgba` : "vec4(0.0, 0.0, 0.0, 0.0)")};`,
          U ? `${w}.rgba.rgb = ${U};` : null,
          x ? `${w}.rgba.a = ${x};` : null,
          M ? `${w}.center.x = ${M};` : null,
          b ? `${w}.center.y = ${b};` : null,
          F ? `${w}.center.z = ${F};` : null,
          G ? `${w}.rgba.r = ${G};` : null,
          R ? `${w}.rgba.g = ${R};` : null,
          J ? `${w}.rgba.b = ${J};` : null
        ].filter(Boolean);
      }
    });
  }
  dynoOut() {
    return new q(this, "gsplat");
  }
}
const fs = CA(`
  vec3 gsplatNormal(vec3 scales, vec4 quaternion) {
    float minScale = min(scales.x, min(scales.y, scales.z));
    vec3 normal;
    if (scales.z == minScale) {
      normal = vec3(0.0, 0.0, 1.0);
    } else if (scales.y == minScale) {
      normal = vec3(0.0, 1.0, 0.0);
    } else {
      normal = vec3(1.0, 0.0, 0.0);
    }
    return quatVec(quaternion, normal);
  }
`);
class ms extends S {
  constructor({ gsplat: A }) {
    super({ a: A, outKey: "normal", outTypeFunc: () => "vec3" }), this.globals = () => [xA, fs], this.statements = ({ inputs: e, outputs: s }) => [
      `${s.normal} = gsplatNormal(${e.a}.scales, ${e.a}.quaternion);`
    ];
  }
}
class Ms extends V {
  constructor({
    gsplat: A,
    scale: e,
    rotate: s,
    translate: i,
    recolor: n
  }) {
    super({
      inTypes: {
        gsplat: P,
        scale: "float",
        rotate: "vec4",
        translate: "vec3",
        recolor: "vec4"
      },
      outTypes: { gsplat: P },
      inputs: { gsplat: A, scale: e, rotate: s, translate: i, recolor: n },
      globals: () => [xA],
      statements: ({ inputs: a, outputs: r, compile: g }) => {
        const { gsplat: I } = r;
        if (!I || !a.gsplat)
          return [];
        const { scale: B, rotate: o, translate: C, recolor: E } = a, h = g.indent;
        return [
          `${I} = ${a.gsplat};`,
          `if (isGsplatActive(${I}.flags)) {`,
          B ? `${h}${I}.center *= ${B};` : null,
          o ? `${h}${I}.center = quatVec(${o}, ${I}.center);` : null,
          C ? `${h}${I}.center += ${C};` : null,
          B ? `${h}${I}.scales *= ${B};` : null,
          o ? `${h}${I}.quaternion = quatQuat(${o}, ${I}.quaternion);` : null,
          E ? `${h}${I}.rgba *= ${E};` : null,
          "}"
        ].filter(Boolean);
      }
    });
  }
  dynoOut() {
    return new q(this, "gsplat");
  }
}
const xs = (t) => new Ss({ gsplat: t }), gg = (t) => new Te({ rgba8: t });
class Ss extends V {
  constructor({ gsplat: A }) {
    super({
      inTypes: { gsplat: P },
      inputs: { gsplat: A },
      globals: () => [xA],
      statements: ({ inputs: e, outputs: s }) => {
        const { output: i } = s;
        if (!i)
          return [];
        const { gsplat: n } = e;
        return n ? GA(`
            if (isGsplatActive(${n}.flags)) {
              ${i} = packSplat(${n}.center, ${n}.scales, ${n}.quaternion, ${n}.rgba);
            } else {
              ${i} = uvec4(0u, 0u, 0u, 0u);
            }
          `) : [`${i} = uvec4(0u, 0u, 0u, 0u);`];
      }
    });
  }
  dynoOut() {
    return new q(this, "output");
  }
}
class Te extends V {
  constructor({ rgba8: A }) {
    super({
      inTypes: { rgba8: "vec4" },
      inputs: { rgba8: A },
      statements: ({ inputs: e, outputs: s }) => [
        `target = ${e.rgba8 ?? "vec4(0.0, 0.0, 0.0, 0.0)"};`
      ]
    });
  }
  dynoOut() {
    return new q(this, "rgba8");
  }
}
const og = (t, A, e) => new k({ key: t, type: A, value: e }), Ig = (t = !1, A) => new jt({ key: A, value: t }), Bg = (t = 0, A) => new Ns({ key: A, value: t }), Qg = (t = 0, A) => new Gt({ key: A, value: t }), LA = (t = 0, A) => new at({ key: A, value: t }), Cg = (t, A) => new Fs({ key: A, value: t }), Eg = (t, A) => new ks({ key: A, value: t }), cg = (t, A) => new Gs({ key: A, value: t }), hg = (t, A) => new Rs({ key: A, value: t }), lg = (t, A) => new Us({ key: A, value: t }), ug = (t, A) => new bs({ key: A, value: t }), dg = (t, A) => new vs({ key: A, value: t }), OA = (t, A) => new dt({ key: A, value: t }), wg = (t, A) => new Ls({ key: A, value: t }), pg = (t, A) => new Ys({ key: A, value: t }), yg = (t, A) => new Js({ key: A, value: t }), Dg = (t, A) => new Lt({ key: A, value: t }), fg = (t, A) => new Ts({ key: A, value: t }), mg = (t, A) => new Hs({ key: A, value: t }), Mg = (t, A) => new Ks({ key: A, value: t }), xg = (t, A) => new qs({ key: A, value: t }), Sg = (t, A) => new zs({ key: A, value: t }), Ng = (t, A) => new _s({ key: A, value: t }), Fg = (t, A) => new Vs({ key: A, value: t }), kg = (t, A) => new Zs({ key: A, value: t }), Gg = (t, A) => new Os({ key: A, value: t }), Rg = (t, A) => new Ws({ key: A, value: t }), Ug = (t, A) => new js({ key: A, value: t }), bg = (t, A) => new Ps({ key: A, value: t }), vg = (t, A) => new Xs({ key: A, value: t }), Lg = (t, A) => new $s({ key: A, value: t }), Yg = (t, A) => new Ai({ key: A, value: t }), Jg = (t, A) => new St({ key: A, value: t }), Tg = (t, A) => new ti({ key: t, value: A }), Hg = (t, A) => new ei({ key: A, value: t }), Kg = (t, A) => new si({ key: A, value: t }), qg = (t, A) => new ii({ key: A, value: t }), zg = (t, A) => new ni({ key: A, value: t }), _g = (t, A) => new ai({ key: A, value: t }), Vg = (t, A) => new ri({ key: A, value: t }), Zg = (t, A) => new gi({ key: A, value: t }), Og = (t, A) => new oi({ key: A, value: t }), Wg = (t, A) => new Ii({ key: A, value: t }), jg = (t, A) => new Bi({ key: A, value: t });
class k extends V {
  constructor({
    key: A,
    type: e,
    count: s,
    value: i,
    update: n,
    globals: a
  }) {
    A = A ?? "value", super({
      outTypes: { [A]: e },
      update: () => {
        if (n) {
          const r = n(this.value);
          r !== void 0 && (this.value = r);
        }
        this.uniform.value = this.value;
      },
      generate: ({ inputs: r, outputs: g }) => {
        const I = (a == null ? void 0 : a({ inputs: r, outputs: g })) ?? [], B = {}, o = g[A];
        return o && (I.push(`uniform ${Ye(o, e, s)};`), B[o] = this.uniform), { globals: I, uniforms: B };
      }
    }), this.type = e, this.count = s, this.value = i, this.uniform = { value: i }, this.outKey = A;
  }
  dynoOut() {
    return new q(this, this.outKey);
  }
}
class jt extends k {
  constructor({
    key: A,
    value: e,
    update: s
  }) {
    super({ key: A, type: "bool", value: e, update: s });
  }
}
class Ns extends k {
  constructor({
    key: A,
    value: e,
    update: s
  }) {
    super({ key: A, type: "uint", value: e, update: s });
  }
}
class Gt extends k {
  constructor({
    key: A,
    value: e,
    update: s
  }) {
    super({ key: A, type: "int", value: e, update: s });
  }
}
class at extends k {
  constructor({
    key: A,
    value: e,
    update: s
  }) {
    super({ key: A, type: "float", value: e, update: s });
  }
}
class Fs extends k {
  constructor({
    key: A,
    value: e,
    update: s
  }) {
    super({ key: A, type: "bvec2", value: e, update: s });
  }
}
class ks extends k {
  constructor({
    key: A,
    value: e,
    update: s
  }) {
    super({ key: A, type: "uvec2", value: e, update: s });
  }
}
class Gs extends k {
  constructor({
    key: A,
    value: e,
    update: s
  }) {
    super({ key: A, type: "ivec2", value: e, update: s });
  }
}
class Rs extends k {
  constructor({
    key: A,
    value: e,
    update: s
  }) {
    super({ key: A, type: "vec2", value: e, update: s });
  }
}
class Us extends k {
  constructor({
    key: A,
    value: e,
    update: s
  }) {
    super({ key: A, type: "bvec3", value: e, update: s });
  }
}
class bs extends k {
  constructor({
    key: A,
    value: e,
    update: s
  }) {
    super({ key: A, type: "uvec3", value: e, update: s });
  }
}
class vs extends k {
  constructor({
    key: A,
    value: e,
    update: s
  }) {
    super({ key: A, type: "ivec3", value: e, update: s });
  }
}
class dt extends k {
  constructor({
    key: A,
    value: e,
    update: s
  }) {
    super({ key: A, type: "vec3", value: e, update: s });
  }
}
class Ls extends k {
  constructor({
    key: A,
    value: e,
    update: s
  }) {
    super({ key: A, type: "bvec4", value: e, update: s });
  }
}
class Ys extends k {
  constructor({
    key: A,
    value: e,
    update: s
  }) {
    super({ key: A, type: "uvec4", value: e, update: s });
  }
}
class Js extends k {
  constructor({
    key: A,
    value: e,
    update: s
  }) {
    super({ key: A, type: "ivec4", value: e, update: s });
  }
}
class Lt extends k {
  constructor({
    key: A,
    value: e,
    update: s
  }) {
    super({ key: A, type: "vec4", value: e, update: s });
  }
}
class Ts extends k {
  constructor({
    key: A,
    value: e,
    update: s
  }) {
    super({ key: A, type: "mat2", value: e, update: s });
  }
}
class Hs extends k {
  constructor({
    key: A,
    value: e,
    update: s
  }) {
    super({ key: A, type: "mat2x2", value: e, update: s });
  }
}
class Ks extends k {
  constructor({
    key: A,
    value: e,
    update: s
  }) {
    super({ key: A, type: "mat2x3", value: e, update: s });
  }
}
class qs extends k {
  constructor({
    key: A,
    value: e,
    update: s
  }) {
    super({ key: A, type: "mat2x4", value: e, update: s });
  }
}
class zs extends k {
  constructor({
    key: A,
    value: e,
    update: s
  }) {
    super({ key: A, type: "mat3", value: e, update: s });
  }
}
class _s extends k {
  constructor({
    key: A,
    value: e,
    update: s
  }) {
    super({ key: A, type: "mat3x2", value: e, update: s });
  }
}
class Vs extends k {
  constructor({
    key: A,
    value: e,
    update: s
  }) {
    super({ key: A, type: "mat3x3", value: e, update: s });
  }
}
class Zs extends k {
  constructor({
    key: A,
    value: e,
    update: s
  }) {
    super({ key: A, type: "mat3x4", value: e, update: s });
  }
}
class Os extends k {
  constructor({
    key: A,
    value: e,
    update: s
  }) {
    super({ key: A, type: "mat4", value: e, update: s });
  }
}
class Ws extends k {
  constructor({
    key: A,
    value: e,
    update: s
  }) {
    super({ key: A, type: "mat4x2", value: e, update: s });
  }
}
class js extends k {
  constructor({
    key: A,
    value: e,
    update: s
  }) {
    super({ key: A, type: "mat4x3", value: e, update: s });
  }
}
class Ps extends k {
  constructor({
    key: A,
    value: e,
    update: s
  }) {
    super({ key: A, type: "mat4x4", value: e, update: s });
  }
}
class Xs extends k {
  constructor({
    key: A,
    value: e,
    update: s
  }) {
    super({ key: A, type: "usampler2D", value: e, update: s });
  }
}
class $s extends k {
  constructor({
    key: A,
    value: e,
    update: s
  }) {
    super({ key: A, type: "isampler2D", value: e, update: s });
  }
}
class Ai extends k {
  constructor({
    key: A,
    value: e,
    update: s
  }) {
    super({ key: A, type: "sampler2D", value: e, update: s });
  }
}
class St extends k {
  constructor({
    key: A,
    value: e,
    update: s
  }) {
    super({ key: A, type: "usampler2DArray", value: e, update: s });
  }
}
class ti extends k {
  constructor({
    key: A,
    value: e,
    update: s
  }) {
    super({ key: A, type: "isampler2DArray", value: e, update: s });
  }
}
class ei extends k {
  constructor({
    key: A,
    value: e,
    update: s
  }) {
    super({ key: A, type: "sampler2DArray", value: e, update: s });
  }
}
class si extends k {
  constructor({
    key: A,
    value: e,
    update: s
  }) {
    super({ key: A, type: "usampler3D", value: e, update: s });
  }
}
class ii extends k {
  constructor({
    key: A,
    value: e,
    update: s
  }) {
    super({ key: A, type: "isampler3D", value: e, update: s });
  }
}
class ni extends k {
  constructor({
    key: A,
    value: e,
    update: s
  }) {
    super({ key: A, type: "sampler3D", value: e, update: s });
  }
}
class ai extends k {
  constructor({
    key: A,
    value: e,
    update: s
  }) {
    super({ key: A, type: "usamplerCube", value: e, update: s });
  }
}
class ri extends k {
  constructor({
    key: A,
    value: e,
    update: s
  }) {
    super({ key: A, type: "isamplerCube", value: e, update: s });
  }
}
class gi extends k {
  constructor({
    key: A,
    value: e,
    update: s
  }) {
    super({ key: A, type: "samplerCube", value: e, update: s });
  }
}
class oi extends k {
  constructor({
    key: A,
    value: e,
    update: s
  }) {
    super({ key: A, type: "sampler2DShadow", value: e, update: s });
  }
}
class Ii extends k {
  constructor({
    key: A,
    value: e,
    update: s
  }) {
    super({ key: A, type: "sampler2DArrayShadow", value: e, update: s });
  }
}
class Bi extends k {
  constructor({
    key: A,
    value: e,
    update: s
  }) {
    super({ key: A, type: "samplerCubeShadow", value: e, update: s });
  }
}
var hA = Uint8Array, Et = Uint16Array, Pg = Int32Array, Qi = new hA([
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  1,
  1,
  1,
  1,
  2,
  2,
  2,
  2,
  3,
  3,
  3,
  3,
  4,
  4,
  4,
  4,
  5,
  5,
  5,
  5,
  0,
  /* unused */
  0,
  0,
  /* impossible */
  0
]), Ci = new hA([
  0,
  0,
  0,
  0,
  1,
  1,
  2,
  2,
  3,
  3,
  4,
  4,
  5,
  5,
  6,
  6,
  7,
  7,
  8,
  8,
  9,
  9,
  10,
  10,
  11,
  11,
  12,
  12,
  13,
  13,
  /* unused */
  0,
  0
]), Xg = new hA([16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15]), Ei = function(t, A) {
  for (var e = new Et(31), s = 0; s < 31; ++s)
    e[s] = A += 1 << t[s - 1];
  for (var i = new Pg(e[30]), s = 1; s < 30; ++s)
    for (var n = e[s]; n < e[s + 1]; ++n)
      i[n] = n - e[s] << 5 | s;
  return { b: e, r: i };
}, ci = Ei(Qi, 2), hi = ci.b, $g = ci.r;
hi[28] = 258, $g[258] = 28;
var Ao = Ei(Ci, 0), to = Ao.b, Me = new Et(32768);
for (var sA = 0; sA < 32768; ++sA) {
  var ZA = (sA & 43690) >> 1 | (sA & 21845) << 1;
  ZA = (ZA & 52428) >> 2 | (ZA & 13107) << 2, ZA = (ZA & 61680) >> 4 | (ZA & 3855) << 4, Me[sA] = ((ZA & 65280) >> 8 | (ZA & 255) << 8) >> 1;
}
var Nt = function(t, A, e) {
  for (var s = t.length, i = 0, n = new Et(A); i < s; ++i)
    t[i] && ++n[t[i] - 1];
  var a = new Et(A);
  for (i = 1; i < A; ++i)
    a[i] = a[i - 1] + n[i - 1] << 1;
  var r;
  if (e) {
    r = new Et(1 << A);
    var g = 15 - A;
    for (i = 0; i < s; ++i)
      if (t[i])
        for (var I = i << 4 | t[i], B = A - t[i], o = a[t[i] - 1]++ << B, C = o | (1 << B) - 1; o <= C; ++o)
          r[Me[o] >> g] = I;
  } else
    for (r = new Et(s), i = 0; i < s; ++i)
      t[i] && (r[i] = Me[a[t[i] - 1]++] >> 15 - t[i]);
  return r;
}, Yt = new hA(288);
for (var sA = 0; sA < 144; ++sA)
  Yt[sA] = 8;
for (var sA = 144; sA < 256; ++sA)
  Yt[sA] = 9;
for (var sA = 256; sA < 280; ++sA)
  Yt[sA] = 7;
for (var sA = 280; sA < 288; ++sA)
  Yt[sA] = 8;
var li = new hA(32);
for (var sA = 0; sA < 32; ++sA)
  li[sA] = 5;
var eo = /* @__PURE__ */ Nt(Yt, 9, 1), so = /* @__PURE__ */ Nt(li, 5, 1), we = function(t) {
  for (var A = t[0], e = 1; e < t.length; ++e)
    t[e] > A && (A = t[e]);
  return A;
}, bA = function(t, A, e) {
  var s = A / 8 | 0;
  return (t[s] | t[s + 1] << 8) >> (A & 7) & e;
}, pe = function(t, A) {
  var e = A / 8 | 0;
  return (t[e] | t[e + 1] << 8 | t[e + 2] << 16) >> (A & 7);
}, ui = function(t) {
  return (t + 7) / 8 | 0;
}, _t = function(t, A, e) {
  return (A == null || A < 0) && (A = 0), (e == null || e > t.length) && (e = t.length), new hA(t.subarray(A, e));
}, io = [
  "unexpected EOF",
  "invalid block type",
  "invalid length/literal",
  "invalid distance",
  "stream finished",
  "no stream handler",
  ,
  "no callback",
  "invalid UTF-8 data",
  "extra field too long",
  "date not in range 1980-2099",
  "filename too long",
  "stream finishing",
  "invalid zip data"
  // determined by unknown compression method
], NA = function(t, A, e) {
  var s = new Error(A || io[t]);
  if (s.code = t, Error.captureStackTrace && Error.captureStackTrace(s, NA), !e)
    throw s;
  return s;
}, no = function(t, A, e, s) {
  var i = t.length, n = 0;
  if (!i || A.f && !A.l)
    return e || new hA(0);
  var a = !e, r = a || A.i != 2, g = A.i;
  a && (e = new hA(i * 3));
  var I = function(DA) {
    var Y = e.length;
    if (DA > Y) {
      var EA = new hA(Math.max(Y * 2, DA));
      EA.set(e), e = EA;
    }
  }, B = A.f || 0, o = A.p || 0, C = A.b || 0, E = A.l, h = A.d, c = A.m, l = A.n, u = i * 8;
  do {
    if (!E) {
      B = bA(t, o, 1);
      var w = bA(t, o + 1, 3);
      if (o += 3, w)
        if (w == 1)
          E = eo, h = so, c = 9, l = 5;
        else if (w == 2) {
          var f = bA(t, o, 31) + 257, N = bA(t, o + 10, 15) + 4, m = f + bA(t, o + 5, 31) + 1;
          o += 14;
          for (var D = new hA(m), U = new hA(19), x = 0; x < N; ++x)
            U[Xg[x]] = bA(t, o + x * 3, 7);
          o += N * 3;
          for (var M = we(U), b = (1 << M) - 1, F = Nt(U, M, 1), x = 0; x < m; ) {
            var G = F[bA(t, o, b)];
            o += G & 15;
            var d = G >> 4;
            if (d < 16)
              D[x++] = d;
            else {
              var R = 0, J = 0;
              for (d == 16 ? (J = 3 + bA(t, o, 3), o += 2, R = D[x - 1]) : d == 17 ? (J = 3 + bA(t, o, 7), o += 3) : d == 18 && (J = 11 + bA(t, o, 127), o += 7); J--; )
                D[x++] = R;
            }
          }
          var $ = D.subarray(0, f), L = D.subarray(f);
          c = we($), l = we(L), E = Nt($, c, 1), h = Nt(L, l, 1);
        } else
          NA(1);
      else {
        var d = ui(o) + 4, y = t[d - 4] | t[d - 3] << 8, p = d + y;
        if (p > i) {
          g && NA(0);
          break;
        }
        r && I(C + y), e.set(t.subarray(d, p), C), A.b = C += y, A.p = o = p * 8, A.f = B;
        continue;
      }
      if (o > u) {
        g && NA(0);
        break;
      }
    }
    r && I(C + 131072);
    for (var z = (1 << c) - 1, Z = (1 << l) - 1, iA = o; ; iA = o) {
      var R = E[pe(t, o) & z], AA = R >> 4;
      if (o += R & 15, o > u) {
        g && NA(0);
        break;
      }
      if (R || NA(2), AA < 256)
        e[C++] = AA;
      else if (AA == 256) {
        iA = o, E = null;
        break;
      } else {
        var tA = AA - 254;
        if (AA > 264) {
          var x = AA - 257, W = Qi[x];
          tA = bA(t, o, (1 << W) - 1) + hi[x], o += W;
        }
        var O = h[pe(t, o) & Z], v = O >> 4;
        O || NA(3), o += O & 15;
        var L = to[v];
        if (v > 3) {
          var W = Ci[v];
          L += pe(t, o) & (1 << W) - 1, o += W;
        }
        if (o > u) {
          g && NA(0);
          break;
        }
        r && I(C + 131072);
        var pA = C + tA;
        if (C < L) {
          var nA = n - L, yA = Math.min(L, pA);
          for (nA + C < 0 && NA(3); C < yA; ++C)
            e[C] = s[nA + C];
        }
        for (; C < pA; ++C)
          e[C] = e[C - L];
      }
    }
    A.l = E, A.p = iA, A.b = C, A.f = B, E && (B = 1, A.m = c, A.d = h, A.n = l);
  } while (!B);
  return C != e.length && a ? _t(e, 0, C) : e.subarray(0, C);
}, ao = /* @__PURE__ */ new hA(0), ro = function(t) {
  (t[0] != 31 || t[1] != 139 || t[2] != 8) && NA(6, "invalid gzip data");
  var A = t[3], e = 10;
  A & 4 && (e += (t[10] | t[11] << 8) + 2);
  for (var s = (A >> 3 & 1) + (A >> 4 & 1); s > 0; s -= !t[e++])
    ;
  return e + (A & 2);
}, ye = /* @__PURE__ */ function() {
  function t(A, e) {
    typeof A == "function" && (e = A, A = {}), this.ondata = e;
    var s = A && A.dictionary && A.dictionary.subarray(-32768);
    this.s = { i: 0, b: s ? s.length : 0 }, this.o = new hA(32768), this.p = new hA(0), s && this.o.set(s);
  }
  return t.prototype.e = function(A) {
    if (this.ondata || NA(5), this.d && NA(4), !this.p.length)
      this.p = A;
    else if (A.length) {
      var e = new hA(this.p.length + A.length);
      e.set(this.p), e.set(A, this.p.length), this.p = e;
    }
  }, t.prototype.c = function(A) {
    this.s.i = +(this.d = A || !1);
    var e = this.s.b, s = no(this.p, this.s, this.o);
    this.ondata(_t(s, e, this.s.b), this.d), this.o = _t(s, this.s.b - 32768), this.s.b = this.o.length, this.p = _t(this.p, this.s.p / 8 | 0), this.s.p &= 7;
  }, t.prototype.push = function(A, e) {
    this.e(A), this.c(e);
  }, t;
}(), di = /* @__PURE__ */ function() {
  function t(A, e) {
    this.v = 1, this.r = 0, ye.call(this, A, e);
  }
  return t.prototype.push = function(A, e) {
    if (ye.prototype.e.call(this, A), this.r += A.length, this.v) {
      var s = this.p.subarray(this.v - 1), i = s.length > 3 ? ro(s) : 4;
      if (i > s.length) {
        if (!e)
          return;
      } else this.v > 1 && this.onmember && this.onmember(this.r - s.length);
      this.p = s.subarray(i), this.v = 0;
    }
    ye.prototype.c.call(this, e), this.s.f && !this.s.l && !e && (this.v = ui(this.s.p) + 9, this.s = { i: 0 }, this.o = new hA(0), this.push(new hA(0), e));
  }, t;
}(), go = typeof TextDecoder < "u" && /* @__PURE__ */ new TextDecoder(), oo = 0;
try {
  go.decode(ao, { stream: !0 }), oo = 1;
} catch {
}
const Jt = new Float32Array(1), ae = new Uint32Array(Jt.buffer);
function Io(t) {
  return Jt[0] = t, ae[0];
}
function Bo(t) {
  return ae[0] = t, Jt[0];
}
function rt(t) {
  Jt[0] = t;
  const A = ae[0], e = A >> 31 & 1, s = A >> 23 & 255, i = A & 8388607, n = e << 15;
  if (s === 255)
    return i !== 0 ? n | 32767 : n | 31744;
  const a = s - 127 + 15;
  if (a >= 31)
    return n | 31744;
  if (a <= 0) {
    if (a < -10)
      return n;
    const g = (i | 8388608) >> 1 - a + 13;
    return n | g;
  }
  const r = i >> 13;
  return n | a << 10 | r;
}
function MA(t) {
  const A = t >> 15 & 1, e = t >> 10 & 31, s = t & 1023;
  let i;
  if (e === 0)
    if (s === 0)
      i = A << 31;
    else {
      let n = s, a = -14;
      for (; (n & 1024) === 0; )
        n <<= 1, a--;
      n &= 1023;
      const r = a + 127, g = n << 13;
      i = A << 31 | r << 23 | g;
    }
  else if (e === 31)
    s === 0 ? i = A << 31 | 2139095040 : i = A << 31 | 2143289344;
  else {
    const n = e - 15 + 127, a = s << 13;
    i = A << 31 | n << 23 | a;
  }
  return ae[0] = i, Jt[0];
}
function qA(t) {
  return Math.max(0, Math.min(255, Math.round(t * 255)));
}
function Vt(t) {
  return Math.max(-127, Math.min(127, Math.round(t * 127)));
}
function Qo(t) {
  return t / 255;
}
function Co(t) {
  return t / 127;
}
class Eo {
  // Create a DataCache with a given function that fetches data not in the cache.
  constructor({
    asyncFetch: A,
    maxItems: e = 5
  }) {
    this.asyncFetch = A, this.maxItems = e, this.items = [];
  }
  // Fetch data for the key, returning cached data if available.
  async getFetch(A) {
    const e = this.items.findIndex((i) => i.key === A);
    if (e >= 0) {
      const i = this.items.splice(e, 1)[0];
      return this.items.push(i), i.data;
    }
    const s = await this.asyncFetch(A);
    for (this.items.push({ key: A, data: s }); this.items.length > this.maxItems; )
      this.items.shift();
    return s;
  }
}
function co(t, A) {
  const e = Object.entries(t).map(([s, i]) => [
    s,
    A(i, s)
  ]);
  return Object.fromEntries(e);
}
function ho(t, A) {
  const e = Object.entries(t).map(([s, i]) => [s, A(i, s)]).filter(([s, i]) => i !== void 0);
  return Object.fromEntries(e);
}
function wi(t) {
  const A = [], e = /* @__PURE__ */ new Set();
  function s(i) {
    i && typeof i == "object" && !e.has(i) && (e.add(i), i instanceof ArrayBuffer ? A.push(i) : ArrayBuffer.isView(i) ? A.push(i.buffer) : Array.isArray(i) ? i.forEach(s) : Object.values(i).forEach(s));
  }
  return s(t), A;
}
function lo(t, A) {
  return new Array(t).fill(null).map((e, s) => A(s));
}
class pi {
  constructor({
    // Allocate a new item with the given args
    allocate: A,
    // Dispose of an item (optional, if GC is enough)
    dispose: e,
    // Check if an existing item in the list is valid for the given args,
    // allowing you to store heterogeneous items in the list.
    valid: s
  }) {
    this.items = [], this.allocate = A, this.dispose = e, this.valid = s;
  }
  // Allocate a new item from the free list, first checking if a existing item
  // on the freelist is valid for the given args.
  alloc(A) {
    for (; ; ) {
      const e = this.items.pop();
      if (!e)
        break;
      if (this.valid(e, A))
        return e;
      this.dispose && this.dispose(e);
    }
    return this.allocate(A);
  }
  free(A) {
    this.items.push(A);
  }
  disposeAll() {
    let A;
    for (A = this.items.pop(); A; )
      this.dispose && this.dispose(A), A = this.items.pop();
  }
}
function xe(t, A, e, s, i, n, a, r, g, I, B, o, C, E, h, c) {
  const l = qA(E), u = qA(h), w = qA(c), d = qA(C), y = He(
    new Q.Quaternion(g, I, B, o)
  ), p = y & 255, f = y >>> 8 & 255, N = y >>> 16 & 255, m = n === 0 ? 0 : Math.min(
    255,
    Math.max(
      0,
      Math.round((Math.log(n) - YA) / _A) + 1
    )
  ), D = a === 0 ? 0 : Math.min(
    255,
    Math.max(
      0,
      Math.round((Math.log(a) - YA) / _A) + 1
    )
  ), U = r === 0 ? 0 : Math.min(
    255,
    Math.max(
      0,
      Math.round((Math.log(r) - YA) / _A) + 1
    )
  ), x = rt(e), M = rt(s), b = rt(i), F = A * 4;
  t[F] = l | u << 8 | w << 16 | d << 24, t[F + 1] = x | M << 16, t[F + 2] = b | p << 16 | f << 24, t[F + 3] = m | D << 8 | U << 16 | N << 24;
}
function uo(t, A, e, s, i) {
  const n = rt(e), a = rt(s), r = rt(i), g = A * 4;
  t[g + 1] = n | a << 16, t[g + 2] = r | t[g + 2] & 4294901760;
}
function wo(t, A, e, s, i) {
  const n = e === 0 ? 0 : Math.min(
    255,
    Math.max(
      0,
      Math.round((Math.log(e) - YA) / _A) + 1
    )
  ), a = s === 0 ? 0 : Math.min(
    255,
    Math.max(
      0,
      Math.round((Math.log(s) - YA) / _A) + 1
    )
  ), r = i === 0 ? 0 : Math.min(
    255,
    Math.max(
      0,
      Math.round((Math.log(i) - YA) / _A) + 1
    )
  ), g = A * 4;
  t[g + 3] = n | a << 8 | r << 16 | t[g + 3] & 4278190080;
}
function po(t, A, e, s, i, n) {
  const a = He(
    new Q.Quaternion(e, s, i, n)
  ), r = a & 255, g = a >>> 8 & 255, I = a >>> 16 & 255, B = A * 4;
  t[B + 2] = t[B + 2] & 65535 | r << 16 | g << 24, t[B + 3] = t[B + 3] & 16777215 | I << 24;
}
function yo(t, A, e, s, i) {
  const n = qA(e), a = qA(s), r = qA(i), g = A * 4;
  t[g] = n | a << 8 | r << 16 | t[g] & 4278190080;
}
function Do(t, A, e) {
  const s = qA(e), i = A * 4;
  t[i] = t[i] & 16777215 | s << 24;
}
const fo = new Q.Vector3(), mo = new Q.Vector3(), Mo = new Q.Quaternion(), xo = new Q.Color(), So = {
  center: fo,
  scales: mo,
  quaternion: Mo,
  color: xo,
  opacity: 0
};
function Se(t, A) {
  const e = So, s = A * 4, i = t[s], n = t[s + 1], a = t[s + 2], r = t[s + 3];
  e.color.set(
    (i & 255) / 255,
    (i >>> 8 & 255) / 255,
    (i >>> 16 & 255) / 255
  ), e.opacity = (i >>> 24 & 255) / 255, e.center.set(
    MA(n & 65535),
    MA(n >>> 16 & 65535),
    MA(a & 65535)
  );
  const g = r & 255;
  e.scales.x = g === 0 ? 0 : Math.exp(YA + (g - 1) * _A);
  const I = r >>> 8 & 255;
  e.scales.y = I === 0 ? 0 : Math.exp(YA + (I - 1) * _A);
  const B = r >>> 16 & 255;
  e.scales.z = B === 0 ? 0 : Math.exp(YA + (B - 1) * _A);
  const o = a >>> 16 & 65535 | r >>> 8 & 16711680;
  return Si(o, e.quaternion), e;
}
function mA(t) {
  const A = j, e = Math.max(
    os,
    Math.min(XA, Math.ceil(t / A))
  ), s = Math.ceil(t / (A * e)), i = A * e * s;
  return { width: A, height: e, depth: s, maxSplats: i };
}
function No(t) {
  const A = j, e = Math.max(
    os,
    Math.min(XA, Math.ceil(t / A))
  ), s = Math.ceil(t / (A * e));
  return A * e * s;
}
function Fo() {
  return navigator.maxTouchPoints > 0 ? !0 : /Mobi|Android|iPhone|iPad|iPod|Opera Mini|IEMobile/.test(
    navigator.userAgent
  );
}
function ko() {
  return /Android/.test(navigator.userAgent);
}
function Go() {
  return /Oculus/.test(navigator.userAgent);
}
function Ro(t, A, e) {
  const s = new Uint8Array(A * 4);
  for (let i = 0; i < e / 2; i++) {
    const n = i * A * 4, a = (e - 1 - i) * A * 4;
    s.set(t.subarray(n, n + A * 4)), t.set(
      t.subarray(a, a + A * 4),
      n
    ), t.set(s, a);
  }
  return t;
}
function Uo(t, A, e) {
  const s = document.createElement("canvas");
  s.width = A, s.height = e;
  const i = s.getContext("2d");
  if (!i)
    throw new Error("Can't get 2d context");
  const n = i.createImageData(A, e);
  return n.data.set(t), i.putImageData(n, 0, 0), s.toDataURL("image/png");
}
function yi(t) {
  const A = new Q.Clock(t.autoStart);
  return A.startTime = t.startTime, A.oldTime = t.oldTime, A.elapsedTime = t.elapsedTime, A.running = t.running, A;
}
function bo(t) {
  return Object.fromEntries(
    Object.entries(t).filter(([A, e]) => e !== void 0)
  );
}
const Di = CA(`
  precision highp float;

  in vec3 position;

  void main() {
    gl_Position = vec4(position.xy, 0.0, 1.0);
  }
`);
function fi(t) {
  const A = new Q.Vector3();
  for (const e of t)
    A.add(e);
  return A.divideScalar(t.length);
}
function mi(t) {
  if (t.length === 0)
    return new Q.Quaternion();
  const A = t[0].clone();
  for (let e = 1; e < t.length; e++)
    t[e].dot(t[0]) < 0 ? (A.x -= t[e].x, A.y -= t[e].y, A.z -= t[e].z, A.w -= t[e].w) : (A.x += t[e].x, A.y += t[e].y, A.z += t[e].z, A.w += t[e].w);
  return A.normalize();
}
function Mi(t, A) {
  const e = new Q.Vector3(0, 0, 0).applyMatrix4(t), s = new Q.Vector3(0, 0, 0).applyMatrix4(A), i = new Q.Vector3(0, 0, -1).applyMatrix4(t).sub(e).normalize(), n = new Q.Vector3(0, 0, -1).applyMatrix4(A).sub(s).normalize(), a = e.distanceTo(s), r = i.dot(n);
  return { distance: a, coincidence: r };
}
function vo({
  matrix1: t,
  matrix2: A,
  maxDistance: e
}) {
  const s = new Q.Vector3(0, 0, 0).applyMatrix4(t), i = new Q.Vector3(0, 0, 0).applyMatrix4(A);
  return s.distanceTo(i) <= e;
}
function Lo({
  matrix1: t,
  matrix2: A,
  maxDistance: e,
  minCoincidence: s
}) {
  const { distance: i, coincidence: n } = Mi(t, A);
  return i <= e && (s == null || n >= s);
}
function xi(t, A) {
  const [e, s] = [new Q.Vector3(), new Q.Quaternion()], [i, n] = [new Q.Vector3(), new Q.Quaternion()];
  t.decompose(e, s, new Q.Vector3()), A.decompose(i, n, new Q.Vector3());
  const a = e.distanceTo(i), r = Math.abs(s.dot(n));
  return { distance: a, coorient: r };
}
function Pt({
  matrix1: t,
  matrix2: A,
  maxDistance: e,
  minCoorient: s
}) {
  const { distance: i, coorient: n } = xi(t, A);
  return i <= e && (s == null || n >= s);
}
function Yo(t, A = 1e-3) {
  return Math.abs(t) < A ? 0 : Math.sign(t);
}
function Jo(t) {
  const A = t.w < 0, e = Vt(A ? -t.x : t.x), s = Vt(A ? -t.y : t.y), i = Vt(A ? -t.z : t.z), n = e & 255, a = s & 255, r = i & 255;
  return n | a << 8 | r << 16;
}
function To(t, A) {
  const e = t << 24 >> 24, s = t << 16 >> 24, i = t << 8 >> 24;
  A.set(e / 127, s / 127, i / 127, 0);
  const n = A.x * A.x + A.y * A.y + A.z * A.z;
  return A.w = Math.sqrt(Math.max(0, 1 - n)), A;
}
function He(t) {
  const A = t.clone().normalize();
  A.w < 0 && A.set(-A.x, -A.y, -A.z, -A.w);
  const e = 2 * Math.acos(A.w), s = Math.sqrt(
    A.x * A.x + A.y * A.y + A.z * A.z
  ), i = s < 1e-6 ? new Q.Vector3(1, 0, 0) : new Q.Vector3(A.x, A.y, A.z).divideScalar(s), n = Math.abs(i.x) + Math.abs(i.y) + Math.abs(i.z);
  let a = i.x / n, r = i.y / n;
  if (i.z < 0) {
    const E = a;
    a = (1 - Math.abs(r)) * (a >= 0 ? 1 : -1), r = (1 - Math.abs(E)) * (r >= 0 ? 1 : -1);
  }
  const g = a * 0.5 + 0.5, I = r * 0.5 + 0.5, B = Math.round(g * 255), o = Math.round(I * 255);
  return Math.round(e * (255 / Math.PI)) << 16 | o << 8 | B;
}
function Si(t, A) {
  const e = t & 255, s = t >>> 8 & 255, i = t >>> 16 & 255, n = e / 255, a = s / 255;
  let r = (n - 0.5) * 2, g = (a - 0.5) * 2;
  const I = 1 - (Math.abs(r) + Math.abs(g)), B = Math.max(-I, 0);
  r += r >= 0 ? -B : B, g += g >= 0 ? -B : B;
  const o = new Q.Vector3(r, g, I).normalize(), E = i / 255 * Math.PI * 0.5, h = Math.sin(E), c = Math.cos(E);
  return A.set(o.x * h, o.y * h, o.z * h, c), A;
}
function Ho(t) {
  const A = t.clone().normalize(), e = 2 * (A.w * A.x + A.y * A.z), s = 1 - 2 * (A.x * A.x + A.y * A.y), i = Math.atan2(e, s), n = 2 * (A.w * A.y - A.z * A.x), a = Math.abs(n) >= 1 ? Math.sign(n) * (Math.PI / 2) : Math.asin(n), r = 2 * (A.w * A.z + A.x * A.y), g = 1 - 2 * (A.y * A.y + A.z * A.z), I = Math.atan2(r, g), B = (i + Math.PI) / (2 * Math.PI), o = (a + Math.PI) / (2 * Math.PI), C = (I + Math.PI) / (2 * Math.PI), E = Math.round(B * 255), h = Math.round(o * 255);
  return Math.round(C * 255) << 16 | h << 8 | E;
}
function Ko(t, A) {
  const e = t & 255, s = t >>> 8 & 255, i = t >>> 16 & 255, n = e / 255, a = s / 255, r = i / 255, g = n * (2 * Math.PI) - Math.PI, I = a * (2 * Math.PI) - Math.PI, B = r * (2 * Math.PI) - Math.PI, o = Math.cos(g * 0.5), C = Math.sin(g * 0.5), E = Math.cos(I * 0.5), h = Math.sin(I * 0.5), c = Math.cos(B * 0.5), l = Math.sin(B * 0.5);
  return A.w = o * E * c + C * h * l, A.x = C * E * c - o * h * l, A.y = o * h * c + C * E * l, A.z = o * E * l - C * h * c, A.normalize(), A;
}
function Tt(t, A, e, s) {
  const i = Math.max(-127, Math.min(127, t * 127)), n = Math.max(-127, Math.min(127, A * 127)), a = Math.max(-127, Math.min(127, e * 127)), r = Math.max(-127, Math.min(127, s * 127));
  return i & 255 | (n & 255) << 8 | (a & 255) << 16 | (r & 255) << 24;
}
function qo(t, A, e) {
  const s = A * 2;
  for (let i = 0; i < 9; ++i) {
    const n = Math.max(-63, Math.min(63, e[i] * 63)) & 127, a = i * 7, r = a + 7, g = Math.floor(a / 32), I = a - g * 32, B = n << I & 4294967295;
    if (t[s + g] |= B, r > g * 32 + 32) {
      const o = n >>> 32 - I & 4294967295;
      t[s + g + 1] |= o;
    }
  }
}
function zo(t, A, e) {
  t[A * 4 + 0] = Tt(
    e[0],
    e[1],
    e[2],
    e[3]
  ), t[A * 4 + 1] = Tt(
    e[4],
    e[5],
    e[6],
    e[7]
  ), t[A * 4 + 2] = Tt(
    e[8],
    e[9],
    e[10],
    e[11]
  ), t[A * 4 + 3] = Tt(
    e[12],
    e[13],
    e[14],
    0
  );
}
function _o(t, A, e) {
  const s = A * 4;
  for (let i = 0; i < 21; ++i) {
    const n = Math.max(-31, Math.min(31, e[i] * 31)) & 63, a = i * 6, r = a + 6, g = Math.floor(a / 32), I = a - g * 32, B = n << I & 4294967295;
    if (t[s + g] |= B, r > g * 32 + 32) {
      const o = n >>> 32 - I & 4294967295;
      t[s + g + 1] |= o;
    }
  }
}
function Ni(t, A) {
  const e = [];
  let s = 0, i = null;
  const n = new di((g, I) => {
    if (e.push(g), s += g.length, I || s >= A) {
      const B = new Uint8Array(s);
      let o = 0;
      for (const C of e)
        B.set(C, o), o += C.length;
      i = B.slice(0, A);
    }
  }), a = 1024;
  let r = 0;
  for (; i == null && r < t.length; ) {
    const g = t.slice(r, r + a);
    n.push(g, !1), r += a;
  }
  if (i == null && (n.push(new Uint8Array(), !0), i == null))
    throw new Error("Failed to decompress partial gzip");
  return i;
}
class Fi {
  constructor({
    fileBytes: A,
    chunkBytes: e = 64 * 1024
  }) {
    this.fileBytes = A, this.chunkBytes = e, this.offset = 0, this.chunks = [], this.totalBytes = 0, this.gunzip = new di((s, i) => {
      this.chunks.push(s), this.totalBytes += s.length;
    });
  }
  read(A) {
    for (; this.totalBytes < A && this.offset < this.fileBytes.length; ) {
      const n = Math.min(
        this.offset + this.chunkBytes,
        this.fileBytes.length
      );
      this.gunzip.push(this.fileBytes.subarray(this.offset, n), !1), this.offset = n;
    }
    if (this.totalBytes < A && this.offset >= this.fileBytes.length && this.gunzip.push(new Uint8Array(0), !0), this.totalBytes < A)
      throw new Error(
        `Unexpected EOF: needed ${A}, got ${this.totalBytes}`
      );
    const e = new Uint8Array(this.totalBytes);
    let s = 0;
    for (const n of this.chunks)
      e.set(n, s), s += n.length;
    const i = e.subarray(0, A);
    return this.chunks = [e.subarray(A)], this.totalBytes -= A, i;
  }
}
const HC = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  DataCache: Eo,
  FreeList: pi,
  GunzipReader: Fi,
  IDENT_VERTEX_SHADER: Di,
  Sint8ToFloat: Co,
  Uint8ToFloat: Qo,
  averagePositions: fi,
  averageQuaternions: mi,
  cloneClock: yi,
  coinciDist: Mi,
  computeMaxSplats: No,
  coorientDist: xi,
  decodeQuatEulerXyz888: Ko,
  decodeQuatOctXy88R8: Si,
  decodeQuatXyz888: To,
  decompressPartialGzip: Ni,
  encodeQuatEulerXyz888: Ho,
  encodeQuatOctXy88R8: He,
  encodeQuatXyz888: Jo,
  encodeSh1Rgb: qo,
  encodeSh2Rgb: zo,
  encodeSh3Rgb: _o,
  epsilonSign: Yo,
  flipPixels: Ro,
  floatBitsToUint: Io,
  floatToSint8: Vt,
  floatToUint8: qA,
  fromHalf: MA,
  getArrayBuffers: wi,
  getTextureSize: mA,
  isAndroid: ko,
  isMobile: Fo,
  isOculus: Go,
  mapFilterObject: ho,
  mapObject: co,
  newArray: lo,
  omitUndefined: bo,
  pixelsToPngUrl: Uo,
  setPackedSplat: xe,
  setPackedSplatCenter: uo,
  setPackedSplatOpacity: Do,
  setPackedSplatQuat: po,
  setPackedSplatRgb: yo,
  setPackedSplatScales: wo,
  toHalf: rt,
  uintBitsToFloat: Bo,
  unpackSplat: Se,
  withinCoinciDist: Lo,
  withinCoorientDist: Pt,
  withinDist: vo
}, Symbol.toStringTag, { value: "Module" }));
class Ke {
  constructor({
    graph: A,
    inputs: e,
    outputs: s,
    template: i
  }) {
    this.graph = A, this.template = i, this.inputs = e ?? {}, this.outputs = s ?? {};
    const n = new hs({ indent: this.template.indent });
    for (const r in this.outputs)
      this.outputs[r] && n.declares.add(this.outputs[r]);
    const a = A.compile({
      inputs: this.inputs,
      outputs: this.outputs,
      compile: n
    });
    this.shader = i.generate({ globals: n.globals, statements: a }), this.uniforms = n.uniforms, this.updaters = n.updaters;
  }
  prepareMaterial() {
    return Vo(this);
  }
  update() {
    for (const A of this.updaters)
      A();
  }
}
class qe {
  constructor(A) {
    const e = A.match(/^([ \t]*)\{\{\s*GLOBALS\s*\}\}/m), s = A.match(/^([ \t]*)\{\{\s*STATEMENTS\s*\}\}/m);
    if (!e || !s)
      throw new Error(
        "Template must contain {{ GLOBALS }} and {{ STATEMENTS }}"
      );
    this.before = A.substring(0, e.index), this.between = A.substring(
      e.index + e[0].length,
      s.index
    ), this.after = A.substring(
      s.index + s[0].length
    ), this.indent = s[1];
  }
  generate({
    globals: A,
    statements: e
  }) {
    return this.before + Array.from(A).join(`

`) + this.between + e.map((s) => this.indent + s).join(`
`) + this.after;
  }
}
const $e = /* @__PURE__ */ new Map();
function Vo(t) {
  let A = $e.get(t);
  return A || (A = new Q.RawShaderMaterial({
    glslVersion: Q.GLSL3,
    vertexShader: Di,
    fragmentShader: t.shader,
    uniforms: t.uniforms
  }), $e.set(t, A), A);
}
function ze(t, A, e = "add") {
  const s = () => {
    throw new Error(`Invalid ${e} types: ${t}, ${A}`);
  };
  if (t === A) return t;
  if (t === "int") {
    if (lA(A)) return A;
    s();
  }
  if (A === "int") {
    if (lA(t)) return t;
    s();
  }
  if (t === "uint") {
    if (uA(A)) return A;
    s();
  }
  if (A === "uint") {
    if (uA(t)) return t;
    s();
  }
  if (t === "float") {
    if (tt(A)) return A;
    s();
  }
  if (A === "float") {
    if (tt(t)) return t;
    s();
  }
  throw new Error(`Invalid ${e} types: ${t}, ${A}`);
}
function Zo(t, A) {
  return ze(t, A, "sub");
}
function Oo(t, A) {
  const e = () => {
    throw new Error(`Invalid mul types: ${t}, ${A}`);
  }, s = (i) => i;
  if (t === "int") {
    if (lA(A)) return s(A);
    e();
  }
  if (A === "int") {
    if (lA(t)) return s(t);
    e();
  }
  if (t === "uint") {
    if (uA(A)) return s(A);
    e();
  }
  if (A === "uint") {
    if (uA(t)) return s(t);
    e();
  }
  if (t === "float") {
    if (tt(A)) return s(A);
    e();
  }
  if (A === "float") {
    if (tt(t)) return s(t);
    e();
  }
  if (lA(t) || uA(t) || lA(A) || uA(A)) {
    if (t === A) return s(t);
    e();
  }
  if (t === "vec2") {
    if (A === "vec2" || et(A)) return s("vec2");
    if (A === "mat3x2") return s("vec3");
    if (A === "mat4x2") return s("vec4");
    e();
  }
  if (t === "vec3") {
    if (A === "mat2x3") return s("vec2");
    if (A === "vec3" || st(A)) return s("vec3");
    if (A === "mat4x3") return s("vec4");
    e();
  }
  if (t === "vec4") {
    if (A === "mat2x4") return s("vec2");
    if (A === "mat3x4") return s("vec3");
    if (A === "vec4" || it(A)) return s("vec4");
    e();
  }
  if (A === "vec2") {
    if (et(t)) return s("vec2");
    if (t === "mat2x3") return s("vec3");
    if (t === "mat2x4") return s("vec4");
    e();
  }
  if (A === "vec3") {
    if (t === "mat3x2") return s("vec2");
    if (st(t)) return s("vec3");
    if (t === "mat3x4") return s("vec4");
    e();
  }
  if (A === "vec4") {
    if (t === "mat4x2") return s("vec2");
    if (t === "mat4x3") return s("vec3");
    if (it(t)) return s("vec4");
    e();
  }
  if (et(t)) {
    if (et(A)) return s("mat2");
    if (A === "mat3x2") return s("mat3x2");
    if (A === "mat4x2") return s("mat4x2");
    e();
  }
  if (t === "mat2x3") {
    if (et(A)) return s("mat2x3");
    if (A === "mat3x2") return s("mat3");
    if (A === "mat4x2") return s("mat4x3");
    e();
  }
  if (t === "mat2x4") {
    if (et(A)) return s("mat2x4");
    if (A === "mat3x2") return s("mat3x4");
    if (A === "mat4x2") return s("mat4");
    e();
  }
  if (t === "mat3x2") {
    if (A === "mat2x3") return s("mat2");
    if (st(A)) return s("mat3x2");
    if (A === "mat4x3") return s("mat4x2");
    e();
  }
  if (st(t)) {
    if (A === "mat2x3") return s("mat2x3");
    if (st(A)) return s("mat3");
    if (A === "mat4x3") return s("mat4x3");
    e();
  }
  if (t === "mat3x4") {
    if (A === "mat2x3") return s("mat2x4");
    if (st(A)) return s("mat3x4");
    if (A === "mat4x3") return s("mat4");
    e();
  }
  if (t === "mat4x2") {
    if (A === "mat2x4") return s("mat2");
    if (A === "mat3x4") return s("mat3x2");
    if (it(A)) return s("mat4x2");
    e();
  }
  if (t === "mat4x3") {
    if (A === "mat2x4") return s("mat2x3");
    if (A === "mat3x4") return s("mat3");
    if (it(A)) return s("mat4x3");
    e();
  }
  if (it(t)) {
    if (A === "mat2x4") return s("mat2x4");
    if (A === "mat3x4") return s("mat3x4");
    if (it(A)) return s("mat4");
    e();
  }
  throw new Error(`Invalid mul types: ${t}, ${A}`);
}
function Wo(t, A) {
  return ze(t, A, "div");
}
function jo(t, A) {
  if (t === A) return t;
  if (t === "int") {
    if (lA(A)) return A;
  } else if (A === "int") {
    if (lA(t)) return t;
  } else if (t === "uint") {
    if (uA(A)) return A;
  } else if (A === "uint" && uA(t))
    return t;
  throw new Error(`Invalid imod types: ${t}, ${A}`);
}
function Po(t, A) {
  if (t === A || A === "float") return t;
  throw new Error(`Invalid mod types: ${t}, ${A}`);
}
function Xo(t) {
  return t;
}
function $o(t) {
  return t;
}
function AI(t) {
  return t;
}
function tI(t) {
  return t;
}
function eI(t) {
  return t;
}
function sI(t) {
  return t;
}
function iI(t) {
  return t;
}
function nI(t) {
  return t;
}
function aI(t) {
  return t;
}
function rI(t) {
  return t;
}
function gI(t) {
  return t;
}
function oI(t) {
  return t;
}
function II(t) {
  return t;
}
function BI(t) {
  return t;
}
function QI(t) {
  return t;
}
function CI(t) {
  return t;
}
function ki(t, A, e = "min") {
  if (t === A) return t;
  if (A === "float") {
    if (Rt(t)) return t;
  } else if (A === "int") {
    if (lA(t)) return t;
  } else if (A === "uint" && uA(t))
    return t;
  throw new Error(`Invalid ${e} types: ${t}, ${A}`);
}
function EI(t, A) {
  return ki(t, A, "max");
}
function cI(t, A, e) {
  if (A === "float") {
    if (Rt(t)) return t;
  } else if (A === "int") {
    if (lA(t)) return t;
  } else if (A === "uint" && uA(t))
    return t;
  throw new Error(`Invalid clamp types: ${t}, ${A}`);
}
function hI(t, A, e) {
  if (e === t || e === "float" || e === "bool" && t === "float" || e === "bvec2" && t === "vec2" || e === "bvec3" && t === "vec3" || e === "bvec4" && t === "vec4") return t;
  throw new Error(`Invalid mix types: ${t}, ${A}, ${e}`);
}
function lI(t, A) {
  if (t === A || A === "float") return A;
  throw new Error(`Invalid step types: ${t}, ${A}`);
}
function uI(t, A, e) {
  if (t === A && (t === e || t === "float"))
    return e;
  throw new Error(`Invalid smoothstep types: ${t}, ${A}, ${e}`);
}
function Gi(t, A = "isNan") {
  if (t === "float") return "bool";
  if (t === "vec2") return "bvec2";
  if (t === "vec3") return "bvec3";
  if (t === "vec4") return "bvec4";
  throw new Error(`Invalid ${A} types: ${t}`);
}
function dI(t) {
  return Gi(t, "isInf");
}
const fA = (t, A) => new vi({ a: t, b: A }), wt = (t, A) => new Li({ a: t, b: A }), QA = (t, A) => new Yi({ a: t, b: A }), Zt = (t, A) => new Ji({ a: t, b: A }), Ne = (t, A) => new Ti({ a: t, b: A }), Ri = (t, A) => new Hi({ a: t, b: A }), wI = (t) => new Ki({ a: t }).outputs, _e = (t) => new qi({ a: t }), pI = (t) => new zi({ a: t }), yI = (t) => new _i({ a: t }), DI = (t) => new Vi({ a: t }), fI = (t) => new Zi({ a: t }), mI = (t) => new Oi({ a: t }), MI = (t) => new Wi({ a: t }), Ot = (t) => new ji({ a: t }), xI = (t, A) => new Pi({ a: t, b: A }), SI = (t) => new Xi({ a: t }), NI = (t) => new $i({ a: t }), FI = (t) => new An({ a: t }), kI = (t) => new tn({ a: t }), GI = (t) => new en({ a: t }), RI = (t) => new sn({ a: t }), UI = (t) => new nn({ a: t }), bI = (t, A) => new an({ a: t, b: A }), Ui = (t, A) => new rn({ a: t, b: A }), vI = (t, A, e) => new gn({ a: t, min: A, max: e }), bi = (t, A, e) => new on({ a: t, b: A, t: e }), LI = (t, A) => new In({ edge: t, x: A }), YI = (t, A, e) => new Bn({ edge0: t, edge1: A, x: e }), JI = (t) => new Qn({ a: t }), TI = (t) => new Cn({ a: t });
class vi extends X {
  constructor({ a: A, b: e }) {
    super({ a: A, b: e, outKey: "sum", outTypeFunc: ze }), this.statements = ({ inputs: s, outputs: i }) => [`${i.sum} = ${s.a} + ${s.b};`];
  }
}
class Li extends X {
  constructor({ a: A, b: e }) {
    super({ a: A, b: e, outKey: "difference", outTypeFunc: Zo }), this.statements = ({ inputs: s, outputs: i }) => [`${i.difference} = ${s.a} - ${s.b};`];
  }
}
class Yi extends X {
  constructor({ a: A, b: e }) {
    super({ a: A, b: e, outKey: "product", outTypeFunc: Oo }), this.statements = ({ inputs: s, outputs: i }) => [`${i.product} = ${s.a} * ${s.b};`];
  }
}
class Ji extends X {
  constructor({ a: A, b: e }) {
    super({ a: A, b: e, outKey: "quotient", outTypeFunc: Wo }), this.statements = ({ inputs: s, outputs: i }) => [`${i.quotient} = ${s.a} / ${s.b};`];
  }
}
class Ti extends X {
  constructor({ a: A, b: e }) {
    super({ a: A, b: e, outKey: "remainder", outTypeFunc: jo }), this.statements = ({ inputs: s, outputs: i }) => [`${i.remainder} = ${s.a} % ${s.b};`];
  }
}
class Hi extends X {
  constructor({ a: A, b: e }) {
    super({ a: A, b: e, outKey: "remainder", outTypeFunc: Po }), this.statements = ({ inputs: s, outputs: i }) => [`${i.remainder} = mod(${s.a}, ${s.b});`];
  }
}
class Ki extends V {
  constructor({ a: A }) {
    const e = { a: _(A) }, s = e.a, i = {
      fract: s,
      integer: s
    };
    super({ inTypes: e, outTypes: i, inputs: { a: A } }), this.statements = ({ inputs: n, outputs: a }) => [`${a.fract} = modf(${n.a}, ${a.integer});`];
  }
}
class qi extends S {
  constructor({ a: A }) {
    super({ a: A, outKey: "neg", outTypeFunc: Xo }), this.statements = ({ inputs: e, outputs: s }) => [`${s.neg} = -${e.a};`];
  }
}
class zi extends S {
  constructor({ a: A }) {
    super({ a: A, outKey: "abs", outTypeFunc: $o }), this.statements = ({ inputs: e, outputs: s }) => [`${s.abs} = abs(${e.a});`];
  }
}
class _i extends S {
  constructor({ a: A }) {
    super({ a: A, outKey: "sign", outTypeFunc: AI }), this.statements = ({ inputs: e, outputs: s }) => [`${s.sign} = sign(${e.a});`];
  }
}
class Vi extends S {
  constructor({ a: A }) {
    super({ a: A, outKey: "floor", outTypeFunc: tI }), this.statements = ({ inputs: e, outputs: s }) => [`${s.floor} = floor(${e.a});`];
  }
}
class Zi extends S {
  constructor({ a: A }) {
    super({ a: A, outKey: "ceil", outTypeFunc: eI }), this.statements = ({ inputs: e, outputs: s }) => [`${s.ceil} = ceil(${e.a});`];
  }
}
class Oi extends S {
  constructor({ a: A }) {
    super({ a: A, outKey: "trunc", outTypeFunc: sI }), this.statements = ({ inputs: e, outputs: s }) => [`${s.trunc} = trunc(${e.a});`];
  }
}
class Wi extends S {
  constructor({ a: A }) {
    super({ a: A, outKey: "round", outTypeFunc: iI }), this.statements = ({ inputs: e, outputs: s }) => [`${s.round} = round(${e.a});`];
  }
}
class ji extends S {
  constructor({ a: A }) {
    super({ a: A, outKey: "fract", outTypeFunc: nI }), this.statements = ({ inputs: e, outputs: s }) => [`${s.fract} = fract(${e.a});`];
  }
}
class Pi extends X {
  constructor({ a: A, b: e }) {
    super({ a: A, b: e, outKey: "power", outTypeFunc: aI }), this.statements = ({ inputs: s, outputs: i }) => [`${i.power} = pow(${s.a}, ${s.b});`];
  }
}
class Xi extends S {
  constructor({ a: A }) {
    super({ a: A, outKey: "exp", outTypeFunc: rI }), this.statements = ({ inputs: e, outputs: s }) => [`${s.exp} = exp(${e.a});`];
  }
}
class $i extends S {
  constructor({ a: A }) {
    super({ a: A, outKey: "exp2", outTypeFunc: gI }), this.statements = ({ inputs: e, outputs: s }) => [`${s.exp2} = exp2(${e.a});`];
  }
}
class An extends S {
  constructor({ a: A }) {
    super({ a: A, outKey: "log", outTypeFunc: oI }), this.statements = ({ inputs: e, outputs: s }) => [`${s.log} = log(${e.a});`];
  }
}
class tn extends S {
  constructor({ a: A }) {
    super({ a: A, outKey: "log2", outTypeFunc: II }), this.statements = ({ inputs: e, outputs: s }) => [`${s.log2} = log2(${e.a});`];
  }
}
class en extends S {
  constructor({ a: A }) {
    super({ a: A, outKey: "sqr", outTypeFunc: BI }), this.statements = ({ inputs: e, outputs: s }) => [`${s.sqr} = ${e.a} * ${e.a};`];
  }
}
class sn extends S {
  constructor({ a: A }) {
    super({ a: A, outKey: "sqrt", outTypeFunc: QI }), this.statements = ({ inputs: e, outputs: s }) => [`${s.sqrt} = sqrt(${e.a});`];
  }
}
class nn extends S {
  constructor({ a: A }) {
    super({ a: A, outKey: "inversesqrt", outTypeFunc: CI }), this.statements = ({ inputs: e, outputs: s }) => [`${s.inversesqrt} = inversesqrt(${e.a});`];
  }
}
class an extends X {
  constructor({ a: A, b: e }) {
    super({ a: A, b: e, outKey: "min", outTypeFunc: ki }), this.statements = ({ inputs: s, outputs: i }) => [`${i.min} = min(${s.a}, ${s.b});`];
  }
}
class rn extends X {
  constructor({ a: A, b: e }) {
    super({ a: A, b: e, outKey: "max", outTypeFunc: EI }), this.statements = ({ inputs: s, outputs: i }) => [`${i.max} = max(${s.a}, ${s.b});`];
  }
}
class gn extends Bt {
  constructor({
    a: A,
    min: e,
    max: s
  }) {
    super({
      a: A,
      b: e,
      c: s,
      outKey: "clamp",
      outTypeFunc: cI
    }), this.statements = ({ inputs: i, outputs: n }) => {
      const { a, b: r, c: g } = i;
      return [`${n.clamp} = clamp(${a}, ${r}, ${g});`];
    };
  }
}
class on extends Bt {
  constructor({ a: A, b: e, t: s }) {
    super({ a: A, b: e, c: s, outKey: "mix", outTypeFunc: hI }), this.statements = ({ inputs: i, outputs: n }) => {
      const { a, b: r, c: g } = i;
      return [`${n.mix} = mix(${a}, ${r}, ${g});`];
    };
  }
}
class In extends X {
  constructor({ edge: A, x: e }) {
    super({
      a: A,
      b: e,
      outKey: "step",
      outTypeFunc: lI
    }), this.statements = ({ inputs: s, outputs: i }) => {
      const { a: n, b: a } = s;
      return [`${i.step} = step(${n}, ${a});`];
    };
  }
}
class Bn extends Bt {
  constructor({
    edge0: A,
    edge1: e,
    x: s
  }) {
    super({
      a: A,
      b: e,
      c: s,
      outKey: "smoothstep",
      outTypeFunc: uI
    }), this.statements = ({ inputs: i, outputs: n }) => {
      const { a, b: r, c: g } = i;
      return [`${n.smoothstep} = smoothstep(${a}, ${r}, ${g});`];
    };
  }
}
class Qn extends S {
  constructor({ a: A }) {
    super({ a: A, outKey: "isNan", outTypeFunc: Gi }), this.statements = ({ inputs: e, outputs: s }) => [`${s.isNan} = isNan(${e.a});`];
  }
}
class Cn extends S {
  constructor({ a: A }) {
    super({ a: A, outKey: "isInf", outTypeFunc: dI }), this.statements = ({ inputs: e, outputs: s }) => [`${s.isInf} = isInf(${e.a});`];
  }
}
const HI = (t, A) => new cn({ a: t, b: A }), KI = (t, A) => new hn({ a: t, b: A }), qI = (t, A) => new ln({ a: t, b: A }), zI = (t) => new un({ a: t }), _I = (t, A) => new dn({ a: t, b: A }), VI = (t, A) => new wn({ a: t, b: A }), ZI = (t, A) => new pn({ a: t, b: A }), En = (t, A) => new yn({ a: t, b: A }), OI = (t, A) => new Dn({ a: t, b: A }), WI = (t, A) => new fn({ a: t, b: A }), jI = (t) => new mn({ a: t }), PI = (t) => new Mn({ a: t }), Ve = (t, A, e) => new xn({ cond: t, t: A, f: e }), XI = (t) => new Nn({ a: t });
class cn extends X {
  constructor({ a: A, b: e }) {
    super({ a: A, b: e, outTypeFunc: (s, i) => s, outKey: "and" }), this.statements = ({ inputs: s, outputs: i }) => this.outTypes.and === "bool" ? [`${i.and} = ${s.a} && ${s.b};`] : [`${i.and} = ${s.a} & ${s.b};`];
  }
}
class hn extends X {
  constructor({ a: A, b: e }) {
    super({ a: A, b: e, outTypeFunc: (s, i) => s, outKey: "or" }), this.statements = ({ inputs: s, outputs: i }) => this.outTypes.or === "bool" ? [`${i.or} = ${s.a} || ${s.b};`] : [`${i.or} = ${s.a} | ${s.b};`];
  }
}
class ln extends X {
  constructor({ a: A, b: e }) {
    super({ a: A, b: e, outTypeFunc: (s, i) => s, outKey: "xor" }), this.statements = ({ inputs: s, outputs: i }) => this.outTypes.xor === "bool" ? [`${i.xor} = ${s.a} ^^ ${s.b};`] : [`${i.xor} = ${s.a} ^ ${s.b};`];
  }
}
class un extends S {
  constructor({ a: A }) {
    super({ a: A, outTypeFunc: (e) => e, outKey: "not" }), this.statements = ({ inputs: e, outputs: s }) => this.outTypes.not === "bool" ? [`${s.not} = !${e.a};`] : [`${s.not} = not(${e.a});`];
  }
}
class dn extends X {
  constructor({ a: A, b: e }) {
    super({
      a: A,
      b: e,
      outTypeFunc: (s, i) => re(s, "lessThan"),
      outKey: "lessThan"
    }), this.statements = ({ inputs: s, outputs: i }) => this.outTypes.lessThan === "bool" ? [`${i.lessThan} = ${s.a} < ${s.b};`] : [`${i.lessThan} = lessThan(${s.a}, ${s.b});`];
  }
}
class wn extends X {
  constructor({ a: A, b: e }) {
    super({
      a: A,
      b: e,
      outTypeFunc: (s, i) => re(s, "lessThanEqual"),
      outKey: "lessThanEqual"
    }), this.statements = ({ inputs: s, outputs: i }) => this.outTypes.lessThanEqual === "bool" ? [`${i.lessThanEqual} = ${s.a} <= ${s.b};`] : [
      `${i.lessThanEqual} = lessThanEqual(${s.a}, ${s.b});`
    ];
  }
}
class pn extends X {
  constructor({ a: A, b: e }) {
    super({
      a: A,
      b: e,
      outTypeFunc: (s, i) => re(s, "greaterThan"),
      outKey: "greaterThan"
    }), this.statements = ({ inputs: s, outputs: i }) => this.outTypes.greaterThan === "bool" ? [`${i.greaterThan} = ${s.a} > ${s.b};`] : [
      `${i.greaterThan} = greaterThan(${s.a}, ${s.b});`
    ];
  }
}
class yn extends X {
  constructor({ a: A, b: e }) {
    super({
      a: A,
      b: e,
      outTypeFunc: (s, i) => re(s, "greaterThanEqual"),
      outKey: "greaterThanEqual"
    }), this.statements = ({ inputs: s, outputs: i }) => this.outTypes.greaterThanEqual === "bool" ? [`${i.greaterThanEqual} = ${s.a} >= ${s.b};`] : [
      `${i.greaterThanEqual} = greaterThanEqual(${s.a}, ${s.b});`
    ];
  }
}
class Dn extends X {
  constructor({ a: A, b: e }) {
    super({ a: A, b: e, outTypeFunc: Sn, outKey: "equal" }), this.statements = ({ inputs: s, outputs: i }) => this.outTypes.equal === "bool" ? [`${i.equal} = ${s.a} == ${s.b};`] : [`${i.equal} = equal(${s.a}, ${s.b});`];
  }
}
class fn extends X {
  constructor({ a: A, b: e }) {
    super({ a: A, b: e, outTypeFunc: $I, outKey: "notEqual" }), this.statements = ({ inputs: s, outputs: i }) => this.outTypes.notEqual === "bool" ? [`${i.notEqual} = ${s.a} != ${s.b};`] : [`${i.notEqual} = notEqual(${s.a}, ${s.b});`];
  }
}
class mn extends S {
  constructor({ a: A }) {
    super({ a: A, outTypeFunc: (e) => "bool", outKey: "any" }), this.statements = ({ inputs: e, outputs: s }) => [`${s.any} = any(${e.a});`];
  }
}
class Mn extends S {
  constructor({ a: A }) {
    super({ a: A, outTypeFunc: (e) => "bool", outKey: "all" }), this.statements = ({ inputs: e, outputs: s }) => [`${s.all} = all(${e.a});`];
  }
}
class xn extends Bt {
  constructor({
    cond: A,
    t: e,
    f: s
  }) {
    super({
      a: A,
      b: e,
      c: s,
      outKey: "select",
      outTypeFunc: (i, n, a) => n
    }), this.statements = ({ inputs: i, outputs: n }) => {
      const { a, b: r, c: g } = i;
      return [`${n.select} = (${a}) ? (${r}) : (${g});`];
    };
  }
}
function re(t, A) {
  if (It(t))
    return "bool";
  if (t === "ivec2" || t === "uvec2" || t === "vec2")
    return "bvec2";
  if (t === "ivec3" || t === "uvec3" || t === "vec3")
    return "bvec3";
  if (t === "ivec4" || t === "uvec4" || t === "vec4")
    return "bvec4";
  throw new Error(`Invalid ${A} type: ${t}`);
}
function Sn(t, A = "equal") {
  if (It(t))
    return "bool";
  if (ot(t))
    return t;
  if (t === "ivec2" || t === "uvec2" || t === "vec2")
    return "bvec2";
  if (t === "ivec3" || t === "uvec3" || t === "vec3")
    return "bvec3";
  if (t === "ivec4" || t === "uvec4" || t === "vec4")
    return "bvec4";
  throw new Error(`Invalid ${A} type: ${t}`);
}
function $I(t) {
  return Sn(t, "notEqual");
}
function AB(t) {
  if (ot(t))
    return "bool";
  if (lA(t))
    return "int";
  if (uA(t))
    return "uint";
  throw new Error(`Invalid compXor type: ${t}`);
}
class Nn extends S {
  constructor({ a: A }) {
    const e = AB(_(A));
    super({ a: A, outTypeFunc: (s) => e, outKey: "compXor" }), this.statements = ({ inputs: s, outputs: i }) => {
      if (It(this.outTypes.compXor))
        return [`${i.compXor} = ${s.a};`];
      const a = (pt(e) ? ["x", "y"] : yt(e) ? ["x", "y", "z"] : ["x", "y", "z", "w"]).map((g) => `${s.a}.${g}`), r = ot(e) ? "^^" : "^";
      return [`${i.compXor} = ${a.join(` ${r} `)};`];
    };
  }
}
const tB = (t) => new vn({ value: t }), eB = (t) => new Ln({ value: t }), sB = (t) => new Yn({ value: t }), Fn = (t) => new Jn({ value: t }), iB = (t) => new Tn({ value: t }), nB = (t) => new Hn({ value: t }), aB = (t) => new Kn({ value: t }), rB = (t) => new qn({ value: t }), gB = (t) => new zn({ value: t }), oB = (t) => new _n({ value: t }), IB = (t) => new Vn({ value: t }), BB = (t) => new Zn({ value: t }), QB = (t) => new On({ value: t }), kn = (t) => new Wn({ value: t }), gt = (t) => new jn({ value: t }), Gn = (t) => new Pn({ value: t }), CB = (t) => new Xn({ value: t }), EB = (t) => new $n({ value: t }), cB = (t) => new Aa({ value: t }), Rn = (t) => new ta({ value: t }), hB = (t) => new ea({ value: t }), lB = (t) => new sa({ value: t }), uB = (t) => new ia({ value: t }), dB = (t) => new na({ value: t }), wB = (t) => new aa({ value: t }), pB = (t) => new ra({ value: t }), yB = (t) => new ga({ value: t }), Un = (t) => new oa({ value: t }), DB = (t) => new Ia({ value: t }), bn = (t) => new Ba({ value: t });
class oA extends S {
  constructor({
    value: A,
    outType: e,
    outKey: s
  }) {
    super({ a: A, outTypeFunc: () => e, outKey: s }), this.statements = ({ inputs: i, outputs: n }) => [
      `${n[s]} = ${Es(e)}(${i.a});`
    ];
  }
}
class vn extends oA {
  constructor({
    value: A
  }) {
    super({ value: A, outType: "bool", outKey: "bool" });
  }
}
class Ln extends oA {
  constructor({
    value: A
  }) {
    super({ value: A, outType: "int", outKey: "int" });
  }
}
class Yn extends oA {
  constructor({
    value: A
  }) {
    super({ value: A, outType: "uint", outKey: "uint" });
  }
}
class Jn extends oA {
  constructor({
    value: A
  }) {
    super({ value: A, outType: "float", outKey: "float" });
  }
}
class Tn extends oA {
  constructor({
    value: A
  }) {
    super({ value: A, outType: "bvec2", outKey: "bvec2" });
  }
}
class Hn extends oA {
  constructor({
    value: A
  }) {
    super({ value: A, outType: "bvec3", outKey: "bvec3" });
  }
}
class Kn extends oA {
  constructor({
    value: A
  }) {
    super({ value: A, outType: "bvec4", outKey: "bvec4" });
  }
}
class qn extends oA {
  constructor({
    value: A
  }) {
    super({ value: A, outType: "ivec2", outKey: "ivec2" });
  }
}
class zn extends oA {
  constructor({
    value: A
  }) {
    super({ value: A, outType: "ivec3", outKey: "ivec3" });
  }
}
class _n extends oA {
  constructor({
    value: A
  }) {
    super({ value: A, outType: "ivec4", outKey: "ivec4" });
  }
}
class Vn extends oA {
  constructor({
    value: A
  }) {
    super({ value: A, outType: "uvec2", outKey: "uvec2" });
  }
}
class Zn extends oA {
  constructor({
    value: A
  }) {
    super({ value: A, outType: "uvec3", outKey: "uvec3" });
  }
}
class On extends oA {
  constructor({
    value: A
  }) {
    super({ value: A, outType: "uvec4", outKey: "uvec4" });
  }
}
class Wn extends oA {
  constructor({
    value: A
  }) {
    super({ value: A, outType: "vec2", outKey: "vec2" });
  }
}
class jn extends oA {
  constructor({
    value: A
  }) {
    super({ value: A, outType: "vec3", outKey: "vec3" });
  }
}
class Pn extends oA {
  constructor({
    value: A
  }) {
    super({ value: A, outType: "vec4", outKey: "vec4" });
  }
}
class Xn extends oA {
  constructor({
    value: A
  }) {
    super({ value: A, outType: "mat2", outKey: "mat2" });
  }
}
class $n extends oA {
  constructor({
    value: A
  }) {
    super({ value: A, outType: "mat3", outKey: "mat3" });
  }
}
class Aa extends oA {
  constructor({
    value: A
  }) {
    super({ value: A, outType: "mat4", outKey: "mat4" });
  }
}
class ta extends S {
  constructor({ value: A }) {
    super({ a: A, outKey: "int", outTypeFunc: () => "int" }), this.statements = ({ inputs: e, outputs: s }) => [`${s.int} = floatBitsToInt(${e.a});`];
  }
}
class ea extends S {
  constructor({ value: A }) {
    super({ a: A, outKey: "uint", outTypeFunc: () => "uint" }), this.statements = ({ inputs: e, outputs: s }) => [`${s.uint} = floatBitsToUint(${e.a});`];
  }
}
class sa extends S {
  constructor({ value: A }) {
    super({ a: A, outKey: "float", outTypeFunc: () => "float" }), this.statements = ({ inputs: e, outputs: s }) => [`${s.float} = intBitsToFloat(${e.a});`];
  }
}
class ia extends S {
  constructor({ value: A }) {
    super({ a: A, outKey: "float", outTypeFunc: () => "float" }), this.statements = ({ inputs: e, outputs: s }) => [`${s.float} = uintBitsToFloat(${e.a});`];
  }
}
class na extends S {
  constructor({ value: A }) {
    super({ a: A, outKey: "uint", outTypeFunc: () => "uint" }), this.statements = ({ inputs: e, outputs: s }) => [`${s.uint} = packSnorm2x16(${e.a});`];
  }
}
class aa extends S {
  constructor({ value: A }) {
    super({ a: A, outKey: "vec2", outTypeFunc: () => "vec2" }), this.statements = ({ inputs: e, outputs: s }) => [`${s.vec2} = unpackSnorm2x16(${e.a});`];
  }
}
class ra extends S {
  constructor({ value: A }) {
    super({ a: A, outKey: "uint", outTypeFunc: () => "uint" }), this.statements = ({ inputs: e, outputs: s }) => [`${s.uint} = packUnorm2x16(${e.a});`];
  }
}
class ga extends S {
  constructor({ value: A }) {
    super({ a: A, outKey: "vec2", outTypeFunc: () => "vec2" }), this.statements = ({ inputs: e, outputs: s }) => [`${s.vec2} = unpackUnorm2x16(${e.a});`];
  }
}
class oa extends S {
  constructor({ value: A }) {
    super({ a: A, outKey: "uint", outTypeFunc: () => "uint" }), this.statements = ({ inputs: e, outputs: s }) => [`${s.uint} = packHalf2x16(${e.a});`];
  }
}
class Ia extends S {
  constructor({ value: A }) {
    super({ a: A, outKey: "vec2", outTypeFunc: () => "vec2" }), this.statements = ({ inputs: e, outputs: s }) => [`${s.vec2} = unpackHalf2x16(${e.a});`];
  }
}
class Ba extends S {
  constructor({ value: A }) {
    super({ a: A, outKey: "rgba8", outTypeFunc: () => "vec4" }), this.statements = ({ inputs: e, outputs: s }) => [
      `uvec4 uRgba = uvec4(${e.a} & 0xffu, (${e.a} >> 8u) & 0xffu, (${e.a} >> 16u) & 0xffu, (${e.a} >> 24u) & 0xffu);`,
      `${s.rgba8} = vec4(uRgba) / 255.0;`
    ];
  }
}
const fB = (t) => new ca({ a: t }), mB = (t, A) => new ha({ a: t, b: A }), Qa = (t, A) => new la({ a: t, b: A }), MB = (t, A) => new ua({ a: t, b: A }), Ca = (t) => new da({ a: t }), xB = (t, A, e) => new ya({ a: t, b: A, c: e }), SB = (t, A) => new Da({ incident: t, normal: A }), NB = (t, A, e) => new fa({ incident: t, normal: A, eta: e }), ut = (t) => new Fa({ vector: t }), JA = ({
  vector: t,
  vectorType: A,
  x: e,
  y: s,
  z: i,
  w: n,
  r: a,
  g: r,
  b: g,
  a: I
}) => new ka({ vector: t, vectorType: A, x: e, y: s, z: i, w: n, r: a, g: r, b: g, a: I }), FB = (t) => new wa({ a: t }), Ea = (t, A) => new pa({ a: t, b: A }), kB = (t, A) => new Ga({ vector: t, select: A }), GB = (t, A) => new ma({ a: t, b: A }), RB = (t, A) => new Ma({ a: t, b: A }), UB = (t) => new xa({ a: t }), bB = (t) => new Sa({ a: t }), vB = (t) => new Na({ a: t });
class ca extends S {
  constructor({ a: A }) {
    super({ a: A, outTypeFunc: (e) => "float", outKey: "length" }), this.statements = ({ inputs: e, outputs: s }) => [
      `${s.length} = length(${e.a});`
    ];
  }
}
class ha extends X {
  constructor({ a: A, b: e }) {
    super({ a: A, b: e, outKey: "distance", outTypeFunc: (s, i) => "float" }), this.statements = ({ inputs: s, outputs: i }) => [
      `${i.distance} = distance(${s.a}, ${s.b});`
    ];
  }
}
class la extends X {
  constructor({ a: A, b: e }) {
    super({ a: A, b: e, outKey: "dot", outTypeFunc: (s, i) => "float" }), this.statements = ({ inputs: s, outputs: i }) => [
      `${i.dot} = dot(${s.a}, ${s.b});`
    ];
  }
}
class ua extends X {
  constructor({ a: A, b: e }) {
    super({ a: A, b: e, outKey: "cross", outTypeFunc: (s, i) => "vec3" }), this.statements = ({ inputs: s, outputs: i }) => [
      `${i.cross} = cross(${s.a}, ${s.b});`
    ];
  }
}
class da extends S {
  constructor({ a: A }) {
    super({ a: A, outTypeFunc: (e) => e, outKey: "normalize" }), this.statements = ({ inputs: e, outputs: s }) => [
      `${s.normalize} = normalize(${e.a});`
    ];
  }
}
function LB(t) {
  if (t === "vec3")
    return "vec2";
  if (t === "vec4")
    return "vec3";
  throw new Error("Invalid type");
}
class wa extends S {
  constructor({ a: A }) {
    super({
      a: A,
      outTypeFunc: (e) => LB(e),
      outKey: "projected"
    }), this.statements = ({ inputs: e, outputs: s }) => {
      if (this.inTypes.a === "vec3")
        return [`${s.projected} = ${e.a}.xy / ${e.a}.z;`];
      if (this.inTypes.a === "vec4")
        return [`${s.projected} = ${e.a}.xyz / ${e.a}.w;`];
      throw new Error("Invalid type");
    };
  }
}
function YB(t) {
  if (t === "float") return "vec2";
  if (t === "vec2") return "vec3";
  if (t === "vec3") return "vec4";
  throw new Error("Invalid type");
}
class pa extends X {
  constructor({ a: A, b: e }) {
    const s = _(A), i = YB(s);
    super({ a: A, b: e, outKey: "extend", outTypeFunc: () => i }), this.statements = ({ inputs: n, outputs: a }) => [
      `${a.extend} = ${i}(${n.a}, ${n.b});`
    ];
  }
}
class ya extends Bt {
  constructor({ a: A, b: e, c: s }) {
    super({
      a: A,
      b: e,
      c: s,
      outKey: "forward",
      outTypeFunc: (i, n, a) => i
    }), this.statements = ({ inputs: i, outputs: n }) => [
      `${n.forward} = faceforward(${i.a}, ${i.b}, ${i.c});`
    ];
  }
}
class Da extends X {
  constructor({
    incident: A,
    normal: e
  }) {
    super({
      a: A,
      b: e,
      outKey: "reflection",
      outTypeFunc: (s, i) => s
    }), this.statements = ({ inputs: s, outputs: i }) => [
      `${i.reflection} = reflect(${s.a}, ${s.b});`
    ];
  }
}
class fa extends Bt {
  constructor({
    incident: A,
    normal: e,
    eta: s
  }) {
    super({
      a: A,
      b: e,
      c: s,
      outKey: "refraction",
      outTypeFunc: (i, n, a) => i
    }), this.statements = ({ inputs: i, outputs: n }) => [
      `${n.refraction} = refract(${i.a}, ${i.b}, ${i.c});`
    ];
  }
}
class ma extends X {
  constructor({ a: A, b: e }) {
    super({ a: A, b: e, outKey: "product", outTypeFunc: (s, i) => s }), this.statements = ({ inputs: s, outputs: i }) => [
      `${i.product} = matrixCompMult(${A}, ${e});`
    ];
  }
}
function JB(t, A) {
  if (t === "vec2") {
    if (A === "vec2") return "mat2";
    if (A === "vec3") return "mat3x2";
    if (A === "vec4") return "mat4x2";
  }
  if (t === "vec3") {
    if (A === "vec2") return "mat2x3";
    if (A === "vec3") return "mat3";
    if (A === "vec4") return "mat4x3";
  }
  if (t === "vec4") {
    if (A === "vec2") return "mat2x4";
    if (A === "vec3") return "mat3x4";
    if (A === "vec4") return "mat4";
  }
  throw new Error(`Invalid outer type: ${t}, ${A}`);
}
class Ma extends X {
  constructor({ a: A, b: e }) {
    super({ a: A, b: e, outKey: "outer", outTypeFunc: JB }), this.statements = ({ inputs: s, outputs: i }) => [
      `${i.outer} = outerProduct(${s.a}, ${s.b});`
    ];
  }
}
function TB(t) {
  if (t === "mat2") return "mat2";
  if (t === "mat3") return "mat3";
  if (t === "mat4") return "mat4";
  if (t === "mat2x2") return "mat2x2";
  if (t === "mat2x3") return "mat3x2";
  if (t === "mat2x4") return "mat4x2";
  if (t === "mat3x2") return "mat2x3";
  if (t === "mat3x3") return "mat3x3";
  if (t === "mat3x4") return "mat4x3";
  if (t === "mat4x2") return "mat2x4";
  if (t === "mat4x3") return "mat3x4";
  if (t === "mat4x4") return "mat4x4";
  throw new Error(`Invalid transpose type: ${t}`);
}
class xa extends S {
  constructor({ a: A }) {
    super({ a: A, outKey: "transpose", outTypeFunc: TB }), this.statements = ({ inputs: e, outputs: s }) => [
      `${s.transpose} = transpose(${e.a});`
    ];
  }
}
class Sa extends S {
  constructor({ a: A }) {
    super({ a: A, outKey: "det", outTypeFunc: (e) => "float" }), this.statements = ({ inputs: e, outputs: s }) => [
      `${s.det} = determinant(${e.a});`
    ];
  }
}
class Na extends S {
  constructor({ a: A }) {
    super({ a: A, outKey: "inverse", outTypeFunc: (e) => e }), this.statements = ({ inputs: e, outputs: s }) => [
      `${s.inverse} = inverse(${A});`
    ];
  }
}
function HB(t) {
  const A = (e) => e;
  switch (t) {
    case "vec2":
      return A({ x: "float", y: "float", r: "float", g: "float" });
    case "vec3":
      return A({
        x: "float",
        y: "float",
        z: "float",
        r: "float",
        g: "float",
        b: "float"
      });
    case "vec4":
      return A({
        x: "float",
        y: "float",
        z: "float",
        w: "float",
        r: "float",
        g: "float",
        b: "float",
        a: "float"
      });
    case "ivec2":
      return A({ x: "int", y: "int", r: "int", g: "int" });
    case "ivec3":
      return A({
        x: "int",
        y: "int",
        z: "int",
        r: "int",
        g: "int",
        b: "int"
      });
    case "ivec4":
      return A({
        x: "int",
        y: "int",
        z: "int",
        w: "int",
        r: "int",
        g: "int",
        b: "int",
        a: "int"
      });
    case "uvec2":
      return A({ x: "uint", y: "uint", r: "uint", g: "uint" });
    case "uvec3":
      return A({
        x: "uint",
        y: "uint",
        z: "uint",
        r: "uint",
        g: "uint",
        b: "uint"
      });
    case "uvec4":
      return A({
        x: "uint",
        y: "uint",
        z: "uint",
        w: "uint",
        r: "uint",
        g: "uint",
        b: "uint",
        a: "uint"
      });
    default:
      throw new Error(`Invalid vector type: ${t}`);
  }
}
class Fa extends V {
  constructor({ vector: A }) {
    const s = { vector: _(A) }, i = HB(s.vector);
    super({ inTypes: s, outTypes: i, inputs: { vector: A } }), this.statements = ({ inputs: n, outputs: a }) => {
      const { x: r, y: g, z: I, w: B, r: o, g: C, b: E, a: h } = a, { vector: c } = n;
      return [
        r ? `${r} = ${c}.x;` : null,
        g ? `${g} = ${c}.y;` : null,
        I ? `${I} = ${c}.z;` : null,
        B ? `${B} = ${c}.w;` : null,
        o ? `${o} = ${c}.r;` : null,
        C ? `${C} = ${c}.g;` : null,
        E ? `${E} = ${c}.b;` : null,
        h ? `${h} = ${c}.a;` : null
      ].filter(Boolean);
    };
  }
}
class ka extends V {
  constructor({
    vector: A,
    vectorType: e,
    x: s,
    y: i,
    z: n,
    w: a,
    r,
    g,
    b: I,
    a: B
  }) {
    if (!A && !e)
      throw new Error("Either vector or vectorType must be provided");
    const o = e ?? _(A), C = Bs(o), E = Qs(o), h = {
      vector: o,
      x: C,
      y: C,
      r: C,
      g: C
    }, c = { vector: A, x: s, y: i, r, g };
    E >= 3 && (Object.assign(h, { z: C, b: C }), Object.assign(c, { z: n, b: I })), E >= 4 && (Object.assign(h, { w: C, a: C }), Object.assign(c, { w: a, a: B })), super({ inTypes: h, outTypes: { vector: o }, inputs: c }), this.statements = ({ inputs: l, outputs: u }) => {
      const { vector: w } = u, {
        vector: d,
        x: y,
        y: p,
        z: f,
        w: N,
        r: m,
        g: D,
        b: U,
        a: x
      } = l, M = [
        `${w}.x = ${y ?? m ?? (d ? `${d}.x` : mt(C))};`,
        `${w}.y = ${p ?? D ?? (d ? `${d}.y` : mt(C))};`
      ];
      return E >= 3 && M.push(
        `${w}.z = ${f ?? U ?? (d ? `${d}.z` : mt(C))};`
      ), E >= 4 && M.push(
        `${w}.w = ${N ?? x ?? (d ? `${d}.w` : mt(C))};`
      ), M;
    };
  }
  dynoOut() {
    return new q(
      this,
      "vector"
    );
  }
}
function KB(t, A) {
  let e = null;
  if (Rt(t) ? e = A.length === 1 ? "float" : A.length === 2 ? "vec2" : A.length === 3 ? "vec3" : A.length === 4 ? "vec4" : null : lA(t) ? e = A.length === 1 ? "int" : A.length === 2 ? "ivec2" : A.length === 3 ? "ivec3" : A.length === 4 ? "ivec4" : null : uA(t) && (e = A.length === 1 ? "uint" : A.length === 2 ? "uvec2" : A.length === 3 ? "uvec3" : A.length === 4 ? "uvec4" : null), e == null)
    throw new Error(`Invalid swizzle: ${A}`);
  return e;
}
class Ga extends S {
  constructor({ vector: A, select: e }) {
    super({
      a: A,
      outKey: "swizzle",
      outTypeFunc: (s) => KB(s, e)
    }), this.statements = ({ inputs: s, outputs: i }) => [
      `${i.swizzle} = ${s.a}.${e};`
    ];
  }
}
const qB = (t, A, e) => new Ja({ index: t, from: A, to: e }), zB = (t) => new Dt({ value: t }), _B = (t) => new FA({ state: t }), VB = (t) => new kA({ state: t }), Ra = (t) => new Ta({ value: t }), Ua = (t) => new Ha({ value: t }), ba = (t) => new Ka({ value: t }), va = (t) => new qa({ value: t }), ZB = (t) => new za({ value: t }), OB = (t) => new _a({ value: t }), La = (t) => new Va({ value: t }), Fe = (t) => new Za({ value: t }), Ya = (t, A, e) => new Oa({ z: t, zNear: A, zFar: e }).outputs.depth;
class Ja extends V {
  constructor({
    from: A,
    to: e,
    index: s
  }) {
    super({
      inTypes: { from: "int", to: "int", index: "int" },
      outTypes: { index: "int" },
      inputs: { from: A, to: e, index: s },
      statements: ({ inputs: i, outputs: n }) => [
        `${n.index} = ${i.index} - ${i.from} + ${i.to};`
      ]
    });
  }
  dynoOut() {
    return new q(this, "index");
  }
}
class FA extends V {
  constructor({ state: A }) {
    const e = _(A);
    super({
      inTypes: { state: e },
      outTypes: { state: "uint" },
      inputs: { state: A },
      globals: () => [
        CA(`
          uint pcg_next(uint state) {
            return state * 747796405u + 2891336453u;
          }
        `)
      ],
      statements: ({ inputs: s, outputs: i }) => {
        const n = e === "uint" ? `${s.state}` : e === "int" ? `uint(${s.state})` : `floatBitsToUint(${s.state})`;
        return [`${i.state} = pcg_next(${n});`];
      }
    });
  }
  dynoOut() {
    return new q(this, "state");
  }
}
class kA extends V {
  constructor({ state: A }) {
    super({
      inTypes: { state: "uint" },
      outTypes: { hash: "uint" },
      inputs: { state: A },
      globals: () => [
        CA(`
          uint pcg_hash(uint state) {
            uint hash = ((state >> ((state >> 28u) + 4u)) ^ state) * 277803737u;
            return (hash >> 22u) ^ hash;
          }
        `)
      ],
      statements: ({ inputs: e, outputs: s }) => [
        `${s.hash} = pcg_hash(${e.state});`
      ]
    });
  }
  dynoOut() {
    return new q(this, "hash");
  }
}
class Dt extends V {
  constructor({ value: A }) {
    const e = _(A), s = Cs(e);
    super({
      inTypes: { value: e },
      outTypes: { state: "uint" },
      inputs: { value: A },
      globals: () => [
        CA(`
          uint pcg_mix(uint value) {
            return value;
          }
          uint pcg_mix(uvec2 value) {
            return value.x + 0x9e3779b9u * value.y;
          }
          uint pcg_mix(uvec3 value) {
            return value.x + 0x9e3779b9u * value.y + 0x85ebca6bu * value.z;
          }
          uint pcg_mix(uvec4 value) {
            return value.x + 0x9e3779b9u * value.y + 0x85ebca6bu * value.z + 0xc2b2ae35u * value.w;
          }
        `)
      ],
      statements: ({ inputs: i, outputs: n }) => {
        const a = uA(e) ? `${i.value}` : lA(e) ? `${s}(${i.value})` : `floatBitsToUint(${i.value})`;
        return [
          `${s} bits = ${a};`,
          `${n.state} = pcg_mix(bits);`
        ];
      }
    });
  }
  dynoOut() {
    return new q(this, "state");
  }
}
class Ta extends HA {
  constructor({ value: A }) {
    super({
      inTypes: { value: _(A) },
      outTypes: { hash: "uint" },
      inputs: { value: A },
      construct: ({ value: e }) => {
        if (!e)
          throw new Error("value is required");
        let s = new Dt({ value: e }).outputs.state;
        return s = new FA({ state: s }).outputs.state, new kA({ state: s }).outputs;
      }
    });
  }
  dynoOut() {
    return new q(this, "hash");
  }
}
class Ha extends HA {
  constructor({ value: A }) {
    super({
      inTypes: { value: _(A) },
      outTypes: { hash: "uvec2" },
      inputs: { value: A },
      construct: ({ value: e }) => {
        if (!e)
          throw new Error("value is required");
        let s = new Dt({ value: e }).outputs.state;
        s = new FA({ state: s }).outputs.state;
        const i = new kA({ state: s }).outputs.hash;
        s = new FA({ state: s }).outputs.state;
        const n = new kA({ state: s }).outputs.hash;
        return { hash: JA({ vectorType: "uvec2", x: i, y: n }) };
      }
    });
  }
  dynoOut() {
    return new q(this, "hash");
  }
}
class Ka extends HA {
  constructor({ value: A }) {
    super({
      inTypes: { value: _(A) },
      outTypes: { hash: "uvec3" },
      inputs: { value: A },
      construct: ({ value: e }) => {
        if (!e)
          throw new Error("value is required");
        let s = new Dt({ value: e }).outputs.state;
        s = new FA({ state: s }).outputs.state;
        const i = new kA({ state: s }).outputs.hash;
        s = new FA({ state: s }).outputs.state;
        const n = new kA({ state: s }).outputs.hash;
        s = new FA({ state: s }).outputs.state;
        const a = new kA({ state: s }).outputs.hash;
        return { hash: JA({ vectorType: "uvec3", x: i, y: n, z: a }) };
      }
    });
  }
  dynoOut() {
    return new q(this, "hash");
  }
}
class qa extends HA {
  constructor({ value: A }) {
    super({
      inTypes: { value: _(A) },
      outTypes: { hash: "uvec4" },
      inputs: { value: A },
      construct: ({ value: e }) => {
        if (!e)
          throw new Error("value is required");
        let s = new Dt({ value: e }).outputs.state;
        s = new FA({ state: s }).outputs.state;
        const i = new kA({ state: s }).outputs.hash;
        s = new FA({ state: s }).outputs.state;
        const n = new kA({ state: s }).outputs.hash;
        s = new FA({ state: s }).outputs.state;
        const a = new kA({ state: s }).outputs.hash;
        s = new FA({ state: s }).outputs.state;
        const r = new kA({ state: s }).outputs.hash;
        return { hash: JA({ vectorType: "uvec4", x: i, y: n, z: a, w: r }) };
      }
    });
  }
  dynoOut() {
    return new q(this, "hash");
  }
}
class za extends HA {
  constructor({ value: A }) {
    super({
      inTypes: { value: _(A) },
      outTypes: { hash: "float" },
      inputs: { value: A },
      construct: ({ value: e }) => {
        if (!e)
          throw new Error("value is required");
        const s = Ra(e);
        return { hash: QA(Fn(s), K("float", 1 / 2 ** 32)) };
      }
    });
  }
  dynoOut() {
    return new q(this, "hash");
  }
}
class _a extends HA {
  constructor({ value: A }) {
    super({
      inTypes: { value: _(A) },
      outTypes: { hash: "vec2" },
      inputs: { value: A },
      construct: ({ value: e }) => {
        if (!e)
          throw new Error("value is required");
        const s = Ua(e);
        return { hash: QA(kn(s), K("float", 1 / 2 ** 32)) };
      }
    });
  }
  dynoOut() {
    return new q(this, "hash");
  }
}
class Va extends HA {
  constructor({ value: A }) {
    super({
      inTypes: { value: _(A) },
      outTypes: { hash: "vec3" },
      inputs: { value: A },
      construct: ({ value: e }) => {
        if (!e)
          throw new Error("value is required");
        const s = ba(e);
        return { hash: QA(gt(s), K("float", 1 / 2 ** 32)) };
      }
    });
  }
  dynoOut() {
    return new q(this, "hash");
  }
}
class Za extends HA {
  constructor({ value: A }) {
    super({
      inTypes: { value: _(A) },
      outTypes: { hash: "vec4" },
      inputs: { value: A },
      construct: ({ value: e }) => {
        if (!e)
          throw new Error("value is required");
        const s = va(e);
        return { hash: QA(Gn(s), K("float", 1 / 2 ** 32)) };
      }
    });
  }
  dynoOut() {
    return new q(this, "hash");
  }
}
class Oa extends V {
  constructor({
    z: A,
    zNear: e,
    zFar: s
  }) {
    super({
      inTypes: { z: "float", zNear: "float", zFar: "float" },
      outTypes: { depth: "float" },
      inputs: { z: A, zNear: e, zFar: s },
      statements: ({ inputs: i, outputs: n }) => [
        `float clamped = clamp(${i.z}, ${i.zNear}, ${i.zFar});`,
        `${n.depth} = (log2(clamped + 1.0) - log2(${i.zNear} + 1.0)) / (log2(${i.zFar} + 1.0) - log2(${i.zNear} + 1.0));`
      ]
    });
  }
  dynoOut() {
    return new q(this, "depth");
  }
}
const Wa = (t, {
  scale: A,
  scales: e,
  rotate: s,
  translate: i
}) => new Pa({ position: t, scale: A, scales: e, rotate: s, translate: i }).outputs.position, ja = (t, {
  scale: A,
  scales: e,
  rotate: s
}) => new Xa({ dir: t, scale: A, scales: e, rotate: s }).outputs.dir, WB = (t, { rotate: A }) => new $a({ quaternion: t, rotate: A }).outputs.quaternion;
class Pa extends V {
  constructor({
    position: A,
    scale: e,
    scales: s,
    rotate: i,
    translate: n
  }) {
    super({
      inTypes: {
        position: "vec3",
        scale: "float",
        scales: "vec3",
        rotate: "vec4",
        translate: "vec3"
      },
      outTypes: { position: "vec3" },
      inputs: { position: A, scale: e, scales: s, rotate: i, translate: n },
      statements: ({ inputs: a, outputs: r }) => {
        const { position: g } = r;
        if (!g)
          return [];
        const { scale: I, scales: B, rotate: o, translate: C } = a;
        return [
          `${g} = ${a.position ?? "vec3(0.0, 0.0, 0.0)"};`,
          I ? `${g} *= ${I};` : null,
          B ? `${g} *= ${B};` : null,
          o ? `${g} = quatVec(${o}, ${g});` : null,
          C ? `${g} += ${C};` : null
        ].filter(Boolean);
      }
    });
  }
}
class Xa extends V {
  constructor({
    dir: A,
    scale: e,
    scales: s,
    rotate: i
  }) {
    super({
      inTypes: { dir: "vec3", scale: "float", scales: "vec3", rotate: "vec4" },
      outTypes: { dir: "vec3" },
      inputs: { dir: A, scale: e, scales: s, rotate: i },
      statements: ({ inputs: n, outputs: a }) => {
        const { dir: r } = a;
        if (!r)
          return [];
        const { scale: g, scales: I, rotate: B } = n;
        return [
          `${r} = ${n.dir ?? "vec3(0.0, 0.0, 0.0)"};`,
          g ? `${r} *= ${g};` : null,
          I ? `${r} *= ${I};` : null,
          B ? `${r} = quatVec(${B}, ${r});` : null
        ].filter(Boolean);
      }
    });
  }
}
class $a extends V {
  constructor({
    quaternion: A,
    rotate: e
  }) {
    super({
      inTypes: { quaternion: "vec4", rotate: "vec4" },
      outTypes: { quaternion: "vec4" },
      inputs: { quaternion: A, rotate: e },
      statements: ({ inputs: s, outputs: i }) => {
        const { quaternion: n } = i;
        return n ? [
          `${n} = ${s.quaternion ?? "vec4(0.0, 0.0, 0.0, 1.0)"};`,
          e ? `${n} = quatQuat(${s.rotate}, ${n});` : null
        ].filter(Boolean) : [];
      }
    });
  }
}
const jB = () => {
  throw new Error("Not implemented");
}, PB = () => {
  throw new Error("Not implemented");
}, XB = () => {
  throw new Error("Not implemented");
}, $B = () => {
  throw new Error("Not implemented");
}, AQ = () => {
  throw new Error("Not implemented");
}, tQ = () => {
  throw new Error("Not implemented");
}, eQ = (t, A) => new Ar({ texture: t, lod: A }), sQ = (t, A, e) => new tr({ texture: t, coord: A, bias: e }), iQ = (t, A, e) => new er({ texture: t, coord: A, lod: e });
class Ar extends V {
  constructor({ texture: A, lod: e }) {
    const s = _(A);
    super({
      inTypes: { texture: s, lod: "int" },
      outTypes: { size: sr(s) },
      inputs: { texture: A, lod: e },
      statements: ({ inputs: i, outputs: n }) => [
        `${n.size} = textureSize(${i.texture}, ${i.lod ?? "0"});`
      ]
    });
  }
  dynoOut() {
    return new q(this, "size");
  }
}
class tr extends V {
  constructor({
    texture: A,
    coord: e,
    bias: s
  }) {
    const i = _(A);
    super({
      inTypes: {
        texture: i,
        coord: nQ(i),
        bias: "float"
      },
      outTypes: { sample: ir(i) },
      inputs: { texture: A, coord: e, bias: s },
      statements: ({ inputs: n, outputs: a }) => [
        `${a.sample} = texture(${n.texture}, ${n.coord}${n.bias ? `, ${n.bias}` : ""});`
      ]
    });
  }
  dynoOut() {
    return new q(this, "sample");
  }
}
class er extends V {
  constructor({
    texture: A,
    coord: e,
    lod: s
  }) {
    const i = _(A);
    super({
      inTypes: {
        texture: i,
        coord: sr(i),
        lod: "int"
      },
      outTypes: { texel: ir(i) },
      inputs: { texture: A, coord: e, lod: s },
      statements: ({ inputs: n, outputs: a }) => [
        `${a.texel} = texelFetch(${n.texture}, ${n.coord}, ${n.lod ?? "0"});`
      ]
    });
  }
  dynoOut() {
    return new q(this, "texel");
  }
}
function sr(t) {
  switch (t) {
    case "sampler2D":
    case "usampler2D":
    case "isampler2D":
    case "samplerCube":
    case "usamplerCube":
    case "isamplerCube":
    case "sampler2DShadow":
    case "samplerCubeShadow":
      return "ivec2";
    case "sampler3D":
    case "usampler3D":
    case "isampler3D":
    case "sampler2DArray":
    case "usampler2DArray":
    case "isampler2DArray":
    case "sampler2DArrayShadow":
      return "ivec3";
    default:
      throw new Error(`Invalid texture type: ${t}`);
  }
}
function nQ(t) {
  switch (t) {
    case "sampler2D":
    case "usampler2D":
    case "isampler2D":
      return "vec2";
    case "sampler3D":
    case "usampler3D":
    case "isampler3D":
    case "samplerCube":
    case "usamplerCube":
    case "isamplerCube":
    case "sampler2DArray":
    case "usampler2DArray":
    case "isampler2DArray":
    case "sampler2DShadow":
      return "vec3";
    case "samplerCubeShadow":
    case "sampler2DArrayShadow":
      return "vec4";
    default:
      throw new Error(`Invalid texture type: ${t}`);
  }
}
function ir(t) {
  switch (t) {
    case "sampler2D":
    case "sampler2DArray":
    case "sampler3D":
    case "samplerCube":
    case "sampler2DShadow":
      return "vec4";
    case "usampler2D":
    case "usampler2DArray":
    case "usampler3D":
    case "usamplerCube":
      return "uvec4";
    case "isampler2D":
    case "isampler2DArray":
    case "isampler3D":
    case "isamplerCube":
      return "ivec4";
    case "samplerCubeShadow":
    case "sampler2DArrayShadow":
      return "float";
    default:
      throw new Error(`Invalid texture type: ${t}`);
  }
}
const aQ = (t) => new nr({ degrees: t }), rQ = (t) => new ar({ radians: t }), ke = (t) => new rr({ radians: t }), gQ = (t) => new gr({ radians: t }), oQ = (t) => new or({ radians: t }), IQ = (t) => new Ir({ sin: t }), BQ = (t) => new Br({ cos: t }), QQ = (t) => new Qr({ tan: t }), CQ = (t, A) => new Cr({ y: t, x: A }), EQ = (t) => new Er({ x: t }), cQ = (t) => new cr({ x: t }), hQ = (t) => new hr({ x: t }), lQ = (t) => new lr({ x: t }), uQ = (t) => new ur({ x: t }), dQ = (t) => new dr({ x: t });
class nr extends S {
  constructor({ degrees: A }) {
    super({ a: A, outTypeFunc: (e) => e, outKey: "radians" }), this.statements = ({ inputs: e, outputs: s }) => [
      `${s.radians} = radians(${e.a});`
    ];
  }
}
class ar extends S {
  constructor({ radians: A }) {
    super({ a: A, outTypeFunc: (e) => e, outKey: "degrees" }), this.statements = ({ inputs: e, outputs: s }) => [
      `${s.degrees} = degrees(${e.a});`
    ];
  }
}
class rr extends S {
  constructor({ radians: A }) {
    super({ a: A, outTypeFunc: (e) => e, outKey: "sin" }), this.statements = ({ inputs: e, outputs: s }) => [
      `${s.sin} = sin(${e.a});`
    ];
  }
}
class gr extends S {
  constructor({ radians: A }) {
    super({ a: A, outTypeFunc: (e) => e, outKey: "cos" }), this.statements = ({ inputs: e, outputs: s }) => [
      `${s.cos} = cos(${e.a});`
    ];
  }
}
class or extends S {
  constructor({ radians: A }) {
    super({ a: A, outTypeFunc: (e) => e, outKey: "tan" }), this.statements = ({ inputs: e, outputs: s }) => [
      `${s.tan} = tan(${e.a});`
    ];
  }
}
class Ir extends S {
  constructor({ sin: A }) {
    super({ a: A, outTypeFunc: (e) => e, outKey: "asin" }), this.statements = ({ inputs: e, outputs: s }) => [
      `${s.asin} = asin(${e.a});`
    ];
  }
}
class Br extends S {
  constructor({ cos: A }) {
    super({ a: A, outTypeFunc: (e) => e, outKey: "acos" }), this.statements = ({ inputs: e, outputs: s }) => [
      `${s.acos} = acos(${e.a});`
    ];
  }
}
class Qr extends S {
  constructor({ tan: A }) {
    super({ a: A, outTypeFunc: (e) => e, outKey: "atan" }), this.statements = ({ inputs: e, outputs: s }) => [
      `${s.atan} = atan(${e.a});`
    ];
  }
}
class Cr extends X {
  constructor({ y: A, x: e }) {
    super({
      a: A,
      b: e,
      outTypeFunc: (s, i) => s,
      outKey: "atan2"
    }), this.statements = ({ inputs: s, outputs: i }) => [
      `${i.atan2} = atan2(${s.a}, ${s.b});`
    ];
  }
}
class Er extends S {
  constructor({ x: A }) {
    super({ a: A, outTypeFunc: (e) => e, outKey: "sinh" }), this.statements = ({ inputs: e, outputs: s }) => [
      `${s.sinh} = sinh(${e.a});`
    ];
  }
}
class cr extends S {
  constructor({ x: A }) {
    super({ a: A, outTypeFunc: (e) => e, outKey: "cosh" }), this.statements = ({ inputs: e, outputs: s }) => [
      `${s.cosh} = cosh(${e.a});`
    ];
  }
}
class hr extends S {
  constructor({ x: A }) {
    super({ a: A, outTypeFunc: (e) => e, outKey: "tanh" }), this.statements = ({ inputs: e, outputs: s }) => [
      `${s.tanh} = tanh(${e.a});`
    ];
  }
}
class lr extends S {
  constructor({ x: A }) {
    super({ a: A, outTypeFunc: (e) => e, outKey: "asinh" }), this.statements = ({ inputs: e, outputs: s }) => [
      `${s.asinh} = asinh(${e.a});`
    ];
  }
}
class ur extends S {
  constructor({ x: A }) {
    super({ a: A, outTypeFunc: (e) => e, outKey: "acosh" }), this.statements = ({ inputs: e, outputs: s }) => [
      `${s.acosh} = acosh(${e.a});`
    ];
  }
}
class dr extends S {
  constructor({ x: A }) {
    super({ a: A, outTypeFunc: (e) => e, outKey: "atanh" }), this.statements = ({ inputs: e, outputs: s }) => [
      `${s.atanh} = atanh(${e.a});`
    ];
  }
}
const KC = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  Abs: zi,
  Acos: Br,
  Acosh: ur,
  Add: vi,
  All: Mn,
  And: cn,
  Any: mn,
  Asin: Ir,
  Asinh: lr,
  Atan: Qr,
  Atan2: Cr,
  Atanh: dr,
  BVec2: Tn,
  BVec3: Hn,
  BVec4: Kn,
  BinaryOp: X,
  Bool: vn,
  Ceil: Zi,
  Clamp: gn,
  Combine: ka,
  CombineGsplat: Ds,
  CompMult: ma,
  CompXor: Nn,
  Compilation: hs,
  Cos: gr,
  Cosh: cr,
  Cross: ua,
  Degrees: ar,
  Determinant: Sa,
  Distance: ha,
  Div: Ji,
  Dot: la,
  Dyno: V,
  DynoBlock: HA,
  DynoBool: jt,
  DynoBvec2: Fs,
  DynoBvec3: Us,
  DynoBvec4: Ls,
  DynoConst: cs,
  DynoFloat: at,
  DynoInt: Gt,
  DynoIsampler2D: $s,
  DynoIsampler2DArray: ti,
  DynoIsampler3D: ii,
  DynoIsamplerCube: ri,
  DynoIvec2: Gs,
  DynoIvec3: vs,
  DynoIvec4: Js,
  DynoLiteral: lt,
  DynoMat2: Ts,
  DynoMat2x2: Hs,
  DynoMat2x3: Ks,
  DynoMat2x4: qs,
  DynoMat3: zs,
  DynoMat3x2: _s,
  DynoMat3x3: Vs,
  DynoMat3x4: Zs,
  DynoMat4: Os,
  DynoMat4x2: Ws,
  DynoMat4x3: js,
  DynoMat4x4: Ps,
  DynoOutput: q,
  DynoProgram: Ke,
  DynoProgramTemplate: qe,
  DynoRemapIndex: Ja,
  DynoSampler2D: Ai,
  DynoSampler2DArray: ei,
  DynoSampler2DArrayShadow: Ii,
  DynoSampler2DShadow: oi,
  DynoSampler3D: ni,
  DynoSamplerCube: gi,
  DynoSamplerCubeShadow: Bi,
  DynoUint: Ns,
  DynoUniform: k,
  DynoUsampler2D: Xs,
  DynoUsampler2DArray: St,
  DynoUsampler3D: si,
  DynoUsamplerCube: ai,
  DynoUvec2: ks,
  DynoUvec3: bs,
  DynoUvec4: Ys,
  DynoValue: $A,
  DynoVec2: Rs,
  DynoVec3: dt,
  DynoVec4: Lt,
  Equal: Dn,
  Exp: Xi,
  Exp2: $i,
  ExtendVec: pa,
  FaceForward: ya,
  Float: Jn,
  FloatBitsToInt: ta,
  FloatBitsToUint: ea,
  Floor: Vi,
  Fract: ji,
  GreaterThan: pn,
  GreaterThanEqual: yn,
  Gsplat: P,
  GsplatNormal: ms,
  Hash: Ta,
  Hash2: Ha,
  Hash3: Ka,
  Hash4: qa,
  HashFloat: za,
  HashVec2: _a,
  HashVec3: Va,
  HashVec4: Za,
  IMod: Ti,
  IVec2: qn,
  IVec3: zn,
  IVec4: _n,
  Int: Ln,
  IntBitsToFloat: sa,
  Inverse: Na,
  InverseSqrt: nn,
  IsInf: Cn,
  IsNan: Qn,
  Length: ca,
  LessThan: dn,
  LessThanEqual: wn,
  Log: An,
  Log2: tn,
  Mat2: Xn,
  Mat3: $n,
  Mat4: Aa,
  Max: rn,
  Min: an,
  Mix: on,
  Mod: Hi,
  Modf: Ki,
  Mul: Yi,
  Neg: qi,
  Normalize: da,
  NormalizedDepth: Oa,
  Not: un,
  NotEqual: fn,
  NumPackedSplats: us,
  Or: hn,
  Outer: Ma,
  OutputPackedSplat: Ss,
  OutputRgba8: Te,
  PackHalf2x16: oa,
  PackSnorm2x16: na,
  PackUnorm2x16: ra,
  PcgHash: kA,
  PcgMix: Dt,
  PcgNext: FA,
  Pow: Pi,
  ProjectH: wa,
  Radians: nr,
  ReadPackedSplat: ws,
  ReadPackedSplatRange: ps,
  ReflectVec: Da,
  RefractVec: fa,
  Round: Wi,
  Select: xn,
  Sign: _i,
  SimpleCast: oA,
  Sin: rr,
  Sinh: Er,
  Smoothstep: Bn,
  Split: Fa,
  SplitGsplat: ys,
  Sqr: en,
  Sqrt: sn,
  Step: In,
  Sub: Li,
  Swizzle: Ga,
  TPackedSplats: vt,
  Tan: or,
  Tanh: hr,
  TexelFetch: er,
  Texture: tr,
  TextureSize: Ar,
  TransformDir: Xa,
  TransformGsplat: Ms,
  TransformPosition: Pa,
  TransformQuaternion: $a,
  Transpose: xa,
  TrinaryOp: Bt,
  Trunc: Oi,
  UVec2: Vn,
  UVec3: Zn,
  UVec4: On,
  Uint: Yn,
  UintBitsToFloat: ia,
  UintToRgba8: Ba,
  UnaryOp: S,
  UnpackHalf2x16: Ia,
  UnpackSnorm2x16: aa,
  UnpackUnorm2x16: ga,
  Vec2: Wn,
  Vec3: jn,
  Vec4: Pn,
  Xor: ln,
  abs: pI,
  acos: BQ,
  acosh: uQ,
  add: fA,
  all: PI,
  and: HI,
  any: jI,
  arrayIndex: AQ,
  arrayLength: tQ,
  asin: IQ,
  asinh: lQ,
  atan: QQ,
  atan2: CQ,
  atanh: dQ,
  bool: tB,
  bvec2: iB,
  bvec3: nB,
  bvec4: aB,
  ceil: fI,
  clamp: vI,
  combine: JA,
  combineGsplat: At,
  comment: $B,
  compMult: GB,
  compXor: XI,
  cos: gQ,
  cosh: cQ,
  cross: MB,
  defineGsplat: xA,
  defineGsplatNormal: fs,
  definePackedSplats: ne,
  degrees: rQ,
  determinant: bB,
  distance: mB,
  div: Zt,
  dot: Qa,
  dyno: bt,
  dynoBlock: SA,
  dynoBool: Ig,
  dynoBvec2: Cg,
  dynoBvec3: lg,
  dynoBvec4: wg,
  dynoConst: K,
  dynoDeclare: Ye,
  dynoFloat: LA,
  dynoFor: XB,
  dynoIf: jB,
  dynoInt: Qg,
  dynoIsampler2D: Lg,
  dynoIsampler2DArray: Tg,
  dynoIsampler3D: qg,
  dynoIsamplerCube: Vg,
  dynoIvec2: cg,
  dynoIvec3: dg,
  dynoIvec4: yg,
  dynoLiteral: Wt,
  dynoMat2: fg,
  dynoMat2x2: mg,
  dynoMat2x3: Mg,
  dynoMat2x4: xg,
  dynoMat3: Sg,
  dynoMat3x2: Ng,
  dynoMat3x3: Fg,
  dynoMat3x4: kg,
  dynoMat4: Gg,
  dynoMat4x2: Rg,
  dynoMat4x3: Ug,
  dynoMat4x4: bg,
  dynoSampler2D: Yg,
  dynoSampler2DArray: Hg,
  dynoSampler2DArrayShadow: Wg,
  dynoSampler2DShadow: Og,
  dynoSampler3D: zg,
  dynoSamplerCube: Zg,
  dynoSamplerCubeShadow: jg,
  dynoSwitch: PB,
  dynoUint: Bg,
  dynoUsampler2D: vg,
  dynoUsampler2DArray: Jg,
  dynoUsampler3D: Kg,
  dynoUsamplerCube: _g,
  dynoUvec2: Eg,
  dynoUvec3: ug,
  dynoUvec4: pg,
  dynoVec2: hg,
  dynoVec3: OA,
  dynoVec4: Dg,
  equal: OI,
  exp: SI,
  exp2: NI,
  extendVec: Ea,
  faceforward: xB,
  float: Fn,
  floatBitsToInt: Rn,
  floatBitsToUint: hB,
  floor: DI,
  fract: Ot,
  greaterThan: ZI,
  greaterThanEqual: En,
  gsplatNormal: me,
  hash: Ra,
  hash2: Ua,
  hash3: ba,
  hash4: va,
  hashFloat: ZB,
  hashVec2: OB,
  hashVec3: La,
  hashVec4: Fe,
  imod: Ne,
  int: eB,
  intBitsToFloat: lB,
  inverse: vB,
  inversesqrt: UI,
  isAllFloatType: tt,
  isBoolType: ot,
  isFloatType: Rt,
  isInf: TI,
  isIntType: lA,
  isMat2: et,
  isMat3: st,
  isMat4: it,
  isMatFloatType: Is,
  isNan: JI,
  isScalarType: It,
  isUintType: uA,
  isVector2Type: pt,
  isVector3Type: yt,
  isVector4Type: Ut,
  isVectorType: eg,
  ivec2: rB,
  ivec3: gB,
  ivec4: oB,
  length: fB,
  lessThan: _I,
  lessThanEqual: VI,
  literalNegOne: ag,
  literalOne: ng,
  literalZero: mt,
  log: FI,
  log2: kI,
  mat2: CB,
  mat3: EB,
  mat4: cB,
  max: Ui,
  min: bI,
  mix: bi,
  mod: Ri,
  modf: wI,
  mul: QA,
  neg: _e,
  normalize: Ca,
  normalizedDepth: Ya,
  not: zI,
  notEqual: WI,
  numPackedSplats: rg,
  numberAsFloat: H,
  numberAsInt: rA,
  numberAsUint: gA,
  or: KI,
  outer: RB,
  outputPackedSplat: xs,
  outputRgba8: gg,
  packHalf2x16: Un,
  packSnorm2x16: dB,
  packUnorm2x16: pB,
  pcgHash: VB,
  pcgMix: zB,
  pcgNext: _B,
  pow: xI,
  projectH: FB,
  radians: aQ,
  readPackedSplat: kt,
  readPackedSplatRange: ls,
  reflectVec: SB,
  refractVec: NB,
  remapIndex: qB,
  round: MI,
  sameSizeIvec: ig,
  sameSizeUvec: Cs,
  sameSizeVec: sg,
  select: Ve,
  sign: yI,
  sin: ke,
  sinh: EQ,
  smoothstep: YI,
  split: ut,
  splitGsplat: nt,
  sqr: GI,
  sqrt: RI,
  step: LI,
  sub: wt,
  swizzle: kB,
  tan: oQ,
  tanh: hQ,
  texelFetch: iQ,
  texture: sQ,
  textureSize: eQ,
  transformDir: ja,
  transformGsplat: Je,
  transformPos: Wa,
  transformQuat: WB,
  transpose: UB,
  trunc: mI,
  typeLiteral: Es,
  uint: sB,
  uintBitsToFloat: uB,
  uintToRgba8: bn,
  uniform: og,
  unindent: CA,
  unindentLines: GA,
  unpackHalf2x16: DB,
  unpackSnorm2x16: wB,
  unpackUnorm2x16: yB,
  uvec2: IB,
  uvec3: BB,
  uvec4: QB,
  valType: _,
  vec2: kn,
  vec3: gt,
  vec4: Gn,
  vectorDim: Qs,
  vectorElementType: Bs,
  xor: qI
}, Symbol.toStringTag, { value: "Module" }));
var wQ = `precision highp float;
precision highp int;
precision highp sampler2D;
precision highp usampler2D;
precision highp isampler2D;
precision highp sampler2DArray;
precision highp usampler2DArray;
precision highp isampler2DArray;
precision highp sampler3D;
precision highp usampler3D;
precision highp isampler3D;

#include <splatDefines>

uniform uint targetLayer;
uniform int targetBase;
uniform int targetCount;

out vec4 target;

{{ GLOBALS }}

void computeReadback(int index) {
    {{ STATEMENTS }}
}

void main() {
    int targetIndex = int(targetLayer << SPLAT_TEX_LAYER_BITS) + int(uint(gl_FragCoord.y) << SPLAT_TEX_WIDTH_BITS) + int(gl_FragCoord.x);
    int index = targetIndex - targetBase;

    if ((index >= 0) && (index < targetCount)) {
        computeReadback(index);
    } else {
        target = vec4(0.0, 0.0, 0.0, 0.0);
    }
}`;
const IA = class IA {
  constructor({ renderer: A } = {}) {
    this.renderer = A, this.capacity = 0, this.count = 0;
  }
  dispose() {
    this.target && (this.target.dispose(), this.target = void 0);
  }
  // Ensure we have a buffer large enough for the readback of count indices.
  // Pass in previous bufer of the desired type.
  ensureBuffer(A, e) {
    const i = Math.ceil(Math.max(1, A) / j) * j * 4;
    if (e.byteLength >= i)
      return e;
    const n = new ArrayBuffer(i);
    if (e instanceof ArrayBuffer)
      return n;
    const a = e.constructor;
    return new a(n);
  }
  // Ensure our render target is large enough for the readback of capacity indices.
  ensureCapacity(A) {
    const { width: e, height: s, depth: i, maxSplats: n } = mA(A);
    (!this.target || n > this.capacity) && (this.dispose(), this.capacity = n, this.target = new Q.WebGLArrayRenderTarget(e, s, i, {
      depthBuffer: !1,
      stencilBuffer: !1,
      generateMipmaps: !1,
      magFilter: Q.NearestFilter,
      minFilter: Q.NearestFilter
    }), this.target.texture.format = Q.RGBAFormat, this.target.texture.type = Q.UnsignedByteType, this.target.texture.internalFormat = "RGBA8");
  }
  // Get a program and THREE.RawShaderMaterial for a given Rgba8Readback,
  // generating it if necessary and caching the result.
  prepareProgramMaterial(A) {
    let e = IA.readbackProgram.get(A);
    if (!e) {
      const i = SA(
        { index: "int" },
        { rgba8: "vec4" },
        ({ index: n }) => (A.inputs.index = n, { rgba8: new Te({ rgba8: A.outputs.rgba8 }) })
      );
      IA.programTemplate || (IA.programTemplate = new qe(wQ)), e = new Ke({
        graph: i,
        inputs: { index: "index" },
        outputs: { rgba8: "target" },
        template: IA.programTemplate
      }), Object.assign(e.uniforms, {
        targetLayer: { value: 0 },
        targetBase: { value: 0 },
        targetCount: { value: 0 }
      }), IA.readbackProgram.set(A, e);
    }
    const s = e.prepareMaterial();
    return IA.mesh.material = s, { program: e, material: s };
  }
  saveRenderState(A) {
    return {
      xrPresenting: A.xr.isPresenting,
      autoClear: A.autoClear,
      scissorTest: A.getScissorTest(),
      pixelRatio: A.getPixelRatio()
    };
  }
  resetRenderState(A, e) {
    A.setRenderTarget(null), A.setPixelRatio(e.pixelRatio), A.xr.isPresenting = e.xrPresenting, A.autoClear = e.autoClear, A.setScissorTest(e.scissorTest);
  }
  process({
    count: A,
    material: e
  }) {
    const s = this.renderer;
    if (!s)
      throw new Error("No renderer");
    if (!this.target)
      throw new Error("No target");
    const i = j * XA;
    e.uniforms.targetBase.value = 0, e.uniforms.targetCount.value = A;
    let n = 0;
    for (; n < A; ) {
      const a = Math.floor(n / i), r = a * i, g = Math.min(
        XA,
        Math.ceil((A - r) / j)
      );
      e.uniforms.targetLayer.value = a, s.setPixelRatio(1), s.setRenderTarget(this.target, a), s.xr.isPresenting = !1, s.autoClear = !1, s.setScissorTest(!0), s.setScissor(0, 0, j, g), s.render(IA.scene, IA.camera), n += j * g;
    }
    this.count = A;
  }
  async read({
    readback: A
  }) {
    const e = this.renderer;
    if (!e)
      throw new Error("No renderer");
    if (!this.target)
      throw new Error("No target");
    const s = Math.ceil(this.count / j) * j;
    if (A.byteLength < s * 4)
      throw new Error(
        `Readback buffer too small: ${A.byteLength} < ${s * 4}`
      );
    const i = new Uint8Array(
      A instanceof ArrayBuffer ? A : A.buffer
    ), n = j * XA;
    let a = 0;
    const r = [];
    for (; a < this.count; ) {
      const g = Math.floor(a / n), I = g * n, B = Math.min(
        XA,
        Math.ceil((this.count - I) / j)
      );
      e.setPixelRatio(1), e.setRenderTarget(this.target, g);
      const o = j * B * 4, C = i.subarray(
        I * 4,
        I * 4 + o
      ), E = e == null ? void 0 : e.readRenderTargetPixelsAsync(
        this.target,
        0,
        0,
        j,
        B,
        C
      );
      r.push(E), a += j * B;
    }
    return Promise.all(r).then(() => A);
  }
  // Perform render operation to run the Rgba8Readback program
  // but don't perform the readback yet.
  render({
    reader: A,
    count: e,
    renderer: s
  }) {
    if (this.renderer = s || this.renderer, !this.renderer)
      throw new Error("No renderer");
    this.ensureCapacity(e);
    const { program: i, material: n } = this.prepareProgramMaterial(A);
    i.update();
    const a = this.saveRenderState(this.renderer);
    this.process({ count: e, material: n }), this.resetRenderState(this.renderer, a);
  }
  // Perform a readback of the render target, returning a buffer of the
  // given type.
  async readback({
    readback: A
  }) {
    if (!this.renderer)
      throw new Error("No renderer");
    const e = this.saveRenderState(this.renderer), s = this.read({ readback: A });
    return this.resetRenderState(this.renderer, e), s;
  }
  // Perform a render and readback operation for the given Rgba8Readback,
  // and readback buffer (call ensureBuffer first).
  async renderReadback({
    reader: A,
    count: e,
    renderer: s,
    readback: i
  }) {
    if (this.renderer = s || this.renderer, !this.renderer)
      throw new Error("No renderer");
    this.ensureCapacity(e);
    const { program: n, material: a } = this.prepareProgramMaterial(A);
    n.update();
    const r = this.saveRenderState(this.renderer);
    this.process({ count: e, material: a });
    const g = this.read({ readback: i });
    return this.resetRenderState(this.renderer, r), g;
  }
  getTexture() {
    var A;
    return (A = this.target) == null ? void 0 : A.texture;
  }
};
IA.programTemplate = null, IA.readbackProgram = /* @__PURE__ */ new Map(), IA.geometry = new Q.PlaneGeometry(2, 2), IA.mesh = new Q.Mesh(
  IA.geometry,
  new Q.RawShaderMaterial({ visible: !1 })
), IA.scene = new Q.Scene().add(IA.mesh), IA.camera = new Q.Camera();
let Xt = IA;
const BA = class BA {
  constructor(A = {}) {
    this.capacity = 0, this.count = 0, this.array = null, this.readback = null, this.source = null, this.needsUpdate = !0, this.dyno = new k({
      key: "rgbaArray",
      type: wr,
      globals: () => [pr],
      value: {
        texture: BA.getEmpty(),
        count: 0
      },
      update: (e) => {
        var s;
        return e.texture = ((s = this.readback) == null ? void 0 : s.getTexture()) ?? this.source ?? BA.getEmpty(), e.count = this.count, e;
      }
    }), A.array ? (this.array = A.array, this.capacity = Math.floor(this.array.length / 4), this.capacity = Math.floor(this.capacity / j) * j, this.count = Math.min(
      this.capacity,
      A.count ?? Number.POSITIVE_INFINITY
    )) : (this.capacity = A.capacity ?? 0, this.count = 0);
  }
  // Free up resources
  dispose() {
    this.readback && (this.readback.dispose(), this.readback = null), this.source && (this.source.dispose(), this.source = null);
  }
  // Ensure that our array is large enough to hold capacity RGBA8 values.
  ensureCapacity(A) {
    var e;
    if (!this.array || A > (((e = this.array) == null ? void 0 : e.length) ?? 0) / 4) {
      this.capacity = mA(A).maxSplats;
      const s = new Uint8Array(this.capacity * 4);
      this.array && s.set(this.array), this.array = s;
    }
    return this.array;
  }
  // Get the THREE.DataArrayTexture from either the readback or the source.
  getTexture() {
    var e;
    let A = (e = this.readback) == null ? void 0 : e.getTexture();
    return (this.source || this.array) && (A = this.maybeUpdateSource()), A ?? BA.getEmpty();
  }
  // Create or get a THREE.DataArrayTexture from the data array.
  maybeUpdateSource() {
    if (!this.array)
      throw new Error("No array");
    if (this.needsUpdate || !this.source) {
      if (this.needsUpdate = !1, this.source) {
        const { width: A, height: e, depth: s } = this.source.image;
        this.capacity !== A * e * s && (this.source.dispose(), this.source = null);
      }
      if (this.source)
        this.array.buffer !== this.source.image.data.buffer && (this.source.image.data = new Uint8Array(this.array.buffer));
      else {
        const { width: A, height: e, depth: s } = mA(this.capacity);
        this.source = new Q.DataArrayTexture(
          this.array,
          A,
          e,
          s
        ), this.source.format = Q.RGBAFormat, this.source.type = Q.UnsignedByteType, this.source.internalFormat = "RGBA8", this.source.needsUpdate = !0;
      }
      this.source.needsUpdate = !0;
    }
    return this.source;
  }
  // Generate the RGBA8 values from a Rgba8Readback dyno program.
  render({
    reader: A,
    count: e,
    renderer: s
  }) {
    this.readback || (this.readback = new Xt({ renderer: s })), this.readback.render({ reader: A, count: e, renderer: s }), this.capacity = this.readback.capacity, this.count = this.readback.count;
  }
  // Extract the RGBA8 values from a PackedSplats collection.
  fromPackedSplats({
    packedSplats: A,
    base: e,
    count: s,
    renderer: i
  }) {
    const { dynoSplats: n, dynoBase: a, dynoCount: r, reader: g } = BA.makeDynos();
    return n.packedSplats = A, a.value = e, r.value = s, this.render({ reader: g, count: s, renderer: i }), this;
  }
  // Read back the RGBA8 values from the readback buffer.
  async read() {
    if (!this.readback)
      throw new Error("No readback");
    return (!this.array || this.array.length < this.count * 4) && (this.array = new Uint8Array(this.capacity * 4)), (await this.readback.readback({ readback: this.array })).subarray(0, this.count * 4);
  }
  // Can be used where you need an uninitialized THREE.DataArrayTexture like
  // a uniform you will update with the result of this.getTexture() later.
  static getEmpty() {
    if (!BA.emptySource) {
      const A = new Uint8Array(4);
      BA.emptySource = new Q.DataArrayTexture(A, 1, 1, 1), BA.emptySource.format = Q.RGBAFormat, BA.emptySource.type = Q.UnsignedByteType, BA.emptySource.internalFormat = "RGBA8", BA.emptySource.needsUpdate = !0;
    }
    return BA.emptySource;
  }
  // Create a dyno program that can extract RGBA8 values from a PackedSplats
  static makeDynos() {
    if (!BA.dynos) {
      const A = new Ze(), e = new Gt({ value: 0 }), s = new Gt({ value: 0 }), i = SA(
        { index: "int" },
        { rgba8: "vec4" },
        ({ index: n }) => {
          if (!n)
            throw new Error("index is undefined");
          n = fA(n, e);
          const a = ls(
            A,
            n,
            e,
            s
          );
          return { rgba8: nt(a).outputs.rgba };
        }
      );
      BA.dynos = { dynoSplats: A, dynoBase: e, dynoCount: s, reader: i };
    }
    return BA.dynos;
  }
};
BA.emptySource = null, BA.dynos = null;
let Ge = BA;
const wr = { type: "RgbaArray" }, pr = CA(`
  struct RgbaArray {
    sampler2DArray texture;
    int count;
  };
`);
function pQ(t, A) {
  return new V({
    inTypes: { rgba: wr, index: "int" },
    outTypes: { rgba: "vec4" },
    inputs: { rgba: t, index: A },
    globals: () => [pr],
    statements: ({ inputs: s, outputs: i }) => GA(`
        if ((index >= 0) && (index < ${s.rgba}.count)) {
          ${i.rgba} = texelFetch(${s.rgba}.texture, splatTexCoord(index), 0);
        } else {
          ${i.rgba} = vec4(0.0, 0.0, 0.0, 0.0);
        }
      `)
  }).outputs.rgba;
}
var yQ = /* @__PURE__ */ ((t) => (t.ALL = "all", t.PLANE = "plane", t.SPHERE = "sphere", t.BOX = "box", t.ELLIPSOID = "ellipsoid", t.CYLINDER = "cylinder", t.CAPSULE = "capsule", t.INFINITE_CONE = "infinite_cone", t))(yQ || {});
function DQ(t) {
  switch (t) {
    case "all":
      return 0;
    case "plane":
      return 1;
    case "sphere":
      return 2;
    case "box":
      return 3;
    case "ellipsoid":
      return 4;
    case "cylinder":
      return 5;
    case "capsule":
      return 6;
    case "infinite_cone":
      return 7;
    default:
      throw new Error(`Unknown SDF type: ${t}`);
  }
}
var fQ = /* @__PURE__ */ ((t) => (t.MULTIPLY = "multiply", t.SET_RGB = "set_rgb", t.ADD_RGBA = "add_rgba", t))(fQ || {});
function mQ(t) {
  switch (t) {
    case "multiply":
      return 0;
    case "set_rgb":
      return 1;
    case "add_rgba":
      return 2;
    default:
      throw new Error(`Unknown blend mode: ${t}`);
  }
}
class MQ extends Q.Object3D {
  constructor(A = {}) {
    super();
    const { type: e, invert: s, opacity: i, color: n, displace: a, radius: r } = A;
    this.type = e ?? "sphere", this.invert = s ?? !1, this.opacity = i ?? 1, this.color = n ?? new Q.Color(1, 1, 1), this.displace = a ?? new Q.Vector3(0, 0, 0), this.radius = r ?? 0;
  }
}
const ie = class ie extends Q.Object3D {
  constructor(A = {}) {
    const {
      name: e,
      rgbaBlendMode: s = "multiply",
      sdfSmooth: i = 0,
      softEdge: n = 0,
      invert: a = !1,
      sdfs: r = null
    } = A;
    super(), this.rgbaBlendMode = s, this.sdfSmooth = i, this.softEdge = n, this.invert = a, this.sdfs = r, this.ordering = ie.nextOrdering++, this.name = e ?? `Edit ${this.ordering}`;
  }
  addSdf(A) {
    this.sdfs == null && (this.sdfs = []), this.sdfs.includes(A) || this.sdfs.push(A);
  }
  removeSdf(A) {
    this.sdfs != null && (this.sdfs = this.sdfs.filter((e) => e !== A));
  }
};
ie.nextOrdering = 1;
let $t = ie;
class xQ {
  constructor({ maxSdfs: A, maxEdits: e }) {
    this.maxSdfs = Math.max(16, A ?? 0), this.numSdfs = 0, this.sdfData = new Uint32Array(this.maxSdfs * 8 * 4), this.sdfFloatData = new Float32Array(this.sdfData.buffer), this.sdfTexture = this.newSdfTexture(this.sdfData, this.maxSdfs), this.dynoSdfArray = new k({
      key: "sdfArray",
      type: yr,
      globals: () => [Dr],
      value: {
        numSdfs: 0,
        sdfTexture: this.sdfTexture
      },
      update: (s) => (s.numSdfs = this.numSdfs, s.sdfTexture = this.sdfTexture, s)
    }), this.maxEdits = Math.max(16, e ?? 0), this.numEdits = 0, this.editData = new Uint32Array(this.maxEdits * 4), this.editFloatData = new Float32Array(this.editData.buffer), this.dynoNumEdits = new Gt({ value: 0 }), this.dynoEdits = this.newEdits(this.editData, this.maxEdits);
  }
  newSdfTexture(A, e) {
    const s = new Q.DataTexture(
      A,
      8,
      e,
      Q.RGBAIntegerFormat,
      Q.UnsignedIntType
    );
    return s.internalFormat = "RGBA32UI", s.needsUpdate = !0, s;
  }
  newEdits(A, e) {
    return new k({
      key: "edits",
      type: "uvec4",
      count: e,
      globals: () => [fr],
      value: A
    });
  }
  // Ensure our SDF texture and edits uniform array have enough capacity.
  // Reallocate if not.
  ensureCapacity({
    maxSdfs: A,
    maxEdits: e
  }) {
    let s = !1;
    return A > this.sdfTexture.image.height && (this.sdfTexture.dispose(), this.maxSdfs = Math.max(this.maxSdfs * 2, A), this.sdfData = new Uint32Array(this.maxSdfs * 8 * 4), this.sdfFloatData = new Float32Array(this.sdfData.buffer), this.sdfTexture = this.newSdfTexture(this.sdfData, this.maxSdfs)), e > (this.dynoEdits.count ?? 0) && (this.maxEdits = Math.max(this.maxEdits * 2, e), this.editData = new Uint32Array(this.maxEdits * 4), this.editFloatData = new Float32Array(this.editData.buffer), this.dynoEdits = this.newEdits(this.editData, this.maxEdits), s = !0), s;
  }
  updateEditData(A, e) {
    const s = this.editData[A] !== e;
    return this.editData[A] = e, s;
  }
  updateEditFloatData(A, e) {
    Qt[0] = e;
    const s = this.editFloatData[A] !== Qt[0];
    return s && (this.editFloatData[A] = Qt[0]), s;
  }
  encodeEdit(A, {
    sdfFirst: e,
    sdfCount: s,
    invert: i,
    rgbaBlendMode: n,
    softEdge: a,
    sdfSmooth: r
  }) {
    const g = A * 4;
    let I = !1;
    return I = this.updateEditData(g + 0, n | (i ? 256 : 0)) || I, I = this.updateEditData(g + 1, e | s << 16) || I, I = this.updateEditFloatData(g + 2, a) || I, I = this.updateEditFloatData(g + 3, r) || I, I;
  }
  updateSdfData(A, e) {
    const s = this.sdfData[A] !== e;
    return this.sdfData[A] = e, s;
  }
  updateSdfFloatData(A, e) {
    Qt[0] = e;
    const s = this.sdfFloatData[A] !== Qt[0];
    return s && (this.sdfFloatData[A] = Qt[0]), s;
  }
  encodeSdf(A, {
    sdfType: e,
    invert: s,
    center: i,
    quaternion: n,
    scale: a,
    sizes: r
  }, g) {
    const I = A * 32, B = e | (s ? 256 : 0);
    let o = !1;
    o = this.updateSdfFloatData(I + 0, (i == null ? void 0 : i.x) ?? 0) || o, o = this.updateSdfFloatData(I + 1, (i == null ? void 0 : i.y) ?? 0) || o, o = this.updateSdfFloatData(I + 2, (i == null ? void 0 : i.z) ?? 0) || o, o = this.updateSdfData(I + 3, B) || o, o = this.updateSdfFloatData(I + 4, (n == null ? void 0 : n.x) ?? 0) || o, o = this.updateSdfFloatData(I + 5, (n == null ? void 0 : n.y) ?? 0) || o, o = this.updateSdfFloatData(I + 6, (n == null ? void 0 : n.z) ?? 0) || o, o = this.updateSdfFloatData(I + 7, (n == null ? void 0 : n.w) ?? 0) || o, o = this.updateSdfFloatData(I + 8, (a == null ? void 0 : a.x) ?? 0) || o, o = this.updateSdfFloatData(I + 9, (a == null ? void 0 : a.y) ?? 0) || o, o = this.updateSdfFloatData(I + 10, (a == null ? void 0 : a.z) ?? 0) || o, o = this.updateSdfData(I + 11, 0) || o, o = this.updateSdfFloatData(I + 12, (r == null ? void 0 : r.x) ?? 0) || o, o = this.updateSdfFloatData(I + 13, (r == null ? void 0 : r.y) ?? 0) || o, o = this.updateSdfFloatData(I + 14, (r == null ? void 0 : r.z) ?? 0) || o, o = this.updateSdfFloatData(I + 15, (r == null ? void 0 : r.w) ?? 0) || o;
    const C = Math.min(4, g.length);
    for (let E = 0; E < C; ++E) {
      const h = I + 16 + E * 4;
      o = this.updateSdfFloatData(h + 0, g[E].x) || o, o = this.updateSdfFloatData(h + 1, g[E].y) || o, o = this.updateSdfFloatData(h + 2, g[E].z) || o, o = this.updateSdfFloatData(h + 3, g[E].w) || o;
    }
    return o;
  }
  // Update the SDFs and edits from an array of SplatEdits and their
  // associated SplatEditSdfs, updating it for the dyno shader program.
  update(A) {
    const e = A.reduce((o, { sdfs: C }) => o + C.length, 0), s = this.ensureCapacity({
      maxEdits: A.length,
      maxSdfs: e
    }), i = [new Q.Vector4(), new Q.Vector4()], n = new Q.Vector3(), a = new Q.Quaternion(), r = new Q.Vector3(), g = new Q.Vector4();
    let I = 0, B = s;
    A.length !== this.dynoNumEdits.value && (this.dynoNumEdits.value = A.length, this.numEdits = A.length, B = !0);
    for (const [o, { edit: C, sdfs: E }] of A.entries()) {
      B = this.encodeEdit(o, {
        sdfFirst: I,
        sdfCount: E.length,
        invert: C.invert,
        rgbaBlendMode: mQ(C.rgbaBlendMode),
        softEdge: C.softEdge,
        sdfSmooth: C.sdfSmooth
      }) || B;
      let h = !1;
      for (const c of E)
        g.set(c.scale.x, c.scale.y, c.scale.z, c.radius), c.scale.setScalar(1), c.updateMatrixWorld(), c.matrixWorld.clone().invert().decompose(n, a, r), c.scale.set(g.x, g.y, g.z), c.updateMatrixWorld(), i[0].set(c.color.r, c.color.g, c.color.b, c.opacity), i[1].set(c.displace.x, c.displace.y, c.displace.z, 1), h = this.encodeSdf(
          I,
          {
            sdfType: DQ(c.type),
            invert: c.invert,
            center: n,
            quaternion: a,
            scale: r,
            sizes: g
          },
          i
        ) || h, I += 1;
      this.numSdfs = I, h && (this.sdfTexture.needsUpdate = !0), B || (B = h);
    }
    return { updated: B, dynoUpdated: s };
  }
  // Modify a Gsplat in a dyno shader program using the current edits and SDFs.
  modify(A) {
    return SQ(
      A,
      this.dynoSdfArray,
      this.dynoNumEdits,
      this.dynoEdits
    );
  }
}
const yr = { type: "SdfArray" }, Dr = CA(`
  struct SdfArray {
    int numSdfs;
    usampler2D sdfTexture;
  };

  void unpackSdfArray(
    usampler2D sdfTexture, int sdfIndex, out uint flags,
    out vec3 center, out vec4 quaternion, out vec3 scale, out vec4 sizes,
    int numValues, out vec4 values[4]
  ) {
    uvec4 temp = texelFetch(sdfTexture, ivec2(0, sdfIndex), 0);
    flags = temp.w;
    center = vec3(uintBitsToFloat(temp.x), uintBitsToFloat(temp.y), uintBitsToFloat(temp.z));

    temp = texelFetch(sdfTexture, ivec2(1, sdfIndex), 0);
    quaternion = vec4(uintBitsToFloat(temp.x), uintBitsToFloat(temp.y), uintBitsToFloat(temp.z), uintBitsToFloat(temp.w));

    temp = texelFetch(sdfTexture, ivec2(2, sdfIndex), 0);
    scale = vec3(uintBitsToFloat(temp.x), uintBitsToFloat(temp.y), uintBitsToFloat(temp.z));

    temp = texelFetch(sdfTexture, ivec2(3, sdfIndex), 0);
    sizes = vec4(uintBitsToFloat(temp.x), uintBitsToFloat(temp.y), uintBitsToFloat(temp.z), uintBitsToFloat(temp.w));

    for (int i = 0; i < numValues; ++i) {
      temp = texelFetch(sdfTexture, ivec2(4 + i, sdfIndex), 0);
      values[i] = vec4(uintBitsToFloat(temp.x), uintBitsToFloat(temp.y), uintBitsToFloat(temp.z), uintBitsToFloat(temp.w));
    }
  }

  const uint SDF_FLAG_TYPE = 0xFFu;
  const uint SDF_FLAG_INVERT = 1u << 8u;

  const uint SDF_TYPE_ALL = 0u;
  const uint SDF_TYPE_PLANE = 1u;
  const uint SDF_TYPE_SPHERE = 2u;
  const uint SDF_TYPE_BOX = 3u;
  const uint SDF_TYPE_ELLIPSOID = 4u;
  const uint SDF_TYPE_CYLINDER = 5u;
  const uint SDF_TYPE_CAPSULE = 6u;
  const uint SDF_TYPE_INFINITE_CONE = 7u;

  float evaluateSdfArray(
    usampler2D sdfTexture, int numSdfs, int sdfFirst, int sdfCount, vec3 pos,
    float smoothK, int numValues, out vec4 outValues[4]
  ) {
    float distanceAccum = (smoothK == 0.0) ? 1.0 / 0.0 : 0.0;
    float maxExp = -1.0 / 0.0;
    for (int i = 0; i < numValues; ++i) {
        outValues[i] = vec4(0.0);
    }

    uint flags;
    vec3 center, scale;
    vec4 quaternion, sizes;
    vec4 values[4];

    int sdfLast = min(sdfFirst + sdfCount, numSdfs);
    for (int index = sdfFirst; index < sdfLast; ++index) {
      unpackSdfArray(sdfTexture, index, flags, center, quaternion, scale, sizes, numValues, values);
      uint sdfType = flags & SDF_FLAG_TYPE;
      vec3 sdfPos = quatVec(quaternion, pos * scale) + center;

      float distance;
      switch (sdfType) {
        case SDF_TYPE_ALL:
          distance = -1.0 / 0.0;
          break;
        case SDF_TYPE_PLANE: {
          distance = sdfPos.z;
          break;
        }
        case SDF_TYPE_SPHERE: {
          distance = length(sdfPos) - sizes.w;
          break;
        }
        case SDF_TYPE_BOX: {
          vec3 q = abs(sdfPos) - sizes.xyz + sizes.w;
          distance = length(max(q, 0.0)) + min(max(q.x, max(q.y, q.z)), 0.0) - sizes.w;
          break;
        }
        case SDF_TYPE_ELLIPSOID: {
          vec3 sizes = sizes.xyz;
          float k0 = length(sdfPos / sizes);
          float k1 = length(sdfPos / dot(sizes, sizes));
          distance = k0 * (k0 - 1.0) / k1;
          break;
        }
        case SDF_TYPE_CYLINDER: {
          vec2 d = abs(vec2(length(sdfPos.xz), sdfPos.y)) - sizes.wy;
          distance = min(max(d.x, d.y), 0.0) + length(max(d, 0.0));
          break;
        }
        case SDF_TYPE_CAPSULE: {
          sdfPos.y -= clamp(sdfPos.y, -0.5 * sizes.y, 0.5 * sizes.y);
          distance = length(sdfPos) - sizes.w;
          break;
        }
        case SDF_TYPE_INFINITE_CONE: {
          float angle = 0.25 * PI * sizes.w;
          vec2 c = vec2(sin(angle), cos(angle));
          vec2 q = vec2(length(sdfPos.xy), -sdfPos.z);
          float d = length(q - c * max(dot(q, c), 0.0));
          distance = d * (((q.x * c.y - q.y * c.x) < 0.0) ? -1.0 : 1.0);
          break;
        }
      }

      if ((flags & SDF_FLAG_INVERT) != 0u) {
        distance = -distance;
      }

      if (smoothK == 0.0) {
        if (distance < distanceAccum) {
          distanceAccum = distance;
          for (int i = 0; i < numValues; ++i) {
            outValues[i] = values[i];
          }
        }
      } else {
        float scaledDistance = -distance / smoothK;
        if (scaledDistance > maxExp) {
          float scale = exp(maxExp - scaledDistance);
          distanceAccum *= scale;
          for (int i = 0; i < numValues; ++i) {
            outValues[i] *= scale;
          }
          maxExp = scaledDistance;
        }

        float weight = exp(scaledDistance - maxExp);
        distanceAccum += weight;
        for (int i = 0; i < numValues; ++i) {
          outValues[i] += weight * values[i];
        }
      }
    }

    if (smoothK == 0.0) {
      return distanceAccum;
    } else {
      // Very distant SDFs may result in 0 accumulation
      if (distanceAccum == 0.0) {
        return 1.0 / 0.0;
      }
      for (int i = 0; i < numValues; ++i) {
        outValues[i] /= distanceAccum;
      }
      return (-log(distanceAccum) - maxExp) * smoothK;
    }
  }

  float modulateSdfArray(
    usampler2D sdfTexture, int numSdfs, int sdfFirst, int sdfCount, vec3 pos,
    float smoothK, int numValues, out vec4 values[4],
    float softEdge, bool invert
  ) {
    float distance = evaluateSdfArray(sdfTexture, numSdfs, sdfFirst, sdfCount, pos, smoothK, numValues, values);
    if (invert) {
      distance = -distance;
    }

    return (softEdge == 0.0) ? ((distance < 0.0) ? 1.0 : 0.0)
      : clamp(-distance / softEdge + 0.5, 0.0, 1.0);
  }
`), fr = CA(`
  const uint EDIT_FLAG_BLEND = 0xFFu;
  const uint EDIT_BLEND_MULTIPLY = 0u;
  const uint EDIT_BLEND_SET_RGB = 1u;
  const uint EDIT_BLEND_ADD_RGBA = 2u;
  const uint EDIT_FLAG_INVERT = 0x100u;

  void decodeEdit(
    uvec4 packedEdit, out int sdfFirst, out int sdfCount,
    out bool invert, out uint rgbaBlendMode, out float softEdge, out float sdfSmooth
  ) {
    rgbaBlendMode = packedEdit.x & EDIT_FLAG_BLEND;
    invert = (packedEdit.x & EDIT_FLAG_INVERT) != 0u;

    sdfFirst = int(packedEdit.y & 0xFFFFu);
    sdfCount = int(packedEdit.y >> 16u);

    softEdge = uintBitsToFloat(packedEdit.z);
    sdfSmooth = uintBitsToFloat(packedEdit.w);
  }

  void applyRgbaDisplaceEdit(
    usampler2D sdfTexture, int numSdfs, int sdfFirst, int sdfCount, inout vec3 pos,
    float smoothK, float softEdge, bool invert, uint rgbaBlendMode, inout vec4 rgba
  ) {
    vec4 values[4];
    float modulate = modulateSdfArray(sdfTexture, numSdfs, sdfFirst, sdfCount, pos, smoothK, 2, values, softEdge, invert);
    // On Android, moving values[0] is necessary to work around a compiler bug.
    vec4 sdfRgba = values[0];
    vec4 sdfDisplaceScale = values[1];

    vec4 target;
    switch (rgbaBlendMode) {
      case EDIT_BLEND_MULTIPLY:
        target = rgba * sdfRgba;
        break;
      case EDIT_BLEND_SET_RGB:
        target = vec4(sdfRgba.rgb, rgba.a * sdfRgba.a);
        break;
      case EDIT_BLEND_ADD_RGBA:
        target = rgba + sdfRgba;
        break;
      default:
        // Debug output if blend mode not set
        target = vec4(fract(pos), 1.0);
    }
    rgba = mix(rgba, target, modulate);
    pos += sdfDisplaceScale.xyz * modulate;
  }

  void applyPackedRgbaDisplaceEdit(uvec4 packedEdit, usampler2D sdfTexture, int numSdfs, inout vec3 pos, inout vec4 rgba) {
    int sdfFirst, sdfCount;
    bool invert;
    uint rgbaBlendMode;
    float softEdge, sdfSmooth;
    decodeEdit(packedEdit, sdfFirst, sdfCount, invert, rgbaBlendMode, softEdge, sdfSmooth);
    applyRgbaDisplaceEdit(sdfTexture, numSdfs, sdfFirst, sdfCount, pos, sdfSmooth, softEdge, invert, rgbaBlendMode, rgba);
  }
`);
function SQ(t, A, e, s) {
  return new V({
    inTypes: {
      gsplat: P,
      sdfArray: yr,
      numEdits: "int",
      rgbaDisplaceEdits: "uvec4"
    },
    outTypes: { gsplat: P },
    globals: () => [Dr, fr],
    inputs: { gsplat: t, sdfArray: A, numEdits: e, rgbaDisplaceEdits: s },
    statements: ({ inputs: n, outputs: a }) => {
      const { sdfArray: r, numEdits: g, rgbaDisplaceEdits: I } = n, { gsplat: B } = a;
      return GA(`
        ${B} = ${n.gsplat};
        if (isGsplatActive(${B}.flags)) {
          for (int editIndex = 0; editIndex < ${g}; ++editIndex) {
            applyPackedRgbaDisplaceEdit(
              ${I}[editIndex], ${r}.sdfTexture, ${r}.numSdfs,
              ${B}.center, ${B}.rgba
            );
          }
        }
      `);
    }
  }).outputs.gsplat;
}
const Qt = new Float32Array(1);
class NQ {
  constructor(A) {
    this.modifier = A, this.cache = /* @__PURE__ */ new Map();
  }
  apply(A) {
    let e = this.cache.get(A);
    return e || (e = SA(
      { index: "int" },
      { gsplat: P },
      ({ index: s }) => {
        const { gsplat: i } = A.apply({ index: s });
        return this.modifier.apply({ gsplat: i });
      }
    ), this.cache.set(A, e)), e;
  }
}
class ct {
  // Create the dyno uniforms that parameterize the transform, setting them
  // to initial values that are different from any valid transform.
  constructor() {
    this.scale = new at({ value: Number.NEGATIVE_INFINITY }), this.rotate = new Lt({
      value: new Q.Quaternion(
        Number.POSITIVE_INFINITY,
        Number.POSITIVE_INFINITY,
        Number.POSITIVE_INFINITY,
        Number.POSITIVE_INFINITY
      )
    }), this.translate = new dt({
      value: new Q.Vector3(
        Number.POSITIVE_INFINITY,
        Number.POSITIVE_INFINITY,
        Number.POSITIVE_INFINITY
      )
    });
  }
  // Apply the transform to a Vec3 position in a dyno program.
  apply(A) {
    return Wa(A, {
      scale: this.scale,
      rotate: this.rotate,
      translate: this.translate
    });
  }
  applyDir(A) {
    return ja(A, {
      rotate: this.rotate
    });
  }
  // Apply the transform to a Gsplat in a dyno program.
  applyGsplat(A) {
    return Je(A, {
      scale: this.scale,
      rotate: this.rotate,
      translate: this.translate
    });
  }
  // Update the uniforms to match the given transform matrix.
  updateFromMatrix(A) {
    const e = new Q.Vector3(), s = new Q.Quaternion(), i = new Q.Vector3();
    A.decompose(i, s, e);
    const n = (e.x + e.y + e.z) / 3;
    let a = !1;
    return n !== this.scale.value && (this.scale.value = n, a = !0), i.equals(this.translate.value) || (this.translate.value.copy(i), a = !0), s.equals(this.rotate.value) || (this.rotate.value.copy(s), a = !0), a;
  }
  // Update this transform to match the object's to-world transform.
  update(A) {
    return A.updateMatrixWorld(), this.updateFromMatrix(A.matrixWorld);
  }
}
class ge extends Q.Object3D {
  constructor({
    numSplats: A,
    generator: e,
    construct: s,
    update: i
  }) {
    if (super(), this.numSplats = A ?? 0, this.generator = e, this.frameUpdate = i, this.version = 0, s) {
      const n = s(this);
      Object.assign(this, n);
    }
  }
  updateVersion() {
    this.version += 1;
  }
  set needsUpdate(A) {
    A && this.updateVersion();
  }
}
const jA = class jA extends ge {
  constructor(A = {}) {
    const e = new ct(), s = new ct(), i = new ct(), n = new ct(), a = new Lt({
      value: new Q.Vector4(
        Number.NEGATIVE_INFINITY,
        Number.NEGATIVE_INFINITY,
        Number.NEGATIVE_INFINITY,
        Number.NEGATIVE_INFINITY
      )
    }), r = new at({ value: 0 }), g = new at({ value: 0 }), I = {
      transform: e,
      viewToWorld: s,
      worldToView: i,
      viewToObject: n,
      recolor: a,
      time: r,
      deltaTime: g
    };
    if (super({
      update: ({ time: B, deltaTime: o, viewToWorld: C, globalEdits: E }) => this.update({ time: B, deltaTime: o, viewToWorld: C, globalEdits: E })
    }), this.isInitialized = !1, this.recolor = new Q.Color(1, 1, 1), this.opacity = 1, this.enableViewToObject = !1, this.enableViewToWorld = !1, this.enableWorldToView = !1, this.skinning = null, this.edits = null, this.rgbaDisplaceEdits = null, this.splatRgba = null, this.maxSh = 3, this.packedSplats = A.packedSplats ?? new TA(), this.numSplats = this.packedSplats.numSplats, this.editable = A.editable ?? !0, this.onFrame = A.onFrame, this.context = I, this.objectModifier = A.objectModifier, this.worldModifier = A.worldModifier, this.updateGenerator(), A.url || A.fileBytes || A.constructSplats || A.packedSplats && !A.packedSplats.isInitialized)
      this.initialized = this.asyncInitialize(A).then(async () => {
        if (this.updateGenerator(), this.isInitialized = !0, A.onLoad) {
          const B = A.onLoad(this);
          B instanceof Promise && await B;
        }
        return this;
      });
    else if (this.isInitialized = !0, this.initialized = Promise.resolve(this), A.onLoad) {
      const B = A.onLoad(this);
      B instanceof Promise && (this.initialized = B.then(() => this));
    }
  }
  async asyncInitialize(A) {
    const { url: e, fileBytes: s, fileType: i, fileName: n, maxSplats: a, constructSplats: r } = A;
    if (e || s || r) {
      const g = {
        url: e,
        fileBytes: s,
        fileType: i,
        fileName: n,
        maxSplats: a,
        construct: r
      };
      this.packedSplats.reinitialize(g);
    }
    this.packedSplats && (await this.packedSplats.initialized, this.numSplats = this.packedSplats.numSplats, this.updateGenerator());
  }
  static async staticInitialize() {
    await gs(), jA.isStaticInitialized = !0;
  }
  // Creates a new Gsplat with the provided parameters (all values in "float" space,
  // i.e. 0-1 for opacity and color) and adds it to the end of the packedSplats,
  // increasing numSplats by 1. If necessary, reallocates the buffer with an exponential
  // doubling strategy to fit the new data, so it's fairly efficient to just
  // pushSplat(...) each Gsplat you want to create in a loop.
  pushSplat(A, e, s, i, n) {
    this.packedSplats.pushSplat(A, e, s, i, n);
  }
  // This method iterates over all Gsplats in this instance's packedSplats,
  // invoking the provided callback with index: number in 0..=(this.numSplats-1) and
  // center: THREE.Vector3, scales: THREE.Vector3, quaternion: THREE.Quaternion,
  // opacity: number (0..1), and color: THREE.Color (rgb values in 0..1).
  // Note that the objects passed in as center etc. are the same for every callback
  // invocation: these objects are reused for efficiency. Changing these values has
  // no effect as they are decoded/unpacked copies of the underlying data. To update
  // the packedSplats, call .packedSplats.setSplat(index, center, scales,
  // quaternion, opacity, color).
  forEachSplat(A) {
    this.packedSplats.forEachSplat(A);
  }
  // Call this when you are finished with the SplatMesh and want to free
  // any buffers it holds (via packedSplats).
  dispose() {
    this.packedSplats.dispose();
  }
  constructGenerator(A) {
    const { transform: e, viewToObject: s, recolor: i } = A, n = SA(
      { index: "int" },
      { gsplat: P },
      ({ index: a }) => {
        if (!a)
          throw new Error("index is undefined");
        let r = kt(this.packedSplats.dyno, a);
        if (this.maxSh >= 1) {
          const { sh1Texture: I, sh2Texture: B, sh3Texture: o } = this.ensureShTextures();
          if (I) {
            const C = s.translate, { center: E } = nt(r).outputs, h = Ca(wt(E, C));
            let c = RQ(r, I, h);
            this.maxSh >= 2 && B && (c = fA(c, UQ(r, B, h))), this.maxSh >= 3 && o && (c = fA(c, bQ(r, o, h)));
            let { rgba: l } = nt(r).outputs;
            l = fA(l, Ea(c, K("float", 0))), r = At({ gsplat: r, rgba: l });
          }
        }
        if (this.splatRgba) {
          const I = pQ(this.splatRgba.dyno, a);
          r = At({ gsplat: r, rgba: I });
        }
        this.skinning && (r = this.skinning.modify(r)), this.objectModifier && (r = this.objectModifier.apply({ gsplat: r }).gsplat), r = e.applyGsplat(r);
        const g = QA(i, nt(r).outputs.rgba);
        return r = At({ gsplat: r, rgba: g }), this.rgbaDisplaceEdits && (r = this.rgbaDisplaceEdits.modify(r)), this.worldModifier && (r = this.worldModifier.apply({ gsplat: r }).gsplat), { gsplat: r };
      }
    );
    this.generator = n;
  }
  // Call this whenever something changes in the Gsplat processing pipeline,
  // for example changing maxSh or updating objectModifier or worldModifier.
  // Compiled generators are cached for efficiency and re-use when the same
  // pipeline structure emerges after successive changes.
  updateGenerator() {
    this.constructGenerator(this.context);
  }
  // This is called automatically by SparkRenderer and you should not have to
  // call it. It updates parameters for the generated pipeline and calls
  // updateGenerator() if the pipeline needs to change.
  update({
    time: A,
    viewToWorld: e,
    deltaTime: s,
    globalEdits: i
  }) {
    var l;
    this.numSplats = this.packedSplats.numSplats, this.context.time.value = A, this.context.deltaTime.value = s, jA.dynoTime.value = A;
    const { transform: n, viewToObject: a, recolor: r } = this.context;
    let g = n.update(this);
    this.context.viewToWorld.updateFromMatrix(e) && this.enableViewToWorld && (g = !0);
    const I = e.clone().invert();
    this.context.worldToView.updateFromMatrix(I) && this.enableWorldToView && (g = !0);
    const C = new Q.Matrix4().compose(
      n.translate.value,
      n.rotate.value,
      new Q.Vector3().setScalar(n.scale.value)
    ).invert().multiply(e);
    a.updateFromMatrix(C) && (this.enableViewToObject || this.packedSplats.extra.sh1) && (g = !0);
    const E = new Q.Vector4(
      this.recolor.r,
      this.recolor.g,
      this.recolor.b,
      this.opacity
    );
    E.equals(r.value) || (r.value.copy(E), g = !0);
    const h = this.editable ? (this.edits ?? []).concat(i) : [];
    this.editable && !this.edits && this.traverseVisible((u) => {
      u instanceof $t && h.push(u);
    }), h.sort((u, w) => u.ordering - w.ordering);
    const c = h.map((u) => {
      if (u.sdfs != null)
        return { edit: u, sdfs: u.sdfs };
      const w = [];
      return u.traverseVisible((d) => {
        d instanceof MQ && w.push(d);
      }), { edit: u, sdfs: w };
    });
    if (c.length > 0 && !this.rgbaDisplaceEdits) {
      const u = c.length, w = c.reduce(
        (d, y) => d + y.sdfs.length,
        0
      );
      this.rgbaDisplaceEdits = new xQ({
        maxEdits: u,
        maxSdfs: w
      }), this.updateGenerator();
    }
    if (this.rgbaDisplaceEdits) {
      const u = this.rgbaDisplaceEdits.update(c);
      g || (g = u.updated), u.dynoUpdated && this.updateGenerator();
    }
    g && this.updateVersion(), (l = this.onFrame) == null || l.call(this, { mesh: this, time: A, deltaTime: s });
  }
  // This method conforms to the standard THREE.Raycaster API, performing object-ray
  // intersections using this method to populate the provided intersects[] array
  // with each intersection point.
  raycast(A, e) {
    if (!this.packedSplats.packedArray || !this.packedSplats.numSplats)
      return;
    const { near: s, far: i, ray: n } = A, a = this.matrixWorld.clone().invert(), r = new Q.Matrix3().setFromMatrix4(a), g = n.origin.clone().applyMatrix4(a), I = n.direction.clone().applyMatrix3(r), B = new Q.Vector3();
    a.decompose(new Q.Vector3(), new Q.Quaternion(), B), (B.x * B.y * B.z) ** (1 / 3);
    const C = Wr(
      g.x,
      g.y,
      g.z,
      I.x,
      I.y,
      I.z,
      s,
      i,
      this.packedSplats.numSplats,
      this.packedSplats.packedArray,
      !0
    );
    for (const E of C) {
      const h = n.direction.clone().multiplyScalar(E).add(n.origin);
      e.push({
        distance: E,
        point: h,
        object: this
      });
    }
  }
  ensureShTextures() {
    if (!this.packedSplats.extra.sh1)
      return {};
    let A = this.packedSplats.extra.sh1Texture;
    if (!A) {
      let i = this.packedSplats.extra.sh1;
      const { width: n, height: a, depth: r, maxSplats: g } = mA(
        i.length / 2
      );
      if (i.length < g * 2) {
        const B = new Uint32Array(g * 2);
        B.set(i), this.packedSplats.extra.sh1 = B, i = B;
      }
      const I = new Q.DataArrayTexture(i, n, a, r);
      I.format = Q.RGIntegerFormat, I.type = Q.UnsignedIntType, I.internalFormat = "RG32UI", I.needsUpdate = !0, A = new St({
        value: I,
        key: "sh1"
      }), this.packedSplats.extra.sh1Texture = A;
    }
    if (!this.packedSplats.extra.sh2)
      return { sh1Texture: A };
    let e = this.packedSplats.extra.sh2Texture;
    if (!e) {
      let i = this.packedSplats.extra.sh2;
      const { width: n, height: a, depth: r, maxSplats: g } = mA(
        i.length / 4
      );
      if (i.length < g * 4) {
        const B = new Uint32Array(g * 4);
        B.set(i), this.packedSplats.extra.sh2 = B, i = B;
      }
      const I = new Q.DataArrayTexture(i, n, a, r);
      I.format = Q.RGBAIntegerFormat, I.type = Q.UnsignedIntType, I.internalFormat = "RGBA32UI", I.needsUpdate = !0, e = new St({
        value: I,
        key: "sh2"
      }), this.packedSplats.extra.sh2Texture = e;
    }
    if (!this.packedSplats.extra.sh3)
      return { sh1Texture: A, sh2Texture: e };
    let s = this.packedSplats.extra.sh3Texture;
    if (!s) {
      let i = this.packedSplats.extra.sh3;
      const { width: n, height: a, depth: r, maxSplats: g } = mA(
        i.length / 4
      );
      if (i.length < g * 4) {
        const B = new Uint32Array(g * 4);
        B.set(i), this.packedSplats.extra.sh3 = B, i = B;
      }
      const I = new Q.DataArrayTexture(i, n, a, r);
      I.format = Q.RGBAIntegerFormat, I.type = Q.UnsignedIntType, I.internalFormat = "RGBA32UI", I.needsUpdate = !0, s = new St({
        value: I,
        key: "sh3"
      }), this.packedSplats.extra.sh3Texture = s;
    }
    return { sh1Texture: A, sh2Texture: e, sh3Texture: s };
  }
};
jA.staticInitialized = jA.staticInitialize(), jA.isStaticInitialized = !1, jA.dynoTime = new at({ value: 0 });
let VA = jA;
const FQ = CA(`
  vec3 evaluateSH1(Gsplat gsplat, usampler2DArray sh1, vec3 viewDir) {
    // Extract sint7 values packed into 2 x uint32
    uvec2 packed = texelFetch(sh1, splatTexCoord(gsplat.index), 0).rg;
    vec3 sh1_0 = vec3(ivec3(
      int(packed.x << 25u) >> 25,
      int(packed.x << 18u) >> 25,
      int(packed.x << 11u) >> 25
    )) / 63.0;
    vec3 sh1_1 = vec3(ivec3(
      int(packed.x << 4u) >> 25,
      int((packed.x >> 3u) | (packed.y << 29u)) >> 25,
      int(packed.y << 22u) >> 25
    )) / 63.0;
    vec3 sh1_2 = vec3(ivec3(
      int(packed.y << 15u) >> 25,
      int(packed.y << 8u) >> 25,
      int(packed.y << 1u) >> 25
    )) / 63.0;

    return sh1_0 * (-0.4886025 * viewDir.y)
      + sh1_1 * (0.4886025 * viewDir.z)
      + sh1_2 * (-0.4886025 * viewDir.x);
  }
`), kQ = CA(`
  vec3 evaluateSH2(Gsplat gsplat, usampler2DArray sh2, vec3 viewDir) {
    // Extract sint8 values packed into 4 x uint32
    uvec4 packed = texelFetch(sh2, splatTexCoord(gsplat.index), 0);
    vec3 sh2_0 = vec3(ivec3(
      int(packed.x << 24u) >> 24,
      int(packed.x << 16u) >> 24,
      int(packed.x << 8u) >> 24
    )) / 127.0;
    vec3 sh2_1 = vec3(ivec3(
      int(packed.x) >> 24,
      int(packed.y << 24u) >> 24,
      int(packed.y << 16u) >> 24
    )) / 127.0;
    vec3 sh2_2 = vec3(ivec3(
      int(packed.y << 8u) >> 24,
      int(packed.y) >> 24,
      int(packed.z << 24u) >> 24
    )) / 127.0;
    vec3 sh2_3 = vec3(ivec3(
      int(packed.z << 16u) >> 24,
      int(packed.z << 8u) >> 24,
      int(packed.z) >> 24
    )) / 127.0;
    vec3 sh2_4 = vec3(ivec3(
      int(packed.w << 24u) >> 24,
      int(packed.w << 16u) >> 24,
      int(packed.w << 8u) >> 24
    )) / 127.0;

    return sh2_0 * (1.0925484 * viewDir.x * viewDir.y)
      + sh2_1 * (-1.0925484 * viewDir.y * viewDir.z)
      + sh2_2 * (0.3153915 * (2.0 * viewDir.z * viewDir.z - viewDir.x * viewDir.x - viewDir.y * viewDir.y))
      + sh2_3 * (-1.0925484 * viewDir.x * viewDir.z)
      + sh2_4 * (0.5462742 * (viewDir.x * viewDir.x - viewDir.y * viewDir.y));
  }
`), GQ = CA(`
  vec3 evaluateSH3(Gsplat gsplat, usampler2DArray sh3, vec3 viewDir) {
    // Extract sint6 values packed into 4 x uint32
    uvec4 packed = texelFetch(sh3, splatTexCoord(gsplat.index), 0);
    vec3 sh3_0 = vec3(ivec3(
      int(packed.x << 26u) >> 26,
      int(packed.x << 20u) >> 26,
      int(packed.x << 14u) >> 26
    )) / 31.0;
    vec3 sh3_1 = vec3(ivec3(
      int(packed.x << 8u) >> 26,
      int(packed.x << 2u) >> 26,
      int((packed.x >> 4u) | (packed.y << 28u)) >> 26
    )) / 31.0;
    vec3 sh3_2 = vec3(ivec3(
      int(packed.y << 22u) >> 26,
      int(packed.y << 16u) >> 26,
      int(packed.y << 10u) >> 26
    )) / 31.0;
    vec3 sh3_3 = vec3(ivec3(
      int(packed.y << 4u) >> 26,
      int((packed.y >> 2u) | (packed.z << 30u)) >> 26,
      int(packed.z << 24u) >> 26
    )) / 31.0;
    vec3 sh3_4 = vec3(ivec3(
      int(packed.z << 18u) >> 26,
      int(packed.z << 12u) >> 26,
      int(packed.z << 6u) >> 26
    )) / 31.0;
    vec3 sh3_5 = vec3(ivec3(
      int(packed.z) >> 26,
      int(packed.w << 26u) >> 26,
      int(packed.w << 20u) >> 26
    )) / 31.0;
    vec3 sh3_6 = vec3(ivec3(
      int(packed.w << 14u) >> 26,
      int(packed.w << 8u) >> 26,
      int(packed.w << 2u) >> 26
    )) / 31.0;

    float xx = viewDir.x * viewDir.x;
    float yy = viewDir.y * viewDir.y;
    float zz = viewDir.z * viewDir.z;
    float xy = viewDir.x * viewDir.y;
    float yz = viewDir.y * viewDir.z;
    float zx = viewDir.z * viewDir.x;

    return sh3_0 * (-0.5900436 * viewDir.y * (3.0 * xx - yy))
      + sh3_1 * (2.8906114 * xy * viewDir.z) +
      + sh3_2 * (-0.4570458 * viewDir.y * (4.0 * zz - xx - yy))
      + sh3_3 * (0.3731763 * viewDir.z * (2.0 * zz - 3.0 * xx - 3.0 * yy))
      + sh3_4 * (-0.4570458 * viewDir.x * (4.0 * zz - xx - yy))
      + sh3_5 * (1.4453057 * viewDir.z * (xx - yy))
      + sh3_6 * (-0.5900436 * viewDir.x * (xx - 3.0 * yy));
  }
`);
function RQ(t, A, e) {
  return bt({
    inTypes: { gsplat: P, sh1: "usampler2DArray", viewDir: "vec3" },
    outTypes: { rgb: "vec3" },
    inputs: { gsplat: t, sh1: A, viewDir: e },
    globals: () => [xA, FQ],
    statements: ({ inputs: s, outputs: i }) => GA(`
        if (isGsplatActive(${s.gsplat}.flags)) {
          ${i.rgb} = evaluateSH1(${s.gsplat}, ${s.sh1}, ${s.viewDir});
        } else {
          ${i.rgb} = vec3(0.0);
        }
      `)
  }).outputs.rgb;
}
function UQ(t, A, e) {
  return bt({
    inTypes: { gsplat: P, sh2: "usampler2DArray", viewDir: "vec3" },
    outTypes: { rgb: "vec3" },
    inputs: { gsplat: t, sh2: A, viewDir: e },
    globals: () => [xA, kQ],
    statements: ({ inputs: s, outputs: i }) => GA(`
        if (isGsplatActive(${s.gsplat}.flags)) {
          ${i.rgb} = evaluateSH2(${s.gsplat}, ${s.sh2}, ${s.viewDir});
        } else {
          ${i.rgb} = vec3(0.0);
        }
      `)
  }).outputs.rgb;
}
function bQ(t, A, e) {
  return bt({
    inTypes: { gsplat: P, sh3: "usampler2DArray", viewDir: "vec3" },
    outTypes: { rgb: "vec3" },
    inputs: { gsplat: t, sh3: A, viewDir: e },
    globals: () => [xA, GQ],
    statements: ({ inputs: s, outputs: i }) => GA(`
        if (isGsplatActive(${s.gsplat}.flags)) {
          ${i.rgb} = evaluateSH3(${s.gsplat}, ${s.sh3}, ${s.viewDir});
        } else {
          ${i.rgb} = vec3(0.0);
        }
      `)
  }).outputs.rgb;
}
const ht = class ht {
  // Create a PlyReader from a Uint8Array/ArrayBuffer, no parsing done yet
  constructor({ fileBytes: A }) {
    this.header = "", this.littleEndian = !0, this.elements = {}, this.comments = [], this.data = null, this.numSplats = 0, this.fileBytes = A instanceof ArrayBuffer ? new Uint8Array(A) : A;
  }
  // Identify and parse the PLY text header (assumed to be <64KB in size).
  // this.elements will contain all the elements in the file, typically
  // "vertex" contains the Gsplat data.
  async parseHeader() {
    const e = new ReadableStream({
      start: (a) => {
        a.enqueue(this.fileBytes.slice(0, 65536)), a.close();
      }
    }).pipeThrough(new TextDecoderStream()).getReader();
    this.header = "";
    const s = `end_header
`;
    for (; ; ) {
      const { value: a, done: r } = await e.read();
      if (r)
        throw new Error("Failed to read header");
      this.header += a;
      const g = this.header.indexOf(s);
      if (g >= 0) {
        this.header = this.header.slice(0, g + s.length);
        break;
      }
    }
    const i = new TextEncoder().encode(this.header).length;
    this.data = new DataView(this.fileBytes.buffer, i), this.elements = {};
    let n = null;
    this.comments = [], this.header.trim().split(`
`).forEach((a, r) => {
      const g = a.trim();
      if (r === 0) {
        if (g !== "ply")
          throw new Error("Invalid PLY header");
        return;
      }
      if (g.length === 0)
        return;
      const I = g.split(" ");
      switch (I[0]) {
        case "format":
          if (I[1] === "binary_little_endian")
            this.littleEndian = !0;
          else if (I[1] === "binary_big_endian")
            this.littleEndian = !1;
          else
            throw new Error(`Unsupported PLY format: ${I[1]}`);
          if (I[2] !== "1.0")
            throw new Error(`Unsupported PLY version: ${I[2]}`);
          break;
        case "end_header":
          break;
        case "comment":
          this.comments.push(g.slice(8));
          break;
        case "element": {
          const B = I[1];
          n = {
            name: B,
            count: Number.parseInt(I[2]),
            properties: {}
          }, this.elements[B] = n;
          break;
        }
        case "property":
          if (n == null)
            throw new Error("Property must be inside an element");
          I[1] === "list" ? n.properties[I[4]] = {
            isList: !0,
            type: I[3],
            countType: I[2]
          } : n.properties[I[2]] = {
            isList: !1,
            type: I[1]
          };
          break;
      }
    }), this.elements.vertex && (this.numSplats = this.elements.vertex.count);
  }
  parseData(A) {
    let e = 0;
    const s = this.data;
    if (s == null)
      throw new Error("No data to parse");
    for (const i in this.elements) {
      const n = this.elements[i], { count: a, properties: r } = n, g = {}, I = [];
      for (const [o, C] of Object.entries(r))
        C.isList ? (g[o] = [], I.push(() => {
          const E = g[o];
          E.length = Kt[C.countType](
            s,
            e,
            this.littleEndian
          ), e += Ct[C.countType];
          for (let h = 0; h < E.length; h++)
            E[h] = Kt[C.type](
              s,
              e,
              this.littleEndian
            ), e += Ct[C.type];
        })) : (g[o] = 0, I.push(() => {
          g[o] = Kt[C.type](
            s,
            e,
            this.littleEndian
          ), e += Ct[C.type];
        }));
      const B = A(n) ?? (() => {
      });
      for (let o = 0; o < a; o++) {
        for (const C of I)
          C();
        B(o, g);
      }
    }
  }
  // Parse all the Gsplat data in the PLY file in go, invoking the given
  // callbacks for each Gsplat.
  parseSplats(A, e) {
    if (this.elements.vertex == null)
      throw new Error("No vertex element found");
    let s = !1;
    const i = [];
    let n = 0, a = [], r = [], g = [], I, B, o;
    function C() {
      const u = LQ[n];
      a = new Array(3).fill(null).flatMap(
        (w, d) => [0, 1, 2].map((y, p) => `f_rest_${d + p * u / 3}`)
      ), r = new Array(5).fill(null).flatMap(
        (w, d) => [0, 1, 2].map((y, p) => `f_rest_${3 + d + p * u / 3}`)
      ), g = new Array(7).fill(null).flatMap(
        (w, d) => [0, 1, 2].map((y, p) => `f_rest_${8 + d + p * u / 3}`)
      ), I = n >= 1 ? new Float32Array(3 * 3) : void 0, B = n >= 2 ? new Float32Array(5 * 3) : void 0, o = n >= 3 ? new Float32Array(7 * 3) : void 0;
    }
    function E(u, w) {
      if (!I)
        throw new Error("Missing sh1");
      for (const [d, y] of a.entries())
        I[d] = w[y] * 8 / 255 - 4;
      if (B)
        for (const [d, y] of r.entries())
          B[d] = w[y] * 8 / 255 - 4;
      if (o)
        for (const [d, y] of g.entries())
          o[d] = w[y] * 8 / 255 - 4;
      e == null || e(u, I, B, o);
    }
    function h(u) {
      const {
        min_x: w,
        min_y: d,
        min_z: y,
        max_x: p,
        max_y: f,
        max_z: N,
        min_scale_x: m,
        min_scale_y: D,
        min_scale_z: U,
        max_scale_x: x,
        max_scale_y: M,
        max_scale_z: b,
        min_r: F,
        min_g: G,
        min_b: R,
        max_r: J,
        max_g: $,
        max_b: L
      } = u.properties;
      if (!w || !d || !y || !p || !f || !N || !m || !D || !U || !x || !M || !b || !F || !G || !R || !J || !$ || !L)
        throw new Error("Missing PLY chunk properties");
      return s = !0, (z, Z) => {
        const {
          min_x: iA,
          min_y: AA,
          min_z: tA,
          max_x: W,
          max_y: O,
          max_z: v,
          min_scale_x: pA,
          min_scale_y: nA,
          min_scale_z: yA,
          max_scale_x: DA,
          max_scale_y: Y,
          max_scale_z: EA,
          min_r: RA,
          min_g: dA,
          min_b: UA,
          max_r: cA,
          max_g: T,
          max_b: aA
        } = Z;
        i.push({
          min_x: iA,
          min_y: AA,
          min_z: tA,
          max_x: W,
          max_y: O,
          max_z: v,
          min_scale_x: pA,
          min_scale_y: nA,
          min_scale_z: yA,
          max_scale_x: DA,
          max_scale_y: Y,
          max_scale_z: EA,
          min_r: RA,
          min_g: dA,
          min_b: UA,
          max_r: cA,
          max_g: T,
          max_b: aA
        });
      };
    }
    function c(u) {
      if (e && u.name === "sh")
        return n = ts(u.properties), C(), E;
      if (u.name !== "vertex")
        return null;
      const { packed_position: w, packed_rotation: d, packed_scale: y, packed_color: p } = u.properties;
      if (!w || !d || !y || !p)
        throw new Error(
          "Missing PLY properties: packed_position, packed_rotation, packed_scale, packed_color"
        );
      const f = Math.sqrt(2);
      return (N, m) => {
        const D = i[N >>> 8];
        if (D == null)
          throw new Error("Missing PLY chunk");
        const {
          min_x: U,
          min_y: x,
          min_z: M,
          max_x: b,
          max_y: F,
          max_z: G,
          min_scale_x: R,
          min_scale_y: J,
          min_scale_z: $,
          max_scale_x: L,
          max_scale_y: z,
          max_scale_z: Z,
          min_r: iA,
          min_g: AA,
          min_b: tA,
          max_r: W,
          max_g: O,
          max_b: v
        } = D, { packed_position: pA, packed_rotation: nA, packed_scale: yA, packed_color: DA } = m, Y = (pA >>> 21 & 2047) / 2047 * (b - U) + U, EA = (pA >>> 11 & 1023) / 1023 * (F - x) + x, RA = (pA & 2047) / 2047 * (G - M) + M, dA = ((nA >>> 20 & 1023) / 1023 - 0.5) * f, UA = ((nA >>> 10 & 1023) / 1023 - 0.5) * f, cA = ((nA & 1023) / 1023 - 0.5) * f, T = Math.sqrt(Math.max(0, 1 - dA * dA - UA * UA - cA * cA)), aA = nA >>> 30, KA = aA === 0 ? dA : aA === 1 ? T : UA, oe = aA <= 1 ? UA : aA === 2 ? T : cA, Ie = aA <= 2 ? cA : T, Be = aA === 0 ? T : dA, Qe = Math.exp(
          (yA >>> 21 & 2047) / 2047 * (L - R) + R
        ), Ce = Math.exp(
          (yA >>> 11 & 1023) / 1023 * (z - J) + J
        ), Ee = Math.exp(
          (yA & 2047) / 2047 * (Z - $) + $
        ), ce = (DA >>> 24 & 255) / 255 * (W - iA) + iA, he = (DA >>> 16 & 255) / 255 * (O - AA) + AA, le = (DA >>> 8 & 255) / 255 * (v - tA) + tA, ue = (DA & 255) / 255;
        A(
          N,
          Y,
          EA,
          RA,
          Qe,
          Ce,
          Ee,
          KA,
          oe,
          Ie,
          Be,
          ue,
          ce,
          he,
          le
        );
      };
    }
    const l = (u) => {
      if (u.name === "chunk")
        return h(u);
      if (s)
        return c(u);
      if (u.name !== "vertex")
        return null;
      const {
        x: w,
        y: d,
        z: y,
        scale_0: p,
        scale_1: f,
        scale_2: N,
        rot_0: m,
        rot_1: D,
        rot_2: U,
        rot_3: x,
        opacity: M,
        f_dc_0: b,
        f_dc_1: F,
        f_dc_2: G,
        red: R,
        green: J,
        blue: $,
        alpha: L
      } = u.properties;
      if (!w || !d || !y)
        throw new Error("Missing PLY properties: x, y, z");
      const z = p && f && N, Z = m && D && U && x, iA = L != null ? qt[L.type] : 1, AA = R != null ? qt[R.type] : 1, tA = J != null ? qt[J.type] : 1, W = $ != null ? qt[$.type] : 1;
      return n = ts(u.properties), C(), (O, v) => {
        const pA = z ? Math.exp(v.scale_0) : ht.defaultPointScale, nA = z ? Math.exp(v.scale_1) : ht.defaultPointScale, yA = z ? Math.exp(v.scale_2) : ht.defaultPointScale, DA = Z ? v.rot_1 : 0, Y = Z ? v.rot_2 : 0, EA = Z ? v.rot_3 : 0, RA = Z ? v.rot_0 : 1, dA = M != null ? 1 / (1 + Math.exp(-v.opacity)) : L != null ? v.alpha / iA : 1, UA = b != null ? v.f_dc_0 * Ht + 0.5 : R != null ? v.red / AA : 1, cA = F != null ? v.f_dc_1 * Ht + 0.5 : J != null ? v.green / tA : 1, T = G != null ? v.f_dc_2 * Ht + 0.5 : $ != null ? v.blue / W : 1;
        if (A(
          O,
          v.x,
          v.y,
          v.z,
          pA,
          nA,
          yA,
          DA,
          Y,
          EA,
          RA,
          dA,
          UA,
          cA,
          T
        ), e && I) {
          if (I)
            for (const [aA, KA] of a.entries())
              I[aA] = v[KA];
          if (B)
            for (const [aA, KA] of r.entries())
              B[aA] = v[KA];
          if (o)
            for (const [aA, KA] of g.entries())
              o[aA] = v[KA];
          e(O, I, B, o);
        }
      };
    };
    this.parseData(l);
  }
  // Inject RGBA values into original PLY file, which can be used to modify
  // the color/opacity of the Gsplats and write out the modified PLY file.
  injectRgba(A) {
    let e = 0;
    const s = this.data;
    if (s == null)
      throw new Error("No parsed data");
    if (A.length !== this.numSplats * 4)
      throw new Error("Invalid RGBA array length");
    for (const i in this.elements) {
      const n = this.elements[i], { count: a, properties: r } = n, g = [];
      let I = 0;
      const B = i === "vertex";
      if (B) {
        for (const o of ["opacity", "f_dc_0", "f_dc_1", "f_dc_2"])
          if (!r[o] || r[o].type !== "float")
            throw new Error(`Can't injectRgba due to property: ${o}`);
      }
      for (const [o, C] of Object.entries(r))
        if (C.isList)
          g.push(() => {
            const E = Kt[C.countType](
              s,
              e,
              this.littleEndian
            );
            e += Ct[C.countType], e += E * Ct[C.type];
          });
        else {
          if (B)
            if (o === "f_dc_0" || o === "f_dc_1" || o === "f_dc_2") {
              const E = Number.parseInt(
                o.slice(5)
              );
              g.push(() => {
                const h = (A[I + E] / 255 - 0.5) / Ht;
                As[C.type](
                  s,
                  e,
                  this.littleEndian,
                  h
                );
              });
            } else o === "opacity" && g.push(() => {
              const E = Math.max(
                -100,
                Math.min(
                  100,
                  -Math.log(1 / (A[I + 3] / 255) - 1)
                )
              );
              As[C.type](
                s,
                e,
                this.littleEndian,
                E
              );
            });
          g.push(() => {
            e += Ct[C.type];
          });
        }
      for (let o = 0; o < a; o++) {
        for (const C of g)
          C();
        B && (I += 4);
      }
    }
  }
};
ht.defaultPointScale = 1e-3;
let Ae = ht;
const Ht = 0.28209479177387814, Kt = {
  char: (t, A, e) => t.getInt8(A),
  uchar: (t, A, e) => t.getUint8(A),
  short: (t, A, e) => t.getInt16(A, e),
  ushort: (t, A, e) => t.getUint16(A, e),
  int: (t, A, e) => t.getInt32(A, e),
  uint: (t, A, e) => t.getUint32(A, e),
  float: (t, A, e) => t.getFloat32(A, e),
  double: (t, A, e) => t.getFloat64(A, e)
}, As = {
  char: (t, A, e, s) => {
    t.setInt8(A, s);
  },
  uchar: (t, A, e, s) => {
    t.setUint8(A, s);
  },
  short: (t, A, e, s) => {
    t.setInt16(A, s, e);
  },
  ushort: (t, A, e, s) => {
    t.setUint16(A, s, e);
  },
  int: (t, A, e, s) => {
    t.setInt32(A, s, e);
  },
  uint: (t, A, e, s) => {
    t.setUint32(A, s, e);
  },
  float: (t, A, e, s) => {
    t.setFloat32(A, s, e);
  },
  double: (t, A, e, s) => {
    t.setFloat64(A, s, e);
  }
}, Ct = {
  char: 1,
  uchar: 1,
  short: 2,
  ushort: 2,
  int: 4,
  uint: 4,
  float: 4,
  double: 8
}, qt = {
  char: 127,
  uchar: 255,
  short: 32767,
  ushort: 65535,
  int: 2147483647,
  uint: 4294967295,
  float: 1,
  double: 1
}, vQ = {
  0: 0,
  9: 1,
  24: 2,
  45: 3
}, LQ = {
  0: 0,
  1: 9,
  2: 24,
  3: 45
};
function ts(t) {
  let A = 0;
  for (; t[`f_rest_${A}`]; )
    A += 1;
  const e = vQ[A];
  if (e == null)
    throw new Error(`Unsupported number of SH coefficients: ${A}`);
  return e;
}
const mr = '(function(){"use strict";let ZA;const ts=typeof TextDecoder<"u"?new TextDecoder("utf-8",{ignoreBOM:!0,fatal:!0}):{decode:()=>{throw Error("TextDecoder not available")}};typeof TextDecoder<"u"&&ts.decode();let te=null;function kn(){return(te===null||te.byteLength===0)&&(te=new Uint8Array(ZA.memory.buffer)),te}function Rn(g,A){return g=g>>>0,ts.decode(kn().subarray(g,g+A))}function Gn(g,A,t){return ZA.sort_splats(g,A,t)>>>0}function Un(g,A,t,e,i,s,n,r,a,o,B){return ZA.raycast_splats(g,A,t,e,i,s,n,r,a,o,B)}async function bn(g,A){if(typeof Response=="function"&&g instanceof Response){if(typeof WebAssembly.instantiateStreaming=="function")try{return await WebAssembly.instantiateStreaming(g,A)}catch(e){if(g.headers.get("Content-Type")!="application/wasm")console.warn("`WebAssembly.instantiateStreaming` failed because your server does not serve Wasm with `application/wasm` MIME type. Falling back to `WebAssembly.instantiate` which is slower. Original error:\\n",e);else throw e}const t=await g.arrayBuffer();return await WebAssembly.instantiate(t,A)}else{const t=await WebAssembly.instantiate(g,A);return t instanceof WebAssembly.Instance?{instance:t,module:g}:t}}function Ln(){const g={};return g.wbg={},g.wbg.__wbg_buffer_609cc3eee51ed158=function(A){return A.buffer},g.wbg.__wbg_length_3b4f022188ae8db6=function(A){return A.length},g.wbg.__wbg_length_6ca527665d89694d=function(A){return A.length},g.wbg.__wbg_length_8cfd2c6409af88ad=function(A){return A.length},g.wbg.__wbg_new_9fee97a409b32b68=function(A){return new Uint16Array(A)},g.wbg.__wbg_new_e3b321dcfef89fc7=function(A){return new Uint32Array(A)},g.wbg.__wbg_newwithbyteoffsetandlength_e6b7e69acd4c7354=function(A,t,e){return new Float32Array(A,t>>>0,e>>>0)},g.wbg.__wbg_newwithbyteoffsetandlength_f1dead44d1fc7212=function(A,t,e){return new Uint32Array(A,t>>>0,e>>>0)},g.wbg.__wbg_newwithlength_5a5efe313cfd59f1=function(A){return new Float32Array(A>>>0)},g.wbg.__wbg_set_10bad9bee0e9c58b=function(A,t,e){A.set(t,e>>>0)},g.wbg.__wbg_set_d23661d19148b229=function(A,t,e){A.set(t,e>>>0)},g.wbg.__wbg_set_f4f1f0daa30696fc=function(A,t,e){A.set(t,e>>>0)},g.wbg.__wbg_subarray_3aaeec89bb2544f0=function(A,t,e){return A.subarray(t>>>0,e>>>0)},g.wbg.__wbg_subarray_769e1e0f81bb259b=function(A,t,e){return A.subarray(t>>>0,e>>>0)},g.wbg.__wbindgen_init_externref_table=function(){const A=ZA.__wbindgen_export_0,t=A.grow(4);A.set(0,void 0),A.set(t+0,void 0),A.set(t+1,null),A.set(t+2,!0),A.set(t+3,!1)},g.wbg.__wbindgen_memory=function(){return ZA.memory},g.wbg.__wbindgen_throw=function(A,t){throw new Error(Rn(A,t))},g}function Yn(g,A){return ZA=g.exports,gi.__wbindgen_wasm_module=A,te=null,ZA.__wbindgen_start(),ZA}async function gi(g){if(ZA!==void 0)return ZA;typeof g<"u"&&(Object.getPrototypeOf(g)===Object.prototype?{module_or_path:g}=g:console.warn("using deprecated parameters for the initialization function; pass a single object instead")),typeof g>"u"&&(g=new URL("data:application/wasm;base64,",self.location.href));const A=Ln();(typeof g=="string"||typeof Request=="function"&&g instanceof Request||typeof URL=="function"&&g instanceof URL)&&(g=fetch(g));const{instance:t,module:e}=await bn(await g,A);return Yn(t,e)}var hA=Uint8Array,St=Uint16Array,Jn=Int32Array,es=new hA([0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0,0,0,0]),is=new hA([0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13,0,0]),Tn=new hA([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]),ss=function(g,A){for(var t=new St(31),e=0;e<31;++e)t[e]=A+=1<<g[e-1];for(var i=new Jn(t[30]),e=1;e<30;++e)for(var s=t[e];s<t[e+1];++s)i[s]=s-t[e]<<5|e;return{b:t,r:i}},ns=ss(es,2),rs=ns.b,Hn=ns.r;rs[28]=258,Hn[258]=28;for(var vn=ss(is,0),zn=vn.b,oi=new St(32768),X=0;X<32768;++X){var nt=(X&43690)>>1|(X&21845)<<1;nt=(nt&52428)>>2|(nt&13107)<<2,nt=(nt&61680)>>4|(nt&3855)<<4,oi[X]=((nt&65280)>>8|(nt&255)<<8)>>1}for(var ee=function(g,A,t){for(var e=g.length,i=0,s=new St(A);i<e;++i)g[i]&&++s[g[i]-1];var n=new St(A);for(i=1;i<A;++i)n[i]=n[i-1]+s[i-1]<<1;var r;if(t){r=new St(1<<A);var a=15-A;for(i=0;i<e;++i)if(g[i])for(var o=i<<4|g[i],B=A-g[i],I=n[g[i]-1]++<<B,Q=I|(1<<B)-1;I<=Q;++I)r[oi[I]>>a]=o}else for(r=new St(e),i=0;i<e;++i)g[i]&&(r[i]=oi[n[g[i]-1]++]>>15-g[i]);return r},ie=new hA(288),X=0;X<144;++X)ie[X]=8;for(var X=144;X<256;++X)ie[X]=9;for(var X=256;X<280;++X)ie[X]=7;for(var X=280;X<288;++X)ie[X]=8;for(var as=new hA(32),X=0;X<32;++X)as[X]=5;var Kn=ee(ie,9,1),_n=ee(as,5,1),Ii=function(g){for(var A=g[0],t=1;t<g.length;++t)g[t]>A&&(A=g[t]);return A},bA=function(g,A,t){var e=A/8|0;return(g[e]|g[e+1]<<8)>>(A&7)&t},Bi=function(g,A){var t=A/8|0;return(g[t]|g[t+1]<<8|g[t+2]<<16)>>(A&7)},gs=function(g){return(g+7)/8|0},pe=function(g,A,t){return(A==null||A<0)&&(A=0),(t==null||t>g.length)&&(t=g.length),new hA(g.subarray(A,t))},qn=["unexpected EOF","invalid block type","invalid length/literal","invalid distance","stream finished","no stream handler",,"no callback","invalid UTF-8 data","extra field too long","date not in range 1980-2099","filename too long","stream finishing","invalid zip data"],GA=function(g,A,t){var e=new Error(A||qn[g]);if(e.code=g,Error.captureStackTrace&&Error.captureStackTrace(e,GA),!t)throw e;return e},Zn=function(g,A,t,e){var i=g.length,s=0;if(!i||A.f&&!A.l)return t||new hA(0);var n=!t,r=n||A.i!=2,a=A.i;n&&(t=new hA(i*3));var o=function(fA){var H=t.length;if(fA>H){var MA=new hA(Math.max(H*2,fA));MA.set(t),t=MA}},B=A.f||0,I=A.p||0,Q=A.b||0,h=A.l,C=A.d,E=A.m,c=A.n,l=i*8;do{if(!h){B=bA(g,I,1);var y=bA(g,I+1,3);if(I+=3,y)if(y==1)h=Kn,C=_n,E=9,c=5;else if(y==2){var m=bA(g,I,31)+257,x=bA(g,I+10,15)+4,w=m+bA(g,I+5,31)+1;I+=14;for(var D=new hA(w),N=new hA(19),S=0;S<x;++S)N[Tn[S]]=bA(g,I+S*3,7);I+=x*3;for(var M=Ii(N),F=(1<<M)-1,k=ee(N,M,1),S=0;S<w;){var b=k[bA(g,I,F)];I+=b&15;var d=b>>4;if(d<16)D[S++]=d;else{var R=0,G=0;for(d==16?(G=3+bA(g,I,3),I+=2,R=D[S-1]):d==17?(G=3+bA(g,I,7),I+=3):d==18&&(G=11+bA(g,I,127),I+=7);G--;)D[S++]=R}}var P=D.subarray(0,m),L=D.subarray(m);E=Ii(P),c=Ii(L),h=ee(P,E,1),C=ee(L,c,1)}else GA(1);else{var d=gs(I)+4,f=g[d-4]|g[d-3]<<8,p=d+f;if(p>i){a&&GA(0);break}r&&o(Q+f),t.set(g.subarray(d,p),Q),A.b=Q+=f,A.p=I=p*8,A.f=B;continue}if(I>l){a&&GA(0);break}}r&&o(Q+131072);for(var Z=(1<<E)-1,W=(1<<c)-1,rA=I;;rA=I){var R=h[Bi(g,I)&Z],V=R>>4;if(I+=R&15,I>l){a&&GA(0);break}if(R||GA(2),V<256)t[Q++]=V;else if(V==256){rA=I,h=null;break}else{var _=V-254;if(V>264){var S=V-257,T=es[S];_=bA(g,I,(1<<T)-1)+rs[S],I+=T}var q=C[Bi(g,I)&W],U=q>>4;q||GA(3),I+=q&15;var L=zn[U];if(U>3){var T=is[U];L+=Bi(g,I)&(1<<T)-1,I+=T}if(I>l){a&&GA(0);break}r&&o(Q+131072);var yA=Q+_;if(Q<L){var BA=s-L,RA=Math.min(L,yA);for(BA+Q<0&&GA(3);Q<RA;++Q)t[Q]=e[BA+Q]}for(;Q<yA;++Q)t[Q]=t[Q-L]}}A.l=h,A.p=rA,A.b=Q,A.f=B,h&&(B=1,A.m=E,A.d=C,A.n=c)}while(!B);return Q!=t.length&&n?pe(t,0,Q):t.subarray(0,Q)},Wn=new hA(0),On=function(g){(g[0]!=31||g[1]!=139||g[2]!=8)&&GA(6,"invalid gzip data");var A=g[3],t=10;A&4&&(t+=(g[10]|g[11]<<8)+2);for(var e=(A>>3&1)+(A>>4&1);e>0;e-=!g[t++]);return t+(A&2)},Qi=function(){function g(A,t){typeof A=="function"&&(t=A,A={}),this.ondata=t;var e=A&&A.dictionary&&A.dictionary.subarray(-32768);this.s={i:0,b:e?e.length:0},this.o=new hA(32768),this.p=new hA(0),e&&this.o.set(e)}return g.prototype.e=function(A){if(this.ondata||GA(5),this.d&&GA(4),!this.p.length)this.p=A;else if(A.length){var t=new hA(this.p.length+A.length);t.set(this.p),t.set(A,this.p.length),this.p=t}},g.prototype.c=function(A){this.s.i=+(this.d=A||!1);var t=this.s.b,e=Zn(this.p,this.s,this.o);this.ondata(pe(e,t,this.s.b),this.d),this.o=pe(e,this.s.b-32768),this.s.b=this.o.length,this.p=pe(this.p,this.s.p/8|0),this.s.p&=7},g.prototype.push=function(A,t){this.e(A),this.c(t)},g}(),os=function(){function g(A,t){this.v=1,this.r=0,Qi.call(this,A,t)}return g.prototype.push=function(A,t){if(Qi.prototype.e.call(this,A),this.r+=A.length,this.v){var e=this.p.subarray(this.v-1),i=e.length>3?On(e):4;if(i>e.length){if(!t)return}else this.v>1&&this.onmember&&this.onmember(this.r-e.length);this.p=e.subarray(i),this.v=0}Qi.prototype.c.call(this,t),this.s.f&&!this.s.l&&!t&&(this.v=gs(this.s.p)+9,this.s={i:0},this.o=new hA(0),this.push(new hA(0),t))},g}(),jn=typeof TextDecoder<"u"&&new TextDecoder,Vn=0;try{jn.decode(Wn,{stream:!0}),Vn=1}catch{}/**\n * @license\n * Copyright 2010-2024 Three.js Authors\n * SPDX-License-Identifier: MIT\n */const Is="172",hi=0,Pn=1,Bs=1,Qs=100,hs=204,Cs=205,Es=3,Xn=0,cs=300,ls=1e3,se=1001,us=1002,rt=1003,ds=1006,$n=1008,De=1009,ut=1014,Ar=1015,me=1023,tr=1031,Ft=1033,ys="",LA="srgb",fs="srgb-linear",ws="linear",Ci="srgb",Nt=7680,ps=519,Ds=35044,er="300 es",ne=2e3,ms=2001;class re{addEventListener(A,t){this._listeners===void 0&&(this._listeners={});const e=this._listeners;e[A]===void 0&&(e[A]=[]),e[A].indexOf(t)===-1&&e[A].push(t)}hasEventListener(A,t){if(this._listeners===void 0)return!1;const e=this._listeners;return e[A]!==void 0&&e[A].indexOf(t)!==-1}removeEventListener(A,t){if(this._listeners===void 0)return;const i=this._listeners[A];if(i!==void 0){const s=i.indexOf(t);s!==-1&&i.splice(s,1)}}dispatchEvent(A){if(this._listeners===void 0)return;const e=this._listeners[A.type];if(e!==void 0){A.target=this;const i=e.slice(0);for(let s=0,n=i.length;s<n;s++)i[s].call(this,A);A.target=null}}}const CA=["00","01","02","03","04","05","06","07","08","09","0a","0b","0c","0d","0e","0f","10","11","12","13","14","15","16","17","18","19","1a","1b","1c","1d","1e","1f","20","21","22","23","24","25","26","27","28","29","2a","2b","2c","2d","2e","2f","30","31","32","33","34","35","36","37","38","39","3a","3b","3c","3d","3e","3f","40","41","42","43","44","45","46","47","48","49","4a","4b","4c","4d","4e","4f","50","51","52","53","54","55","56","57","58","59","5a","5b","5c","5d","5e","5f","60","61","62","63","64","65","66","67","68","69","6a","6b","6c","6d","6e","6f","70","71","72","73","74","75","76","77","78","79","7a","7b","7c","7d","7e","7f","80","81","82","83","84","85","86","87","88","89","8a","8b","8c","8d","8e","8f","90","91","92","93","94","95","96","97","98","99","9a","9b","9c","9d","9e","9f","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","aa","ab","ac","ad","ae","af","b0","b1","b2","b3","b4","b5","b6","b7","b8","b9","ba","bb","bc","bd","be","bf","c0","c1","c2","c3","c4","c5","c6","c7","c8","c9","ca","cb","cc","cd","ce","cf","d0","d1","d2","d3","d4","d5","d6","d7","d8","d9","da","db","dc","dd","de","df","e0","e1","e2","e3","e4","e5","e6","e7","e8","e9","ea","eb","ec","ed","ee","ef","f0","f1","f2","f3","f4","f5","f6","f7","f8","f9","fa","fb","fc","fd","fe","ff"];function ae(){const g=Math.random()*4294967295|0,A=Math.random()*4294967295|0,t=Math.random()*4294967295|0,e=Math.random()*4294967295|0;return(CA[g&255]+CA[g>>8&255]+CA[g>>16&255]+CA[g>>24&255]+"-"+CA[A&255]+CA[A>>8&255]+"-"+CA[A>>16&15|64]+CA[A>>24&255]+"-"+CA[t&63|128]+CA[t>>8&255]+"-"+CA[t>>16&255]+CA[t>>24&255]+CA[e&255]+CA[e>>8&255]+CA[e>>16&255]+CA[e>>24&255]).toLowerCase()}function J(g,A,t){return Math.max(A,Math.min(t,g))}function ir(g,A){return(g%A+A)%A}function Ei(g,A,t){return(1-t)*g+t*A}function ge(g,A){switch(A.constructor){case Float32Array:return g;case Uint32Array:return g/4294967295;case Uint16Array:return g/65535;case Uint8Array:return g/255;case Int32Array:return Math.max(g/2147483647,-1);case Int16Array:return Math.max(g/32767,-1);case Int8Array:return Math.max(g/127,-1);default:throw new Error("Invalid component type.")}}function pA(g,A){switch(A.constructor){case Float32Array:return g;case Uint32Array:return Math.round(g*4294967295);case Uint16Array:return Math.round(g*65535);case Uint8Array:return Math.round(g*255);case Int32Array:return Math.round(g*2147483647);case Int16Array:return Math.round(g*32767);case Int8Array:return Math.round(g*127);default:throw new Error("Invalid component type.")}}class DA{constructor(A=0,t=0){DA.prototype.isVector2=!0,this.x=A,this.y=t}get width(){return this.x}set width(A){this.x=A}get height(){return this.y}set height(A){this.y=A}set(A,t){return this.x=A,this.y=t,this}setScalar(A){return this.x=A,this.y=A,this}setX(A){return this.x=A,this}setY(A){return this.y=A,this}setComponent(A,t){switch(A){case 0:this.x=t;break;case 1:this.y=t;break;default:throw new Error("index is out of range: "+A)}return this}getComponent(A){switch(A){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+A)}}clone(){return new this.constructor(this.x,this.y)}copy(A){return this.x=A.x,this.y=A.y,this}add(A){return this.x+=A.x,this.y+=A.y,this}addScalar(A){return this.x+=A,this.y+=A,this}addVectors(A,t){return this.x=A.x+t.x,this.y=A.y+t.y,this}addScaledVector(A,t){return this.x+=A.x*t,this.y+=A.y*t,this}sub(A){return this.x-=A.x,this.y-=A.y,this}subScalar(A){return this.x-=A,this.y-=A,this}subVectors(A,t){return this.x=A.x-t.x,this.y=A.y-t.y,this}multiply(A){return this.x*=A.x,this.y*=A.y,this}multiplyScalar(A){return this.x*=A,this.y*=A,this}divide(A){return this.x/=A.x,this.y/=A.y,this}divideScalar(A){return this.multiplyScalar(1/A)}applyMatrix3(A){const t=this.x,e=this.y,i=A.elements;return this.x=i[0]*t+i[3]*e+i[6],this.y=i[1]*t+i[4]*e+i[7],this}min(A){return this.x=Math.min(this.x,A.x),this.y=Math.min(this.y,A.y),this}max(A){return this.x=Math.max(this.x,A.x),this.y=Math.max(this.y,A.y),this}clamp(A,t){return this.x=J(this.x,A.x,t.x),this.y=J(this.y,A.y,t.y),this}clampScalar(A,t){return this.x=J(this.x,A,t),this.y=J(this.y,A,t),this}clampLength(A,t){const e=this.length();return this.divideScalar(e||1).multiplyScalar(J(e,A,t))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(A){return this.x*A.x+this.y*A.y}cross(A){return this.x*A.y-this.y*A.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}angleTo(A){const t=Math.sqrt(this.lengthSq()*A.lengthSq());if(t===0)return Math.PI/2;const e=this.dot(A)/t;return Math.acos(J(e,-1,1))}distanceTo(A){return Math.sqrt(this.distanceToSquared(A))}distanceToSquared(A){const t=this.x-A.x,e=this.y-A.y;return t*t+e*e}manhattanDistanceTo(A){return Math.abs(this.x-A.x)+Math.abs(this.y-A.y)}setLength(A){return this.normalize().multiplyScalar(A)}lerp(A,t){return this.x+=(A.x-this.x)*t,this.y+=(A.y-this.y)*t,this}lerpVectors(A,t,e){return this.x=A.x+(t.x-A.x)*e,this.y=A.y+(t.y-A.y)*e,this}equals(A){return A.x===this.x&&A.y===this.y}fromArray(A,t=0){return this.x=A[t],this.y=A[t+1],this}toArray(A=[],t=0){return A[t]=this.x,A[t+1]=this.y,A}fromBufferAttribute(A,t){return this.x=A.getX(t),this.y=A.getY(t),this}rotateAround(A,t){const e=Math.cos(t),i=Math.sin(t),s=this.x-A.x,n=this.y-A.y;return this.x=s*e-n*i+A.x,this.y=s*i+n*e+A.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y}}class WA{constructor(A,t,e,i,s,n,r,a,o){WA.prototype.isMatrix3=!0,this.elements=[1,0,0,0,1,0,0,0,1],A!==void 0&&this.set(A,t,e,i,s,n,r,a,o)}set(A,t,e,i,s,n,r,a,o){const B=this.elements;return B[0]=A,B[1]=i,B[2]=r,B[3]=t,B[4]=s,B[5]=a,B[6]=e,B[7]=n,B[8]=o,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(A){const t=this.elements,e=A.elements;return t[0]=e[0],t[1]=e[1],t[2]=e[2],t[3]=e[3],t[4]=e[4],t[5]=e[5],t[6]=e[6],t[7]=e[7],t[8]=e[8],this}extractBasis(A,t,e){return A.setFromMatrix3Column(this,0),t.setFromMatrix3Column(this,1),e.setFromMatrix3Column(this,2),this}setFromMatrix4(A){const t=A.elements;return this.set(t[0],t[4],t[8],t[1],t[5],t[9],t[2],t[6],t[10]),this}multiply(A){return this.multiplyMatrices(this,A)}premultiply(A){return this.multiplyMatrices(A,this)}multiplyMatrices(A,t){const e=A.elements,i=t.elements,s=this.elements,n=e[0],r=e[3],a=e[6],o=e[1],B=e[4],I=e[7],Q=e[2],h=e[5],C=e[8],E=i[0],c=i[3],l=i[6],y=i[1],d=i[4],f=i[7],p=i[2],m=i[5],x=i[8];return s[0]=n*E+r*y+a*p,s[3]=n*c+r*d+a*m,s[6]=n*l+r*f+a*x,s[1]=o*E+B*y+I*p,s[4]=o*c+B*d+I*m,s[7]=o*l+B*f+I*x,s[2]=Q*E+h*y+C*p,s[5]=Q*c+h*d+C*m,s[8]=Q*l+h*f+C*x,this}multiplyScalar(A){const t=this.elements;return t[0]*=A,t[3]*=A,t[6]*=A,t[1]*=A,t[4]*=A,t[7]*=A,t[2]*=A,t[5]*=A,t[8]*=A,this}determinant(){const A=this.elements,t=A[0],e=A[1],i=A[2],s=A[3],n=A[4],r=A[5],a=A[6],o=A[7],B=A[8];return t*n*B-t*r*o-e*s*B+e*r*a+i*s*o-i*n*a}invert(){const A=this.elements,t=A[0],e=A[1],i=A[2],s=A[3],n=A[4],r=A[5],a=A[6],o=A[7],B=A[8],I=B*n-r*o,Q=r*a-B*s,h=o*s-n*a,C=t*I+e*Q+i*h;if(C===0)return this.set(0,0,0,0,0,0,0,0,0);const E=1/C;return A[0]=I*E,A[1]=(i*o-B*e)*E,A[2]=(r*e-i*n)*E,A[3]=Q*E,A[4]=(B*t-i*a)*E,A[5]=(i*s-r*t)*E,A[6]=h*E,A[7]=(e*a-o*t)*E,A[8]=(n*t-e*s)*E,this}transpose(){let A;const t=this.elements;return A=t[1],t[1]=t[3],t[3]=A,A=t[2],t[2]=t[6],t[6]=A,A=t[5],t[5]=t[7],t[7]=A,this}getNormalMatrix(A){return this.setFromMatrix4(A).invert().transpose()}transposeIntoArray(A){const t=this.elements;return A[0]=t[0],A[1]=t[3],A[2]=t[6],A[3]=t[1],A[4]=t[4],A[5]=t[7],A[6]=t[2],A[7]=t[5],A[8]=t[8],this}setUvTransform(A,t,e,i,s,n,r){const a=Math.cos(s),o=Math.sin(s);return this.set(e*a,e*o,-e*(a*n+o*r)+n+A,-i*o,i*a,-i*(-o*n+a*r)+r+t,0,0,1),this}scale(A,t){return this.premultiply(ci.makeScale(A,t)),this}rotate(A){return this.premultiply(ci.makeRotation(-A)),this}translate(A,t){return this.premultiply(ci.makeTranslation(A,t)),this}makeTranslation(A,t){return A.isVector2?this.set(1,0,A.x,0,1,A.y,0,0,1):this.set(1,0,A,0,1,t,0,0,1),this}makeRotation(A){const t=Math.cos(A),e=Math.sin(A);return this.set(t,-e,0,e,t,0,0,0,1),this}makeScale(A,t){return this.set(A,0,0,0,t,0,0,0,1),this}equals(A){const t=this.elements,e=A.elements;for(let i=0;i<9;i++)if(t[i]!==e[i])return!1;return!0}fromArray(A,t=0){for(let e=0;e<9;e++)this.elements[e]=A[e+t];return this}toArray(A=[],t=0){const e=this.elements;return A[t]=e[0],A[t+1]=e[1],A[t+2]=e[2],A[t+3]=e[3],A[t+4]=e[4],A[t+5]=e[5],A[t+6]=e[6],A[t+7]=e[7],A[t+8]=e[8],A}clone(){return new this.constructor().fromArray(this.elements)}}const ci=new WA;function sr(g){for(let A=g.length-1;A>=0;--A)if(g[A]>=65535)return!0;return!1}function xs(g){return document.createElementNS("http://www.w3.org/1999/xhtml",g)}const Ms=new WA().set(.4123908,.3575843,.1804808,.212639,.7151687,.0721923,.0193308,.1191948,.9505322),Ss=new WA().set(3.2409699,-1.5373832,-.4986108,-.9692436,1.8759675,.0415551,.0556301,-.203977,1.0569715);function nr(){const g={enabled:!0,workingColorSpace:fs,spaces:{},convert:function(i,s,n){return this.enabled===!1||s===n||!s||!n||(this.spaces[s].transfer===Ci&&(i.r=jA(i.r),i.g=jA(i.g),i.b=jA(i.b)),this.spaces[s].primaries!==this.spaces[n].primaries&&(i.applyMatrix3(this.spaces[s].toXYZ),i.applyMatrix3(this.spaces[n].fromXYZ)),this.spaces[n].transfer===Ci&&(i.r=kt(i.r),i.g=kt(i.g),i.b=kt(i.b))),i},fromWorkingColorSpace:function(i,s){return this.convert(i,this.workingColorSpace,s)},toWorkingColorSpace:function(i,s){return this.convert(i,s,this.workingColorSpace)},getPrimaries:function(i){return this.spaces[i].primaries},getTransfer:function(i){return i===ys?ws:this.spaces[i].transfer},getLuminanceCoefficients:function(i,s=this.workingColorSpace){return i.fromArray(this.spaces[s].luminanceCoefficients)},define:function(i){Object.assign(this.spaces,i)},_getMatrix:function(i,s,n){return i.copy(this.spaces[s].toXYZ).multiply(this.spaces[n].fromXYZ)},_getDrawingBufferColorSpace:function(i){return this.spaces[i].outputColorSpaceConfig.drawingBufferColorSpace},_getUnpackColorSpace:function(i=this.workingColorSpace){return this.spaces[i].workingColorSpaceConfig.unpackColorSpace}},A=[.64,.33,.3,.6,.15,.06],t=[.2126,.7152,.0722],e=[.3127,.329];return g.define({[fs]:{primaries:A,whitePoint:e,transfer:ws,toXYZ:Ms,fromXYZ:Ss,luminanceCoefficients:t,workingColorSpaceConfig:{unpackColorSpace:LA},outputColorSpaceConfig:{drawingBufferColorSpace:LA}},[LA]:{primaries:A,whitePoint:e,transfer:Ci,toXYZ:Ms,fromXYZ:Ss,luminanceCoefficients:t,outputColorSpaceConfig:{drawingBufferColorSpace:LA}}}),g}const YA=nr();function jA(g){return g<.04045?g*.0773993808:Math.pow(g*.9478672986+.0521327014,2.4)}function kt(g){return g<.0031308?g*12.92:1.055*Math.pow(g,.41666)-.055}let Rt;class rr{static getDataURL(A){if(/^data:/i.test(A.src)||typeof HTMLCanvasElement>"u")return A.src;let t;if(A instanceof HTMLCanvasElement)t=A;else{Rt===void 0&&(Rt=xs("canvas")),Rt.width=A.width,Rt.height=A.height;const e=Rt.getContext("2d");A instanceof ImageData?e.putImageData(A,0,0):e.drawImage(A,0,0,A.width,A.height),t=Rt}return t.width>2048||t.height>2048?(console.warn("THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons",A),t.toDataURL("image/jpeg",.6)):t.toDataURL("image/png")}static sRGBToLinear(A){if(typeof HTMLImageElement<"u"&&A instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&A instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&A instanceof ImageBitmap){const t=xs("canvas");t.width=A.width,t.height=A.height;const e=t.getContext("2d");e.drawImage(A,0,0,A.width,A.height);const i=e.getImageData(0,0,A.width,A.height),s=i.data;for(let n=0;n<s.length;n++)s[n]=jA(s[n]/255)*255;return e.putImageData(i,0,0),t}else if(A.data){const t=A.data.slice(0);for(let e=0;e<t.length;e++)t instanceof Uint8Array||t instanceof Uint8ClampedArray?t[e]=Math.floor(jA(t[e]/255)*255):t[e]=jA(t[e]);return{data:t,width:A.width,height:A.height}}else return console.warn("THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied."),A}}let ar=0;class Fs{constructor(A=null){this.isSource=!0,Object.defineProperty(this,"id",{value:ar++}),this.uuid=ae(),this.data=A,this.dataReady=!0,this.version=0}set needsUpdate(A){A===!0&&this.version++}toJSON(A){const t=A===void 0||typeof A=="string";if(!t&&A.images[this.uuid]!==void 0)return A.images[this.uuid];const e={uuid:this.uuid,url:""},i=this.data;if(i!==null){let s;if(Array.isArray(i)){s=[];for(let n=0,r=i.length;n<r;n++)i[n].isDataTexture?s.push(li(i[n].image)):s.push(li(i[n]))}else s=li(i);e.url=s}return t||(A.images[this.uuid]=e),e}}function li(g){return typeof HTMLImageElement<"u"&&g instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&g instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&g instanceof ImageBitmap?rr.getDataURL(g):g.data?{data:Array.from(g.data),width:g.width,height:g.height,type:g.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}let gr=0;class OA extends re{constructor(A=OA.DEFAULT_IMAGE,t=OA.DEFAULT_MAPPING,e=se,i=se,s=ds,n=$n,r=me,a=De,o=OA.DEFAULT_ANISOTROPY,B=ys){super(),this.isTexture=!0,Object.defineProperty(this,"id",{value:gr++}),this.uuid=ae(),this.name="",this.source=new Fs(A),this.mipmaps=[],this.mapping=t,this.channel=0,this.wrapS=e,this.wrapT=i,this.magFilter=s,this.minFilter=n,this.anisotropy=o,this.format=r,this.internalFormat=null,this.type=a,this.offset=new DA(0,0),this.repeat=new DA(1,1),this.center=new DA(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new WA,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.colorSpace=B,this.userData={},this.version=0,this.onUpdate=null,this.renderTarget=null,this.isRenderTargetTexture=!1,this.pmremVersion=0}get image(){return this.source.data}set image(A=null){this.source.data=A}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}clone(){return new this.constructor().copy(this)}copy(A){return this.name=A.name,this.source=A.source,this.mipmaps=A.mipmaps.slice(0),this.mapping=A.mapping,this.channel=A.channel,this.wrapS=A.wrapS,this.wrapT=A.wrapT,this.magFilter=A.magFilter,this.minFilter=A.minFilter,this.anisotropy=A.anisotropy,this.format=A.format,this.internalFormat=A.internalFormat,this.type=A.type,this.offset.copy(A.offset),this.repeat.copy(A.repeat),this.center.copy(A.center),this.rotation=A.rotation,this.matrixAutoUpdate=A.matrixAutoUpdate,this.matrix.copy(A.matrix),this.generateMipmaps=A.generateMipmaps,this.premultiplyAlpha=A.premultiplyAlpha,this.flipY=A.flipY,this.unpackAlignment=A.unpackAlignment,this.colorSpace=A.colorSpace,this.renderTarget=A.renderTarget,this.isRenderTargetTexture=A.isRenderTargetTexture,this.userData=JSON.parse(JSON.stringify(A.userData)),this.needsUpdate=!0,this}toJSON(A){const t=A===void 0||typeof A=="string";if(!t&&A.textures[this.uuid]!==void 0)return A.textures[this.uuid];const e={metadata:{version:4.6,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,image:this.source.toJSON(A).uuid,mapping:this.mapping,channel:this.channel,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,internalFormat:this.internalFormat,type:this.type,colorSpace:this.colorSpace,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,generateMipmaps:this.generateMipmaps,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};return Object.keys(this.userData).length>0&&(e.userData=this.userData),t||(A.textures[this.uuid]=e),e}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(A){if(this.mapping!==cs)return A;if(A.applyMatrix3(this.matrix),A.x<0||A.x>1)switch(this.wrapS){case ls:A.x=A.x-Math.floor(A.x);break;case se:A.x=A.x<0?0:1;break;case us:Math.abs(Math.floor(A.x)%2)===1?A.x=Math.ceil(A.x)-A.x:A.x=A.x-Math.floor(A.x);break}if(A.y<0||A.y>1)switch(this.wrapT){case ls:A.y=A.y-Math.floor(A.y);break;case se:A.y=A.y<0?0:1;break;case us:Math.abs(Math.floor(A.y)%2)===1?A.y=Math.ceil(A.y)-A.y:A.y=A.y-Math.floor(A.y);break}return this.flipY&&(A.y=1-A.y),A}set needsUpdate(A){A===!0&&(this.version++,this.source.needsUpdate=!0)}set needsPMREMUpdate(A){A===!0&&this.pmremVersion++}}OA.DEFAULT_IMAGE=null,OA.DEFAULT_MAPPING=cs,OA.DEFAULT_ANISOTROPY=1;class dA{constructor(A=0,t=0,e=0,i=1){dA.prototype.isVector4=!0,this.x=A,this.y=t,this.z=e,this.w=i}get width(){return this.z}set width(A){this.z=A}get height(){return this.w}set height(A){this.w=A}set(A,t,e,i){return this.x=A,this.y=t,this.z=e,this.w=i,this}setScalar(A){return this.x=A,this.y=A,this.z=A,this.w=A,this}setX(A){return this.x=A,this}setY(A){return this.y=A,this}setZ(A){return this.z=A,this}setW(A){return this.w=A,this}setComponent(A,t){switch(A){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;case 3:this.w=t;break;default:throw new Error("index is out of range: "+A)}return this}getComponent(A){switch(A){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+A)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(A){return this.x=A.x,this.y=A.y,this.z=A.z,this.w=A.w!==void 0?A.w:1,this}add(A){return this.x+=A.x,this.y+=A.y,this.z+=A.z,this.w+=A.w,this}addScalar(A){return this.x+=A,this.y+=A,this.z+=A,this.w+=A,this}addVectors(A,t){return this.x=A.x+t.x,this.y=A.y+t.y,this.z=A.z+t.z,this.w=A.w+t.w,this}addScaledVector(A,t){return this.x+=A.x*t,this.y+=A.y*t,this.z+=A.z*t,this.w+=A.w*t,this}sub(A){return this.x-=A.x,this.y-=A.y,this.z-=A.z,this.w-=A.w,this}subScalar(A){return this.x-=A,this.y-=A,this.z-=A,this.w-=A,this}subVectors(A,t){return this.x=A.x-t.x,this.y=A.y-t.y,this.z=A.z-t.z,this.w=A.w-t.w,this}multiply(A){return this.x*=A.x,this.y*=A.y,this.z*=A.z,this.w*=A.w,this}multiplyScalar(A){return this.x*=A,this.y*=A,this.z*=A,this.w*=A,this}applyMatrix4(A){const t=this.x,e=this.y,i=this.z,s=this.w,n=A.elements;return this.x=n[0]*t+n[4]*e+n[8]*i+n[12]*s,this.y=n[1]*t+n[5]*e+n[9]*i+n[13]*s,this.z=n[2]*t+n[6]*e+n[10]*i+n[14]*s,this.w=n[3]*t+n[7]*e+n[11]*i+n[15]*s,this}divide(A){return this.x/=A.x,this.y/=A.y,this.z/=A.z,this.w/=A.w,this}divideScalar(A){return this.multiplyScalar(1/A)}setAxisAngleFromQuaternion(A){this.w=2*Math.acos(A.w);const t=Math.sqrt(1-A.w*A.w);return t<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=A.x/t,this.y=A.y/t,this.z=A.z/t),this}setAxisAngleFromRotationMatrix(A){let t,e,i,s;const a=A.elements,o=a[0],B=a[4],I=a[8],Q=a[1],h=a[5],C=a[9],E=a[2],c=a[6],l=a[10];if(Math.abs(B-Q)<.01&&Math.abs(I-E)<.01&&Math.abs(C-c)<.01){if(Math.abs(B+Q)<.1&&Math.abs(I+E)<.1&&Math.abs(C+c)<.1&&Math.abs(o+h+l-3)<.1)return this.set(1,0,0,0),this;t=Math.PI;const d=(o+1)/2,f=(h+1)/2,p=(l+1)/2,m=(B+Q)/4,x=(I+E)/4,w=(C+c)/4;return d>f&&d>p?d<.01?(e=0,i=.707106781,s=.707106781):(e=Math.sqrt(d),i=m/e,s=x/e):f>p?f<.01?(e=.707106781,i=0,s=.707106781):(i=Math.sqrt(f),e=m/i,s=w/i):p<.01?(e=.707106781,i=.707106781,s=0):(s=Math.sqrt(p),e=x/s,i=w/s),this.set(e,i,s,t),this}let y=Math.sqrt((c-C)*(c-C)+(I-E)*(I-E)+(Q-B)*(Q-B));return Math.abs(y)<.001&&(y=1),this.x=(c-C)/y,this.y=(I-E)/y,this.z=(Q-B)/y,this.w=Math.acos((o+h+l-1)/2),this}setFromMatrixPosition(A){const t=A.elements;return this.x=t[12],this.y=t[13],this.z=t[14],this.w=t[15],this}min(A){return this.x=Math.min(this.x,A.x),this.y=Math.min(this.y,A.y),this.z=Math.min(this.z,A.z),this.w=Math.min(this.w,A.w),this}max(A){return this.x=Math.max(this.x,A.x),this.y=Math.max(this.y,A.y),this.z=Math.max(this.z,A.z),this.w=Math.max(this.w,A.w),this}clamp(A,t){return this.x=J(this.x,A.x,t.x),this.y=J(this.y,A.y,t.y),this.z=J(this.z,A.z,t.z),this.w=J(this.w,A.w,t.w),this}clampScalar(A,t){return this.x=J(this.x,A,t),this.y=J(this.y,A,t),this.z=J(this.z,A,t),this.w=J(this.w,A,t),this}clampLength(A,t){const e=this.length();return this.divideScalar(e||1).multiplyScalar(J(e,A,t))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this.w=Math.trunc(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(A){return this.x*A.x+this.y*A.y+this.z*A.z+this.w*A.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(A){return this.normalize().multiplyScalar(A)}lerp(A,t){return this.x+=(A.x-this.x)*t,this.y+=(A.y-this.y)*t,this.z+=(A.z-this.z)*t,this.w+=(A.w-this.w)*t,this}lerpVectors(A,t,e){return this.x=A.x+(t.x-A.x)*e,this.y=A.y+(t.y-A.y)*e,this.z=A.z+(t.z-A.z)*e,this.w=A.w+(t.w-A.w)*e,this}equals(A){return A.x===this.x&&A.y===this.y&&A.z===this.z&&A.w===this.w}fromArray(A,t=0){return this.x=A[t],this.y=A[t+1],this.z=A[t+2],this.w=A[t+3],this}toArray(A=[],t=0){return A[t]=this.x,A[t+1]=this.y,A[t+2]=this.z,A[t+3]=this.w,A}fromBufferAttribute(A,t){return this.x=A.getX(t),this.y=A.getY(t),this.z=A.getZ(t),this.w=A.getW(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z,yield this.w}}class or extends re{constructor(A=1,t=1,e={}){super(),this.isRenderTarget=!0,this.width=A,this.height=t,this.depth=1,this.scissor=new dA(0,0,A,t),this.scissorTest=!1,this.viewport=new dA(0,0,A,t);const i={width:A,height:t,depth:1};e=Object.assign({generateMipmaps:!1,internalFormat:null,minFilter:ds,depthBuffer:!0,stencilBuffer:!1,resolveDepthBuffer:!0,resolveStencilBuffer:!0,depthTexture:null,samples:0,count:1},e);const s=new OA(i,e.mapping,e.wrapS,e.wrapT,e.magFilter,e.minFilter,e.format,e.type,e.anisotropy,e.colorSpace);s.flipY=!1,s.generateMipmaps=e.generateMipmaps,s.internalFormat=e.internalFormat,this.textures=[];const n=e.count;for(let r=0;r<n;r++)this.textures[r]=s.clone(),this.textures[r].isRenderTargetTexture=!0,this.textures[r].renderTarget=this;this.depthBuffer=e.depthBuffer,this.stencilBuffer=e.stencilBuffer,this.resolveDepthBuffer=e.resolveDepthBuffer,this.resolveStencilBuffer=e.resolveStencilBuffer,this._depthTexture=null,this.depthTexture=e.depthTexture,this.samples=e.samples}get texture(){return this.textures[0]}set texture(A){this.textures[0]=A}set depthTexture(A){this._depthTexture!==null&&(this._depthTexture.renderTarget=null),A!==null&&(A.renderTarget=this),this._depthTexture=A}get depthTexture(){return this._depthTexture}setSize(A,t,e=1){if(this.width!==A||this.height!==t||this.depth!==e){this.width=A,this.height=t,this.depth=e;for(let i=0,s=this.textures.length;i<s;i++)this.textures[i].image.width=A,this.textures[i].image.height=t,this.textures[i].image.depth=e;this.dispose()}this.viewport.set(0,0,A,t),this.scissor.set(0,0,A,t)}clone(){return new this.constructor().copy(this)}copy(A){this.width=A.width,this.height=A.height,this.depth=A.depth,this.scissor.copy(A.scissor),this.scissorTest=A.scissorTest,this.viewport.copy(A.viewport),this.textures.length=0;for(let e=0,i=A.textures.length;e<i;e++)this.textures[e]=A.textures[e].clone(),this.textures[e].isRenderTargetTexture=!0,this.textures[e].renderTarget=this;const t=Object.assign({},A.texture.image);return this.texture.source=new Fs(t),this.depthBuffer=A.depthBuffer,this.stencilBuffer=A.stencilBuffer,this.resolveDepthBuffer=A.resolveDepthBuffer,this.resolveStencilBuffer=A.resolveStencilBuffer,A.depthTexture!==null&&(this.depthTexture=A.depthTexture.clone()),this.samples=A.samples,this}dispose(){this.dispatchEvent({type:"dispose"})}}class Ir extends or{constructor(A=1,t=1,e={}){super(A,t,e),this.isWebGLRenderTarget=!0}}class at extends OA{constructor(A=null,t=1,e=1,i=1){super(null),this.isDataArrayTexture=!0,this.image={data:A,width:t,height:e,depth:i},this.magFilter=rt,this.minFilter=rt,this.wrapR=se,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1,this.layerUpdates=new Set}addLayerUpdate(A){this.layerUpdates.add(A)}clearLayerUpdates(){this.layerUpdates.clear()}}class Ns extends Ir{constructor(A=1,t=1,e=1,i={}){super(A,t,i),this.isWebGLArrayRenderTarget=!0,this.depth=e,this.texture=new at(null,A,t,e),this.texture.isRenderTargetTexture=!0}}class aA{constructor(A=0,t=0,e=0,i=1){this.isQuaternion=!0,this._x=A,this._y=t,this._z=e,this._w=i}static slerpFlat(A,t,e,i,s,n,r){let a=e[i+0],o=e[i+1],B=e[i+2],I=e[i+3];const Q=s[n+0],h=s[n+1],C=s[n+2],E=s[n+3];if(r===0){A[t+0]=a,A[t+1]=o,A[t+2]=B,A[t+3]=I;return}if(r===1){A[t+0]=Q,A[t+1]=h,A[t+2]=C,A[t+3]=E;return}if(I!==E||a!==Q||o!==h||B!==C){let c=1-r;const l=a*Q+o*h+B*C+I*E,y=l>=0?1:-1,d=1-l*l;if(d>Number.EPSILON){const p=Math.sqrt(d),m=Math.atan2(p,l*y);c=Math.sin(c*m)/p,r=Math.sin(r*m)/p}const f=r*y;if(a=a*c+Q*f,o=o*c+h*f,B=B*c+C*f,I=I*c+E*f,c===1-r){const p=1/Math.sqrt(a*a+o*o+B*B+I*I);a*=p,o*=p,B*=p,I*=p}}A[t]=a,A[t+1]=o,A[t+2]=B,A[t+3]=I}static multiplyQuaternionsFlat(A,t,e,i,s,n){const r=e[i],a=e[i+1],o=e[i+2],B=e[i+3],I=s[n],Q=s[n+1],h=s[n+2],C=s[n+3];return A[t]=r*C+B*I+a*h-o*Q,A[t+1]=a*C+B*Q+o*I-r*h,A[t+2]=o*C+B*h+r*Q-a*I,A[t+3]=B*C-r*I-a*Q-o*h,A}get x(){return this._x}set x(A){this._x=A,this._onChangeCallback()}get y(){return this._y}set y(A){this._y=A,this._onChangeCallback()}get z(){return this._z}set z(A){this._z=A,this._onChangeCallback()}get w(){return this._w}set w(A){this._w=A,this._onChangeCallback()}set(A,t,e,i){return this._x=A,this._y=t,this._z=e,this._w=i,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(A){return this._x=A.x,this._y=A.y,this._z=A.z,this._w=A.w,this._onChangeCallback(),this}setFromEuler(A,t=!0){const e=A._x,i=A._y,s=A._z,n=A._order,r=Math.cos,a=Math.sin,o=r(e/2),B=r(i/2),I=r(s/2),Q=a(e/2),h=a(i/2),C=a(s/2);switch(n){case"XYZ":this._x=Q*B*I+o*h*C,this._y=o*h*I-Q*B*C,this._z=o*B*C+Q*h*I,this._w=o*B*I-Q*h*C;break;case"YXZ":this._x=Q*B*I+o*h*C,this._y=o*h*I-Q*B*C,this._z=o*B*C-Q*h*I,this._w=o*B*I+Q*h*C;break;case"ZXY":this._x=Q*B*I-o*h*C,this._y=o*h*I+Q*B*C,this._z=o*B*C+Q*h*I,this._w=o*B*I-Q*h*C;break;case"ZYX":this._x=Q*B*I-o*h*C,this._y=o*h*I+Q*B*C,this._z=o*B*C-Q*h*I,this._w=o*B*I+Q*h*C;break;case"YZX":this._x=Q*B*I+o*h*C,this._y=o*h*I+Q*B*C,this._z=o*B*C-Q*h*I,this._w=o*B*I-Q*h*C;break;case"XZY":this._x=Q*B*I-o*h*C,this._y=o*h*I-Q*B*C,this._z=o*B*C+Q*h*I,this._w=o*B*I+Q*h*C;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+n)}return t===!0&&this._onChangeCallback(),this}setFromAxisAngle(A,t){const e=t/2,i=Math.sin(e);return this._x=A.x*i,this._y=A.y*i,this._z=A.z*i,this._w=Math.cos(e),this._onChangeCallback(),this}setFromRotationMatrix(A){const t=A.elements,e=t[0],i=t[4],s=t[8],n=t[1],r=t[5],a=t[9],o=t[2],B=t[6],I=t[10],Q=e+r+I;if(Q>0){const h=.5/Math.sqrt(Q+1);this._w=.25/h,this._x=(B-a)*h,this._y=(s-o)*h,this._z=(n-i)*h}else if(e>r&&e>I){const h=2*Math.sqrt(1+e-r-I);this._w=(B-a)/h,this._x=.25*h,this._y=(i+n)/h,this._z=(s+o)/h}else if(r>I){const h=2*Math.sqrt(1+r-e-I);this._w=(s-o)/h,this._x=(i+n)/h,this._y=.25*h,this._z=(a+B)/h}else{const h=2*Math.sqrt(1+I-e-r);this._w=(n-i)/h,this._x=(s+o)/h,this._y=(a+B)/h,this._z=.25*h}return this._onChangeCallback(),this}setFromUnitVectors(A,t){let e=A.dot(t)+1;return e<Number.EPSILON?(e=0,Math.abs(A.x)>Math.abs(A.z)?(this._x=-A.y,this._y=A.x,this._z=0,this._w=e):(this._x=0,this._y=-A.z,this._z=A.y,this._w=e)):(this._x=A.y*t.z-A.z*t.y,this._y=A.z*t.x-A.x*t.z,this._z=A.x*t.y-A.y*t.x,this._w=e),this.normalize()}angleTo(A){return 2*Math.acos(Math.abs(J(this.dot(A),-1,1)))}rotateTowards(A,t){const e=this.angleTo(A);if(e===0)return this;const i=Math.min(1,t/e);return this.slerp(A,i),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(A){return this._x*A._x+this._y*A._y+this._z*A._z+this._w*A._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let A=this.length();return A===0?(this._x=0,this._y=0,this._z=0,this._w=1):(A=1/A,this._x=this._x*A,this._y=this._y*A,this._z=this._z*A,this._w=this._w*A),this._onChangeCallback(),this}multiply(A){return this.multiplyQuaternions(this,A)}premultiply(A){return this.multiplyQuaternions(A,this)}multiplyQuaternions(A,t){const e=A._x,i=A._y,s=A._z,n=A._w,r=t._x,a=t._y,o=t._z,B=t._w;return this._x=e*B+n*r+i*o-s*a,this._y=i*B+n*a+s*r-e*o,this._z=s*B+n*o+e*a-i*r,this._w=n*B-e*r-i*a-s*o,this._onChangeCallback(),this}slerp(A,t){if(t===0)return this;if(t===1)return this.copy(A);const e=this._x,i=this._y,s=this._z,n=this._w;let r=n*A._w+e*A._x+i*A._y+s*A._z;if(r<0?(this._w=-A._w,this._x=-A._x,this._y=-A._y,this._z=-A._z,r=-r):this.copy(A),r>=1)return this._w=n,this._x=e,this._y=i,this._z=s,this;const a=1-r*r;if(a<=Number.EPSILON){const h=1-t;return this._w=h*n+t*this._w,this._x=h*e+t*this._x,this._y=h*i+t*this._y,this._z=h*s+t*this._z,this.normalize(),this}const o=Math.sqrt(a),B=Math.atan2(o,r),I=Math.sin((1-t)*B)/o,Q=Math.sin(t*B)/o;return this._w=n*I+this._w*Q,this._x=e*I+this._x*Q,this._y=i*I+this._y*Q,this._z=s*I+this._z*Q,this._onChangeCallback(),this}slerpQuaternions(A,t,e){return this.copy(A).slerp(t,e)}random(){const A=2*Math.PI*Math.random(),t=2*Math.PI*Math.random(),e=Math.random(),i=Math.sqrt(1-e),s=Math.sqrt(e);return this.set(i*Math.sin(A),i*Math.cos(A),s*Math.sin(t),s*Math.cos(t))}equals(A){return A._x===this._x&&A._y===this._y&&A._z===this._z&&A._w===this._w}fromArray(A,t=0){return this._x=A[t],this._y=A[t+1],this._z=A[t+2],this._w=A[t+3],this._onChangeCallback(),this}toArray(A=[],t=0){return A[t]=this._x,A[t+1]=this._y,A[t+2]=this._z,A[t+3]=this._w,A}fromBufferAttribute(A,t){return this._x=A.getX(t),this._y=A.getY(t),this._z=A.getZ(t),this._w=A.getW(t),this._onChangeCallback(),this}toJSON(){return this.toArray()}_onChange(A){return this._onChangeCallback=A,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._w}}class u{constructor(A=0,t=0,e=0){u.prototype.isVector3=!0,this.x=A,this.y=t,this.z=e}set(A,t,e){return e===void 0&&(e=this.z),this.x=A,this.y=t,this.z=e,this}setScalar(A){return this.x=A,this.y=A,this.z=A,this}setX(A){return this.x=A,this}setY(A){return this.y=A,this}setZ(A){return this.z=A,this}setComponent(A,t){switch(A){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;default:throw new Error("index is out of range: "+A)}return this}getComponent(A){switch(A){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+A)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(A){return this.x=A.x,this.y=A.y,this.z=A.z,this}add(A){return this.x+=A.x,this.y+=A.y,this.z+=A.z,this}addScalar(A){return this.x+=A,this.y+=A,this.z+=A,this}addVectors(A,t){return this.x=A.x+t.x,this.y=A.y+t.y,this.z=A.z+t.z,this}addScaledVector(A,t){return this.x+=A.x*t,this.y+=A.y*t,this.z+=A.z*t,this}sub(A){return this.x-=A.x,this.y-=A.y,this.z-=A.z,this}subScalar(A){return this.x-=A,this.y-=A,this.z-=A,this}subVectors(A,t){return this.x=A.x-t.x,this.y=A.y-t.y,this.z=A.z-t.z,this}multiply(A){return this.x*=A.x,this.y*=A.y,this.z*=A.z,this}multiplyScalar(A){return this.x*=A,this.y*=A,this.z*=A,this}multiplyVectors(A,t){return this.x=A.x*t.x,this.y=A.y*t.y,this.z=A.z*t.z,this}applyEuler(A){return this.applyQuaternion(ks.setFromEuler(A))}applyAxisAngle(A,t){return this.applyQuaternion(ks.setFromAxisAngle(A,t))}applyMatrix3(A){const t=this.x,e=this.y,i=this.z,s=A.elements;return this.x=s[0]*t+s[3]*e+s[6]*i,this.y=s[1]*t+s[4]*e+s[7]*i,this.z=s[2]*t+s[5]*e+s[8]*i,this}applyNormalMatrix(A){return this.applyMatrix3(A).normalize()}applyMatrix4(A){const t=this.x,e=this.y,i=this.z,s=A.elements,n=1/(s[3]*t+s[7]*e+s[11]*i+s[15]);return this.x=(s[0]*t+s[4]*e+s[8]*i+s[12])*n,this.y=(s[1]*t+s[5]*e+s[9]*i+s[13])*n,this.z=(s[2]*t+s[6]*e+s[10]*i+s[14])*n,this}applyQuaternion(A){const t=this.x,e=this.y,i=this.z,s=A.x,n=A.y,r=A.z,a=A.w,o=2*(n*i-r*e),B=2*(r*t-s*i),I=2*(s*e-n*t);return this.x=t+a*o+n*I-r*B,this.y=e+a*B+r*o-s*I,this.z=i+a*I+s*B-n*o,this}project(A){return this.applyMatrix4(A.matrixWorldInverse).applyMatrix4(A.projectionMatrix)}unproject(A){return this.applyMatrix4(A.projectionMatrixInverse).applyMatrix4(A.matrixWorld)}transformDirection(A){const t=this.x,e=this.y,i=this.z,s=A.elements;return this.x=s[0]*t+s[4]*e+s[8]*i,this.y=s[1]*t+s[5]*e+s[9]*i,this.z=s[2]*t+s[6]*e+s[10]*i,this.normalize()}divide(A){return this.x/=A.x,this.y/=A.y,this.z/=A.z,this}divideScalar(A){return this.multiplyScalar(1/A)}min(A){return this.x=Math.min(this.x,A.x),this.y=Math.min(this.y,A.y),this.z=Math.min(this.z,A.z),this}max(A){return this.x=Math.max(this.x,A.x),this.y=Math.max(this.y,A.y),this.z=Math.max(this.z,A.z),this}clamp(A,t){return this.x=J(this.x,A.x,t.x),this.y=J(this.y,A.y,t.y),this.z=J(this.z,A.z,t.z),this}clampScalar(A,t){return this.x=J(this.x,A,t),this.y=J(this.y,A,t),this.z=J(this.z,A,t),this}clampLength(A,t){const e=this.length();return this.divideScalar(e||1).multiplyScalar(J(e,A,t))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(A){return this.x*A.x+this.y*A.y+this.z*A.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(A){return this.normalize().multiplyScalar(A)}lerp(A,t){return this.x+=(A.x-this.x)*t,this.y+=(A.y-this.y)*t,this.z+=(A.z-this.z)*t,this}lerpVectors(A,t,e){return this.x=A.x+(t.x-A.x)*e,this.y=A.y+(t.y-A.y)*e,this.z=A.z+(t.z-A.z)*e,this}cross(A){return this.crossVectors(this,A)}crossVectors(A,t){const e=A.x,i=A.y,s=A.z,n=t.x,r=t.y,a=t.z;return this.x=i*a-s*r,this.y=s*n-e*a,this.z=e*r-i*n,this}projectOnVector(A){const t=A.lengthSq();if(t===0)return this.set(0,0,0);const e=A.dot(this)/t;return this.copy(A).multiplyScalar(e)}projectOnPlane(A){return ui.copy(this).projectOnVector(A),this.sub(ui)}reflect(A){return this.sub(ui.copy(A).multiplyScalar(2*this.dot(A)))}angleTo(A){const t=Math.sqrt(this.lengthSq()*A.lengthSq());if(t===0)return Math.PI/2;const e=this.dot(A)/t;return Math.acos(J(e,-1,1))}distanceTo(A){return Math.sqrt(this.distanceToSquared(A))}distanceToSquared(A){const t=this.x-A.x,e=this.y-A.y,i=this.z-A.z;return t*t+e*e+i*i}manhattanDistanceTo(A){return Math.abs(this.x-A.x)+Math.abs(this.y-A.y)+Math.abs(this.z-A.z)}setFromSpherical(A){return this.setFromSphericalCoords(A.radius,A.phi,A.theta)}setFromSphericalCoords(A,t,e){const i=Math.sin(t)*A;return this.x=i*Math.sin(e),this.y=Math.cos(t)*A,this.z=i*Math.cos(e),this}setFromCylindrical(A){return this.setFromCylindricalCoords(A.radius,A.theta,A.y)}setFromCylindricalCoords(A,t,e){return this.x=A*Math.sin(t),this.y=e,this.z=A*Math.cos(t),this}setFromMatrixPosition(A){const t=A.elements;return this.x=t[12],this.y=t[13],this.z=t[14],this}setFromMatrixScale(A){const t=this.setFromMatrixColumn(A,0).length(),e=this.setFromMatrixColumn(A,1).length(),i=this.setFromMatrixColumn(A,2).length();return this.x=t,this.y=e,this.z=i,this}setFromMatrixColumn(A,t){return this.fromArray(A.elements,t*4)}setFromMatrix3Column(A,t){return this.fromArray(A.elements,t*3)}setFromEuler(A){return this.x=A._x,this.y=A._y,this.z=A._z,this}setFromColor(A){return this.x=A.r,this.y=A.g,this.z=A.b,this}equals(A){return A.x===this.x&&A.y===this.y&&A.z===this.z}fromArray(A,t=0){return this.x=A[t],this.y=A[t+1],this.z=A[t+2],this}toArray(A=[],t=0){return A[t]=this.x,A[t+1]=this.y,A[t+2]=this.z,A}fromBufferAttribute(A,t){return this.x=A.getX(t),this.y=A.getY(t),this.z=A.getZ(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}randomDirection(){const A=Math.random()*Math.PI*2,t=Math.random()*2-1,e=Math.sqrt(1-t*t);return this.x=e*Math.cos(A),this.y=t,this.z=e*Math.sin(A),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z}}const ui=new u,ks=new aA;class Gt{constructor(A=new u(1/0,1/0,1/0),t=new u(-1/0,-1/0,-1/0)){this.isBox3=!0,this.min=A,this.max=t}set(A,t){return this.min.copy(A),this.max.copy(t),this}setFromArray(A){this.makeEmpty();for(let t=0,e=A.length;t<e;t+=3)this.expandByPoint(JA.fromArray(A,t));return this}setFromBufferAttribute(A){this.makeEmpty();for(let t=0,e=A.count;t<e;t++)this.expandByPoint(JA.fromBufferAttribute(A,t));return this}setFromPoints(A){this.makeEmpty();for(let t=0,e=A.length;t<e;t++)this.expandByPoint(A[t]);return this}setFromCenterAndSize(A,t){const e=JA.copy(t).multiplyScalar(.5);return this.min.copy(A).sub(e),this.max.copy(A).add(e),this}setFromObject(A,t=!1){return this.makeEmpty(),this.expandByObject(A,t)}clone(){return new this.constructor().copy(this)}copy(A){return this.min.copy(A.min),this.max.copy(A.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(A){return this.isEmpty()?A.set(0,0,0):A.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(A){return this.isEmpty()?A.set(0,0,0):A.subVectors(this.max,this.min)}expandByPoint(A){return this.min.min(A),this.max.max(A),this}expandByVector(A){return this.min.sub(A),this.max.add(A),this}expandByScalar(A){return this.min.addScalar(-A),this.max.addScalar(A),this}expandByObject(A,t=!1){A.updateWorldMatrix(!1,!1);const e=A.geometry;if(e!==void 0){const s=e.getAttribute("position");if(t===!0&&s!==void 0&&A.isInstancedMesh!==!0)for(let n=0,r=s.count;n<r;n++)A.isMesh===!0?A.getVertexPosition(n,JA):JA.fromBufferAttribute(s,n),JA.applyMatrix4(A.matrixWorld),this.expandByPoint(JA);else A.boundingBox!==void 0?(A.boundingBox===null&&A.computeBoundingBox(),xe.copy(A.boundingBox)):(e.boundingBox===null&&e.computeBoundingBox(),xe.copy(e.boundingBox)),xe.applyMatrix4(A.matrixWorld),this.union(xe)}const i=A.children;for(let s=0,n=i.length;s<n;s++)this.expandByObject(i[s],t);return this}containsPoint(A){return A.x>=this.min.x&&A.x<=this.max.x&&A.y>=this.min.y&&A.y<=this.max.y&&A.z>=this.min.z&&A.z<=this.max.z}containsBox(A){return this.min.x<=A.min.x&&A.max.x<=this.max.x&&this.min.y<=A.min.y&&A.max.y<=this.max.y&&this.min.z<=A.min.z&&A.max.z<=this.max.z}getParameter(A,t){return t.set((A.x-this.min.x)/(this.max.x-this.min.x),(A.y-this.min.y)/(this.max.y-this.min.y),(A.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(A){return A.max.x>=this.min.x&&A.min.x<=this.max.x&&A.max.y>=this.min.y&&A.min.y<=this.max.y&&A.max.z>=this.min.z&&A.min.z<=this.max.z}intersectsSphere(A){return this.clampPoint(A.center,JA),JA.distanceToSquared(A.center)<=A.radius*A.radius}intersectsPlane(A){let t,e;return A.normal.x>0?(t=A.normal.x*this.min.x,e=A.normal.x*this.max.x):(t=A.normal.x*this.max.x,e=A.normal.x*this.min.x),A.normal.y>0?(t+=A.normal.y*this.min.y,e+=A.normal.y*this.max.y):(t+=A.normal.y*this.max.y,e+=A.normal.y*this.min.y),A.normal.z>0?(t+=A.normal.z*this.min.z,e+=A.normal.z*this.max.z):(t+=A.normal.z*this.max.z,e+=A.normal.z*this.min.z),t<=-A.constant&&e>=-A.constant}intersectsTriangle(A){if(this.isEmpty())return!1;this.getCenter(oe),Me.subVectors(this.max,oe),Ut.subVectors(A.a,oe),bt.subVectors(A.b,oe),Lt.subVectors(A.c,oe),gt.subVectors(bt,Ut),ot.subVectors(Lt,bt),dt.subVectors(Ut,Lt);let t=[0,-gt.z,gt.y,0,-ot.z,ot.y,0,-dt.z,dt.y,gt.z,0,-gt.x,ot.z,0,-ot.x,dt.z,0,-dt.x,-gt.y,gt.x,0,-ot.y,ot.x,0,-dt.y,dt.x,0];return!di(t,Ut,bt,Lt,Me)||(t=[1,0,0,0,1,0,0,0,1],!di(t,Ut,bt,Lt,Me))?!1:(Se.crossVectors(gt,ot),t=[Se.x,Se.y,Se.z],di(t,Ut,bt,Lt,Me))}clampPoint(A,t){return t.copy(A).clamp(this.min,this.max)}distanceToPoint(A){return this.clampPoint(A,JA).distanceTo(A)}getBoundingSphere(A){return this.isEmpty()?A.makeEmpty():(this.getCenter(A.center),A.radius=this.getSize(JA).length()*.5),A}intersect(A){return this.min.max(A.min),this.max.min(A.max),this.isEmpty()&&this.makeEmpty(),this}union(A){return this.min.min(A.min),this.max.max(A.max),this}applyMatrix4(A){return this.isEmpty()?this:(VA[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(A),VA[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(A),VA[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(A),VA[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(A),VA[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(A),VA[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(A),VA[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(A),VA[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(A),this.setFromPoints(VA),this)}translate(A){return this.min.add(A),this.max.add(A),this}equals(A){return A.min.equals(this.min)&&A.max.equals(this.max)}}const VA=[new u,new u,new u,new u,new u,new u,new u,new u],JA=new u,xe=new Gt,Ut=new u,bt=new u,Lt=new u,gt=new u,ot=new u,dt=new u,oe=new u,Me=new u,Se=new u,yt=new u;function di(g,A,t,e,i){for(let s=0,n=g.length-3;s<=n;s+=3){yt.fromArray(g,s);const r=i.x*Math.abs(yt.x)+i.y*Math.abs(yt.y)+i.z*Math.abs(yt.z),a=A.dot(yt),o=t.dot(yt),B=e.dot(yt);if(Math.max(-Math.max(a,o,B),Math.min(a,o,B))>r)return!1}return!0}const Br=new Gt,Ie=new u,yi=new u;class Rs{constructor(A=new u,t=-1){this.isSphere=!0,this.center=A,this.radius=t}set(A,t){return this.center.copy(A),this.radius=t,this}setFromPoints(A,t){const e=this.center;t!==void 0?e.copy(t):Br.setFromPoints(A).getCenter(e);let i=0;for(let s=0,n=A.length;s<n;s++)i=Math.max(i,e.distanceToSquared(A[s]));return this.radius=Math.sqrt(i),this}copy(A){return this.center.copy(A.center),this.radius=A.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(A){return A.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(A){return A.distanceTo(this.center)-this.radius}intersectsSphere(A){const t=this.radius+A.radius;return A.center.distanceToSquared(this.center)<=t*t}intersectsBox(A){return A.intersectsSphere(this)}intersectsPlane(A){return Math.abs(A.distanceToPoint(this.center))<=this.radius}clampPoint(A,t){const e=this.center.distanceToSquared(A);return t.copy(A),e>this.radius*this.radius&&(t.sub(this.center).normalize(),t.multiplyScalar(this.radius).add(this.center)),t}getBoundingBox(A){return this.isEmpty()?(A.makeEmpty(),A):(A.set(this.center,this.center),A.expandByScalar(this.radius),A)}applyMatrix4(A){return this.center.applyMatrix4(A),this.radius=this.radius*A.getMaxScaleOnAxis(),this}translate(A){return this.center.add(A),this}expandByPoint(A){if(this.isEmpty())return this.center.copy(A),this.radius=0,this;Ie.subVectors(A,this.center);const t=Ie.lengthSq();if(t>this.radius*this.radius){const e=Math.sqrt(t),i=(e-this.radius)*.5;this.center.addScaledVector(Ie,i/e),this.radius+=i}return this}union(A){return A.isEmpty()?this:this.isEmpty()?(this.copy(A),this):(this.center.equals(A.center)===!0?this.radius=Math.max(this.radius,A.radius):(yi.subVectors(A.center,this.center).setLength(A.radius),this.expandByPoint(Ie.copy(A.center).add(yi)),this.expandByPoint(Ie.copy(A.center).sub(yi))),this)}equals(A){return A.center.equals(this.center)&&A.radius===this.radius}clone(){return new this.constructor().copy(this)}}const PA=new u,fi=new u,Fe=new u,It=new u,wi=new u,Ne=new u,pi=new u;class Qr{constructor(A=new u,t=new u(0,0,-1)){this.origin=A,this.direction=t}set(A,t){return this.origin.copy(A),this.direction.copy(t),this}copy(A){return this.origin.copy(A.origin),this.direction.copy(A.direction),this}at(A,t){return t.copy(this.origin).addScaledVector(this.direction,A)}lookAt(A){return this.direction.copy(A).sub(this.origin).normalize(),this}recast(A){return this.origin.copy(this.at(A,PA)),this}closestPointToPoint(A,t){t.subVectors(A,this.origin);const e=t.dot(this.direction);return e<0?t.copy(this.origin):t.copy(this.origin).addScaledVector(this.direction,e)}distanceToPoint(A){return Math.sqrt(this.distanceSqToPoint(A))}distanceSqToPoint(A){const t=PA.subVectors(A,this.origin).dot(this.direction);return t<0?this.origin.distanceToSquared(A):(PA.copy(this.origin).addScaledVector(this.direction,t),PA.distanceToSquared(A))}distanceSqToSegment(A,t,e,i){fi.copy(A).add(t).multiplyScalar(.5),Fe.copy(t).sub(A).normalize(),It.copy(this.origin).sub(fi);const s=A.distanceTo(t)*.5,n=-this.direction.dot(Fe),r=It.dot(this.direction),a=-It.dot(Fe),o=It.lengthSq(),B=Math.abs(1-n*n);let I,Q,h,C;if(B>0)if(I=n*a-r,Q=n*r-a,C=s*B,I>=0)if(Q>=-C)if(Q<=C){const E=1/B;I*=E,Q*=E,h=I*(I+n*Q+2*r)+Q*(n*I+Q+2*a)+o}else Q=s,I=Math.max(0,-(n*Q+r)),h=-I*I+Q*(Q+2*a)+o;else Q=-s,I=Math.max(0,-(n*Q+r)),h=-I*I+Q*(Q+2*a)+o;else Q<=-C?(I=Math.max(0,-(-n*s+r)),Q=I>0?-s:Math.min(Math.max(-s,-a),s),h=-I*I+Q*(Q+2*a)+o):Q<=C?(I=0,Q=Math.min(Math.max(-s,-a),s),h=Q*(Q+2*a)+o):(I=Math.max(0,-(n*s+r)),Q=I>0?s:Math.min(Math.max(-s,-a),s),h=-I*I+Q*(Q+2*a)+o);else Q=n>0?-s:s,I=Math.max(0,-(n*Q+r)),h=-I*I+Q*(Q+2*a)+o;return e&&e.copy(this.origin).addScaledVector(this.direction,I),i&&i.copy(fi).addScaledVector(Fe,Q),h}intersectSphere(A,t){PA.subVectors(A.center,this.origin);const e=PA.dot(this.direction),i=PA.dot(PA)-e*e,s=A.radius*A.radius;if(i>s)return null;const n=Math.sqrt(s-i),r=e-n,a=e+n;return a<0?null:r<0?this.at(a,t):this.at(r,t)}intersectsSphere(A){return this.distanceSqToPoint(A.center)<=A.radius*A.radius}distanceToPlane(A){const t=A.normal.dot(this.direction);if(t===0)return A.distanceToPoint(this.origin)===0?0:null;const e=-(this.origin.dot(A.normal)+A.constant)/t;return e>=0?e:null}intersectPlane(A,t){const e=this.distanceToPlane(A);return e===null?null:this.at(e,t)}intersectsPlane(A){const t=A.distanceToPoint(this.origin);return t===0||A.normal.dot(this.direction)*t<0}intersectBox(A,t){let e,i,s,n,r,a;const o=1/this.direction.x,B=1/this.direction.y,I=1/this.direction.z,Q=this.origin;return o>=0?(e=(A.min.x-Q.x)*o,i=(A.max.x-Q.x)*o):(e=(A.max.x-Q.x)*o,i=(A.min.x-Q.x)*o),B>=0?(s=(A.min.y-Q.y)*B,n=(A.max.y-Q.y)*B):(s=(A.max.y-Q.y)*B,n=(A.min.y-Q.y)*B),e>n||s>i||((s>e||isNaN(e))&&(e=s),(n<i||isNaN(i))&&(i=n),I>=0?(r=(A.min.z-Q.z)*I,a=(A.max.z-Q.z)*I):(r=(A.max.z-Q.z)*I,a=(A.min.z-Q.z)*I),e>a||r>i)||((r>e||e!==e)&&(e=r),(a<i||i!==i)&&(i=a),i<0)?null:this.at(e>=0?e:i,t)}intersectsBox(A){return this.intersectBox(A,PA)!==null}intersectTriangle(A,t,e,i,s){wi.subVectors(t,A),Ne.subVectors(e,A),pi.crossVectors(wi,Ne);let n=this.direction.dot(pi),r;if(n>0){if(i)return null;r=1}else if(n<0)r=-1,n=-n;else return null;It.subVectors(this.origin,A);const a=r*this.direction.dot(Ne.crossVectors(It,Ne));if(a<0)return null;const o=r*this.direction.dot(wi.cross(It));if(o<0||a+o>n)return null;const B=-r*It.dot(pi);return B<0?null:this.at(B/n,s)}applyMatrix4(A){return this.origin.applyMatrix4(A),this.direction.transformDirection(A),this}equals(A){return A.origin.equals(this.origin)&&A.direction.equals(this.direction)}clone(){return new this.constructor().copy(this)}}class EA{constructor(A,t,e,i,s,n,r,a,o,B,I,Q,h,C,E,c){EA.prototype.isMatrix4=!0,this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],A!==void 0&&this.set(A,t,e,i,s,n,r,a,o,B,I,Q,h,C,E,c)}set(A,t,e,i,s,n,r,a,o,B,I,Q,h,C,E,c){const l=this.elements;return l[0]=A,l[4]=t,l[8]=e,l[12]=i,l[1]=s,l[5]=n,l[9]=r,l[13]=a,l[2]=o,l[6]=B,l[10]=I,l[14]=Q,l[3]=h,l[7]=C,l[11]=E,l[15]=c,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return new EA().fromArray(this.elements)}copy(A){const t=this.elements,e=A.elements;return t[0]=e[0],t[1]=e[1],t[2]=e[2],t[3]=e[3],t[4]=e[4],t[5]=e[5],t[6]=e[6],t[7]=e[7],t[8]=e[8],t[9]=e[9],t[10]=e[10],t[11]=e[11],t[12]=e[12],t[13]=e[13],t[14]=e[14],t[15]=e[15],this}copyPosition(A){const t=this.elements,e=A.elements;return t[12]=e[12],t[13]=e[13],t[14]=e[14],this}setFromMatrix3(A){const t=A.elements;return this.set(t[0],t[3],t[6],0,t[1],t[4],t[7],0,t[2],t[5],t[8],0,0,0,0,1),this}extractBasis(A,t,e){return A.setFromMatrixColumn(this,0),t.setFromMatrixColumn(this,1),e.setFromMatrixColumn(this,2),this}makeBasis(A,t,e){return this.set(A.x,t.x,e.x,0,A.y,t.y,e.y,0,A.z,t.z,e.z,0,0,0,0,1),this}extractRotation(A){const t=this.elements,e=A.elements,i=1/Yt.setFromMatrixColumn(A,0).length(),s=1/Yt.setFromMatrixColumn(A,1).length(),n=1/Yt.setFromMatrixColumn(A,2).length();return t[0]=e[0]*i,t[1]=e[1]*i,t[2]=e[2]*i,t[3]=0,t[4]=e[4]*s,t[5]=e[5]*s,t[6]=e[6]*s,t[7]=0,t[8]=e[8]*n,t[9]=e[9]*n,t[10]=e[10]*n,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromEuler(A){const t=this.elements,e=A.x,i=A.y,s=A.z,n=Math.cos(e),r=Math.sin(e),a=Math.cos(i),o=Math.sin(i),B=Math.cos(s),I=Math.sin(s);if(A.order==="XYZ"){const Q=n*B,h=n*I,C=r*B,E=r*I;t[0]=a*B,t[4]=-a*I,t[8]=o,t[1]=h+C*o,t[5]=Q-E*o,t[9]=-r*a,t[2]=E-Q*o,t[6]=C+h*o,t[10]=n*a}else if(A.order==="YXZ"){const Q=a*B,h=a*I,C=o*B,E=o*I;t[0]=Q+E*r,t[4]=C*r-h,t[8]=n*o,t[1]=n*I,t[5]=n*B,t[9]=-r,t[2]=h*r-C,t[6]=E+Q*r,t[10]=n*a}else if(A.order==="ZXY"){const Q=a*B,h=a*I,C=o*B,E=o*I;t[0]=Q-E*r,t[4]=-n*I,t[8]=C+h*r,t[1]=h+C*r,t[5]=n*B,t[9]=E-Q*r,t[2]=-n*o,t[6]=r,t[10]=n*a}else if(A.order==="ZYX"){const Q=n*B,h=n*I,C=r*B,E=r*I;t[0]=a*B,t[4]=C*o-h,t[8]=Q*o+E,t[1]=a*I,t[5]=E*o+Q,t[9]=h*o-C,t[2]=-o,t[6]=r*a,t[10]=n*a}else if(A.order==="YZX"){const Q=n*a,h=n*o,C=r*a,E=r*o;t[0]=a*B,t[4]=E-Q*I,t[8]=C*I+h,t[1]=I,t[5]=n*B,t[9]=-r*B,t[2]=-o*B,t[6]=h*I+C,t[10]=Q-E*I}else if(A.order==="XZY"){const Q=n*a,h=n*o,C=r*a,E=r*o;t[0]=a*B,t[4]=-I,t[8]=o*B,t[1]=Q*I+E,t[5]=n*B,t[9]=h*I-C,t[2]=C*I-h,t[6]=r*B,t[10]=E*I+Q}return t[3]=0,t[7]=0,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromQuaternion(A){return this.compose(hr,A,Cr)}lookAt(A,t,e){const i=this.elements;return SA.subVectors(A,t),SA.lengthSq()===0&&(SA.z=1),SA.normalize(),Bt.crossVectors(e,SA),Bt.lengthSq()===0&&(Math.abs(e.z)===1?SA.x+=1e-4:SA.z+=1e-4,SA.normalize(),Bt.crossVectors(e,SA)),Bt.normalize(),ke.crossVectors(SA,Bt),i[0]=Bt.x,i[4]=ke.x,i[8]=SA.x,i[1]=Bt.y,i[5]=ke.y,i[9]=SA.y,i[2]=Bt.z,i[6]=ke.z,i[10]=SA.z,this}multiply(A){return this.multiplyMatrices(this,A)}premultiply(A){return this.multiplyMatrices(A,this)}multiplyMatrices(A,t){const e=A.elements,i=t.elements,s=this.elements,n=e[0],r=e[4],a=e[8],o=e[12],B=e[1],I=e[5],Q=e[9],h=e[13],C=e[2],E=e[6],c=e[10],l=e[14],y=e[3],d=e[7],f=e[11],p=e[15],m=i[0],x=i[4],w=i[8],D=i[12],N=i[1],S=i[5],M=i[9],F=i[13],k=i[2],b=i[6],R=i[10],G=i[14],P=i[3],L=i[7],Z=i[11],W=i[15];return s[0]=n*m+r*N+a*k+o*P,s[4]=n*x+r*S+a*b+o*L,s[8]=n*w+r*M+a*R+o*Z,s[12]=n*D+r*F+a*G+o*W,s[1]=B*m+I*N+Q*k+h*P,s[5]=B*x+I*S+Q*b+h*L,s[9]=B*w+I*M+Q*R+h*Z,s[13]=B*D+I*F+Q*G+h*W,s[2]=C*m+E*N+c*k+l*P,s[6]=C*x+E*S+c*b+l*L,s[10]=C*w+E*M+c*R+l*Z,s[14]=C*D+E*F+c*G+l*W,s[3]=y*m+d*N+f*k+p*P,s[7]=y*x+d*S+f*b+p*L,s[11]=y*w+d*M+f*R+p*Z,s[15]=y*D+d*F+f*G+p*W,this}multiplyScalar(A){const t=this.elements;return t[0]*=A,t[4]*=A,t[8]*=A,t[12]*=A,t[1]*=A,t[5]*=A,t[9]*=A,t[13]*=A,t[2]*=A,t[6]*=A,t[10]*=A,t[14]*=A,t[3]*=A,t[7]*=A,t[11]*=A,t[15]*=A,this}determinant(){const A=this.elements,t=A[0],e=A[4],i=A[8],s=A[12],n=A[1],r=A[5],a=A[9],o=A[13],B=A[2],I=A[6],Q=A[10],h=A[14],C=A[3],E=A[7],c=A[11],l=A[15];return C*(+s*a*I-i*o*I-s*r*Q+e*o*Q+i*r*h-e*a*h)+E*(+t*a*h-t*o*Q+s*n*Q-i*n*h+i*o*B-s*a*B)+c*(+t*o*I-t*r*h-s*n*I+e*n*h+s*r*B-e*o*B)+l*(-i*r*B-t*a*I+t*r*Q+i*n*I-e*n*Q+e*a*B)}transpose(){const A=this.elements;let t;return t=A[1],A[1]=A[4],A[4]=t,t=A[2],A[2]=A[8],A[8]=t,t=A[6],A[6]=A[9],A[9]=t,t=A[3],A[3]=A[12],A[12]=t,t=A[7],A[7]=A[13],A[13]=t,t=A[11],A[11]=A[14],A[14]=t,this}setPosition(A,t,e){const i=this.elements;return A.isVector3?(i[12]=A.x,i[13]=A.y,i[14]=A.z):(i[12]=A,i[13]=t,i[14]=e),this}invert(){const A=this.elements,t=A[0],e=A[1],i=A[2],s=A[3],n=A[4],r=A[5],a=A[6],o=A[7],B=A[8],I=A[9],Q=A[10],h=A[11],C=A[12],E=A[13],c=A[14],l=A[15],y=I*c*o-E*Q*o+E*a*h-r*c*h-I*a*l+r*Q*l,d=C*Q*o-B*c*o-C*a*h+n*c*h+B*a*l-n*Q*l,f=B*E*o-C*I*o+C*r*h-n*E*h-B*r*l+n*I*l,p=C*I*a-B*E*a-C*r*Q+n*E*Q+B*r*c-n*I*c,m=t*y+e*d+i*f+s*p;if(m===0)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const x=1/m;return A[0]=y*x,A[1]=(E*Q*s-I*c*s-E*i*h+e*c*h+I*i*l-e*Q*l)*x,A[2]=(r*c*s-E*a*s+E*i*o-e*c*o-r*i*l+e*a*l)*x,A[3]=(I*a*s-r*Q*s-I*i*o+e*Q*o+r*i*h-e*a*h)*x,A[4]=d*x,A[5]=(B*c*s-C*Q*s+C*i*h-t*c*h-B*i*l+t*Q*l)*x,A[6]=(C*a*s-n*c*s-C*i*o+t*c*o+n*i*l-t*a*l)*x,A[7]=(n*Q*s-B*a*s+B*i*o-t*Q*o-n*i*h+t*a*h)*x,A[8]=f*x,A[9]=(C*I*s-B*E*s-C*e*h+t*E*h+B*e*l-t*I*l)*x,A[10]=(n*E*s-C*r*s+C*e*o-t*E*o-n*e*l+t*r*l)*x,A[11]=(B*r*s-n*I*s-B*e*o+t*I*o+n*e*h-t*r*h)*x,A[12]=p*x,A[13]=(B*E*i-C*I*i+C*e*Q-t*E*Q-B*e*c+t*I*c)*x,A[14]=(C*r*i-n*E*i-C*e*a+t*E*a+n*e*c-t*r*c)*x,A[15]=(n*I*i-B*r*i+B*e*a-t*I*a-n*e*Q+t*r*Q)*x,this}scale(A){const t=this.elements,e=A.x,i=A.y,s=A.z;return t[0]*=e,t[4]*=i,t[8]*=s,t[1]*=e,t[5]*=i,t[9]*=s,t[2]*=e,t[6]*=i,t[10]*=s,t[3]*=e,t[7]*=i,t[11]*=s,this}getMaxScaleOnAxis(){const A=this.elements,t=A[0]*A[0]+A[1]*A[1]+A[2]*A[2],e=A[4]*A[4]+A[5]*A[5]+A[6]*A[6],i=A[8]*A[8]+A[9]*A[9]+A[10]*A[10];return Math.sqrt(Math.max(t,e,i))}makeTranslation(A,t,e){return A.isVector3?this.set(1,0,0,A.x,0,1,0,A.y,0,0,1,A.z,0,0,0,1):this.set(1,0,0,A,0,1,0,t,0,0,1,e,0,0,0,1),this}makeRotationX(A){const t=Math.cos(A),e=Math.sin(A);return this.set(1,0,0,0,0,t,-e,0,0,e,t,0,0,0,0,1),this}makeRotationY(A){const t=Math.cos(A),e=Math.sin(A);return this.set(t,0,e,0,0,1,0,0,-e,0,t,0,0,0,0,1),this}makeRotationZ(A){const t=Math.cos(A),e=Math.sin(A);return this.set(t,-e,0,0,e,t,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(A,t){const e=Math.cos(t),i=Math.sin(t),s=1-e,n=A.x,r=A.y,a=A.z,o=s*n,B=s*r;return this.set(o*n+e,o*r-i*a,o*a+i*r,0,o*r+i*a,B*r+e,B*a-i*n,0,o*a-i*r,B*a+i*n,s*a*a+e,0,0,0,0,1),this}makeScale(A,t,e){return this.set(A,0,0,0,0,t,0,0,0,0,e,0,0,0,0,1),this}makeShear(A,t,e,i,s,n){return this.set(1,e,s,0,A,1,n,0,t,i,1,0,0,0,0,1),this}compose(A,t,e){const i=this.elements,s=t._x,n=t._y,r=t._z,a=t._w,o=s+s,B=n+n,I=r+r,Q=s*o,h=s*B,C=s*I,E=n*B,c=n*I,l=r*I,y=a*o,d=a*B,f=a*I,p=e.x,m=e.y,x=e.z;return i[0]=(1-(E+l))*p,i[1]=(h+f)*p,i[2]=(C-d)*p,i[3]=0,i[4]=(h-f)*m,i[5]=(1-(Q+l))*m,i[6]=(c+y)*m,i[7]=0,i[8]=(C+d)*x,i[9]=(c-y)*x,i[10]=(1-(Q+E))*x,i[11]=0,i[12]=A.x,i[13]=A.y,i[14]=A.z,i[15]=1,this}decompose(A,t,e){const i=this.elements;let s=Yt.set(i[0],i[1],i[2]).length();const n=Yt.set(i[4],i[5],i[6]).length(),r=Yt.set(i[8],i[9],i[10]).length();this.determinant()<0&&(s=-s),A.x=i[12],A.y=i[13],A.z=i[14],TA.copy(this);const o=1/s,B=1/n,I=1/r;return TA.elements[0]*=o,TA.elements[1]*=o,TA.elements[2]*=o,TA.elements[4]*=B,TA.elements[5]*=B,TA.elements[6]*=B,TA.elements[8]*=I,TA.elements[9]*=I,TA.elements[10]*=I,t.setFromRotationMatrix(TA),e.x=s,e.y=n,e.z=r,this}makePerspective(A,t,e,i,s,n,r=ne){const a=this.elements,o=2*s/(t-A),B=2*s/(e-i),I=(t+A)/(t-A),Q=(e+i)/(e-i);let h,C;if(r===ne)h=-(n+s)/(n-s),C=-2*n*s/(n-s);else if(r===ms)h=-n/(n-s),C=-n*s/(n-s);else throw new Error("THREE.Matrix4.makePerspective(): Invalid coordinate system: "+r);return a[0]=o,a[4]=0,a[8]=I,a[12]=0,a[1]=0,a[5]=B,a[9]=Q,a[13]=0,a[2]=0,a[6]=0,a[10]=h,a[14]=C,a[3]=0,a[7]=0,a[11]=-1,a[15]=0,this}makeOrthographic(A,t,e,i,s,n,r=ne){const a=this.elements,o=1/(t-A),B=1/(e-i),I=1/(n-s),Q=(t+A)*o,h=(e+i)*B;let C,E;if(r===ne)C=(n+s)*I,E=-2*I;else if(r===ms)C=s*I,E=-1*I;else throw new Error("THREE.Matrix4.makeOrthographic(): Invalid coordinate system: "+r);return a[0]=2*o,a[4]=0,a[8]=0,a[12]=-Q,a[1]=0,a[5]=2*B,a[9]=0,a[13]=-h,a[2]=0,a[6]=0,a[10]=E,a[14]=-C,a[3]=0,a[7]=0,a[11]=0,a[15]=1,this}equals(A){const t=this.elements,e=A.elements;for(let i=0;i<16;i++)if(t[i]!==e[i])return!1;return!0}fromArray(A,t=0){for(let e=0;e<16;e++)this.elements[e]=A[e+t];return this}toArray(A=[],t=0){const e=this.elements;return A[t]=e[0],A[t+1]=e[1],A[t+2]=e[2],A[t+3]=e[3],A[t+4]=e[4],A[t+5]=e[5],A[t+6]=e[6],A[t+7]=e[7],A[t+8]=e[8],A[t+9]=e[9],A[t+10]=e[10],A[t+11]=e[11],A[t+12]=e[12],A[t+13]=e[13],A[t+14]=e[14],A[t+15]=e[15],A}}const Yt=new u,TA=new EA,hr=new u(0,0,0),Cr=new u(1,1,1),Bt=new u,ke=new u,SA=new u,Gs=new EA,Us=new aA;class ft{constructor(A=0,t=0,e=0,i=ft.DEFAULT_ORDER){this.isEuler=!0,this._x=A,this._y=t,this._z=e,this._order=i}get x(){return this._x}set x(A){this._x=A,this._onChangeCallback()}get y(){return this._y}set y(A){this._y=A,this._onChangeCallback()}get z(){return this._z}set z(A){this._z=A,this._onChangeCallback()}get order(){return this._order}set order(A){this._order=A,this._onChangeCallback()}set(A,t,e,i=this._order){return this._x=A,this._y=t,this._z=e,this._order=i,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(A){return this._x=A._x,this._y=A._y,this._z=A._z,this._order=A._order,this._onChangeCallback(),this}setFromRotationMatrix(A,t=this._order,e=!0){const i=A.elements,s=i[0],n=i[4],r=i[8],a=i[1],o=i[5],B=i[9],I=i[2],Q=i[6],h=i[10];switch(t){case"XYZ":this._y=Math.asin(J(r,-1,1)),Math.abs(r)<.9999999?(this._x=Math.atan2(-B,h),this._z=Math.atan2(-n,s)):(this._x=Math.atan2(Q,o),this._z=0);break;case"YXZ":this._x=Math.asin(-J(B,-1,1)),Math.abs(B)<.9999999?(this._y=Math.atan2(r,h),this._z=Math.atan2(a,o)):(this._y=Math.atan2(-I,s),this._z=0);break;case"ZXY":this._x=Math.asin(J(Q,-1,1)),Math.abs(Q)<.9999999?(this._y=Math.atan2(-I,h),this._z=Math.atan2(-n,o)):(this._y=0,this._z=Math.atan2(a,s));break;case"ZYX":this._y=Math.asin(-J(I,-1,1)),Math.abs(I)<.9999999?(this._x=Math.atan2(Q,h),this._z=Math.atan2(a,s)):(this._x=0,this._z=Math.atan2(-n,o));break;case"YZX":this._z=Math.asin(J(a,-1,1)),Math.abs(a)<.9999999?(this._x=Math.atan2(-B,o),this._y=Math.atan2(-I,s)):(this._x=0,this._y=Math.atan2(r,h));break;case"XZY":this._z=Math.asin(-J(n,-1,1)),Math.abs(n)<.9999999?(this._x=Math.atan2(Q,o),this._y=Math.atan2(r,s)):(this._x=Math.atan2(-B,h),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+t)}return this._order=t,e===!0&&this._onChangeCallback(),this}setFromQuaternion(A,t,e){return Gs.makeRotationFromQuaternion(A),this.setFromRotationMatrix(Gs,t,e)}setFromVector3(A,t=this._order){return this.set(A.x,A.y,A.z,t)}reorder(A){return Us.setFromEuler(this),this.setFromQuaternion(Us,A)}equals(A){return A._x===this._x&&A._y===this._y&&A._z===this._z&&A._order===this._order}fromArray(A){return this._x=A[0],this._y=A[1],this._z=A[2],A[3]!==void 0&&(this._order=A[3]),this._onChangeCallback(),this}toArray(A=[],t=0){return A[t]=this._x,A[t+1]=this._y,A[t+2]=this._z,A[t+3]=this._order,A}_onChange(A){return this._onChangeCallback=A,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._order}}ft.DEFAULT_ORDER="XYZ";class Er{constructor(){this.mask=1}set(A){this.mask=(1<<A|0)>>>0}enable(A){this.mask|=1<<A|0}enableAll(){this.mask=-1}toggle(A){this.mask^=1<<A|0}disable(A){this.mask&=~(1<<A|0)}disableAll(){this.mask=0}test(A){return(this.mask&A.mask)!==0}isEnabled(A){return(this.mask&(1<<A|0))!==0}}let cr=0;const bs=new u,Jt=new aA,XA=new EA,Re=new u,Be=new u,lr=new u,ur=new aA,Ls=new u(1,0,0),Ys=new u(0,1,0),Js=new u(0,0,1),Ts={type:"added"},dr={type:"removed"},Tt={type:"childadded",child:null},Di={type:"childremoved",child:null};class mA extends re{constructor(){super(),this.isObject3D=!0,Object.defineProperty(this,"id",{value:cr++}),this.uuid=ae(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=mA.DEFAULT_UP.clone();const A=new u,t=new ft,e=new aA,i=new u(1,1,1);function s(){e.setFromEuler(t,!1)}function n(){t.setFromQuaternion(e,void 0,!1)}t._onChange(s),e._onChange(n),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:A},rotation:{configurable:!0,enumerable:!0,value:t},quaternion:{configurable:!0,enumerable:!0,value:e},scale:{configurable:!0,enumerable:!0,value:i},modelViewMatrix:{value:new EA},normalMatrix:{value:new WA}}),this.matrix=new EA,this.matrixWorld=new EA,this.matrixAutoUpdate=mA.DEFAULT_MATRIX_AUTO_UPDATE,this.matrixWorldAutoUpdate=mA.DEFAULT_MATRIX_WORLD_AUTO_UPDATE,this.matrixWorldNeedsUpdate=!1,this.layers=new Er,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.userData={}}onBeforeShadow(){}onAfterShadow(){}onBeforeRender(){}onAfterRender(){}applyMatrix4(A){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(A),this.matrix.decompose(this.position,this.quaternion,this.scale)}applyQuaternion(A){return this.quaternion.premultiply(A),this}setRotationFromAxisAngle(A,t){this.quaternion.setFromAxisAngle(A,t)}setRotationFromEuler(A){this.quaternion.setFromEuler(A,!0)}setRotationFromMatrix(A){this.quaternion.setFromRotationMatrix(A)}setRotationFromQuaternion(A){this.quaternion.copy(A)}rotateOnAxis(A,t){return Jt.setFromAxisAngle(A,t),this.quaternion.multiply(Jt),this}rotateOnWorldAxis(A,t){return Jt.setFromAxisAngle(A,t),this.quaternion.premultiply(Jt),this}rotateX(A){return this.rotateOnAxis(Ls,A)}rotateY(A){return this.rotateOnAxis(Ys,A)}rotateZ(A){return this.rotateOnAxis(Js,A)}translateOnAxis(A,t){return bs.copy(A).applyQuaternion(this.quaternion),this.position.add(bs.multiplyScalar(t)),this}translateX(A){return this.translateOnAxis(Ls,A)}translateY(A){return this.translateOnAxis(Ys,A)}translateZ(A){return this.translateOnAxis(Js,A)}localToWorld(A){return this.updateWorldMatrix(!0,!1),A.applyMatrix4(this.matrixWorld)}worldToLocal(A){return this.updateWorldMatrix(!0,!1),A.applyMatrix4(XA.copy(this.matrixWorld).invert())}lookAt(A,t,e){A.isVector3?Re.copy(A):Re.set(A,t,e);const i=this.parent;this.updateWorldMatrix(!0,!1),Be.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?XA.lookAt(Be,Re,this.up):XA.lookAt(Re,Be,this.up),this.quaternion.setFromRotationMatrix(XA),i&&(XA.extractRotation(i.matrixWorld),Jt.setFromRotationMatrix(XA),this.quaternion.premultiply(Jt.invert()))}add(A){if(arguments.length>1){for(let t=0;t<arguments.length;t++)this.add(arguments[t]);return this}return A===this?(console.error("THREE.Object3D.add: object can\'t be added as a child of itself.",A),this):(A&&A.isObject3D?(A.removeFromParent(),A.parent=this,this.children.push(A),A.dispatchEvent(Ts),Tt.child=A,this.dispatchEvent(Tt),Tt.child=null):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",A),this)}remove(A){if(arguments.length>1){for(let e=0;e<arguments.length;e++)this.remove(arguments[e]);return this}const t=this.children.indexOf(A);return t!==-1&&(A.parent=null,this.children.splice(t,1),A.dispatchEvent(dr),Di.child=A,this.dispatchEvent(Di),Di.child=null),this}removeFromParent(){const A=this.parent;return A!==null&&A.remove(this),this}clear(){return this.remove(...this.children)}attach(A){return this.updateWorldMatrix(!0,!1),XA.copy(this.matrixWorld).invert(),A.parent!==null&&(A.parent.updateWorldMatrix(!0,!1),XA.multiply(A.parent.matrixWorld)),A.applyMatrix4(XA),A.removeFromParent(),A.parent=this,this.children.push(A),A.updateWorldMatrix(!1,!0),A.dispatchEvent(Ts),Tt.child=A,this.dispatchEvent(Tt),Tt.child=null,this}getObjectById(A){return this.getObjectByProperty("id",A)}getObjectByName(A){return this.getObjectByProperty("name",A)}getObjectByProperty(A,t){if(this[A]===t)return this;for(let e=0,i=this.children.length;e<i;e++){const n=this.children[e].getObjectByProperty(A,t);if(n!==void 0)return n}}getObjectsByProperty(A,t,e=[]){this[A]===t&&e.push(this);const i=this.children;for(let s=0,n=i.length;s<n;s++)i[s].getObjectsByProperty(A,t,e);return e}getWorldPosition(A){return this.updateWorldMatrix(!0,!1),A.setFromMatrixPosition(this.matrixWorld)}getWorldQuaternion(A){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(Be,A,lr),A}getWorldScale(A){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(Be,ur,A),A}getWorldDirection(A){this.updateWorldMatrix(!0,!1);const t=this.matrixWorld.elements;return A.set(t[8],t[9],t[10]).normalize()}raycast(){}traverse(A){A(this);const t=this.children;for(let e=0,i=t.length;e<i;e++)t[e].traverse(A)}traverseVisible(A){if(this.visible===!1)return;A(this);const t=this.children;for(let e=0,i=t.length;e<i;e++)t[e].traverseVisible(A)}traverseAncestors(A){const t=this.parent;t!==null&&(A(t),t.traverseAncestors(A))}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}updateMatrixWorld(A){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||A)&&(this.matrixWorldAutoUpdate===!0&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix)),this.matrixWorldNeedsUpdate=!1,A=!0);const t=this.children;for(let e=0,i=t.length;e<i;e++)t[e].updateMatrixWorld(A)}updateWorldMatrix(A,t){const e=this.parent;if(A===!0&&e!==null&&e.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),this.matrixWorldAutoUpdate===!0&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix)),t===!0){const i=this.children;for(let s=0,n=i.length;s<n;s++)i[s].updateWorldMatrix(!1,!0)}}toJSON(A){const t=A===void 0||typeof A=="string",e={};t&&(A={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{},nodes:{}},e.metadata={version:4.6,type:"Object",generator:"Object3D.toJSON"});const i={};i.uuid=this.uuid,i.type=this.type,this.name!==""&&(i.name=this.name),this.castShadow===!0&&(i.castShadow=!0),this.receiveShadow===!0&&(i.receiveShadow=!0),this.visible===!1&&(i.visible=!1),this.frustumCulled===!1&&(i.frustumCulled=!1),this.renderOrder!==0&&(i.renderOrder=this.renderOrder),Object.keys(this.userData).length>0&&(i.userData=this.userData),i.layers=this.layers.mask,i.matrix=this.matrix.toArray(),i.up=this.up.toArray(),this.matrixAutoUpdate===!1&&(i.matrixAutoUpdate=!1),this.isInstancedMesh&&(i.type="InstancedMesh",i.count=this.count,i.instanceMatrix=this.instanceMatrix.toJSON(),this.instanceColor!==null&&(i.instanceColor=this.instanceColor.toJSON())),this.isBatchedMesh&&(i.type="BatchedMesh",i.perObjectFrustumCulled=this.perObjectFrustumCulled,i.sortObjects=this.sortObjects,i.drawRanges=this._drawRanges,i.reservedRanges=this._reservedRanges,i.visibility=this._visibility,i.active=this._active,i.bounds=this._bounds.map(r=>({boxInitialized:r.boxInitialized,boxMin:r.box.min.toArray(),boxMax:r.box.max.toArray(),sphereInitialized:r.sphereInitialized,sphereRadius:r.sphere.radius,sphereCenter:r.sphere.center.toArray()})),i.maxInstanceCount=this._maxInstanceCount,i.maxVertexCount=this._maxVertexCount,i.maxIndexCount=this._maxIndexCount,i.geometryInitialized=this._geometryInitialized,i.geometryCount=this._geometryCount,i.matricesTexture=this._matricesTexture.toJSON(A),this._colorsTexture!==null&&(i.colorsTexture=this._colorsTexture.toJSON(A)),this.boundingSphere!==null&&(i.boundingSphere={center:i.boundingSphere.center.toArray(),radius:i.boundingSphere.radius}),this.boundingBox!==null&&(i.boundingBox={min:i.boundingBox.min.toArray(),max:i.boundingBox.max.toArray()}));function s(r,a){return r[a.uuid]===void 0&&(r[a.uuid]=a.toJSON(A)),a.uuid}if(this.isScene)this.background&&(this.background.isColor?i.background=this.background.toJSON():this.background.isTexture&&(i.background=this.background.toJSON(A).uuid)),this.environment&&this.environment.isTexture&&this.environment.isRenderTargetTexture!==!0&&(i.environment=this.environment.toJSON(A).uuid);else if(this.isMesh||this.isLine||this.isPoints){i.geometry=s(A.geometries,this.geometry);const r=this.geometry.parameters;if(r!==void 0&&r.shapes!==void 0){const a=r.shapes;if(Array.isArray(a))for(let o=0,B=a.length;o<B;o++){const I=a[o];s(A.shapes,I)}else s(A.shapes,a)}}if(this.isSkinnedMesh&&(i.bindMode=this.bindMode,i.bindMatrix=this.bindMatrix.toArray(),this.skeleton!==void 0&&(s(A.skeletons,this.skeleton),i.skeleton=this.skeleton.uuid)),this.material!==void 0)if(Array.isArray(this.material)){const r=[];for(let a=0,o=this.material.length;a<o;a++)r.push(s(A.materials,this.material[a]));i.material=r}else i.material=s(A.materials,this.material);if(this.children.length>0){i.children=[];for(let r=0;r<this.children.length;r++)i.children.push(this.children[r].toJSON(A).object)}if(this.animations.length>0){i.animations=[];for(let r=0;r<this.animations.length;r++){const a=this.animations[r];i.animations.push(s(A.animations,a))}}if(t){const r=n(A.geometries),a=n(A.materials),o=n(A.textures),B=n(A.images),I=n(A.shapes),Q=n(A.skeletons),h=n(A.animations),C=n(A.nodes);r.length>0&&(e.geometries=r),a.length>0&&(e.materials=a),o.length>0&&(e.textures=o),B.length>0&&(e.images=B),I.length>0&&(e.shapes=I),Q.length>0&&(e.skeletons=Q),h.length>0&&(e.animations=h),C.length>0&&(e.nodes=C)}return e.object=i,e;function n(r){const a=[];for(const o in r){const B=r[o];delete B.metadata,a.push(B)}return a}}clone(A){return new this.constructor().copy(this,A)}copy(A,t=!0){if(this.name=A.name,this.up.copy(A.up),this.position.copy(A.position),this.rotation.order=A.rotation.order,this.quaternion.copy(A.quaternion),this.scale.copy(A.scale),this.matrix.copy(A.matrix),this.matrixWorld.copy(A.matrixWorld),this.matrixAutoUpdate=A.matrixAutoUpdate,this.matrixWorldAutoUpdate=A.matrixWorldAutoUpdate,this.matrixWorldNeedsUpdate=A.matrixWorldNeedsUpdate,this.layers.mask=A.layers.mask,this.visible=A.visible,this.castShadow=A.castShadow,this.receiveShadow=A.receiveShadow,this.frustumCulled=A.frustumCulled,this.renderOrder=A.renderOrder,this.animations=A.animations.slice(),this.userData=JSON.parse(JSON.stringify(A.userData)),t===!0)for(let e=0;e<A.children.length;e++){const i=A.children[e];this.add(i.clone())}return this}}mA.DEFAULT_UP=new u(0,1,0),mA.DEFAULT_MATRIX_AUTO_UPDATE=!0,mA.DEFAULT_MATRIX_WORLD_AUTO_UPDATE=!0;const HA=new u,$A=new u,mi=new u,At=new u,Ht=new u,vt=new u,Hs=new u,xi=new u,Mi=new u,Si=new u,Fi=new dA,Ni=new dA,ki=new dA;class vA{constructor(A=new u,t=new u,e=new u){this.a=A,this.b=t,this.c=e}static getNormal(A,t,e,i){i.subVectors(e,t),HA.subVectors(A,t),i.cross(HA);const s=i.lengthSq();return s>0?i.multiplyScalar(1/Math.sqrt(s)):i.set(0,0,0)}static getBarycoord(A,t,e,i,s){HA.subVectors(i,t),$A.subVectors(e,t),mi.subVectors(A,t);const n=HA.dot(HA),r=HA.dot($A),a=HA.dot(mi),o=$A.dot($A),B=$A.dot(mi),I=n*o-r*r;if(I===0)return s.set(0,0,0),null;const Q=1/I,h=(o*a-r*B)*Q,C=(n*B-r*a)*Q;return s.set(1-h-C,C,h)}static containsPoint(A,t,e,i){return this.getBarycoord(A,t,e,i,At)===null?!1:At.x>=0&&At.y>=0&&At.x+At.y<=1}static getInterpolation(A,t,e,i,s,n,r,a){return this.getBarycoord(A,t,e,i,At)===null?(a.x=0,a.y=0,"z"in a&&(a.z=0),"w"in a&&(a.w=0),null):(a.setScalar(0),a.addScaledVector(s,At.x),a.addScaledVector(n,At.y),a.addScaledVector(r,At.z),a)}static getInterpolatedAttribute(A,t,e,i,s,n){return Fi.setScalar(0),Ni.setScalar(0),ki.setScalar(0),Fi.fromBufferAttribute(A,t),Ni.fromBufferAttribute(A,e),ki.fromBufferAttribute(A,i),n.setScalar(0),n.addScaledVector(Fi,s.x),n.addScaledVector(Ni,s.y),n.addScaledVector(ki,s.z),n}static isFrontFacing(A,t,e,i){return HA.subVectors(e,t),$A.subVectors(A,t),HA.cross($A).dot(i)<0}set(A,t,e){return this.a.copy(A),this.b.copy(t),this.c.copy(e),this}setFromPointsAndIndices(A,t,e,i){return this.a.copy(A[t]),this.b.copy(A[e]),this.c.copy(A[i]),this}setFromAttributeAndIndices(A,t,e,i){return this.a.fromBufferAttribute(A,t),this.b.fromBufferAttribute(A,e),this.c.fromBufferAttribute(A,i),this}clone(){return new this.constructor().copy(this)}copy(A){return this.a.copy(A.a),this.b.copy(A.b),this.c.copy(A.c),this}getArea(){return HA.subVectors(this.c,this.b),$A.subVectors(this.a,this.b),HA.cross($A).length()*.5}getMidpoint(A){return A.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(A){return vA.getNormal(this.a,this.b,this.c,A)}getPlane(A){return A.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(A,t){return vA.getBarycoord(A,this.a,this.b,this.c,t)}getInterpolation(A,t,e,i,s){return vA.getInterpolation(A,this.a,this.b,this.c,t,e,i,s)}containsPoint(A){return vA.containsPoint(A,this.a,this.b,this.c)}isFrontFacing(A){return vA.isFrontFacing(this.a,this.b,this.c,A)}intersectsBox(A){return A.intersectsTriangle(this)}closestPointToPoint(A,t){const e=this.a,i=this.b,s=this.c;let n,r;Ht.subVectors(i,e),vt.subVectors(s,e),xi.subVectors(A,e);const a=Ht.dot(xi),o=vt.dot(xi);if(a<=0&&o<=0)return t.copy(e);Mi.subVectors(A,i);const B=Ht.dot(Mi),I=vt.dot(Mi);if(B>=0&&I<=B)return t.copy(i);const Q=a*I-B*o;if(Q<=0&&a>=0&&B<=0)return n=a/(a-B),t.copy(e).addScaledVector(Ht,n);Si.subVectors(A,s);const h=Ht.dot(Si),C=vt.dot(Si);if(C>=0&&h<=C)return t.copy(s);const E=h*o-a*C;if(E<=0&&o>=0&&C<=0)return r=o/(o-C),t.copy(e).addScaledVector(vt,r);const c=B*C-h*I;if(c<=0&&I-B>=0&&h-C>=0)return Hs.subVectors(s,i),r=(I-B)/(I-B+(h-C)),t.copy(i).addScaledVector(Hs,r);const l=1/(c+E+Q);return n=E*l,r=Q*l,t.copy(e).addScaledVector(Ht,n).addScaledVector(vt,r)}equals(A){return A.a.equals(this.a)&&A.b.equals(this.b)&&A.c.equals(this.c)}}const vs={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},Qt={h:0,s:0,l:0},Ge={h:0,s:0,l:0};function Ri(g,A,t){return t<0&&(t+=1),t>1&&(t-=1),t<1/6?g+(A-g)*6*t:t<1/2?A:t<2/3?g+(A-g)*6*(2/3-t):g}class wt{constructor(A,t,e){return this.isColor=!0,this.r=1,this.g=1,this.b=1,this.set(A,t,e)}set(A,t,e){if(t===void 0&&e===void 0){const i=A;i&&i.isColor?this.copy(i):typeof i=="number"?this.setHex(i):typeof i=="string"&&this.setStyle(i)}else this.setRGB(A,t,e);return this}setScalar(A){return this.r=A,this.g=A,this.b=A,this}setHex(A,t=LA){return A=Math.floor(A),this.r=(A>>16&255)/255,this.g=(A>>8&255)/255,this.b=(A&255)/255,YA.toWorkingColorSpace(this,t),this}setRGB(A,t,e,i=YA.workingColorSpace){return this.r=A,this.g=t,this.b=e,YA.toWorkingColorSpace(this,i),this}setHSL(A,t,e,i=YA.workingColorSpace){if(A=ir(A,1),t=J(t,0,1),e=J(e,0,1),t===0)this.r=this.g=this.b=e;else{const s=e<=.5?e*(1+t):e+t-e*t,n=2*e-s;this.r=Ri(n,s,A+1/3),this.g=Ri(n,s,A),this.b=Ri(n,s,A-1/3)}return YA.toWorkingColorSpace(this,i),this}setStyle(A,t=LA){function e(s){s!==void 0&&parseFloat(s)<1&&console.warn("THREE.Color: Alpha component of "+A+" will be ignored.")}let i;if(i=/^(\\w+)\\(([^\\)]*)\\)/.exec(A)){let s;const n=i[1],r=i[2];switch(n){case"rgb":case"rgba":if(s=/^\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec(r))return e(s[4]),this.setRGB(Math.min(255,parseInt(s[1],10))/255,Math.min(255,parseInt(s[2],10))/255,Math.min(255,parseInt(s[3],10))/255,t);if(s=/^\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec(r))return e(s[4]),this.setRGB(Math.min(100,parseInt(s[1],10))/100,Math.min(100,parseInt(s[2],10))/100,Math.min(100,parseInt(s[3],10))/100,t);break;case"hsl":case"hsla":if(s=/^\\s*(\\d*\\.?\\d+)\\s*,\\s*(\\d*\\.?\\d+)\\%\\s*,\\s*(\\d*\\.?\\d+)\\%\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec(r))return e(s[4]),this.setHSL(parseFloat(s[1])/360,parseFloat(s[2])/100,parseFloat(s[3])/100,t);break;default:console.warn("THREE.Color: Unknown color model "+A)}}else if(i=/^\\#([A-Fa-f\\d]+)$/.exec(A)){const s=i[1],n=s.length;if(n===3)return this.setRGB(parseInt(s.charAt(0),16)/15,parseInt(s.charAt(1),16)/15,parseInt(s.charAt(2),16)/15,t);if(n===6)return this.setHex(parseInt(s,16),t);console.warn("THREE.Color: Invalid hex color "+A)}else if(A&&A.length>0)return this.setColorName(A,t);return this}setColorName(A,t=LA){const e=vs[A.toLowerCase()];return e!==void 0?this.setHex(e,t):console.warn("THREE.Color: Unknown color "+A),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(A){return this.r=A.r,this.g=A.g,this.b=A.b,this}copySRGBToLinear(A){return this.r=jA(A.r),this.g=jA(A.g),this.b=jA(A.b),this}copyLinearToSRGB(A){return this.r=kt(A.r),this.g=kt(A.g),this.b=kt(A.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(A=LA){return YA.fromWorkingColorSpace(cA.copy(this),A),Math.round(J(cA.r*255,0,255))*65536+Math.round(J(cA.g*255,0,255))*256+Math.round(J(cA.b*255,0,255))}getHexString(A=LA){return("000000"+this.getHex(A).toString(16)).slice(-6)}getHSL(A,t=YA.workingColorSpace){YA.fromWorkingColorSpace(cA.copy(this),t);const e=cA.r,i=cA.g,s=cA.b,n=Math.max(e,i,s),r=Math.min(e,i,s);let a,o;const B=(r+n)/2;if(r===n)a=0,o=0;else{const I=n-r;switch(o=B<=.5?I/(n+r):I/(2-n-r),n){case e:a=(i-s)/I+(i<s?6:0);break;case i:a=(s-e)/I+2;break;case s:a=(e-i)/I+4;break}a/=6}return A.h=a,A.s=o,A.l=B,A}getRGB(A,t=YA.workingColorSpace){return YA.fromWorkingColorSpace(cA.copy(this),t),A.r=cA.r,A.g=cA.g,A.b=cA.b,A}getStyle(A=LA){YA.fromWorkingColorSpace(cA.copy(this),A);const t=cA.r,e=cA.g,i=cA.b;return A!==LA?`color(${A} ${t.toFixed(3)} ${e.toFixed(3)} ${i.toFixed(3)})`:`rgb(${Math.round(t*255)},${Math.round(e*255)},${Math.round(i*255)})`}offsetHSL(A,t,e){return this.getHSL(Qt),this.setHSL(Qt.h+A,Qt.s+t,Qt.l+e)}add(A){return this.r+=A.r,this.g+=A.g,this.b+=A.b,this}addColors(A,t){return this.r=A.r+t.r,this.g=A.g+t.g,this.b=A.b+t.b,this}addScalar(A){return this.r+=A,this.g+=A,this.b+=A,this}sub(A){return this.r=Math.max(0,this.r-A.r),this.g=Math.max(0,this.g-A.g),this.b=Math.max(0,this.b-A.b),this}multiply(A){return this.r*=A.r,this.g*=A.g,this.b*=A.b,this}multiplyScalar(A){return this.r*=A,this.g*=A,this.b*=A,this}lerp(A,t){return this.r+=(A.r-this.r)*t,this.g+=(A.g-this.g)*t,this.b+=(A.b-this.b)*t,this}lerpColors(A,t,e){return this.r=A.r+(t.r-A.r)*e,this.g=A.g+(t.g-A.g)*e,this.b=A.b+(t.b-A.b)*e,this}lerpHSL(A,t){this.getHSL(Qt),A.getHSL(Ge);const e=Ei(Qt.h,Ge.h,t),i=Ei(Qt.s,Ge.s,t),s=Ei(Qt.l,Ge.l,t);return this.setHSL(e,i,s),this}setFromVector3(A){return this.r=A.x,this.g=A.y,this.b=A.z,this}applyMatrix3(A){const t=this.r,e=this.g,i=this.b,s=A.elements;return this.r=s[0]*t+s[3]*e+s[6]*i,this.g=s[1]*t+s[4]*e+s[7]*i,this.b=s[2]*t+s[5]*e+s[8]*i,this}equals(A){return A.r===this.r&&A.g===this.g&&A.b===this.b}fromArray(A,t=0){return this.r=A[t],this.g=A[t+1],this.b=A[t+2],this}toArray(A=[],t=0){return A[t]=this.r,A[t+1]=this.g,A[t+2]=this.b,A}fromBufferAttribute(A,t){return this.r=A.getX(t),this.g=A.getY(t),this.b=A.getZ(t),this}toJSON(){return this.getHex()}*[Symbol.iterator](){yield this.r,yield this.g,yield this.b}}const cA=new wt;wt.NAMES=vs;let yr=0;class zs extends re{constructor(){super(),this.isMaterial=!0,Object.defineProperty(this,"id",{value:yr++}),this.uuid=ae(),this.name="",this.type="Material",this.blending=Bs,this.side=hi,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.alphaHash=!1,this.blendSrc=hs,this.blendDst=Cs,this.blendEquation=Qs,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.blendColor=new wt(0,0,0),this.blendAlpha=0,this.depthFunc=Es,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=ps,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=Nt,this.stencilZFail=Nt,this.stencilZPass=Nt,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaToCoverage=!1,this.premultipliedAlpha=!1,this.forceSinglePass=!1,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0,this._alphaTest=0}get alphaTest(){return this._alphaTest}set alphaTest(A){this._alphaTest>0!=A>0&&this.version++,this._alphaTest=A}onBeforeRender(){}onBeforeCompile(){}customProgramCacheKey(){return this.onBeforeCompile.toString()}setValues(A){if(A!==void 0)for(const t in A){const e=A[t];if(e===void 0){console.warn(`THREE.Material: parameter \'${t}\' has value of undefined.`);continue}const i=this[t];if(i===void 0){console.warn(`THREE.Material: \'${t}\' is not a property of THREE.${this.type}.`);continue}i&&i.isColor?i.set(e):i&&i.isVector3&&e&&e.isVector3?i.copy(e):this[t]=e}}toJSON(A){const t=A===void 0||typeof A=="string";t&&(A={textures:{},images:{}});const e={metadata:{version:4.6,type:"Material",generator:"Material.toJSON"}};e.uuid=this.uuid,e.type=this.type,this.name!==""&&(e.name=this.name),this.color&&this.color.isColor&&(e.color=this.color.getHex()),this.roughness!==void 0&&(e.roughness=this.roughness),this.metalness!==void 0&&(e.metalness=this.metalness),this.sheen!==void 0&&(e.sheen=this.sheen),this.sheenColor&&this.sheenColor.isColor&&(e.sheenColor=this.sheenColor.getHex()),this.sheenRoughness!==void 0&&(e.sheenRoughness=this.sheenRoughness),this.emissive&&this.emissive.isColor&&(e.emissive=this.emissive.getHex()),this.emissiveIntensity!==void 0&&this.emissiveIntensity!==1&&(e.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(e.specular=this.specular.getHex()),this.specularIntensity!==void 0&&(e.specularIntensity=this.specularIntensity),this.specularColor&&this.specularColor.isColor&&(e.specularColor=this.specularColor.getHex()),this.shininess!==void 0&&(e.shininess=this.shininess),this.clearcoat!==void 0&&(e.clearcoat=this.clearcoat),this.clearcoatRoughness!==void 0&&(e.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(e.clearcoatMap=this.clearcoatMap.toJSON(A).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(e.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(A).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(e.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(A).uuid,e.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),this.dispersion!==void 0&&(e.dispersion=this.dispersion),this.iridescence!==void 0&&(e.iridescence=this.iridescence),this.iridescenceIOR!==void 0&&(e.iridescenceIOR=this.iridescenceIOR),this.iridescenceThicknessRange!==void 0&&(e.iridescenceThicknessRange=this.iridescenceThicknessRange),this.iridescenceMap&&this.iridescenceMap.isTexture&&(e.iridescenceMap=this.iridescenceMap.toJSON(A).uuid),this.iridescenceThicknessMap&&this.iridescenceThicknessMap.isTexture&&(e.iridescenceThicknessMap=this.iridescenceThicknessMap.toJSON(A).uuid),this.anisotropy!==void 0&&(e.anisotropy=this.anisotropy),this.anisotropyRotation!==void 0&&(e.anisotropyRotation=this.anisotropyRotation),this.anisotropyMap&&this.anisotropyMap.isTexture&&(e.anisotropyMap=this.anisotropyMap.toJSON(A).uuid),this.map&&this.map.isTexture&&(e.map=this.map.toJSON(A).uuid),this.matcap&&this.matcap.isTexture&&(e.matcap=this.matcap.toJSON(A).uuid),this.alphaMap&&this.alphaMap.isTexture&&(e.alphaMap=this.alphaMap.toJSON(A).uuid),this.lightMap&&this.lightMap.isTexture&&(e.lightMap=this.lightMap.toJSON(A).uuid,e.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(e.aoMap=this.aoMap.toJSON(A).uuid,e.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(e.bumpMap=this.bumpMap.toJSON(A).uuid,e.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(e.normalMap=this.normalMap.toJSON(A).uuid,e.normalMapType=this.normalMapType,e.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(e.displacementMap=this.displacementMap.toJSON(A).uuid,e.displacementScale=this.displacementScale,e.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(e.roughnessMap=this.roughnessMap.toJSON(A).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(e.metalnessMap=this.metalnessMap.toJSON(A).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(e.emissiveMap=this.emissiveMap.toJSON(A).uuid),this.specularMap&&this.specularMap.isTexture&&(e.specularMap=this.specularMap.toJSON(A).uuid),this.specularIntensityMap&&this.specularIntensityMap.isTexture&&(e.specularIntensityMap=this.specularIntensityMap.toJSON(A).uuid),this.specularColorMap&&this.specularColorMap.isTexture&&(e.specularColorMap=this.specularColorMap.toJSON(A).uuid),this.envMap&&this.envMap.isTexture&&(e.envMap=this.envMap.toJSON(A).uuid,this.combine!==void 0&&(e.combine=this.combine)),this.envMapRotation!==void 0&&(e.envMapRotation=this.envMapRotation.toArray()),this.envMapIntensity!==void 0&&(e.envMapIntensity=this.envMapIntensity),this.reflectivity!==void 0&&(e.reflectivity=this.reflectivity),this.refractionRatio!==void 0&&(e.refractionRatio=this.refractionRatio),this.gradientMap&&this.gradientMap.isTexture&&(e.gradientMap=this.gradientMap.toJSON(A).uuid),this.transmission!==void 0&&(e.transmission=this.transmission),this.transmissionMap&&this.transmissionMap.isTexture&&(e.transmissionMap=this.transmissionMap.toJSON(A).uuid),this.thickness!==void 0&&(e.thickness=this.thickness),this.thicknessMap&&this.thicknessMap.isTexture&&(e.thicknessMap=this.thicknessMap.toJSON(A).uuid),this.attenuationDistance!==void 0&&this.attenuationDistance!==1/0&&(e.attenuationDistance=this.attenuationDistance),this.attenuationColor!==void 0&&(e.attenuationColor=this.attenuationColor.getHex()),this.size!==void 0&&(e.size=this.size),this.shadowSide!==null&&(e.shadowSide=this.shadowSide),this.sizeAttenuation!==void 0&&(e.sizeAttenuation=this.sizeAttenuation),this.blending!==Bs&&(e.blending=this.blending),this.side!==hi&&(e.side=this.side),this.vertexColors===!0&&(e.vertexColors=!0),this.opacity<1&&(e.opacity=this.opacity),this.transparent===!0&&(e.transparent=!0),this.blendSrc!==hs&&(e.blendSrc=this.blendSrc),this.blendDst!==Cs&&(e.blendDst=this.blendDst),this.blendEquation!==Qs&&(e.blendEquation=this.blendEquation),this.blendSrcAlpha!==null&&(e.blendSrcAlpha=this.blendSrcAlpha),this.blendDstAlpha!==null&&(e.blendDstAlpha=this.blendDstAlpha),this.blendEquationAlpha!==null&&(e.blendEquationAlpha=this.blendEquationAlpha),this.blendColor&&this.blendColor.isColor&&(e.blendColor=this.blendColor.getHex()),this.blendAlpha!==0&&(e.blendAlpha=this.blendAlpha),this.depthFunc!==Es&&(e.depthFunc=this.depthFunc),this.depthTest===!1&&(e.depthTest=this.depthTest),this.depthWrite===!1&&(e.depthWrite=this.depthWrite),this.colorWrite===!1&&(e.colorWrite=this.colorWrite),this.stencilWriteMask!==255&&(e.stencilWriteMask=this.stencilWriteMask),this.stencilFunc!==ps&&(e.stencilFunc=this.stencilFunc),this.stencilRef!==0&&(e.stencilRef=this.stencilRef),this.stencilFuncMask!==255&&(e.stencilFuncMask=this.stencilFuncMask),this.stencilFail!==Nt&&(e.stencilFail=this.stencilFail),this.stencilZFail!==Nt&&(e.stencilZFail=this.stencilZFail),this.stencilZPass!==Nt&&(e.stencilZPass=this.stencilZPass),this.stencilWrite===!0&&(e.stencilWrite=this.stencilWrite),this.rotation!==void 0&&this.rotation!==0&&(e.rotation=this.rotation),this.polygonOffset===!0&&(e.polygonOffset=!0),this.polygonOffsetFactor!==0&&(e.polygonOffsetFactor=this.polygonOffsetFactor),this.polygonOffsetUnits!==0&&(e.polygonOffsetUnits=this.polygonOffsetUnits),this.linewidth!==void 0&&this.linewidth!==1&&(e.linewidth=this.linewidth),this.dashSize!==void 0&&(e.dashSize=this.dashSize),this.gapSize!==void 0&&(e.gapSize=this.gapSize),this.scale!==void 0&&(e.scale=this.scale),this.dithering===!0&&(e.dithering=!0),this.alphaTest>0&&(e.alphaTest=this.alphaTest),this.alphaHash===!0&&(e.alphaHash=!0),this.alphaToCoverage===!0&&(e.alphaToCoverage=!0),this.premultipliedAlpha===!0&&(e.premultipliedAlpha=!0),this.forceSinglePass===!0&&(e.forceSinglePass=!0),this.wireframe===!0&&(e.wireframe=!0),this.wireframeLinewidth>1&&(e.wireframeLinewidth=this.wireframeLinewidth),this.wireframeLinecap!=="round"&&(e.wireframeLinecap=this.wireframeLinecap),this.wireframeLinejoin!=="round"&&(e.wireframeLinejoin=this.wireframeLinejoin),this.flatShading===!0&&(e.flatShading=!0),this.visible===!1&&(e.visible=!1),this.toneMapped===!1&&(e.toneMapped=!1),this.fog===!1&&(e.fog=!1),Object.keys(this.userData).length>0&&(e.userData=this.userData);function i(s){const n=[];for(const r in s){const a=s[r];delete a.metadata,n.push(a)}return n}if(t){const s=i(A.textures),n=i(A.images);s.length>0&&(e.textures=s),n.length>0&&(e.images=n)}return e}clone(){return new this.constructor().copy(this)}copy(A){this.name=A.name,this.blending=A.blending,this.side=A.side,this.vertexColors=A.vertexColors,this.opacity=A.opacity,this.transparent=A.transparent,this.blendSrc=A.blendSrc,this.blendDst=A.blendDst,this.blendEquation=A.blendEquation,this.blendSrcAlpha=A.blendSrcAlpha,this.blendDstAlpha=A.blendDstAlpha,this.blendEquationAlpha=A.blendEquationAlpha,this.blendColor.copy(A.blendColor),this.blendAlpha=A.blendAlpha,this.depthFunc=A.depthFunc,this.depthTest=A.depthTest,this.depthWrite=A.depthWrite,this.stencilWriteMask=A.stencilWriteMask,this.stencilFunc=A.stencilFunc,this.stencilRef=A.stencilRef,this.stencilFuncMask=A.stencilFuncMask,this.stencilFail=A.stencilFail,this.stencilZFail=A.stencilZFail,this.stencilZPass=A.stencilZPass,this.stencilWrite=A.stencilWrite;const t=A.clippingPlanes;let e=null;if(t!==null){const i=t.length;e=new Array(i);for(let s=0;s!==i;++s)e[s]=t[s].clone()}return this.clippingPlanes=e,this.clipIntersection=A.clipIntersection,this.clipShadows=A.clipShadows,this.shadowSide=A.shadowSide,this.colorWrite=A.colorWrite,this.precision=A.precision,this.polygonOffset=A.polygonOffset,this.polygonOffsetFactor=A.polygonOffsetFactor,this.polygonOffsetUnits=A.polygonOffsetUnits,this.dithering=A.dithering,this.alphaTest=A.alphaTest,this.alphaHash=A.alphaHash,this.alphaToCoverage=A.alphaToCoverage,this.premultipliedAlpha=A.premultipliedAlpha,this.forceSinglePass=A.forceSinglePass,this.visible=A.visible,this.toneMapped=A.toneMapped,this.userData=JSON.parse(JSON.stringify(A.userData)),this}dispose(){this.dispatchEvent({type:"dispose"})}set needsUpdate(A){A===!0&&this.version++}onBuild(){console.warn("Material: onBuild() has been removed.")}}class fr extends zs{constructor(A){super(),this.isMeshBasicMaterial=!0,this.type="MeshBasicMaterial",this.color=new wt(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new ft,this.combine=Xn,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(A)}copy(A){return super.copy(A),this.color.copy(A.color),this.map=A.map,this.lightMap=A.lightMap,this.lightMapIntensity=A.lightMapIntensity,this.aoMap=A.aoMap,this.aoMapIntensity=A.aoMapIntensity,this.specularMap=A.specularMap,this.alphaMap=A.alphaMap,this.envMap=A.envMap,this.envMapRotation.copy(A.envMapRotation),this.combine=A.combine,this.reflectivity=A.reflectivity,this.refractionRatio=A.refractionRatio,this.wireframe=A.wireframe,this.wireframeLinewidth=A.wireframeLinewidth,this.wireframeLinecap=A.wireframeLinecap,this.wireframeLinejoin=A.wireframeLinejoin,this.fog=A.fog,this}}const eA=new u,Ue=new DA;class zt{constructor(A,t,e=!1){if(Array.isArray(A))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.isBufferAttribute=!0,this.name="",this.array=A,this.itemSize=t,this.count=A!==void 0?A.length/t:0,this.normalized=e,this.usage=Ds,this.updateRanges=[],this.gpuType=Ar,this.version=0}onUploadCallback(){}set needsUpdate(A){A===!0&&this.version++}setUsage(A){return this.usage=A,this}addUpdateRange(A,t){this.updateRanges.push({start:A,count:t})}clearUpdateRanges(){this.updateRanges.length=0}copy(A){return this.name=A.name,this.array=new A.array.constructor(A.array),this.itemSize=A.itemSize,this.count=A.count,this.normalized=A.normalized,this.usage=A.usage,this.gpuType=A.gpuType,this}copyAt(A,t,e){A*=this.itemSize,e*=t.itemSize;for(let i=0,s=this.itemSize;i<s;i++)this.array[A+i]=t.array[e+i];return this}copyArray(A){return this.array.set(A),this}applyMatrix3(A){if(this.itemSize===2)for(let t=0,e=this.count;t<e;t++)Ue.fromBufferAttribute(this,t),Ue.applyMatrix3(A),this.setXY(t,Ue.x,Ue.y);else if(this.itemSize===3)for(let t=0,e=this.count;t<e;t++)eA.fromBufferAttribute(this,t),eA.applyMatrix3(A),this.setXYZ(t,eA.x,eA.y,eA.z);return this}applyMatrix4(A){for(let t=0,e=this.count;t<e;t++)eA.fromBufferAttribute(this,t),eA.applyMatrix4(A),this.setXYZ(t,eA.x,eA.y,eA.z);return this}applyNormalMatrix(A){for(let t=0,e=this.count;t<e;t++)eA.fromBufferAttribute(this,t),eA.applyNormalMatrix(A),this.setXYZ(t,eA.x,eA.y,eA.z);return this}transformDirection(A){for(let t=0,e=this.count;t<e;t++)eA.fromBufferAttribute(this,t),eA.transformDirection(A),this.setXYZ(t,eA.x,eA.y,eA.z);return this}set(A,t=0){return this.array.set(A,t),this}getComponent(A,t){let e=this.array[A*this.itemSize+t];return this.normalized&&(e=ge(e,this.array)),e}setComponent(A,t,e){return this.normalized&&(e=pA(e,this.array)),this.array[A*this.itemSize+t]=e,this}getX(A){let t=this.array[A*this.itemSize];return this.normalized&&(t=ge(t,this.array)),t}setX(A,t){return this.normalized&&(t=pA(t,this.array)),this.array[A*this.itemSize]=t,this}getY(A){let t=this.array[A*this.itemSize+1];return this.normalized&&(t=ge(t,this.array)),t}setY(A,t){return this.normalized&&(t=pA(t,this.array)),this.array[A*this.itemSize+1]=t,this}getZ(A){let t=this.array[A*this.itemSize+2];return this.normalized&&(t=ge(t,this.array)),t}setZ(A,t){return this.normalized&&(t=pA(t,this.array)),this.array[A*this.itemSize+2]=t,this}getW(A){let t=this.array[A*this.itemSize+3];return this.normalized&&(t=ge(t,this.array)),t}setW(A,t){return this.normalized&&(t=pA(t,this.array)),this.array[A*this.itemSize+3]=t,this}setXY(A,t,e){return A*=this.itemSize,this.normalized&&(t=pA(t,this.array),e=pA(e,this.array)),this.array[A+0]=t,this.array[A+1]=e,this}setXYZ(A,t,e,i){return A*=this.itemSize,this.normalized&&(t=pA(t,this.array),e=pA(e,this.array),i=pA(i,this.array)),this.array[A+0]=t,this.array[A+1]=e,this.array[A+2]=i,this}setXYZW(A,t,e,i,s){return A*=this.itemSize,this.normalized&&(t=pA(t,this.array),e=pA(e,this.array),i=pA(i,this.array),s=pA(s,this.array)),this.array[A+0]=t,this.array[A+1]=e,this.array[A+2]=i,this.array[A+3]=s,this}onUpload(A){return this.onUploadCallback=A,this}clone(){return new this.constructor(this.array,this.itemSize).copy(this)}toJSON(){const A={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.from(this.array),normalized:this.normalized};return this.name!==""&&(A.name=this.name),this.usage!==Ds&&(A.usage=this.usage),A}}class wr extends zt{constructor(A,t,e){super(new Uint16Array(A),t,e)}}class pr extends zt{constructor(A,t,e){super(new Uint32Array(A),t,e)}}class be extends zt{constructor(A,t,e){super(new Float32Array(A),t,e)}}let Dr=0;const UA=new EA,Gi=new mA,Kt=new u,FA=new Gt,Qe=new Gt,gA=new u;class Le extends re{constructor(){super(),this.isBufferGeometry=!0,Object.defineProperty(this,"id",{value:Dr++}),this.uuid=ae(),this.name="",this.type="BufferGeometry",this.index=null,this.indirect=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}getIndex(){return this.index}setIndex(A){return Array.isArray(A)?this.index=new(sr(A)?pr:wr)(A,1):this.index=A,this}setIndirect(A){return this.indirect=A,this}getIndirect(){return this.indirect}getAttribute(A){return this.attributes[A]}setAttribute(A,t){return this.attributes[A]=t,this}deleteAttribute(A){return delete this.attributes[A],this}hasAttribute(A){return this.attributes[A]!==void 0}addGroup(A,t,e=0){this.groups.push({start:A,count:t,materialIndex:e})}clearGroups(){this.groups=[]}setDrawRange(A,t){this.drawRange.start=A,this.drawRange.count=t}applyMatrix4(A){const t=this.attributes.position;t!==void 0&&(t.applyMatrix4(A),t.needsUpdate=!0);const e=this.attributes.normal;if(e!==void 0){const s=new WA().getNormalMatrix(A);e.applyNormalMatrix(s),e.needsUpdate=!0}const i=this.attributes.tangent;return i!==void 0&&(i.transformDirection(A),i.needsUpdate=!0),this.boundingBox!==null&&this.computeBoundingBox(),this.boundingSphere!==null&&this.computeBoundingSphere(),this}applyQuaternion(A){return UA.makeRotationFromQuaternion(A),this.applyMatrix4(UA),this}rotateX(A){return UA.makeRotationX(A),this.applyMatrix4(UA),this}rotateY(A){return UA.makeRotationY(A),this.applyMatrix4(UA),this}rotateZ(A){return UA.makeRotationZ(A),this.applyMatrix4(UA),this}translate(A,t,e){return UA.makeTranslation(A,t,e),this.applyMatrix4(UA),this}scale(A,t,e){return UA.makeScale(A,t,e),this.applyMatrix4(UA),this}lookAt(A){return Gi.lookAt(A),Gi.updateMatrix(),this.applyMatrix4(Gi.matrix),this}center(){return this.computeBoundingBox(),this.boundingBox.getCenter(Kt).negate(),this.translate(Kt.x,Kt.y,Kt.z),this}setFromPoints(A){const t=this.getAttribute("position");if(t===void 0){const e=[];for(let i=0,s=A.length;i<s;i++){const n=A[i];e.push(n.x,n.y,n.z||0)}this.setAttribute("position",new be(e,3))}else{const e=Math.min(A.length,t.count);for(let i=0;i<e;i++){const s=A[i];t.setXYZ(i,s.x,s.y,s.z||0)}A.length>t.count&&console.warn("THREE.BufferGeometry: Buffer size too small for points data. Use .dispose() and create a new geometry."),t.needsUpdate=!0}return this}computeBoundingBox(){this.boundingBox===null&&(this.boundingBox=new Gt);const A=this.attributes.position,t=this.morphAttributes.position;if(A&&A.isGLBufferAttribute){console.error("THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box.",this),this.boundingBox.set(new u(-1/0,-1/0,-1/0),new u(1/0,1/0,1/0));return}if(A!==void 0){if(this.boundingBox.setFromBufferAttribute(A),t)for(let e=0,i=t.length;e<i;e++){const s=t[e];FA.setFromBufferAttribute(s),this.morphTargetsRelative?(gA.addVectors(this.boundingBox.min,FA.min),this.boundingBox.expandByPoint(gA),gA.addVectors(this.boundingBox.max,FA.max),this.boundingBox.expandByPoint(gA)):(this.boundingBox.expandByPoint(FA.min),this.boundingBox.expandByPoint(FA.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error(\'THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.\',this)}computeBoundingSphere(){this.boundingSphere===null&&(this.boundingSphere=new Rs);const A=this.attributes.position,t=this.morphAttributes.position;if(A&&A.isGLBufferAttribute){console.error("THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere.",this),this.boundingSphere.set(new u,1/0);return}if(A){const e=this.boundingSphere.center;if(FA.setFromBufferAttribute(A),t)for(let s=0,n=t.length;s<n;s++){const r=t[s];Qe.setFromBufferAttribute(r),this.morphTargetsRelative?(gA.addVectors(FA.min,Qe.min),FA.expandByPoint(gA),gA.addVectors(FA.max,Qe.max),FA.expandByPoint(gA)):(FA.expandByPoint(Qe.min),FA.expandByPoint(Qe.max))}FA.getCenter(e);let i=0;for(let s=0,n=A.count;s<n;s++)gA.fromBufferAttribute(A,s),i=Math.max(i,e.distanceToSquared(gA));if(t)for(let s=0,n=t.length;s<n;s++){const r=t[s],a=this.morphTargetsRelative;for(let o=0,B=r.count;o<B;o++)gA.fromBufferAttribute(r,o),a&&(Kt.fromBufferAttribute(A,o),gA.add(Kt)),i=Math.max(i,e.distanceToSquared(gA))}this.boundingSphere.radius=Math.sqrt(i),isNaN(this.boundingSphere.radius)&&console.error(\'THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.\',this)}}computeTangents(){const A=this.index,t=this.attributes;if(A===null||t.position===void 0||t.normal===void 0||t.uv===void 0){console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");return}const e=t.position,i=t.normal,s=t.uv;this.hasAttribute("tangent")===!1&&this.setAttribute("tangent",new zt(new Float32Array(4*e.count),4));const n=this.getAttribute("tangent"),r=[],a=[];for(let w=0;w<e.count;w++)r[w]=new u,a[w]=new u;const o=new u,B=new u,I=new u,Q=new DA,h=new DA,C=new DA,E=new u,c=new u;function l(w,D,N){o.fromBufferAttribute(e,w),B.fromBufferAttribute(e,D),I.fromBufferAttribute(e,N),Q.fromBufferAttribute(s,w),h.fromBufferAttribute(s,D),C.fromBufferAttribute(s,N),B.sub(o),I.sub(o),h.sub(Q),C.sub(Q);const S=1/(h.x*C.y-C.x*h.y);isFinite(S)&&(E.copy(B).multiplyScalar(C.y).addScaledVector(I,-h.y).multiplyScalar(S),c.copy(I).multiplyScalar(h.x).addScaledVector(B,-C.x).multiplyScalar(S),r[w].add(E),r[D].add(E),r[N].add(E),a[w].add(c),a[D].add(c),a[N].add(c))}let y=this.groups;y.length===0&&(y=[{start:0,count:A.count}]);for(let w=0,D=y.length;w<D;++w){const N=y[w],S=N.start,M=N.count;for(let F=S,k=S+M;F<k;F+=3)l(A.getX(F+0),A.getX(F+1),A.getX(F+2))}const d=new u,f=new u,p=new u,m=new u;function x(w){p.fromBufferAttribute(i,w),m.copy(p);const D=r[w];d.copy(D),d.sub(p.multiplyScalar(p.dot(D))).normalize(),f.crossVectors(m,D);const S=f.dot(a[w])<0?-1:1;n.setXYZW(w,d.x,d.y,d.z,S)}for(let w=0,D=y.length;w<D;++w){const N=y[w],S=N.start,M=N.count;for(let F=S,k=S+M;F<k;F+=3)x(A.getX(F+0)),x(A.getX(F+1)),x(A.getX(F+2))}}computeVertexNormals(){const A=this.index,t=this.getAttribute("position");if(t!==void 0){let e=this.getAttribute("normal");if(e===void 0)e=new zt(new Float32Array(t.count*3),3),this.setAttribute("normal",e);else for(let Q=0,h=e.count;Q<h;Q++)e.setXYZ(Q,0,0,0);const i=new u,s=new u,n=new u,r=new u,a=new u,o=new u,B=new u,I=new u;if(A)for(let Q=0,h=A.count;Q<h;Q+=3){const C=A.getX(Q+0),E=A.getX(Q+1),c=A.getX(Q+2);i.fromBufferAttribute(t,C),s.fromBufferAttribute(t,E),n.fromBufferAttribute(t,c),B.subVectors(n,s),I.subVectors(i,s),B.cross(I),r.fromBufferAttribute(e,C),a.fromBufferAttribute(e,E),o.fromBufferAttribute(e,c),r.add(B),a.add(B),o.add(B),e.setXYZ(C,r.x,r.y,r.z),e.setXYZ(E,a.x,a.y,a.z),e.setXYZ(c,o.x,o.y,o.z)}else for(let Q=0,h=t.count;Q<h;Q+=3)i.fromBufferAttribute(t,Q+0),s.fromBufferAttribute(t,Q+1),n.fromBufferAttribute(t,Q+2),B.subVectors(n,s),I.subVectors(i,s),B.cross(I),e.setXYZ(Q+0,B.x,B.y,B.z),e.setXYZ(Q+1,B.x,B.y,B.z),e.setXYZ(Q+2,B.x,B.y,B.z);this.normalizeNormals(),e.needsUpdate=!0}}normalizeNormals(){const A=this.attributes.normal;for(let t=0,e=A.count;t<e;t++)gA.fromBufferAttribute(A,t),gA.normalize(),A.setXYZ(t,gA.x,gA.y,gA.z)}toNonIndexed(){function A(r,a){const o=r.array,B=r.itemSize,I=r.normalized,Q=new o.constructor(a.length*B);let h=0,C=0;for(let E=0,c=a.length;E<c;E++){r.isInterleavedBufferAttribute?h=a[E]*r.data.stride+r.offset:h=a[E]*B;for(let l=0;l<B;l++)Q[C++]=o[h++]}return new zt(Q,B,I)}if(this.index===null)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;const t=new Le,e=this.index.array,i=this.attributes;for(const r in i){const a=i[r],o=A(a,e);t.setAttribute(r,o)}const s=this.morphAttributes;for(const r in s){const a=[],o=s[r];for(let B=0,I=o.length;B<I;B++){const Q=o[B],h=A(Q,e);a.push(h)}t.morphAttributes[r]=a}t.morphTargetsRelative=this.morphTargetsRelative;const n=this.groups;for(let r=0,a=n.length;r<a;r++){const o=n[r];t.addGroup(o.start,o.count,o.materialIndex)}return t}toJSON(){const A={metadata:{version:4.6,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(A.uuid=this.uuid,A.type=this.type,this.name!==""&&(A.name=this.name),Object.keys(this.userData).length>0&&(A.userData=this.userData),this.parameters!==void 0){const a=this.parameters;for(const o in a)a[o]!==void 0&&(A[o]=a[o]);return A}A.data={attributes:{}};const t=this.index;t!==null&&(A.data.index={type:t.array.constructor.name,array:Array.prototype.slice.call(t.array)});const e=this.attributes;for(const a in e){const o=e[a];A.data.attributes[a]=o.toJSON(A.data)}const i={};let s=!1;for(const a in this.morphAttributes){const o=this.morphAttributes[a],B=[];for(let I=0,Q=o.length;I<Q;I++){const h=o[I];B.push(h.toJSON(A.data))}B.length>0&&(i[a]=B,s=!0)}s&&(A.data.morphAttributes=i,A.data.morphTargetsRelative=this.morphTargetsRelative);const n=this.groups;n.length>0&&(A.data.groups=JSON.parse(JSON.stringify(n)));const r=this.boundingSphere;return r!==null&&(A.data.boundingSphere={center:r.center.toArray(),radius:r.radius}),A}clone(){return new this.constructor().copy(this)}copy(A){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;const t={};this.name=A.name;const e=A.index;e!==null&&this.setIndex(e.clone(t));const i=A.attributes;for(const o in i){const B=i[o];this.setAttribute(o,B.clone(t))}const s=A.morphAttributes;for(const o in s){const B=[],I=s[o];for(let Q=0,h=I.length;Q<h;Q++)B.push(I[Q].clone(t));this.morphAttributes[o]=B}this.morphTargetsRelative=A.morphTargetsRelative;const n=A.groups;for(let o=0,B=n.length;o<B;o++){const I=n[o];this.addGroup(I.start,I.count,I.materialIndex)}const r=A.boundingBox;r!==null&&(this.boundingBox=r.clone());const a=A.boundingSphere;return a!==null&&(this.boundingSphere=a.clone()),this.drawRange.start=A.drawRange.start,this.drawRange.count=A.drawRange.count,this.userData=A.userData,this}dispose(){this.dispatchEvent({type:"dispose"})}}const Ks=new EA,pt=new Qr,Ye=new Rs,_s=new u,Je=new u,Te=new u,He=new u,Ui=new u,ve=new u,qs=new u,ze=new u;class Zs extends mA{constructor(A=new Le,t=new fr){super(),this.isMesh=!0,this.type="Mesh",this.geometry=A,this.material=t,this.updateMorphTargets()}copy(A,t){return super.copy(A,t),A.morphTargetInfluences!==void 0&&(this.morphTargetInfluences=A.morphTargetInfluences.slice()),A.morphTargetDictionary!==void 0&&(this.morphTargetDictionary=Object.assign({},A.morphTargetDictionary)),this.material=Array.isArray(A.material)?A.material.slice():A.material,this.geometry=A.geometry,this}updateMorphTargets(){const t=this.geometry.morphAttributes,e=Object.keys(t);if(e.length>0){const i=t[e[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let s=0,n=i.length;s<n;s++){const r=i[s].name||String(s);this.morphTargetInfluences.push(0),this.morphTargetDictionary[r]=s}}}}getVertexPosition(A,t){const e=this.geometry,i=e.attributes.position,s=e.morphAttributes.position,n=e.morphTargetsRelative;t.fromBufferAttribute(i,A);const r=this.morphTargetInfluences;if(s&&r){ve.set(0,0,0);for(let a=0,o=s.length;a<o;a++){const B=r[a],I=s[a];B!==0&&(Ui.fromBufferAttribute(I,A),n?ve.addScaledVector(Ui,B):ve.addScaledVector(Ui.sub(t),B))}t.add(ve)}return t}raycast(A,t){const e=this.geometry,i=this.material,s=this.matrixWorld;i!==void 0&&(e.boundingSphere===null&&e.computeBoundingSphere(),Ye.copy(e.boundingSphere),Ye.applyMatrix4(s),pt.copy(A.ray).recast(A.near),!(Ye.containsPoint(pt.origin)===!1&&(pt.intersectSphere(Ye,_s)===null||pt.origin.distanceToSquared(_s)>(A.far-A.near)**2))&&(Ks.copy(s).invert(),pt.copy(A.ray).applyMatrix4(Ks),!(e.boundingBox!==null&&pt.intersectsBox(e.boundingBox)===!1)&&this._computeIntersections(A,t,pt)))}_computeIntersections(A,t,e){let i;const s=this.geometry,n=this.material,r=s.index,a=s.attributes.position,o=s.attributes.uv,B=s.attributes.uv1,I=s.attributes.normal,Q=s.groups,h=s.drawRange;if(r!==null)if(Array.isArray(n))for(let C=0,E=Q.length;C<E;C++){const c=Q[C],l=n[c.materialIndex],y=Math.max(c.start,h.start),d=Math.min(r.count,Math.min(c.start+c.count,h.start+h.count));for(let f=y,p=d;f<p;f+=3){const m=r.getX(f),x=r.getX(f+1),w=r.getX(f+2);i=Ke(this,l,A,e,o,B,I,m,x,w),i&&(i.faceIndex=Math.floor(f/3),i.face.materialIndex=c.materialIndex,t.push(i))}}else{const C=Math.max(0,h.start),E=Math.min(r.count,h.start+h.count);for(let c=C,l=E;c<l;c+=3){const y=r.getX(c),d=r.getX(c+1),f=r.getX(c+2);i=Ke(this,n,A,e,o,B,I,y,d,f),i&&(i.faceIndex=Math.floor(c/3),t.push(i))}}else if(a!==void 0)if(Array.isArray(n))for(let C=0,E=Q.length;C<E;C++){const c=Q[C],l=n[c.materialIndex],y=Math.max(c.start,h.start),d=Math.min(a.count,Math.min(c.start+c.count,h.start+h.count));for(let f=y,p=d;f<p;f+=3){const m=f,x=f+1,w=f+2;i=Ke(this,l,A,e,o,B,I,m,x,w),i&&(i.faceIndex=Math.floor(f/3),i.face.materialIndex=c.materialIndex,t.push(i))}}else{const C=Math.max(0,h.start),E=Math.min(a.count,h.start+h.count);for(let c=C,l=E;c<l;c+=3){const y=c,d=c+1,f=c+2;i=Ke(this,n,A,e,o,B,I,y,d,f),i&&(i.faceIndex=Math.floor(c/3),t.push(i))}}}}function mr(g,A,t,e,i,s,n,r){let a;if(A.side===Pn?a=e.intersectTriangle(n,s,i,!0,r):a=e.intersectTriangle(i,s,n,A.side===hi,r),a===null)return null;ze.copy(r),ze.applyMatrix4(g.matrixWorld);const o=t.ray.origin.distanceTo(ze);return o<t.near||o>t.far?null:{distance:o,point:ze.clone(),object:g}}function Ke(g,A,t,e,i,s,n,r,a,o){g.getVertexPosition(r,Je),g.getVertexPosition(a,Te),g.getVertexPosition(o,He);const B=mr(g,A,t,e,Je,Te,He,qs);if(B){const I=new u;vA.getBarycoord(qs,Je,Te,He,I),i&&(B.uv=vA.getInterpolatedAttribute(i,r,a,o,I,new DA)),s&&(B.uv1=vA.getInterpolatedAttribute(s,r,a,o,I,new DA)),n&&(B.normal=vA.getInterpolatedAttribute(n,r,a,o,I,new u),B.normal.dot(e.direction)>0&&B.normal.multiplyScalar(-1));const Q={a:r,b:a,c:o,normal:new u,materialIndex:0};vA.getNormal(Je,Te,He,Q.normal),B.face=Q,B.barycoord=I}return B}function xr(g){const A={};for(const t in g){A[t]={};for(const e in g[t]){const i=g[t][e];i&&(i.isColor||i.isMatrix3||i.isMatrix4||i.isVector2||i.isVector3||i.isVector4||i.isTexture||i.isQuaternion)?i.isRenderTargetTexture?(console.warn("UniformsUtils: Textures of render targets cannot be cloned via cloneUniforms() or mergeUniforms()."),A[t][e]=null):A[t][e]=i.clone():Array.isArray(i)?A[t][e]=i.slice():A[t][e]=i}}return A}function Mr(g){const A=[];for(let t=0;t<g.length;t++)A.push(g[t].clone());return A}var Sr=`void main() {\n	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}`,Fr=`void main() {\n	gl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\n}`;class Nr extends zs{constructor(A){super(),this.isShaderMaterial=!0,this.type="ShaderMaterial",this.defines={},this.uniforms={},this.uniformsGroups=[],this.vertexShader=Sr,this.fragmentShader=Fr,this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.forceSinglePass=!0,this.extensions={clipCullDistance:!1,multiDraw:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv1:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,A!==void 0&&this.setValues(A)}copy(A){return super.copy(A),this.fragmentShader=A.fragmentShader,this.vertexShader=A.vertexShader,this.uniforms=xr(A.uniforms),this.uniformsGroups=Mr(A.uniformsGroups),this.defines=Object.assign({},A.defines),this.wireframe=A.wireframe,this.wireframeLinewidth=A.wireframeLinewidth,this.fog=A.fog,this.lights=A.lights,this.clipping=A.clipping,this.extensions=Object.assign({},A.extensions),this.glslVersion=A.glslVersion,this}toJSON(A){const t=super.toJSON(A);t.glslVersion=this.glslVersion,t.uniforms={};for(const i in this.uniforms){const n=this.uniforms[i].value;n&&n.isTexture?t.uniforms[i]={type:"t",value:n.toJSON(A).uuid}:n&&n.isColor?t.uniforms[i]={type:"c",value:n.getHex()}:n&&n.isVector2?t.uniforms[i]={type:"v2",value:n.toArray()}:n&&n.isVector3?t.uniforms[i]={type:"v3",value:n.toArray()}:n&&n.isVector4?t.uniforms[i]={type:"v4",value:n.toArray()}:n&&n.isMatrix3?t.uniforms[i]={type:"m3",value:n.toArray()}:n&&n.isMatrix4?t.uniforms[i]={type:"m4",value:n.toArray()}:t.uniforms[i]={value:n}}Object.keys(this.defines).length>0&&(t.defines=this.defines),t.vertexShader=this.vertexShader,t.fragmentShader=this.fragmentShader,t.lights=this.lights,t.clipping=this.clipping;const e={};for(const i in this.extensions)this.extensions[i]===!0&&(e[i]=!0);return Object.keys(e).length>0&&(t.extensions=e),t}}class Ws extends mA{constructor(){super(),this.isCamera=!0,this.type="Camera",this.matrixWorldInverse=new EA,this.projectionMatrix=new EA,this.projectionMatrixInverse=new EA,this.coordinateSystem=ne}copy(A,t){return super.copy(A,t),this.matrixWorldInverse.copy(A.matrixWorldInverse),this.projectionMatrix.copy(A.projectionMatrix),this.projectionMatrixInverse.copy(A.projectionMatrixInverse),this.coordinateSystem=A.coordinateSystem,this}getWorldDirection(A){return super.getWorldDirection(A).negate()}updateMatrixWorld(A){super.updateMatrixWorld(A),this.matrixWorldInverse.copy(this.matrixWorld).invert()}updateWorldMatrix(A,t){super.updateWorldMatrix(A,t),this.matrixWorldInverse.copy(this.matrixWorld).invert()}clone(){return new this.constructor().copy(this)}}class Os extends mA{constructor(){super(),this.isScene=!0,this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.backgroundBlurriness=0,this.backgroundIntensity=1,this.backgroundRotation=new ft,this.environmentIntensity=1,this.environmentRotation=new ft,this.overrideMaterial=null,typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}copy(A,t){return super.copy(A,t),A.background!==null&&(this.background=A.background.clone()),A.environment!==null&&(this.environment=A.environment.clone()),A.fog!==null&&(this.fog=A.fog.clone()),this.backgroundBlurriness=A.backgroundBlurriness,this.backgroundIntensity=A.backgroundIntensity,this.backgroundRotation.copy(A.backgroundRotation),this.environmentIntensity=A.environmentIntensity,this.environmentRotation.copy(A.environmentRotation),A.overrideMaterial!==null&&(this.overrideMaterial=A.overrideMaterial.clone()),this.matrixAutoUpdate=A.matrixAutoUpdate,this}toJSON(A){const t=super.toJSON(A);return this.fog!==null&&(t.object.fog=this.fog.toJSON()),this.backgroundBlurriness>0&&(t.object.backgroundBlurriness=this.backgroundBlurriness),this.backgroundIntensity!==1&&(t.object.backgroundIntensity=this.backgroundIntensity),t.object.backgroundRotation=this.backgroundRotation.toArray(),this.environmentIntensity!==1&&(t.object.environmentIntensity=this.environmentIntensity),t.object.environmentRotation=this.environmentRotation.toArray(),t}}class kr extends OA{constructor(A=null,t=1,e=1,i,s,n,r,a,o=rt,B=rt,I,Q){super(null,n,r,a,o,B,i,s,I,Q),this.isDataTexture=!0,this.image={data:A,width:t,height:e},this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}class _e extends Le{constructor(A=1,t=1,e=1,i=1){super(),this.type="PlaneGeometry",this.parameters={width:A,height:t,widthSegments:e,heightSegments:i};const s=A/2,n=t/2,r=Math.floor(e),a=Math.floor(i),o=r+1,B=a+1,I=A/r,Q=t/a,h=[],C=[],E=[],c=[];for(let l=0;l<B;l++){const y=l*Q-n;for(let d=0;d<o;d++){const f=d*I-s;C.push(f,-y,0),E.push(0,0,1),c.push(d/r),c.push(1-l/a)}}for(let l=0;l<a;l++)for(let y=0;y<r;y++){const d=y+o*l,f=y+o*(l+1),p=y+1+o*(l+1),m=y+1+o*l;h.push(d,f,m),h.push(f,p,m)}this.setIndex(h),this.setAttribute("position",new be(C,3)),this.setAttribute("normal",new be(E,3)),this.setAttribute("uv",new be(c,2))}copy(A){return super.copy(A),this.parameters=Object.assign({},A.parameters),this}static fromJSON(A){return new _e(A.width,A.height,A.widthSegments,A.heightSegments)}}class bi extends Nr{constructor(A){super(A),this.isRawShaderMaterial=!0,this.type="RawShaderMaterial"}}class Li{constructor(A,t,e,i){Li.prototype.isMatrix2=!0,this.elements=[1,0,0,1],A!==void 0&&this.set(A,t,e,i)}identity(){return this.set(1,0,0,1),this}fromArray(A,t=0){for(let e=0;e<4;e++)this.elements[e]=A[e+t];return this}set(A,t,e,i){const s=this.elements;return s[0]=A,s[2]=t,s[1]=e,s[3]=i,this}}typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:Is}})),typeof window<"u"&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__=Is);const zA=-9,tt=(9-zA)/254,Yi=Math.exp(zA),Rr=11,Gr=11,O=1<<Rr,ht=1<<Gr,js=1,Ur=!0;function _t(g){return g==="int"||g==="ivec2"||g==="ivec3"||g==="ivec4"}function qt(g){return g==="uint"||g==="uvec2"||g==="uvec3"||g==="uvec4"}function br(g){return g==="float"||g==="vec2"||g==="vec3"||g==="vec4"}function Lr(g){return g==="mat2"||g==="mat2x2"||g==="mat2x3"||g==="mat2x4"||g==="mat3"||g==="mat3x2"||g==="mat3x3"||g==="mat3x4"||g==="mat4"||g==="mat4x2"||g==="mat4x3"||g==="mat4x4"}function qe(g){return br(g)||Lr(g)}function Zt(g){return g==="mat2"||g==="mat2x2"}function Wt(g){return g==="mat3"||g==="mat3x3"}function Ot(g){return g==="mat4"||g==="mat4x4"}function sA(g){return Math.trunc(g).toString()}function nA(g){return`${Math.max(0,Math.trunc(g)).toString()}u`}function K(g){return g===Number.POSITIVE_INFINITY?"INFINITY":g===Number.NEGATIVE_INFINITY?"-INFINITY":Number.isInteger(g)?g.toFixed(1):g.toString()}function Dt(g){return g instanceof mt?g.type:g.dynoOut().type}class mt{constructor(A){this.__isDynoValue=!0,this.type=A}}class NA extends mt{constructor(A,t){super(A.outTypes[t]),this.dyno=A,this.key=t}}class Ze extends mt{constructor(A,t){super(A),this.literal=t}getLiteral(){return this.literal}}class Yr extends Ze{constructor(A,t){super(A,""),this.value=t}getLiteral(){const{type:A,value:t}=this;switch(A){case"bool":return t?"true":"false";case"uint":return nA(t);case"int":return sA(t);case"float":return K(t);case"bvec2":{const e=t;return`bvec2(${e[0]}, ${e[1]})`}case"uvec2":{if(t instanceof DA)return`uvec2(${nA(t.x)}, ${nA(t.y)})`;const e=t;return`uvec2(${nA(e[0])}, ${nA(e[1])})`}case"ivec2":{if(t instanceof DA)return`ivec2(${sA(t.x)}, ${sA(t.y)})`;const e=t;return`ivec2(${sA(e[0])}, ${sA(e[1])})`}case"vec2":{if(t instanceof DA)return`vec2(${K(t.x)}, ${K(t.y)})`;const e=t;return`vec2(${K(e[0])}, ${K(e[1])})`}case"bvec3":{const e=t;return`bvec3(${e[0]}, ${e[1]}, ${e[2]})`}case"uvec3":{if(t instanceof u)return`uvec3(${nA(t.x)}, ${nA(t.y)}, ${nA(t.z)})`;const e=t;return`uvec3(${nA(e[0])}, ${nA(e[1])}, ${nA(e[2])})`}case"ivec3":{if(t instanceof u)return`ivec3(${sA(t.x)}, ${sA(t.y)}, ${sA(t.z)})`;const e=t;return`ivec3(${sA(e[0])}, ${sA(e[1])}, ${sA(e[2])})`}case"vec3":{if(t instanceof u)return`vec3(${K(t.x)}, ${K(t.y)}, ${K(t.z)})`;const e=t;return`vec3(${K(e[0])}, ${K(e[1])}, ${K(e[2])})`}case"bvec4":{const e=t;return`bvec4(${e[0]}, ${e[1]}, ${e[2]}, ${e[3]})`}case"uvec4":{if(t instanceof dA)return`uvec4(${nA(t.x)}, ${nA(t.y)}, ${nA(t.z)}, ${nA(t.w)})`;const e=t;return`uvec4(${nA(e[0])}, ${nA(e[1])}, ${nA(e[2])}, ${nA(e[3])})`}case"ivec4":{if(t instanceof dA)return`ivec4(${sA(t.x)}, ${sA(t.y)}, ${sA(t.z)}, ${sA(t.w)})`;const e=t;return`ivec4(${sA(e[0])}, ${sA(e[1])}, ${sA(e[2])}, ${sA(e[3])})`}case"vec4":{if(t instanceof dA)return`vec4(${K(t.x)}, ${K(t.y)}, ${K(t.z)}, ${K(t.w)})`;if(t instanceof aA)return`vec4(${K(t.x)}, ${K(t.y)}, ${K(t.z)}, ${K(t.w)})`;const e=t;return`vec4(${K(e[0])}, ${K(e[1])}, ${K(e[2])}, ${K(e[3])})`}case"mat2":case"mat2x2":{const e=t,i=e instanceof Li?e.elements:t,s=new Array(4).fill(0).map((n,r)=>K(i[r]));return`${A}(${s.join(", ")})`}case"mat2x3":{const e=t,i=new Array(6).fill(0).map((s,n)=>K(e[n]));return`${A}(${i.join(", ")})`}case"mat2x4":{const e=t,i=new Array(8).fill(0).map((s,n)=>K(e[n]));return`${A}(${i.join(", ")})`}case"mat3":case"mat3x3":{const e=t,i=e instanceof WA?e.elements:t,s=new Array(9).fill(0).map((n,r)=>K(i[r]));return`${A}(${s.join(", ")})`}case"mat3x2":{const e=t,i=new Array(6).fill(0).map((s,n)=>K(e[n]));return`${A}(${i.join(", ")})`}case"mat3x4":{const e=t,i=new Array(12).fill(0).map((s,n)=>K(e[n]));return`${A}(${i.join(", ")})`}case"mat4":case"mat4x4":{const e=t,i=e instanceof EA?e.elements:t,s=new Array(16).fill(0).map((n,r)=>K(i[r]));return`${A}(${s.join(", ")})`}case"mat4x2":{const e=t,i=new Array(8).fill(0).map((s,n)=>K(e[n]));return`${A}(${i.join(", ")})`}case"mat4x3":{const e=t,i=new Array(12).fill(0).map((s,n)=>K(e[n]));return`${A}(${i.join(", ")})`}default:throw new Error(`Type not implemented: ${String(A)}`)}}}function Jr(g,A){return new Yr(g,A)}const Vs="    ";class Tr{constructor({indent:A}={}){this.globals=new Set,this.statements=[],this.uniforms={},this.declares=new Set,this.updaters=[],this.sequence=0,this.indent=Vs,this.indent=A??Vs}nextSequence(){return this.sequence++}}class lA{constructor({inTypes:A,outTypes:t,inputs:e,update:i,globals:s,statements:n,generate:r}){this.inTypes=A??{},this.outTypes=t??{},this.inputs=e??{},this.update=i,this.globals=s,this.statements=n,this.generate=r??(({inputs:a,outputs:o,compile:B})=>{var I,Q;return{globals:(I=this.globals)==null?void 0:I.call(this,{inputs:a,outputs:o,compile:B}),statements:(Q=this.statements)==null?void 0:Q.call(this,{inputs:a,outputs:o,compile:B})}})}get outputs(){const A={};for(const t in this.outTypes)A[t]=new NA(this,t);return A}apply(A){return Object.assign(this.inputs,A),this.outputs}compile({inputs:A,outputs:t,compile:e}){const i=[`// ${this.constructor.name}(${Object.values(A).join(", ")}) => (${Object.values(t).join(", ")})`],s=[];for(const o in t){const B=t[o];B&&!e.declares.has(B)&&(e.declares.add(B),s.push(o))}const{globals:n,statements:r,uniforms:a}=this.generate({inputs:A,outputs:t,compile:e});for(const o of n??[])e.globals.add(o);for(const o in a)e.uniforms[o]=a[o];this.update&&e.updaters.push(this.update);for(const o of s){const B=t[o];B&&(e.uniforms[B]||i.push(`${Ps(B,this.outTypes[o])};`))}return r!=null&&r.length&&(i.push("{"),i.push(...r.map(o=>e.indent+o)),i.push("}")),i}}class Hr extends lA{constructor({inTypes:A,outTypes:t,inputs:e,update:i,globals:s,construct:n}){super({inTypes:A,outTypes:t,inputs:e,update:i,globals:s,generate:r=>this.generateBlock(r)}),this.construct=n}generateBlock({inputs:A,outputs:t,compile:e}){var C,E;const i={},s={};for(const c in A)A[c]!=null&&(i[c]=new Ze(this.inTypes[c],A[c]));for(const c in t)t[c]!=null&&(s[c]=new mt(this.outTypes[c]));const n={roots:[]},r=this.construct(i,s,n);for(const c of((C=this.globals)==null?void 0:C.call(this,{inputs:A,outputs:t,compile:e}))??[])e.globals.add(c);const a=[],o=new Map;function B(c,l,y){let d=o.get(c);if(!d){d={sequence:e.nextSequence(),outNames:new Map,newOuts:new Set},o.set(c,d);for(const f in c.inputs){let p=c.inputs[f];for(;p;){if(p instanceof mt){p instanceof NA&&B(p.dyno,p.key);break}p=p.dynoOut()}}a.push(c)}l&&(y||d.newOuts.add(l),d.outNames.set(l,y??`${l}_${d.sequence}`))}for(const c of n.roots)B(c);for(const c in s){let l=(r==null?void 0:r[c])??s[c];for(;l;){if(l instanceof mt){l instanceof NA&&B(l.dyno,l.key,t[c]);break}l=l.dynoOut()}s[c]=l}const I=[];for(const c of a){const l={},y={};for(const p in c.inputs){let m=c.inputs[p];for(;m;){if(m instanceof mt){if(m instanceof Ze)l[p]=m.getLiteral();else if(m instanceof NA){const x=(E=o.get(m.dyno))==null?void 0:E.outNames.get(m.key);if(!x)throw new Error(`Source not found for ${m.dyno.constructor.name}.${m.key}`);l[p]=x}break}m=m.dynoOut()}}const d=o.get(c)??{outNames:new Map};for(const[p,m]of d.outNames.entries())y[p]=m;const f=c.compile({inputs:l,outputs:y,compile:e});I.push(f)}const Q=[];for(const c in t)s[c]instanceof Ze&&Q.push(`${t[c]} = ${s[c].getLiteral()};`);return Q.length>0&&I.push(Q),{statements:I.flatMap((c,l)=>l===0?c:["",...c])}}}function We(g,A,t,{update:e,globals:i}={}){return new Hr({inTypes:g,outTypes:A,construct:t,update:e,globals:i})}function Ji({inTypes:g,outTypes:A,inputs:t,update:e,globals:i,statements:s,generate:n}){return new lA({inTypes:g,outTypes:A,inputs:t,update:e,globals:i,statements:s,generate:n})}function Ps(g,A,t){const e=typeof A=="string"?A:A.type;if(!e)throw new Error(`Invalid DynoType: ${String(A)}`);return`${e} ${g}${t!=null?`[${t}]`:""}`}function et(g){var s;let A=!1;const t=g.split(`\n`).map(n=>{const r=n.trimEnd();return A?r:r.length>0?(A=!0,r):null}).filter(n=>n!=null);for(;t.length>0&&t[t.length-1].length===0;)t.pop();if(t.length===0)return[];const e=(s=t[0].match(/^\\s*/))==null?void 0:s[0];if(!e)return t;const i=new RegExp(`^${e}`);return t.map(n=>n.replace(i,""))}function KA(g){return et(g).join(`\n`)}class vr extends lA{constructor({a:A,outKey:t,outTypeFunc:e}){const i={a:Dt(A)},s=e(Dt(A)),n={[t]:s};super({inTypes:i,outTypes:n,inputs:{a:A}}),this.outKey=t}dynoOut(){return new NA(this,this.outKey)}}class Oe extends lA{constructor({a:A,b:t,outKey:e,outTypeFunc:i}){const s={a:Dt(A),b:Dt(t)},n=i(Dt(A),Dt(t)),r={[e]:n};super({inTypes:s,outTypes:r,inputs:{a:A,b:t}}),this.outKey=e}dynoOut(){return new NA(this,this.outKey)}}const Ti=new Float32Array(1),Xs=new Uint32Array(Ti.buffer);function jt(g){Ti[0]=g;const A=Xs[0],t=A>>31&1,e=A>>23&255,i=A&8388607,s=t<<15;if(e===255)return i!==0?s|32767:s|31744;const n=e-127+15;if(n>=31)return s|31744;if(n<=0){if(n<-10)return s;const a=(i|8388608)>>1-n+13;return s|a}const r=i>>13;return s|n<<10|r}function AA(g){const A=g>>15&1,t=g>>10&31,e=g&1023;let i;if(t===0)if(e===0)i=A<<31;else{let s=e,n=-14;for(;(s&1024)===0;)s<<=1,n--;s&=1023;const r=n+127,a=s<<13;i=A<<31|r<<23|a}else if(t===31)e===0?i=A<<31|2139095040:i=A<<31|2143289344;else{const s=t-15+127,n=e<<13;i=A<<31|s<<23|n}return Xs[0]=i,Ti[0]}function Ct(g){return Math.max(0,Math.min(255,Math.round(g*255)))}function $s(g){const A=[],t=new Set;function e(i){i&&typeof i=="object"&&!t.has(i)&&(t.add(i),i instanceof ArrayBuffer?A.push(i):ArrayBuffer.isView(i)?A.push(i.buffer):Array.isArray(i)?i.forEach(e):Object.values(i).forEach(e))}return e(g),A}function he(g,A,t,e,i,s,n,r,a,o,B,I,Q,h,C,E){const c=Ct(h),l=Ct(C),y=Ct(E),d=Ct(Q),f=tn(new aA(a,o,B,I)),p=f&255,m=f>>>8&255,x=f>>>16&255,w=s===0?0:Math.min(255,Math.max(0,Math.round((Math.log(s)-zA)/tt)+1)),D=n===0?0:Math.min(255,Math.max(0,Math.round((Math.log(n)-zA)/tt)+1)),N=r===0?0:Math.min(255,Math.max(0,Math.round((Math.log(r)-zA)/tt)+1)),S=jt(t),M=jt(e),F=jt(i),k=A*4;g[k]=c|l<<8|y<<16|d<<24,g[k+1]=S|M<<16,g[k+2]=F|p<<16|m<<24,g[k+3]=w|D<<8|N<<16|x<<24}function zr(g,A,t,e,i){const s=jt(t),n=jt(e),r=jt(i),a=A*4;g[a+1]=s|n<<16,g[a+2]=r|g[a+2]&4294901760}function Kr(g,A,t,e,i){const s=t===0?0:Math.min(255,Math.max(0,Math.round((Math.log(t)-zA)/tt)+1)),n=e===0?0:Math.min(255,Math.max(0,Math.round((Math.log(e)-zA)/tt)+1)),r=i===0?0:Math.min(255,Math.max(0,Math.round((Math.log(i)-zA)/tt)+1)),a=A*4;g[a+3]=s|n<<8|r<<16|g[a+3]&4278190080}function _r(g,A,t,e,i,s){const n=tn(new aA(t,e,i,s)),r=n&255,a=n>>>8&255,o=n>>>16&255,B=A*4;g[B+2]=g[B+2]&65535|r<<16|a<<24,g[B+3]=g[B+3]&16777215|o<<24}function qr(g,A,t,e,i){const s=Ct(t),n=Ct(e),r=Ct(i),a=A*4;g[a]=s|n<<8|r<<16|g[a]&4278190080}function Zr(g,A,t){const e=Ct(t),i=A*4;g[i]=g[i]&16777215|e<<24}const Wr=new u,Or=new u,jr=new aA,Vr=new wt,Pr={center:Wr,scales:Or,quaternion:jr,color:Vr,opacity:0};function An(g,A){const t=Pr,e=A*4,i=g[e],s=g[e+1],n=g[e+2],r=g[e+3];t.color.set((i&255)/255,(i>>>8&255)/255,(i>>>16&255)/255),t.opacity=(i>>>24&255)/255,t.center.set(AA(s&65535),AA(s>>>16&65535),AA(n&65535));const a=r&255;t.scales.x=a===0?0:Math.exp(zA+(a-1)*tt);const o=r>>>8&255;t.scales.y=o===0?0:Math.exp(zA+(o-1)*tt);const B=r>>>16&255;t.scales.z=B===0?0:Math.exp(zA+(B-1)*tt);const I=n>>>16&65535|r>>>8&16711680;return $r(I,t.quaternion),t}function kA(g){const A=O,t=Math.max(js,Math.min(ht,Math.ceil(g/A))),e=Math.ceil(g/(A*t)),i=A*t*e;return{width:A,height:t,depth:e,maxSplats:i}}function Hi(g){const A=O,t=Math.max(js,Math.min(ht,Math.ceil(g/A))),e=Math.ceil(g/(A*t));return A*t*e}const Xr=KA(`\n  precision highp float;\n\n  in vec3 position;\n\n  void main() {\n    gl_Position = vec4(position.xy, 0.0, 1.0);\n  }\n`);function tn(g){const A=g.clone().normalize();A.w<0&&A.set(-A.x,-A.y,-A.z,-A.w);const t=2*Math.acos(A.w),e=Math.sqrt(A.x*A.x+A.y*A.y+A.z*A.z),i=e<1e-6?new u(1,0,0):new u(A.x,A.y,A.z).divideScalar(e),s=Math.abs(i.x)+Math.abs(i.y)+Math.abs(i.z);let n=i.x/s,r=i.y/s;if(i.z<0){const h=n;n=(1-Math.abs(r))*(n>=0?1:-1),r=(1-Math.abs(h))*(r>=0?1:-1)}const a=n*.5+.5,o=r*.5+.5,B=Math.round(a*255),I=Math.round(o*255);return Math.round(t*(255/Math.PI))<<16|I<<8|B}function $r(g,A){const t=g&255,e=g>>>8&255,i=g>>>16&255,s=t/255,n=e/255;let r=(s-.5)*2,a=(n-.5)*2;const o=1-(Math.abs(r)+Math.abs(a)),B=Math.max(-o,0);r+=r>=0?-B:B,a+=a>=0?-B:B;const I=new u(r,a,o).normalize(),h=i/255*Math.PI*.5,C=Math.sin(h),E=Math.cos(h);return A.set(I.x*C,I.y*C,I.z*C,E),A}function je(g,A,t,e){const i=Math.max(-127,Math.min(127,g*127)),s=Math.max(-127,Math.min(127,A*127)),n=Math.max(-127,Math.min(127,t*127)),r=Math.max(-127,Math.min(127,e*127));return i&255|(s&255)<<8|(n&255)<<16|(r&255)<<24}function vi(g,A,t){const e=A*2;for(let i=0;i<9;++i){const s=Math.max(-63,Math.min(63,t[i]*63))&127,n=i*7,r=n+7,a=Math.floor(n/32),o=n-a*32,B=s<<o&4294967295;if(g[e+a]|=B,r>a*32+32){const I=s>>>32-o&4294967295;g[e+a+1]|=I}}}function zi(g,A,t){g[A*4+0]=je(t[0],t[1],t[2],t[3]),g[A*4+1]=je(t[4],t[5],t[6],t[7]),g[A*4+2]=je(t[8],t[9],t[10],t[11]),g[A*4+3]=je(t[12],t[13],t[14],0)}function Ki(g,A,t){const e=A*4;for(let i=0;i<21;++i){const s=Math.max(-31,Math.min(31,t[i]*31))&63,n=i*6,r=n+6,a=Math.floor(n/32),o=n-a*32,B=s<<o&4294967295;if(g[e+a]|=B,r>a*32+32){const I=s>>>32-o&4294967295;g[e+a+1]|=I}}}function Aa(g,A){const t=[];let e=0,i=null;const s=new os((a,o)=>{if(t.push(a),e+=a.length,o||e>=A){const B=new Uint8Array(e);let I=0;for(const Q of t)B.set(Q,I),I+=Q.length;i=B.slice(0,A)}}),n=1024;let r=0;for(;i==null&&r<g.length;){const a=g.slice(r,r+n);s.push(a,!1),r+=n}if(i==null&&(s.push(new Uint8Array,!0),i==null))throw new Error("Failed to decompress partial gzip");return i}class ta{constructor({fileBytes:A,chunkBytes:t=64*1024}){this.fileBytes=A,this.chunkBytes=t,this.offset=0,this.chunks=[],this.totalBytes=0,this.gunzip=new os((e,i)=>{this.chunks.push(e),this.totalBytes+=e.length})}read(A){for(;this.totalBytes<A&&this.offset<this.fileBytes.length;){const s=Math.min(this.offset+this.chunkBytes,this.fileBytes.length);this.gunzip.push(this.fileBytes.subarray(this.offset,s),!1),this.offset=s}if(this.totalBytes<A&&this.offset>=this.fileBytes.length&&this.gunzip.push(new Uint8Array(0),!0),this.totalBytes<A)throw new Error(`Unexpected EOF: needed ${A}, got ${this.totalBytes}`);const t=new Uint8Array(this.totalBytes);let e=0;for(const s of this.chunks)t.set(s,e),e+=s.length;const i=t.subarray(0,A);return this.chunks=[t.subarray(A)],this.totalBytes-=A,i}}function en(g,A,t){const e=Math.floor(g.length/32);if(e*32!==g.length)throw new Error("Invalid .splat file size");A(e);const i=new Float32Array(g.buffer);for(let s=0;s<e;++s){const n=s*32,r=s*8,a=i[r+0],o=i[r+1],B=i[r+2],I=i[r+3],Q=i[r+4],h=i[r+5],C=g[n+24]/255,E=g[n+25]/255,c=g[n+26]/255,l=g[n+27]/255,y=(g[n+28]-128)/128,d=(g[n+29]-128)/128,f=(g[n+30]-128)/128,p=(g[n+31]-128)/128;t(s,a,o,B,I,Q,h,d,f,p,y,l,C,E,c)}}function ea(g){let A=0,t=0,e=new Uint32Array(0);return en(g,i=>{A=i,t=Hi(A),e=new Uint32Array(t*4)},(i,s,n,r,a,o,B,I,Q,h,C,E,c,l,y)=>{he(e,i,s,n,r,a,o,B,I,Q,h,C,E,c,l,y)}),{packedArray:e,numSplats:A}}const Ve={0:{bytesPerCenter:12,bytesPerScale:12,bytesPerRotation:16,bytesPerColor:4,bytesPerSphericalHarmonicsComponent:4,scaleOffsetBytes:12,rotationOffsetBytes:24,colorOffsetBytes:40,sphericalHarmonicsOffsetBytes:44,scaleRange:1},1:{bytesPerCenter:6,bytesPerScale:6,bytesPerRotation:8,bytesPerColor:4,bytesPerSphericalHarmonicsComponent:2,scaleOffsetBytes:6,rotationOffsetBytes:12,colorOffsetBytes:20,sphericalHarmonicsOffsetBytes:24,scaleRange:32767},2:{bytesPerCenter:6,bytesPerScale:6,bytesPerRotation:8,bytesPerColor:4,bytesPerSphericalHarmonicsComponent:1,scaleOffsetBytes:6,rotationOffsetBytes:12,colorOffsetBytes:20,sphericalHarmonicsOffsetBytes:24,scaleRange:32767}},sn={0:0,1:9,2:24,3:45};function ia(g,A,t,e){var h;let n=0;const r=new DataView(g.buffer,n,4096);n+=4096;const a=r.getUint8(0),o=r.getUint8(1);if(a!==0||o<1)throw new Error(`Unsupported .ksplat version: ${a}.${o}`);const B=r.getUint32(4,!0);r.getUint32(16,!0);const I=r.getUint16(20,!0);if(I<0||I>2)throw new Error(`Invalid .ksplat compression level: ${I}`);r.getFloat32(36,!0),r.getFloat32(40,!0);let Q=4096+B*1024;for(let C=0;C<B;++C){const E=new DataView(g.buffer,n,1024);n+=1024;const c=E.getUint32(0,!0),l=E.getUint32(4,!0),y=E.getUint32(8,!0),d=E.getUint32(12,!0),f=E.getFloat32(16,!0),p=E.getUint16(20,!0),m=(E.getUint32(24,!0)||((h=Ve[I])==null?void 0:h.scaleRange))??1,x=E.getUint32(32,!0),w=x*y,D=E.getUint32(36,!0),N=D*4,S=p*d+N,M=E.getUint16(40,!0),F=sn[M],{bytesPerCenter:k,bytesPerScale:b,bytesPerRotation:R,bytesPerColor:G,bytesPerSphericalHarmonicsComponent:P,scaleOffsetBytes:L,rotationOffsetBytes:Z,colorOffsetBytes:W,sphericalHarmonicsOffsetBytes:rA}=Ve[I],V=k+b+R+G+F*P,_=V*l,T=_+S,q=M>=1?new Float32Array(3*3):void 0,U=M>=2?new Float32Array(5*3):void 0,yA=M>=3?new Float32Array(7*3):void 0,BA=f/2/m,RA=Q+N,fA=Q+S,H=new DataView(g.buffer,fA,_),MA=new Float32Array(g.buffer,RA,d*3),_A=new Uint32Array(g.buffer,Q,D);let uA=x,wA=w;for(let tA=0;tA<c;++tA){const v=tA*V;let $;if(tA<w)$=Math.floor(tA/y);else{const ai=_A[uA-x];tA>=wA+ai&&(uA+=1,wA+=ai),$=uA}const Y=I===0?H.getFloat32(v+0,!0):(H.getUint16(v+0,!0)-m)*BA+MA[3*$+0],xt=I===0?H.getFloat32(v+4,!0):(H.getUint16(v+2,!0)-m)*BA+MA[3*$+1],ue=I===0?H.getFloat32(v+8,!0):(H.getUint16(v+4,!0)-m)*BA+MA[3*$+2],Mt=I===0?H.getFloat32(v+L+0,!0):AA(H.getUint16(v+L+0,!0)),Ae=I===0?H.getFloat32(v+L+4,!0):AA(H.getUint16(v+L+2,!0)),QA=I===0?H.getFloat32(v+L+8,!0):AA(H.getUint16(v+L+4,!0)),z=I===0?H.getFloat32(v+Z+0,!0):AA(H.getUint16(v+Z+0,!0)),qA=I===0?H.getFloat32(v+Z+4,!0):AA(H.getUint16(v+Z+2,!0)),de=I===0?H.getFloat32(v+Z+8,!0):AA(H.getUint16(v+Z+4,!0)),ye=I===0?H.getFloat32(v+Z+12,!0):AA(H.getUint16(v+Z+6,!0)),fe=H.getUint8(v+W+0)/255,Xi=H.getUint8(v+W+1)/255,$i=H.getUint8(v+W+2)/255,As=H.getUint8(v+W+3)/255;t(tA,Y,xt,ue,Mt,Ae,QA,qA,de,ye,z,As,fe,Xi,$i),M>=1&&q&&(e==null||e(tA,q,U,yA))}Q+=T}}function sa(g){var l;let e=0;const i=new DataView(g.buffer,e,4096);e+=4096;const s=i.getUint8(0),n=i.getUint8(1);if(s!==0||n<1)throw new Error(`Unsupported .ksplat version: ${s}.${n}`);const r=i.getUint32(4,!0),a=i.getUint32(16,!0),o=i.getUint16(20,!0);if(o<0||o>2)throw new Error(`Invalid .ksplat compression level: ${o}`);const B=i.getFloat32(36,!0)||-1.5,I=i.getFloat32(40,!0)||1.5,Q=a,h=Hi(Q),C=new Uint32Array(h*4),E={};let c=4096+r*1024;for(let y=0;y<r;++y){let d=function(QA,z){if(o===0)return Y.getFloat32(QA+U+z*4,!0);if(o===1)return AA(Y.getUint16(QA+U+z*2,!0));const qA=Y.getUint8(QA+U+z)/255;return B+qA*(I-B)};const f=new DataView(g.buffer,e,1024);e+=1024;const p=f.getUint32(0,!0),m=f.getUint32(4,!0),x=f.getUint32(8,!0),w=f.getUint32(12,!0),D=f.getFloat32(16,!0),N=f.getUint16(20,!0),S=(f.getUint32(24,!0)||((l=Ve[o])==null?void 0:l.scaleRange))??1,M=f.getUint32(32,!0),F=M*x,k=f.getUint32(36,!0),b=k*4,R=N*w+b,G=f.getUint16(40,!0),P=sn[G],{bytesPerCenter:L,bytesPerScale:Z,bytesPerRotation:W,bytesPerColor:rA,bytesPerSphericalHarmonicsComponent:V,scaleOffsetBytes:_,rotationOffsetBytes:T,colorOffsetBytes:q,sphericalHarmonicsOffsetBytes:U}=Ve[o],yA=L+Z+W+rA+P*V,BA=yA*m,RA=BA+R,fA=[0,3,6,1,4,7,2,5,8],H=[9,14,19,10,15,20,11,16,21,12,17,22,13,18,23],MA=[24,31,38,25,32,39,26,33,40,27,34,41,28,35,42,29,36,43,30,37,44],_A=G>=1?new Float32Array(3*3):void 0,uA=G>=2?new Float32Array(5*3):void 0,wA=G>=3?new Float32Array(7*3):void 0,tA=D/2/S,v=c+b,$=c+R,Y=new DataView(g.buffer,$,BA),xt=new Float32Array(g.buffer,v,w*3),ue=new Uint32Array(g.buffer,c,k);let Mt=M,Ae=F;for(let QA=0;QA<p;++QA){const z=QA*yA;let qA;if(QA<F)qA=Math.floor(QA/x);else{const lt=ue[Mt-M];QA>=Ae+lt&&(Mt+=1,Ae+=lt),qA=Mt}const de=o===0?Y.getFloat32(z+0,!0):(Y.getUint16(z+0,!0)-S)*tA+xt[3*qA+0],ye=o===0?Y.getFloat32(z+4,!0):(Y.getUint16(z+2,!0)-S)*tA+xt[3*qA+1],fe=o===0?Y.getFloat32(z+8,!0):(Y.getUint16(z+4,!0)-S)*tA+xt[3*qA+2],Xi=o===0?Y.getFloat32(z+_+0,!0):AA(Y.getUint16(z+_+0,!0)),$i=o===0?Y.getFloat32(z+_+4,!0):AA(Y.getUint16(z+_+2,!0)),As=o===0?Y.getFloat32(z+_+8,!0):AA(Y.getUint16(z+_+4,!0)),ai=o===0?Y.getFloat32(z+T+0,!0):AA(Y.getUint16(z+T+0,!0)),Qg=o===0?Y.getFloat32(z+T+4,!0):AA(Y.getUint16(z+T+2,!0)),hg=o===0?Y.getFloat32(z+T+8,!0):AA(Y.getUint16(z+T+4,!0)),Cg=o===0?Y.getFloat32(z+T+12,!0):AA(Y.getUint16(z+T+6,!0)),Eg=Y.getUint8(z+q+0)/255,cg=Y.getUint8(z+q+1)/255,lg=Y.getUint8(z+q+2)/255,ug=Y.getUint8(z+q+3)/255;if(he(C,QA,de,ye,fe,Xi,$i,As,Qg,hg,Cg,ai,ug,Eg,cg,lg),G>=1){if(_A){E.sh1||(E.sh1=new Uint32Array(Q*2));for(const[lt,we]of fA.entries())_A[lt]=d(z,we);vi(E.sh1,QA,_A)}if(uA){E.sh2||(E.sh2=new Uint32Array(Q*4));for(const[lt,we]of H.entries())uA[lt]=d(z,we);zi(E.sh2,QA,uA)}if(wA){E.sh3||(E.sh3=new Uint32Array(Q*4));for(const[lt,we]of MA.entries())wA[lt]=d(z,we);Ki(E.sh3,QA,wA)}}}c+=RA}return{packedArray:C,numSplats:Q,extra:E}}const $t=class $t{constructor({fileBytes:A}){this.header="",this.littleEndian=!0,this.elements={},this.comments=[],this.data=null,this.numSplats=0,this.fileBytes=A instanceof ArrayBuffer?new Uint8Array(A):A}async parseHeader(){const t=new ReadableStream({start:n=>{n.enqueue(this.fileBytes.slice(0,65536)),n.close()}}).pipeThrough(new TextDecoderStream).getReader();this.header="";const e=`end_header\n`;for(;;){const{value:n,done:r}=await t.read();if(r)throw new Error("Failed to read header");this.header+=n;const a=this.header.indexOf(e);if(a>=0){this.header=this.header.slice(0,a+e.length);break}}const i=new TextEncoder().encode(this.header).length;this.data=new DataView(this.fileBytes.buffer,i),this.elements={};let s=null;this.comments=[],this.header.trim().split(`\n`).forEach((n,r)=>{const a=n.trim();if(r===0){if(a!=="ply")throw new Error("Invalid PLY header");return}if(a.length===0)return;const o=a.split(" ");switch(o[0]){case"format":if(o[1]==="binary_little_endian")this.littleEndian=!0;else if(o[1]==="binary_big_endian")this.littleEndian=!1;else throw new Error(`Unsupported PLY format: ${o[1]}`);if(o[2]!=="1.0")throw new Error(`Unsupported PLY version: ${o[2]}`);break;case"end_header":break;case"comment":this.comments.push(a.slice(8));break;case"element":{const B=o[1];s={name:B,count:Number.parseInt(o[2]),properties:{}},this.elements[B]=s;break}case"property":if(s==null)throw new Error("Property must be inside an element");o[1]==="list"?s.properties[o[4]]={isList:!0,type:o[3],countType:o[2]}:s.properties[o[2]]={isList:!1,type:o[1]};break}}),this.elements.vertex&&(this.numSplats=this.elements.vertex.count)}parseData(A){let t=0;const e=this.data;if(e==null)throw new Error("No data to parse");for(const i in this.elements){const s=this.elements[i],{count:n,properties:r}=s,a={},o=[];for(const[I,Q]of Object.entries(r))Q.isList?(a[I]=[],o.push(()=>{const h=a[I];h.length=Xe[Q.countType](e,t,this.littleEndian),t+=Vt[Q.countType];for(let C=0;C<h.length;C++)h[C]=Xe[Q.type](e,t,this.littleEndian),t+=Vt[Q.type]})):(a[I]=0,o.push(()=>{a[I]=Xe[Q.type](e,t,this.littleEndian),t+=Vt[Q.type]}));const B=A(s)??(()=>{});for(let I=0;I<n;I++){for(const Q of o)Q();B(I,a)}}}parseSplats(A,t){if(this.elements.vertex==null)throw new Error("No vertex element found");let e=!1;const i=[];let s=0,n=[],r=[],a=[],o,B,I;function Q(){const l=ra[s];n=new Array(3).fill(null).flatMap((y,d)=>[0,1,2].map((f,p)=>`f_rest_${d+p*l/3}`)),r=new Array(5).fill(null).flatMap((y,d)=>[0,1,2].map((f,p)=>`f_rest_${3+d+p*l/3}`)),a=new Array(7).fill(null).flatMap((y,d)=>[0,1,2].map((f,p)=>`f_rest_${8+d+p*l/3}`)),o=s>=1?new Float32Array(3*3):void 0,B=s>=2?new Float32Array(5*3):void 0,I=s>=3?new Float32Array(7*3):void 0}function h(l,y){if(!o)throw new Error("Missing sh1");for(const[d,f]of n.entries())o[d]=y[f]*8/255-4;if(B)for(const[d,f]of r.entries())B[d]=y[f]*8/255-4;if(I)for(const[d,f]of a.entries())I[d]=y[f]*8/255-4;t==null||t(l,o,B,I)}function C(l){const{min_x:y,min_y:d,min_z:f,max_x:p,max_y:m,max_z:x,min_scale_x:w,min_scale_y:D,min_scale_z:N,max_scale_x:S,max_scale_y:M,max_scale_z:F,min_r:k,min_g:b,min_b:R,max_r:G,max_g:P,max_b:L}=l.properties;if(!y||!d||!f||!p||!m||!x||!w||!D||!N||!S||!M||!F||!k||!b||!R||!G||!P||!L)throw new Error("Missing PLY chunk properties");return e=!0,(Z,W)=>{const{min_x:rA,min_y:V,min_z:_,max_x:T,max_y:q,max_z:U,min_scale_x:yA,min_scale_y:BA,min_scale_z:RA,max_scale_x:fA,max_scale_y:H,max_scale_z:MA,min_r:_A,min_g:uA,min_b:wA,max_r:tA,max_g:v,max_b:$}=W;i.push({min_x:rA,min_y:V,min_z:_,max_x:T,max_y:q,max_z:U,min_scale_x:yA,min_scale_y:BA,min_scale_z:RA,max_scale_x:fA,max_scale_y:H,max_scale_z:MA,min_r:_A,min_g:uA,min_b:wA,max_r:tA,max_g:v,max_b:$})}}function E(l){if(t&&l.name==="sh")return s=rn(l.properties),Q(),h;if(l.name!=="vertex")return null;const{packed_position:y,packed_rotation:d,packed_scale:f,packed_color:p}=l.properties;if(!y||!d||!f||!p)throw new Error("Missing PLY properties: packed_position, packed_rotation, packed_scale, packed_color");const m=Math.sqrt(2);return(x,w)=>{const D=i[x>>>8];if(D==null)throw new Error("Missing PLY chunk");const{min_x:N,min_y:S,min_z:M,max_x:F,max_y:k,max_z:b,min_scale_x:R,min_scale_y:G,min_scale_z:P,max_scale_x:L,max_scale_y:Z,max_scale_z:W,min_r:rA,min_g:V,min_b:_,max_r:T,max_g:q,max_b:U}=D,{packed_position:yA,packed_rotation:BA,packed_scale:RA,packed_color:fA}=w,H=(yA>>>21&2047)/2047*(F-N)+N,MA=(yA>>>11&1023)/1023*(k-S)+S,_A=(yA&2047)/2047*(b-M)+M,uA=((BA>>>20&1023)/1023-.5)*m,wA=((BA>>>10&1023)/1023-.5)*m,tA=((BA&1023)/1023-.5)*m,v=Math.sqrt(Math.max(0,1-uA*uA-wA*wA-tA*tA)),$=BA>>>30,Y=$===0?uA:$===1?v:wA,xt=$<=1?wA:$===2?v:tA,ue=$<=2?tA:v,Mt=$===0?v:uA,Ae=Math.exp((RA>>>21&2047)/2047*(L-R)+R),QA=Math.exp((RA>>>11&1023)/1023*(Z-G)+G),z=Math.exp((RA&2047)/2047*(W-P)+P),qA=(fA>>>24&255)/255*(T-rA)+rA,de=(fA>>>16&255)/255*(q-V)+V,ye=(fA>>>8&255)/255*(U-_)+_,fe=(fA&255)/255;A(x,H,MA,_A,Ae,QA,z,Y,xt,ue,Mt,fe,qA,de,ye)}}const c=l=>{if(l.name==="chunk")return C(l);if(e)return E(l);if(l.name!=="vertex")return null;const{x:y,y:d,z:f,scale_0:p,scale_1:m,scale_2:x,rot_0:w,rot_1:D,rot_2:N,rot_3:S,opacity:M,f_dc_0:F,f_dc_1:k,f_dc_2:b,red:R,green:G,blue:P,alpha:L}=l.properties;if(!y||!d||!f)throw new Error("Missing PLY properties: x, y, z");const Z=p&&m&&x,W=w&&D&&N&&S,rA=L!=null?$e[L.type]:1,V=R!=null?$e[R.type]:1,_=G!=null?$e[G.type]:1,T=P!=null?$e[P.type]:1;return s=rn(l.properties),Q(),(q,U)=>{const yA=Z?Math.exp(U.scale_0):$t.defaultPointScale,BA=Z?Math.exp(U.scale_1):$t.defaultPointScale,RA=Z?Math.exp(U.scale_2):$t.defaultPointScale,fA=W?U.rot_1:0,H=W?U.rot_2:0,MA=W?U.rot_3:0,_A=W?U.rot_0:1,uA=M!=null?1/(1+Math.exp(-U.opacity)):L!=null?U.alpha/rA:1,wA=F!=null?U.f_dc_0*Pe+.5:R!=null?U.red/V:1,tA=k!=null?U.f_dc_1*Pe+.5:G!=null?U.green/_:1,v=b!=null?U.f_dc_2*Pe+.5:P!=null?U.blue/T:1;if(A(q,U.x,U.y,U.z,yA,BA,RA,fA,H,MA,_A,uA,wA,tA,v),t&&o){if(o)for(const[$,Y]of n.entries())o[$]=U[Y];if(B)for(const[$,Y]of r.entries())B[$]=U[Y];if(I)for(const[$,Y]of a.entries())I[$]=U[Y];t(q,o,B,I)}}};this.parseData(c)}injectRgba(A){let t=0;const e=this.data;if(e==null)throw new Error("No parsed data");if(A.length!==this.numSplats*4)throw new Error("Invalid RGBA array length");for(const i in this.elements){const s=this.elements[i],{count:n,properties:r}=s,a=[];let o=0;const B=i==="vertex";if(B){for(const I of["opacity","f_dc_0","f_dc_1","f_dc_2"])if(!r[I]||r[I].type!=="float")throw new Error(`Can\'t injectRgba due to property: ${I}`)}for(const[I,Q]of Object.entries(r))if(Q.isList)a.push(()=>{const h=Xe[Q.countType](e,t,this.littleEndian);t+=Vt[Q.countType],t+=h*Vt[Q.type]});else{if(B)if(I==="f_dc_0"||I==="f_dc_1"||I==="f_dc_2"){const h=Number.parseInt(I.slice(5));a.push(()=>{const C=(A[o+h]/255-.5)/Pe;nn[Q.type](e,t,this.littleEndian,C)})}else I==="opacity"&&a.push(()=>{const h=Math.max(-100,Math.min(100,-Math.log(1/(A[o+3]/255)-1)));nn[Q.type](e,t,this.littleEndian,h)});a.push(()=>{t+=Vt[Q.type]})}for(let I=0;I<n;I++){for(const Q of a)Q();B&&(o+=4)}}}};$t.defaultPointScale=.001;let Ce=$t;const Pe=.28209479177387814,Xe={char:(g,A,t)=>g.getInt8(A),uchar:(g,A,t)=>g.getUint8(A),short:(g,A,t)=>g.getInt16(A,t),ushort:(g,A,t)=>g.getUint16(A,t),int:(g,A,t)=>g.getInt32(A,t),uint:(g,A,t)=>g.getUint32(A,t),float:(g,A,t)=>g.getFloat32(A,t),double:(g,A,t)=>g.getFloat64(A,t)},nn={char:(g,A,t,e)=>{g.setInt8(A,e)},uchar:(g,A,t,e)=>{g.setUint8(A,e)},short:(g,A,t,e)=>{g.setInt16(A,e,t)},ushort:(g,A,t,e)=>{g.setUint16(A,e,t)},int:(g,A,t,e)=>{g.setInt32(A,e,t)},uint:(g,A,t,e)=>{g.setUint32(A,e,t)},float:(g,A,t,e)=>{g.setFloat32(A,e,t)},double:(g,A,t,e)=>{g.setFloat64(A,e,t)}},Vt={char:1,uchar:1,short:2,ushort:2,int:4,uint:4,float:4,double:8},$e={char:127,uchar:255,short:32767,ushort:65535,int:2147483647,uint:4294967295,float:1,double:1},na={0:0,9:1,24:2,45:3},ra={0:0,1:9,2:24,3:45};function rn(g){let A=0;for(;g[`f_rest_${A}`];)A+=1;const t=na[A];if(t==null)throw new Error(`Unsupported number of SH coefficients: ${A}`);return t}const xA={type:"Gsplat"},_i={type:"PackedSplats"},aa=(g,A)=>new Ia({packedSplats:g,index:A}),ga=(g,A,t,e)=>new Ba({packedSplats:g,index:A,base:t,count:e}),Ai=g=>new Qa({gsplat:g}),qi=({gsplat:g,flags:A,index:t,center:e,scales:i,quaternion:s,rgba:n,rgb:r,opacity:a,x:o,y:B,z:I,r:Q,g:h,b:C})=>new ha({gsplat:g,flags:A,index:t,center:e,scales:i,quaternion:s,rgba:n,rgb:r,opacity:a,x:o,y:B,z:I,r:Q,g:h,b:C}),oa=(g,{scale:A,rotate:t,translate:e,recolor:i})=>new Ca({gsplat:g,scale:A,rotate:t,translate:e,recolor:i}),it=KA(`\n  struct Gsplat {\n    vec3 center;\n    uint flags;\n    vec3 scales;\n    int index;\n    vec4 quaternion;\n    vec4 rgba;\n  };\n  const uint GSPLAT_FLAG_ACTIVE = 1u << 0u;\n\n  bool isGsplatActive(uint flags) {\n    return (flags & GSPLAT_FLAG_ACTIVE) != 0u;\n  }\n`),Zi=KA(`\n  struct PackedSplats {\n    usampler2DArray texture;\n    int numSplats;\n  };\n`),an=KA(`\n  bool readPackedSplat(usampler2DArray texture, int numSplats, int index, out Gsplat gsplat) {\n    if ((index >= 0) && (index < numSplats)) {\n      uvec4 packed = texelFetch(texture, splatTexCoord(index), 0);\n      unpackSplat(packed, gsplat.center, gsplat.scales, gsplat.quaternion, gsplat.rgba);\n      return true;\n    } else {\n      return false;\n    }\n  }\n`);class Ia extends lA{constructor({packedSplats:A,index:t}){super({inTypes:{packedSplats:_i,index:"int"},outTypes:{gsplat:xA},inputs:{packedSplats:A,index:t},globals:()=>[it,Zi,an],statements:({inputs:e,outputs:i})=>{const{gsplat:s}=i;if(!s)return[];const{packedSplats:n,index:r}=e;let a;return n&&r?a=et(`\n            if (readPackedSplat(${n}.texture, ${n}.numSplats, ${r}, ${s})) {\n              bool zeroSize = all(equal(${s}.scales, vec3(0.0, 0.0, 0.0)));\n              ${s}.flags = zeroSize ? 0u : GSPLAT_FLAG_ACTIVE;\n            } else {\n              ${s}.flags = 0u;\n            }\n          `):a=[`${s}.flags = 0u;`],a.push(`${s}.index = ${r??"0"};`),a}})}dynoOut(){return new NA(this,"gsplat")}}class Ba extends lA{constructor({packedSplats:A,index:t,base:e,count:i}){super({inTypes:{packedSplats:_i,index:"int",base:"int",count:"int"},outTypes:{gsplat:xA},inputs:{packedSplats:A,index:t,base:e,count:i},globals:()=>[it,Zi,an],statements:({inputs:s,outputs:n})=>{const{gsplat:r}=n;if(!r)return[];const{packedSplats:a,index:o,base:B,count:I}=s;let Q;return a&&o&&B&&I?Q=et(`\n            ${r}.flags = 0u;\n            if ((${o} >= ${B}) && (${o} < (${B} + ${I}))) {\n              if (readPackedSplat(${a}.texture, ${a}.numSplats, ${o}, ${r})) {\n                bool zeroSize = all(equal(${r}.scales, vec3(0.0, 0.0, 0.0)));\n                ${r}.flags = zeroSize ? 0u : GSPLAT_FLAG_ACTIVE;\n              }\n            }\n          `):Q=[`${r}.flags = 0u;`],Q.push(`${r}.index = ${o??"0"};`),Q}})}dynoOut(){return new NA(this,"gsplat")}}class Qa extends lA{constructor({gsplat:A}){super({inTypes:{gsplat:xA},outTypes:{flags:"uint",active:"bool",index:"int",center:"vec3",scales:"vec3",quaternion:"vec4",rgba:"vec4",rgb:"vec3",opacity:"float",x:"float",y:"float",z:"float",r:"float",g:"float",b:"float"},inputs:{gsplat:A},globals:()=>[it],statements:({inputs:t,outputs:e})=>{const{gsplat:i}=t,{flags:s,active:n,index:r,center:a,scales:o,quaternion:B,rgba:I,rgb:Q,opacity:h,x:C,y:E,z:c,r:l,g:y,b:d}=e;return[s?`${s} = ${i?`${i}.flags`:"0u"};`:null,n?`${n} = isGsplatActive(${i?`${i}.flags`:"0u"});`:null,r?`${r} = ${i?`${i}.index`:"0"};`:null,a?`${a} = ${i?`${i}.center`:"vec3(0.0, 0.0, 0.0)"};`:null,o?`${o} = ${i?`${i}.scales`:"vec3(0.0, 0.0, 0.0)"};`:null,B?`${B} = ${i?`${i}.quaternion`:"vec4(0.0, 0.0, 0.0, 1.0)"};`:null,I?`${I} = ${i?`${i}.rgba`:"vec4(0.0, 0.0, 0.0, 0.0)"};`:null,Q?`${Q} = ${i?`${i}.rgba.rgb`:"vec3(0.0, 0.0, 0.0)"};`:null,h?`${h} = ${i?`${i}.rgba.a`:"0.0"};`:null,C?`${C} = ${i?`${i}.center.x`:"0.0"};`:null,E?`${E} = ${i?`${i}.center.y`:"0.0"};`:null,c?`${c} = ${i?`${i}.center.z`:"0.0"};`:null,l?`${l} = ${i?`${i}.rgba.r`:"0.0"};`:null,y?`${y} = ${i?`${i}.rgba.g`:"0.0"};`:null,d?`${d} = ${i?`${i}.rgba.b`:"0.0"};`:null].filter(Boolean)}})}}class ha extends lA{constructor({gsplat:A,flags:t,index:e,center:i,scales:s,quaternion:n,rgba:r,rgb:a,opacity:o,x:B,y:I,z:Q,r:h,g:C,b:E}){super({inTypes:{gsplat:xA,flags:"uint",index:"int",center:"vec3",scales:"vec3",quaternion:"vec4",rgba:"vec4",rgb:"vec3",opacity:"float",x:"float",y:"float",z:"float",r:"float",g:"float",b:"float"},outTypes:{gsplat:xA},inputs:{gsplat:A,flags:t,index:e,center:i,scales:s,quaternion:n,rgba:r,rgb:a,opacity:o,x:B,y:I,z:Q,r:h,g:C,b:E},globals:()=>[it],statements:({inputs:c,outputs:l})=>{const{gsplat:y}=l;if(!y)return[];const{gsplat:d,flags:f,index:p,center:m,scales:x,quaternion:w,rgba:D,rgb:N,opacity:S,x:M,y:F,z:k,r:b,g:R,b:G}=c;return[`${y}.flags = ${f??(d?`${d}.flags`:"0u")};`,`${y}.index = ${p??(d?`${d}.index`:"0")};`,`${y}.center = ${m??(d?`${d}.center`:"vec3(0.0, 0.0, 0.0)")};`,`${y}.scales = ${x??(d?`${d}.scales`:"vec3(0.0, 0.0, 0.0)")};`,`${y}.quaternion = ${w??(d?`${d}.quaternion`:"vec4(0.0, 0.0, 0.0, 1.0)")};`,`${y}.rgba = ${D??(d?`${d}.rgba`:"vec4(0.0, 0.0, 0.0, 0.0)")};`,N?`${y}.rgba.rgb = ${N};`:null,S?`${y}.rgba.a = ${S};`:null,M?`${y}.center.x = ${M};`:null,F?`${y}.center.y = ${F};`:null,k?`${y}.center.z = ${k};`:null,b?`${y}.rgba.r = ${b};`:null,R?`${y}.rgba.g = ${R};`:null,G?`${y}.rgba.b = ${G};`:null].filter(Boolean)}})}dynoOut(){return new NA(this,"gsplat")}}KA(`\n  vec3 gsplatNormal(vec3 scales, vec4 quaternion) {\n    float minScale = min(scales.x, min(scales.y, scales.z));\n    vec3 normal;\n    if (scales.z == minScale) {\n      normal = vec3(0.0, 0.0, 1.0);\n    } else if (scales.y == minScale) {\n      normal = vec3(0.0, 1.0, 0.0);\n    } else {\n      normal = vec3(1.0, 0.0, 0.0);\n    }\n    return quatVec(quaternion, normal);\n  }\n`);class Ca extends lA{constructor({gsplat:A,scale:t,rotate:e,translate:i,recolor:s}){super({inTypes:{gsplat:xA,scale:"float",rotate:"vec4",translate:"vec3",recolor:"vec4"},outTypes:{gsplat:xA},inputs:{gsplat:A,scale:t,rotate:e,translate:i,recolor:s},globals:()=>[it],statements:({inputs:n,outputs:r,compile:a})=>{const{gsplat:o}=r;if(!o||!n.gsplat)return[];const{scale:B,rotate:I,translate:Q,recolor:h}=n,C=a.indent;return[`${o} = ${n.gsplat};`,`if (isGsplatActive(${o}.flags)) {`,B?`${C}${o}.center *= ${B};`:null,I?`${C}${o}.center = quatVec(${I}, ${o}.center);`:null,Q?`${C}${o}.center += ${Q};`:null,B?`${C}${o}.scales *= ${B};`:null,I?`${C}${o}.quaternion = quatQuat(${I}, ${o}.quaternion);`:null,h?`${C}${o}.rgba *= ${h};`:null,"}"].filter(Boolean)}})}dynoOut(){return new NA(this,"gsplat")}}const Ea=g=>new ca({gsplat:g});class ca extends lA{constructor({gsplat:A}){super({inTypes:{gsplat:xA},inputs:{gsplat:A},globals:()=>[it],statements:({inputs:t,outputs:e})=>{const{output:i}=e;if(!i)return[];const{gsplat:s}=t;return s?et(`\n            if (isGsplatActive(${s}.flags)) {\n              ${i} = packSplat(${s}.center, ${s}.scales, ${s}.quaternion, ${s}.rgba);\n            } else {\n              ${i} = uvec4(0u, 0u, 0u, 0u);\n            }\n          `):[`${i} = uvec4(0u, 0u, 0u, 0u);`]}})}dynoOut(){return new NA(this,"output")}}class la extends lA{constructor({rgba8:A}){super({inTypes:{rgba8:"vec4"},inputs:{rgba8:A},statements:({inputs:t,outputs:e})=>[`target = ${t.rgba8??"vec4(0.0, 0.0, 0.0, 0.0)"};`]})}dynoOut(){return new NA(this,"rgba8")}}class st extends lA{constructor({key:A,type:t,count:e,value:i,update:s,globals:n}){A=A??"value",super({outTypes:{[A]:t},update:()=>{if(s){const r=s(this.value);r!==void 0&&(this.value=r)}this.uniform.value=this.value},generate:({inputs:r,outputs:a})=>{const o=(n==null?void 0:n({inputs:r,outputs:a}))??[],B={},I=a[A];return I&&(o.push(`uniform ${Ps(I,t,e)};`),B[I]=this.uniform),{globals:o,uniforms:B}}}),this.type=t,this.count=e,this.value=i,this.uniform={value:i},this.outKey=A}dynoOut(){return new NA(this,this.outKey)}}class Wi extends st{constructor({key:A,value:t,update:e}){super({key:A,type:"int",value:t,update:e})}}class ti extends st{constructor({key:A,value:t,update:e}){super({key:A,type:"float",value:t,update:e})}}class ua extends st{constructor({key:A,value:t,update:e}){super({key:A,type:"vec3",value:t,update:e})}}class gn extends st{constructor({key:A,value:t,update:e}){super({key:A,type:"vec4",value:t,update:e})}}class Oi extends st{constructor({key:A,value:t,update:e}){super({key:A,type:"usampler2DArray",value:t,update:e})}}class on{constructor({graph:A,inputs:t,outputs:e,template:i}){this.graph=A,this.template=i,this.inputs=t??{},this.outputs=e??{};const s=new Tr({indent:this.template.indent});for(const r in this.outputs)this.outputs[r]&&s.declares.add(this.outputs[r]);const n=A.compile({inputs:this.inputs,outputs:this.outputs,compile:s});this.shader=i.generate({globals:s.globals,statements:n}),this.uniforms=s.uniforms,this.updaters=s.updaters}prepareMaterial(){return da(this)}update(){for(const A of this.updaters)A()}}class In{constructor(A){const t=A.match(/^([ \\t]*)\\{\\{\\s*GLOBALS\\s*\\}\\}/m),e=A.match(/^([ \\t]*)\\{\\{\\s*STATEMENTS\\s*\\}\\}/m);if(!t||!e)throw new Error("Template must contain {{ GLOBALS }} and {{ STATEMENTS }}");this.before=A.substring(0,t.index),this.between=A.substring(t.index+t[0].length,e.index),this.after=A.substring(e.index+e[0].length),this.indent=e[1]}generate({globals:A,statements:t}){return this.before+Array.from(A).join(`\n\n`)+this.between+t.map(e=>this.indent+e).join(`\n`)+this.after}}const Bn=new Map;function da(g){let A=Bn.get(g);return A||(A=new bi({glslVersion:er,vertexShader:Xr,fragmentShader:g.shader,uniforms:g.uniforms}),Bn.set(g,A),A)}function Qn(g,A,t="add"){const e=()=>{throw new Error(`Invalid ${t} types: ${g}, ${A}`)};if(g===A)return g;if(g==="int"){if(_t(A))return A;e()}if(A==="int"){if(_t(g))return g;e()}if(g==="uint"){if(qt(A))return A;e()}if(A==="uint"){if(qt(g))return g;e()}if(g==="float"){if(qe(A))return A;e()}if(A==="float"){if(qe(g))return g;e()}throw new Error(`Invalid ${t} types: ${g}, ${A}`)}function ya(g,A){return Qn(g,A,"sub")}function fa(g,A){const t=()=>{throw new Error(`Invalid mul types: ${g}, ${A}`)},e=i=>i;if(g==="int"){if(_t(A))return e(A);t()}if(A==="int"){if(_t(g))return e(g);t()}if(g==="uint"){if(qt(A))return e(A);t()}if(A==="uint"){if(qt(g))return e(g);t()}if(g==="float"){if(qe(A))return e(A);t()}if(A==="float"){if(qe(g))return e(g);t()}if(_t(g)||qt(g)||_t(A)||qt(A)){if(g===A)return e(g);t()}if(g==="vec2"){if(A==="vec2"||Zt(A))return e("vec2");if(A==="mat3x2")return e("vec3");if(A==="mat4x2")return e("vec4");t()}if(g==="vec3"){if(A==="mat2x3")return e("vec2");if(A==="vec3"||Wt(A))return e("vec3");if(A==="mat4x3")return e("vec4");t()}if(g==="vec4"){if(A==="mat2x4")return e("vec2");if(A==="mat3x4")return e("vec3");if(A==="vec4"||Ot(A))return e("vec4");t()}if(A==="vec2"){if(Zt(g))return e("vec2");if(g==="mat2x3")return e("vec3");if(g==="mat2x4")return e("vec4");t()}if(A==="vec3"){if(g==="mat3x2")return e("vec2");if(Wt(g))return e("vec3");if(g==="mat3x4")return e("vec4");t()}if(A==="vec4"){if(g==="mat4x2")return e("vec2");if(g==="mat4x3")return e("vec3");if(Ot(g))return e("vec4");t()}if(Zt(g)){if(Zt(A))return e("mat2");if(A==="mat3x2")return e("mat3x2");if(A==="mat4x2")return e("mat4x2");t()}if(g==="mat2x3"){if(Zt(A))return e("mat2x3");if(A==="mat3x2")return e("mat3");if(A==="mat4x2")return e("mat4x3");t()}if(g==="mat2x4"){if(Zt(A))return e("mat2x4");if(A==="mat3x2")return e("mat3x4");if(A==="mat4x2")return e("mat4");t()}if(g==="mat3x2"){if(A==="mat2x3")return e("mat2");if(Wt(A))return e("mat3x2");if(A==="mat4x3")return e("mat4x2");t()}if(Wt(g)){if(A==="mat2x3")return e("mat2x3");if(Wt(A))return e("mat3");if(A==="mat4x3")return e("mat4x3");t()}if(g==="mat3x4"){if(A==="mat2x3")return e("mat2x4");if(Wt(A))return e("mat3x4");if(A==="mat4x3")return e("mat4");t()}if(g==="mat4x2"){if(A==="mat2x4")return e("mat2");if(A==="mat3x4")return e("mat3x2");if(Ot(A))return e("mat4x2");t()}if(g==="mat4x3"){if(A==="mat2x4")return e("mat2x3");if(A==="mat3x4")return e("mat3");if(Ot(A))return e("mat4x3");t()}if(Ot(g)){if(A==="mat2x4")return e("mat2x4");if(A==="mat3x4")return e("mat3x4");if(Ot(A))return e("mat4");t()}throw new Error(`Invalid mul types: ${g}, ${A}`)}const ei=(g,A)=>new Da({a:g,b:A}),wa=(g,A)=>new ma({a:g,b:A}),pa=(g,A)=>new xa({a:g,b:A});class Da extends Oe{constructor({a:A,b:t}){super({a:A,b:t,outKey:"sum",outTypeFunc:Qn}),this.statements=({inputs:e,outputs:i})=>[`${i.sum} = ${e.a} + ${e.b};`]}}class ma extends Oe{constructor({a:A,b:t}){super({a:A,b:t,outKey:"difference",outTypeFunc:ya}),this.statements=({inputs:e,outputs:i})=>[`${i.difference} = ${e.a} - ${e.b};`]}}class xa extends Oe{constructor({a:A,b:t}){super({a:A,b:t,outKey:"product",outTypeFunc:fa}),this.statements=({inputs:e,outputs:i})=>[`${i.product} = ${e.a} * ${e.b};`]}}const Ma=g=>new Fa({a:g}),Sa=(g,A)=>new ka({a:g,b:A});class Fa extends vr{constructor({a:A}){super({a:A,outTypeFunc:t=>t,outKey:"normalize"}),this.statements=({inputs:t,outputs:e})=>[`${e.normalize} = normalize(${t.a});`]}}function Na(g){if(g==="float")return"vec2";if(g==="vec2")return"vec3";if(g==="vec3")return"vec4";throw new Error("Invalid type")}class ka extends Oe{constructor({a:A,b:t}){const e=Dt(A),i=Na(e);super({a:A,b:t,outKey:"extend",outTypeFunc:()=>i}),this.statements=({inputs:s,outputs:n})=>[`${n.extend} = ${i}(${s.a}, ${s.b});`]}}const Ra=(g,{scale:A,scales:t,rotate:e,translate:i})=>new Ua({position:g,scale:A,scales:t,rotate:e,translate:i}).outputs.position,Ga=(g,{scale:A,scales:t,rotate:e})=>new ba({dir:g,scale:A,scales:t,rotate:e}).outputs.dir;class Ua extends lA{constructor({position:A,scale:t,scales:e,rotate:i,translate:s}){super({inTypes:{position:"vec3",scale:"float",scales:"vec3",rotate:"vec4",translate:"vec3"},outTypes:{position:"vec3"},inputs:{position:A,scale:t,scales:e,rotate:i,translate:s},statements:({inputs:n,outputs:r})=>{const{position:a}=r;if(!a)return[];const{scale:o,scales:B,rotate:I,translate:Q}=n;return[`${a} = ${n.position??"vec3(0.0, 0.0, 0.0)"};`,o?`${a} *= ${o};`:null,B?`${a} *= ${B};`:null,I?`${a} = quatVec(${I}, ${a});`:null,Q?`${a} += ${Q};`:null].filter(Boolean)}})}}class ba extends lA{constructor({dir:A,scale:t,scales:e,rotate:i}){super({inTypes:{dir:"vec3",scale:"float",scales:"vec3",rotate:"vec4"},outTypes:{dir:"vec3"},inputs:{dir:A,scale:t,scales:e,rotate:i},statements:({inputs:s,outputs:n})=>{const{dir:r}=n;if(!r)return[];const{scale:a,scales:o,rotate:B}=s;return[`${r} = ${s.dir??"vec3(0.0, 0.0, 0.0)"};`,a?`${r} *= ${a};`:null,o?`${r} *= ${o};`:null,B?`${r} = quatVec(${B}, ${r});`:null].filter(Boolean)}})}}var La=`precision highp float;\nprecision highp int;\nprecision highp sampler2D;\nprecision highp usampler2D;\nprecision highp isampler2D;\nprecision highp sampler2DArray;\nprecision highp usampler2DArray;\nprecision highp isampler2DArray;\nprecision highp sampler3D;\nprecision highp usampler3D;\nprecision highp isampler3D;\n\n#include <splatDefines>\n\nuniform uint targetLayer;\nuniform int targetBase;\nuniform int targetCount;\n\nout uvec4 target;\n\n{{ GLOBALS }}\n\nvoid produceSplat(int index) {\n    {{ STATEMENTS }}\n}\n\nvoid main() {\n    int targetIndex = int(targetLayer << SPLAT_TEX_LAYER_BITS) + int(uint(gl_FragCoord.y) << SPLAT_TEX_WIDTH_BITS) + int(gl_FragCoord.x);\n    int index = targetIndex - targetBase;\n\n    if ((index >= 0) && (index < targetCount)) {\n        produceSplat(index);\n    } else {\n        target = uvec4(0u, 0u, 0u, 0u);\n    }\n}`;const j=class j{constructor(A={}){this.maxSplats=0,this.numSplats=0,this.packedArray=null,this.isInitialized=!1,this.target=null,this.source=null,this.needsUpdate=!0,this.extra={},this.dyno=new hn({packedSplats:this}),this.initialized=Promise.resolve(this),this.reinitialize(A)}reinitialize(A){this.isInitialized=!1,A.url||A.fileBytes||A.construct?this.initialized=this.asyncInitialize(A).then(()=>(this.isInitialized=!0,this)):(this.initialize(A),this.isInitialized=!0,this.initialized=Promise.resolve(this))}initialize(A){A.packedArray?(this.packedArray=A.packedArray,this.maxSplats=Math.floor(this.packedArray.length/4),this.maxSplats=Math.floor(this.maxSplats/O)*O,this.numSplats=Math.min(this.maxSplats,A.numSplats??Number.POSITIVE_INFINITY)):(this.maxSplats=A.maxSplats??0,this.numSplats=0),this.extra=A.extra??{}}async asyncInitialize(A){let{url:t,fileBytes:e,construct:i}=A;if(t&&(e=await fetch(t).then(async s=>{if(!s.ok)throw new Error(`${s.status} "${s.statusText}" fetching URL: ${t}`);return await s.arrayBuffer()})),e){const s=await eg({input:e,fileType:A.fileType,pathOrUrl:A.fileName??t});this.initialize(s)}if(i){const s=i(this);s instanceof Promise&&await s}}dispose(){this.target&&(this.target.dispose(),this.target=null),this.source&&(this.source.dispose(),this.source=null)}ensureSplats(A){const t=A<=this.maxSplats?this.maxSplats:Math.max(A,2*this.maxSplats),e=this.packedArray?this.packedArray.length/4:0;if(!this.packedArray||t>e){this.maxSplats=kA(t).maxSplats;const i=new Uint32Array(this.maxSplats*4);this.packedArray&&i.set(this.packedArray),this.packedArray=i}return this.packedArray}ensureSplatsSh(A,t){let e,i;if(A===0)return this.ensureSplats(t);if(A===1)e=2,i="sh1";else if(A===2)e=4,i="sh2";else if(A===3)e=4,i="sh3";else throw new Error(`Invalid level: ${A}`);let s=this.extra[i]?this.extra[i].length/e:0;const n=t<=s?s:Math.max(t,2*s);if(!this.extra[i]||n>s){s=kA(n).maxSplats;const r=new Uint32Array(s*e);this.extra[i]&&r.set(this.extra[i]),this.extra[i]=r}return this.extra[i]}getSplat(A){if(!this.packedArray||A>=this.numSplats)throw new Error("Invalid index");return An(this.packedArray,A)}setSplat(A,t,e,i,s,n){const r=this.ensureSplats(A+1);he(r,A,t.x,t.y,t.z,e.x,e.y,e.z,i.x,i.y,i.z,i.w,s,n.r,n.g,n.b),this.numSplats=Math.max(this.numSplats,A+1)}pushSplat(A,t,e,i,s){const n=this.ensureSplats(this.numSplats+1);he(n,this.numSplats,A.x,A.y,A.z,t.x,t.y,t.z,e.x,e.y,e.z,e.w,i,s.r,s.g,s.b),++this.numSplats}forEachSplat(A){if(!(!this.packedArray||!this.numSplats))for(let t=0;t<this.numSplats;++t){const e=An(this.packedArray,t);A(t,e.center,e.scales,e.quaternion,e.opacity,e.color)}}ensureGenerate(A){if(this.target&&(A??1)<=this.maxSplats)return!1;this.dispose();const t=kA(A??1),{width:e,height:i,depth:s}=t;return this.maxSplats=t.maxSplats,this.target=new Ns(e,i,s,{depthBuffer:!1,stencilBuffer:!1,generateMipmaps:!1,magFilter:rt,minFilter:rt}),this.target.texture.format=Ft,this.target.texture.type=ut,this.target.texture.internalFormat="RGBA32UI",!0}generateMapping(A){let t=0;const e=A.map(i=>{const s=t,n=Math.ceil(i/O)*O;return t+=n,{base:s,count:i}});return{maxSplats:t,mapping:e}}getTexture(){return this.target?this.target.texture:this.source||this.packedArray?this.maybeUpdateSource():j.getEmpty()}maybeUpdateSource(){if(!this.packedArray)throw new Error("No packed splats");if(this.needsUpdate||!this.source){if(this.needsUpdate=!1,this.source){const{width:A,height:t,depth:e}=this.source.image;this.maxSplats!==A*t*e&&(this.source.dispose(),this.source=null)}if(this.source)this.packedArray.buffer!==this.source.image.data.buffer&&(this.source.image.data=new Uint8Array(this.packedArray.buffer));else{const{width:A,height:t,depth:e}=kA(this.maxSplats);this.source=new at(this.packedArray,A,t,e),this.source.format=Ft,this.source.type=ut,this.source.internalFormat="RGBA32UI",this.source.needsUpdate=!0}this.source.needsUpdate=!0}return this.source}static getEmpty(){if(!j.emptySource){const{width:A,height:t,depth:e,maxSplats:i}=kA(1),s=new Uint32Array(i*4);j.emptySource=new at(s,A,t,e),j.emptySource.format=Ft,j.emptySource.type=ut,j.emptySource.internalFormat="RGBA32UI",j.emptySource.needsUpdate=!0}return j.emptySource}prepareProgramMaterial(A){let t=j.generatorProgram.get(A);if(!t){const i=We({index:"int"},{output:"uvec4"},({index:s})=>{A.inputs.index=s;const n=A.outputs.gsplat;return{output:Ea(n)}});j.programTemplate||(j.programTemplate=new In(La)),t=new on({graph:i,inputs:{index:"index"},outputs:{output:"target"},template:j.programTemplate}),Object.assign(t.uniforms,{targetLayer:{value:0},targetBase:{value:0},targetCount:{value:0}}),j.generatorProgram.set(A,t)}const e=t.prepareMaterial();return j.mesh.material=e,{program:t,material:e}}saveRenderState(A){return{xrPresenting:A.xr.isPresenting,autoClear:A.autoClear,scissorTest:A.getScissorTest(),pixelRatio:A.getPixelRatio()}}resetRenderState(A,t){A.setRenderTarget(null),A.setPixelRatio(t.pixelRatio),A.xr.isPresenting=t.xrPresenting,A.autoClear=t.autoClear,A.setScissorTest(t.scissorTest)}generate({generator:A,base:t,count:e,renderer:i}){if(!this.target)throw new Error("Target must be initialized with ensureSplats");if(t+e>this.maxSplats)throw new Error("Base + count exceeds maxSplats");const{program:s,material:n}=this.prepareProgramMaterial(A);s.update();const r=this.saveRenderState(i),a=Math.ceil((t+e)/O)*O,o=O*ht;for(n.uniforms.targetBase.value=t,n.uniforms.targetCount.value=e;t<a;){const B=Math.floor(t/o);n.uniforms.targetLayer.value=B;const I=B*o,Q=Math.floor((t-I)/O),h=Math.min(ht,Math.ceil((a-I)/O));i.setPixelRatio(1),i.setRenderTarget(this.target,B),i.xr.isPresenting=!1,i.autoClear=!1,i.setScissorTest(!0),i.setScissor(0,Q,O,h-Q),i.render(j.scene,j.camera),t+=O*(h-Q)}return this.resetRenderState(i,r),{nextBase:a}}};j.emptySource=null,j.programTemplate=null,j.generatorProgram=new Map,j.geometry=new _e(2,2),j.mesh=new Zs(j.geometry,new bi({visible:!1})),j.scene=new Os().add(j.mesh),j.camera=new Ws;let Ee=j;class hn extends st{constructor({packedSplats:A}={}){super({key:"packedSplats",type:_i,globals:()=>[Zi],value:{texture:Ee.getEmpty(),numSplats:0},update:t=>{var e,i;return t.texture=((e=this.packedSplats)==null?void 0:e.getTexture())??Ee.getEmpty(),t.numSplats=((i=this.packedSplats)==null?void 0:i.numSplats)??0,t}}),this.packedSplats=A}}var Ya=`precision highp float;\nprecision highp int;\nprecision highp sampler2D;\nprecision highp usampler2D;\nprecision highp isampler2D;\nprecision highp sampler2DArray;\nprecision highp usampler2DArray;\nprecision highp isampler2DArray;\nprecision highp sampler3D;\nprecision highp usampler3D;\nprecision highp isampler3D;\n\n#include <splatDefines>\n\nuniform uint targetLayer;\nuniform int targetBase;\nuniform int targetCount;\n\nout vec4 target;\n\n{{ GLOBALS }}\n\nvoid computeReadback(int index) {\n    {{ STATEMENTS }}\n}\n\nvoid main() {\n    int targetIndex = int(targetLayer << SPLAT_TEX_LAYER_BITS) + int(uint(gl_FragCoord.y) << SPLAT_TEX_WIDTH_BITS) + int(gl_FragCoord.x);\n    int index = targetIndex - targetBase;\n\n    if ((index >= 0) && (index < targetCount)) {\n        computeReadback(index);\n    } else {\n        target = vec4(0.0, 0.0, 0.0, 0.0);\n    }\n}`;const oA=class oA{constructor({renderer:A}={}){this.renderer=A,this.capacity=0,this.count=0}dispose(){this.target&&(this.target.dispose(),this.target=void 0)}ensureBuffer(A,t){const i=Math.ceil(Math.max(1,A)/O)*O*4;if(t.byteLength>=i)return t;const s=new ArrayBuffer(i);if(t instanceof ArrayBuffer)return s;const n=t.constructor;return new n(s)}ensureCapacity(A){const{width:t,height:e,depth:i,maxSplats:s}=kA(A);(!this.target||s>this.capacity)&&(this.dispose(),this.capacity=s,this.target=new Ns(t,e,i,{depthBuffer:!1,stencilBuffer:!1,generateMipmaps:!1,magFilter:rt,minFilter:rt}),this.target.texture.format=me,this.target.texture.type=De,this.target.texture.internalFormat="RGBA8")}prepareProgramMaterial(A){let t=oA.readbackProgram.get(A);if(!t){const i=We({index:"int"},{rgba8:"vec4"},({index:s})=>(A.inputs.index=s,{rgba8:new la({rgba8:A.outputs.rgba8})}));oA.programTemplate||(oA.programTemplate=new In(Ya)),t=new on({graph:i,inputs:{index:"index"},outputs:{rgba8:"target"},template:oA.programTemplate}),Object.assign(t.uniforms,{targetLayer:{value:0},targetBase:{value:0},targetCount:{value:0}}),oA.readbackProgram.set(A,t)}const e=t.prepareMaterial();return oA.mesh.material=e,{program:t,material:e}}saveRenderState(A){return{xrPresenting:A.xr.isPresenting,autoClear:A.autoClear,scissorTest:A.getScissorTest(),pixelRatio:A.getPixelRatio()}}resetRenderState(A,t){A.setRenderTarget(null),A.setPixelRatio(t.pixelRatio),A.xr.isPresenting=t.xrPresenting,A.autoClear=t.autoClear,A.setScissorTest(t.scissorTest)}process({count:A,material:t}){const e=this.renderer;if(!e)throw new Error("No renderer");if(!this.target)throw new Error("No target");const i=O*ht;t.uniforms.targetBase.value=0,t.uniforms.targetCount.value=A;let s=0;for(;s<A;){const n=Math.floor(s/i),r=n*i,a=Math.min(ht,Math.ceil((A-r)/O));t.uniforms.targetLayer.value=n,e.setPixelRatio(1),e.setRenderTarget(this.target,n),e.xr.isPresenting=!1,e.autoClear=!1,e.setScissorTest(!0),e.setScissor(0,0,O,a),e.render(oA.scene,oA.camera),s+=O*a}this.count=A}async read({readback:A}){const t=this.renderer;if(!t)throw new Error("No renderer");if(!this.target)throw new Error("No target");const e=Math.ceil(this.count/O)*O;if(A.byteLength<e*4)throw new Error(`Readback buffer too small: ${A.byteLength} < ${e*4}`);const i=new Uint8Array(A instanceof ArrayBuffer?A:A.buffer),s=O*ht;let n=0;const r=[];for(;n<this.count;){const a=Math.floor(n/s),o=a*s,B=Math.min(ht,Math.ceil((this.count-o)/O));t.setPixelRatio(1),t.setRenderTarget(this.target,a);const I=O*B*4,Q=i.subarray(o*4,o*4+I),h=t==null?void 0:t.readRenderTargetPixelsAsync(this.target,0,0,O,B,Q);r.push(h),n+=O*B}return Promise.all(r).then(()=>A)}render({reader:A,count:t,renderer:e}){if(this.renderer=e||this.renderer,!this.renderer)throw new Error("No renderer");this.ensureCapacity(t);const{program:i,material:s}=this.prepareProgramMaterial(A);i.update();const n=this.saveRenderState(this.renderer);this.process({count:t,material:s}),this.resetRenderState(this.renderer,n)}async readback({readback:A}){if(!this.renderer)throw new Error("No renderer");const t=this.saveRenderState(this.renderer),e=this.read({readback:A});return this.resetRenderState(this.renderer,t),e}async renderReadback({reader:A,count:t,renderer:e,readback:i}){if(this.renderer=e||this.renderer,!this.renderer)throw new Error("No renderer");this.ensureCapacity(t);const{program:s,material:n}=this.prepareProgramMaterial(A);s.update();const r=this.saveRenderState(this.renderer);this.process({count:t,material:n});const a=this.read({readback:i});return this.resetRenderState(this.renderer,r),a}getTexture(){var A;return(A=this.target)==null?void 0:A.texture}};oA.programTemplate=null,oA.readbackProgram=new Map,oA.geometry=new _e(2,2),oA.mesh=new Zs(oA.geometry,new bi({visible:!1})),oA.scene=new Os().add(oA.mesh),oA.camera=new Ws;let ji=oA;const IA=class IA{constructor(A={}){this.capacity=0,this.count=0,this.array=null,this.readback=null,this.source=null,this.needsUpdate=!0,this.dyno=new st({key:"rgbaArray",type:En,globals:()=>[cn],value:{texture:IA.getEmpty(),count:0},update:t=>{var e;return t.texture=((e=this.readback)==null?void 0:e.getTexture())??this.source??IA.getEmpty(),t.count=this.count,t}}),A.array?(this.array=A.array,this.capacity=Math.floor(this.array.length/4),this.capacity=Math.floor(this.capacity/O)*O,this.count=Math.min(this.capacity,A.count??Number.POSITIVE_INFINITY)):(this.capacity=A.capacity??0,this.count=0)}dispose(){this.readback&&(this.readback.dispose(),this.readback=null),this.source&&(this.source.dispose(),this.source=null)}ensureCapacity(A){var t;if(!this.array||A>(((t=this.array)==null?void 0:t.length)??0)/4){this.capacity=kA(A).maxSplats;const e=new Uint8Array(this.capacity*4);this.array&&e.set(this.array),this.array=e}return this.array}getTexture(){var t;let A=(t=this.readback)==null?void 0:t.getTexture();return(this.source||this.array)&&(A=this.maybeUpdateSource()),A??IA.getEmpty()}maybeUpdateSource(){if(!this.array)throw new Error("No array");if(this.needsUpdate||!this.source){if(this.needsUpdate=!1,this.source){const{width:A,height:t,depth:e}=this.source.image;this.capacity!==A*t*e&&(this.source.dispose(),this.source=null)}if(this.source)this.array.buffer!==this.source.image.data.buffer&&(this.source.image.data=new Uint8Array(this.array.buffer));else{const{width:A,height:t,depth:e}=kA(this.capacity);this.source=new at(this.array,A,t,e),this.source.format=me,this.source.type=De,this.source.internalFormat="RGBA8",this.source.needsUpdate=!0}this.source.needsUpdate=!0}return this.source}render({reader:A,count:t,renderer:e}){this.readback||(this.readback=new ji({renderer:e})),this.readback.render({reader:A,count:t,renderer:e}),this.capacity=this.readback.capacity,this.count=this.readback.count}fromPackedSplats({packedSplats:A,base:t,count:e,renderer:i}){const{dynoSplats:s,dynoBase:n,dynoCount:r,reader:a}=IA.makeDynos();return s.packedSplats=A,n.value=t,r.value=e,this.render({reader:a,count:e,renderer:i}),this}async read(){if(!this.readback)throw new Error("No readback");return(!this.array||this.array.length<this.count*4)&&(this.array=new Uint8Array(this.capacity*4)),(await this.readback.readback({readback:this.array})).subarray(0,this.count*4)}static getEmpty(){if(!IA.emptySource){const A=new Uint8Array(4);IA.emptySource=new at(A,1,1,1),IA.emptySource.format=me,IA.emptySource.type=De,IA.emptySource.internalFormat="RGBA8",IA.emptySource.needsUpdate=!0}return IA.emptySource}static makeDynos(){if(!IA.dynos){const A=new hn,t=new Wi({value:0}),e=new Wi({value:0}),i=We({index:"int"},{rgba8:"vec4"},({index:s})=>{if(!s)throw new Error("index is undefined");s=ei(s,t);const n=ga(A,s,t,e);return{rgba8:Ai(n).outputs.rgba}});IA.dynos={dynoSplats:A,dynoBase:t,dynoCount:e,reader:i}}return IA.dynos}};IA.emptySource=null,IA.dynos=null;let Cn=IA;const En={type:"RgbaArray"},cn=KA(`\n  struct RgbaArray {\n    sampler2DArray texture;\n    int count;\n  };\n`);function Ja(g,A){return new lA({inTypes:{rgba:En,index:"int"},outTypes:{rgba:"vec4"},inputs:{rgba:g,index:A},globals:()=>[cn],statements:({inputs:e,outputs:i})=>et(`\n        if ((index >= 0) && (index < ${e.rgba}.count)) {\n          ${i.rgba} = texelFetch(${e.rgba}.texture, splatTexCoord(index), 0);\n        } else {\n          ${i.rgba} = vec4(0.0, 0.0, 0.0, 0.0);\n        }\n      `)}).outputs.rgba}function Ta(g){switch(g){case"all":return 0;case"plane":return 1;case"sphere":return 2;case"box":return 3;case"ellipsoid":return 4;case"cylinder":return 5;case"capsule":return 6;case"infinite_cone":return 7;default:throw new Error(`Unknown SDF type: ${g}`)}}function Ha(g){switch(g){case"multiply":return 0;case"set_rgb":return 1;case"add_rgba":return 2;default:throw new Error(`Unknown blend mode: ${g}`)}}class va extends mA{constructor(A={}){super();const{type:t,invert:e,opacity:i,color:s,displace:n,radius:r}=A;this.type=t??"sphere",this.invert=e??!1,this.opacity=i??1,this.color=s??new wt(1,1,1),this.displace=n??new u(0,0,0),this.radius=r??0}}const ri=class ri extends mA{constructor(A={}){const{name:t,rgbaBlendMode:e="multiply",sdfSmooth:i=0,softEdge:s=0,invert:n=!1,sdfs:r=null}=A;super(),this.rgbaBlendMode=e,this.sdfSmooth=i,this.softEdge=s,this.invert=n,this.sdfs=r,this.ordering=ri.nextOrdering++,this.name=t??`Edit ${this.ordering}`}addSdf(A){this.sdfs==null&&(this.sdfs=[]),this.sdfs.includes(A)||this.sdfs.push(A)}removeSdf(A){this.sdfs!=null&&(this.sdfs=this.sdfs.filter(t=>t!==A))}};ri.nextOrdering=1;let Vi=ri;class za{constructor({maxSdfs:A,maxEdits:t}){this.maxSdfs=Math.max(16,A??0),this.numSdfs=0,this.sdfData=new Uint32Array(this.maxSdfs*8*4),this.sdfFloatData=new Float32Array(this.sdfData.buffer),this.sdfTexture=this.newSdfTexture(this.sdfData,this.maxSdfs),this.dynoSdfArray=new st({key:"sdfArray",type:ln,globals:()=>[un],value:{numSdfs:0,sdfTexture:this.sdfTexture},update:e=>(e.numSdfs=this.numSdfs,e.sdfTexture=this.sdfTexture,e)}),this.maxEdits=Math.max(16,t??0),this.numEdits=0,this.editData=new Uint32Array(this.maxEdits*4),this.editFloatData=new Float32Array(this.editData.buffer),this.dynoNumEdits=new Wi({value:0}),this.dynoEdits=this.newEdits(this.editData,this.maxEdits)}newSdfTexture(A,t){const e=new kr(A,8,t,Ft,ut);return e.internalFormat="RGBA32UI",e.needsUpdate=!0,e}newEdits(A,t){return new st({key:"edits",type:"uvec4",count:t,globals:()=>[dn],value:A})}ensureCapacity({maxSdfs:A,maxEdits:t}){let e=!1;return A>this.sdfTexture.image.height&&(this.sdfTexture.dispose(),this.maxSdfs=Math.max(this.maxSdfs*2,A),this.sdfData=new Uint32Array(this.maxSdfs*8*4),this.sdfFloatData=new Float32Array(this.sdfData.buffer),this.sdfTexture=this.newSdfTexture(this.sdfData,this.maxSdfs)),t>(this.dynoEdits.count??0)&&(this.maxEdits=Math.max(this.maxEdits*2,t),this.editData=new Uint32Array(this.maxEdits*4),this.editFloatData=new Float32Array(this.editData.buffer),this.dynoEdits=this.newEdits(this.editData,this.maxEdits),e=!0),e}updateEditData(A,t){const e=this.editData[A]!==t;return this.editData[A]=t,e}updateEditFloatData(A,t){Pt[0]=t;const e=this.editFloatData[A]!==Pt[0];return e&&(this.editFloatData[A]=Pt[0]),e}encodeEdit(A,{sdfFirst:t,sdfCount:e,invert:i,rgbaBlendMode:s,softEdge:n,sdfSmooth:r}){const a=A*4;let o=!1;return o=this.updateEditData(a+0,s|(i?256:0))||o,o=this.updateEditData(a+1,t|e<<16)||o,o=this.updateEditFloatData(a+2,n)||o,o=this.updateEditFloatData(a+3,r)||o,o}updateSdfData(A,t){const e=this.sdfData[A]!==t;return this.sdfData[A]=t,e}updateSdfFloatData(A,t){Pt[0]=t;const e=this.sdfFloatData[A]!==Pt[0];return e&&(this.sdfFloatData[A]=Pt[0]),e}encodeSdf(A,{sdfType:t,invert:e,center:i,quaternion:s,scale:n,sizes:r},a){const o=A*32,B=t|(e?256:0);let I=!1;I=this.updateSdfFloatData(o+0,(i==null?void 0:i.x)??0)||I,I=this.updateSdfFloatData(o+1,(i==null?void 0:i.y)??0)||I,I=this.updateSdfFloatData(o+2,(i==null?void 0:i.z)??0)||I,I=this.updateSdfData(o+3,B)||I,I=this.updateSdfFloatData(o+4,(s==null?void 0:s.x)??0)||I,I=this.updateSdfFloatData(o+5,(s==null?void 0:s.y)??0)||I,I=this.updateSdfFloatData(o+6,(s==null?void 0:s.z)??0)||I,I=this.updateSdfFloatData(o+7,(s==null?void 0:s.w)??0)||I,I=this.updateSdfFloatData(o+8,(n==null?void 0:n.x)??0)||I,I=this.updateSdfFloatData(o+9,(n==null?void 0:n.y)??0)||I,I=this.updateSdfFloatData(o+10,(n==null?void 0:n.z)??0)||I,I=this.updateSdfData(o+11,0)||I,I=this.updateSdfFloatData(o+12,(r==null?void 0:r.x)??0)||I,I=this.updateSdfFloatData(o+13,(r==null?void 0:r.y)??0)||I,I=this.updateSdfFloatData(o+14,(r==null?void 0:r.z)??0)||I,I=this.updateSdfFloatData(o+15,(r==null?void 0:r.w)??0)||I;const Q=Math.min(4,a.length);for(let h=0;h<Q;++h){const C=o+16+h*4;I=this.updateSdfFloatData(C+0,a[h].x)||I,I=this.updateSdfFloatData(C+1,a[h].y)||I,I=this.updateSdfFloatData(C+2,a[h].z)||I,I=this.updateSdfFloatData(C+3,a[h].w)||I}return I}update(A){const t=A.reduce((I,{sdfs:Q})=>I+Q.length,0),e=this.ensureCapacity({maxEdits:A.length,maxSdfs:t}),i=[new dA,new dA],s=new u,n=new aA,r=new u,a=new dA;let o=0,B=e;A.length!==this.dynoNumEdits.value&&(this.dynoNumEdits.value=A.length,this.numEdits=A.length,B=!0);for(const[I,{edit:Q,sdfs:h}]of A.entries()){B=this.encodeEdit(I,{sdfFirst:o,sdfCount:h.length,invert:Q.invert,rgbaBlendMode:Ha(Q.rgbaBlendMode),softEdge:Q.softEdge,sdfSmooth:Q.sdfSmooth})||B;let C=!1;for(const E of h)a.set(E.scale.x,E.scale.y,E.scale.z,E.radius),E.scale.setScalar(1),E.updateMatrixWorld(),E.matrixWorld.clone().invert().decompose(s,n,r),E.scale.set(a.x,a.y,a.z),E.updateMatrixWorld(),i[0].set(E.color.r,E.color.g,E.color.b,E.opacity),i[1].set(E.displace.x,E.displace.y,E.displace.z,1),C=this.encodeSdf(o,{sdfType:Ta(E.type),invert:E.invert,center:s,quaternion:n,scale:r,sizes:a},i)||C,o+=1;this.numSdfs=o,C&&(this.sdfTexture.needsUpdate=!0),B||(B=C)}return{updated:B,dynoUpdated:e}}modify(A){return Ka(A,this.dynoSdfArray,this.dynoNumEdits,this.dynoEdits)}}const ln={type:"SdfArray"},un=KA(`\n  struct SdfArray {\n    int numSdfs;\n    usampler2D sdfTexture;\n  };\n\n  void unpackSdfArray(\n    usampler2D sdfTexture, int sdfIndex, out uint flags,\n    out vec3 center, out vec4 quaternion, out vec3 scale, out vec4 sizes,\n    int numValues, out vec4 values[4]\n  ) {\n    uvec4 temp = texelFetch(sdfTexture, ivec2(0, sdfIndex), 0);\n    flags = temp.w;\n    center = vec3(uintBitsToFloat(temp.x), uintBitsToFloat(temp.y), uintBitsToFloat(temp.z));\n\n    temp = texelFetch(sdfTexture, ivec2(1, sdfIndex), 0);\n    quaternion = vec4(uintBitsToFloat(temp.x), uintBitsToFloat(temp.y), uintBitsToFloat(temp.z), uintBitsToFloat(temp.w));\n\n    temp = texelFetch(sdfTexture, ivec2(2, sdfIndex), 0);\n    scale = vec3(uintBitsToFloat(temp.x), uintBitsToFloat(temp.y), uintBitsToFloat(temp.z));\n\n    temp = texelFetch(sdfTexture, ivec2(3, sdfIndex), 0);\n    sizes = vec4(uintBitsToFloat(temp.x), uintBitsToFloat(temp.y), uintBitsToFloat(temp.z), uintBitsToFloat(temp.w));\n\n    for (int i = 0; i < numValues; ++i) {\n      temp = texelFetch(sdfTexture, ivec2(4 + i, sdfIndex), 0);\n      values[i] = vec4(uintBitsToFloat(temp.x), uintBitsToFloat(temp.y), uintBitsToFloat(temp.z), uintBitsToFloat(temp.w));\n    }\n  }\n\n  const uint SDF_FLAG_TYPE = 0xFFu;\n  const uint SDF_FLAG_INVERT = 1u << 8u;\n\n  const uint SDF_TYPE_ALL = 0u;\n  const uint SDF_TYPE_PLANE = 1u;\n  const uint SDF_TYPE_SPHERE = 2u;\n  const uint SDF_TYPE_BOX = 3u;\n  const uint SDF_TYPE_ELLIPSOID = 4u;\n  const uint SDF_TYPE_CYLINDER = 5u;\n  const uint SDF_TYPE_CAPSULE = 6u;\n  const uint SDF_TYPE_INFINITE_CONE = 7u;\n\n  float evaluateSdfArray(\n    usampler2D sdfTexture, int numSdfs, int sdfFirst, int sdfCount, vec3 pos,\n    float smoothK, int numValues, out vec4 outValues[4]\n  ) {\n    float distanceAccum = (smoothK == 0.0) ? 1.0 / 0.0 : 0.0;\n    float maxExp = -1.0 / 0.0;\n    for (int i = 0; i < numValues; ++i) {\n        outValues[i] = vec4(0.0);\n    }\n\n    uint flags;\n    vec3 center, scale;\n    vec4 quaternion, sizes;\n    vec4 values[4];\n\n    int sdfLast = min(sdfFirst + sdfCount, numSdfs);\n    for (int index = sdfFirst; index < sdfLast; ++index) {\n      unpackSdfArray(sdfTexture, index, flags, center, quaternion, scale, sizes, numValues, values);\n      uint sdfType = flags & SDF_FLAG_TYPE;\n      vec3 sdfPos = quatVec(quaternion, pos * scale) + center;\n\n      float distance;\n      switch (sdfType) {\n        case SDF_TYPE_ALL:\n          distance = -1.0 / 0.0;\n          break;\n        case SDF_TYPE_PLANE: {\n          distance = sdfPos.z;\n          break;\n        }\n        case SDF_TYPE_SPHERE: {\n          distance = length(sdfPos) - sizes.w;\n          break;\n        }\n        case SDF_TYPE_BOX: {\n          vec3 q = abs(sdfPos) - sizes.xyz + sizes.w;\n          distance = length(max(q, 0.0)) + min(max(q.x, max(q.y, q.z)), 0.0) - sizes.w;\n          break;\n        }\n        case SDF_TYPE_ELLIPSOID: {\n          vec3 sizes = sizes.xyz;\n          float k0 = length(sdfPos / sizes);\n          float k1 = length(sdfPos / dot(sizes, sizes));\n          distance = k0 * (k0 - 1.0) / k1;\n          break;\n        }\n        case SDF_TYPE_CYLINDER: {\n          vec2 d = abs(vec2(length(sdfPos.xz), sdfPos.y)) - sizes.wy;\n          distance = min(max(d.x, d.y), 0.0) + length(max(d, 0.0));\n          break;\n        }\n        case SDF_TYPE_CAPSULE: {\n          sdfPos.y -= clamp(sdfPos.y, -0.5 * sizes.y, 0.5 * sizes.y);\n          distance = length(sdfPos) - sizes.w;\n          break;\n        }\n        case SDF_TYPE_INFINITE_CONE: {\n          float angle = 0.25 * PI * sizes.w;\n          vec2 c = vec2(sin(angle), cos(angle));\n          vec2 q = vec2(length(sdfPos.xy), -sdfPos.z);\n          float d = length(q - c * max(dot(q, c), 0.0));\n          distance = d * (((q.x * c.y - q.y * c.x) < 0.0) ? -1.0 : 1.0);\n          break;\n        }\n      }\n\n      if ((flags & SDF_FLAG_INVERT) != 0u) {\n        distance = -distance;\n      }\n\n      if (smoothK == 0.0) {\n        if (distance < distanceAccum) {\n          distanceAccum = distance;\n          for (int i = 0; i < numValues; ++i) {\n            outValues[i] = values[i];\n          }\n        }\n      } else {\n        float scaledDistance = -distance / smoothK;\n        if (scaledDistance > maxExp) {\n          float scale = exp(maxExp - scaledDistance);\n          distanceAccum *= scale;\n          for (int i = 0; i < numValues; ++i) {\n            outValues[i] *= scale;\n          }\n          maxExp = scaledDistance;\n        }\n\n        float weight = exp(scaledDistance - maxExp);\n        distanceAccum += weight;\n        for (int i = 0; i < numValues; ++i) {\n          outValues[i] += weight * values[i];\n        }\n      }\n    }\n\n    if (smoothK == 0.0) {\n      return distanceAccum;\n    } else {\n      // Very distant SDFs may result in 0 accumulation\n      if (distanceAccum == 0.0) {\n        return 1.0 / 0.0;\n      }\n      for (int i = 0; i < numValues; ++i) {\n        outValues[i] /= distanceAccum;\n      }\n      return (-log(distanceAccum) - maxExp) * smoothK;\n    }\n  }\n\n  float modulateSdfArray(\n    usampler2D sdfTexture, int numSdfs, int sdfFirst, int sdfCount, vec3 pos,\n    float smoothK, int numValues, out vec4 values[4],\n    float softEdge, bool invert\n  ) {\n    float distance = evaluateSdfArray(sdfTexture, numSdfs, sdfFirst, sdfCount, pos, smoothK, numValues, values);\n    if (invert) {\n      distance = -distance;\n    }\n\n    return (softEdge == 0.0) ? ((distance < 0.0) ? 1.0 : 0.0)\n      : clamp(-distance / softEdge + 0.5, 0.0, 1.0);\n  }\n`),dn=KA(`\n  const uint EDIT_FLAG_BLEND = 0xFFu;\n  const uint EDIT_BLEND_MULTIPLY = 0u;\n  const uint EDIT_BLEND_SET_RGB = 1u;\n  const uint EDIT_BLEND_ADD_RGBA = 2u;\n  const uint EDIT_FLAG_INVERT = 0x100u;\n\n  void decodeEdit(\n    uvec4 packedEdit, out int sdfFirst, out int sdfCount,\n    out bool invert, out uint rgbaBlendMode, out float softEdge, out float sdfSmooth\n  ) {\n    rgbaBlendMode = packedEdit.x & EDIT_FLAG_BLEND;\n    invert = (packedEdit.x & EDIT_FLAG_INVERT) != 0u;\n\n    sdfFirst = int(packedEdit.y & 0xFFFFu);\n    sdfCount = int(packedEdit.y >> 16u);\n\n    softEdge = uintBitsToFloat(packedEdit.z);\n    sdfSmooth = uintBitsToFloat(packedEdit.w);\n  }\n\n  void applyRgbaDisplaceEdit(\n    usampler2D sdfTexture, int numSdfs, int sdfFirst, int sdfCount, inout vec3 pos,\n    float smoothK, float softEdge, bool invert, uint rgbaBlendMode, inout vec4 rgba\n  ) {\n    vec4 values[4];\n    float modulate = modulateSdfArray(sdfTexture, numSdfs, sdfFirst, sdfCount, pos, smoothK, 2, values, softEdge, invert);\n    // On Android, moving values[0] is necessary to work around a compiler bug.\n    vec4 sdfRgba = values[0];\n    vec4 sdfDisplaceScale = values[1];\n\n    vec4 target;\n    switch (rgbaBlendMode) {\n      case EDIT_BLEND_MULTIPLY:\n        target = rgba * sdfRgba;\n        break;\n      case EDIT_BLEND_SET_RGB:\n        target = vec4(sdfRgba.rgb, rgba.a * sdfRgba.a);\n        break;\n      case EDIT_BLEND_ADD_RGBA:\n        target = rgba + sdfRgba;\n        break;\n      default:\n        // Debug output if blend mode not set\n        target = vec4(fract(pos), 1.0);\n    }\n    rgba = mix(rgba, target, modulate);\n    pos += sdfDisplaceScale.xyz * modulate;\n  }\n\n  void applyPackedRgbaDisplaceEdit(uvec4 packedEdit, usampler2D sdfTexture, int numSdfs, inout vec3 pos, inout vec4 rgba) {\n    int sdfFirst, sdfCount;\n    bool invert;\n    uint rgbaBlendMode;\n    float softEdge, sdfSmooth;\n    decodeEdit(packedEdit, sdfFirst, sdfCount, invert, rgbaBlendMode, softEdge, sdfSmooth);\n    applyRgbaDisplaceEdit(sdfTexture, numSdfs, sdfFirst, sdfCount, pos, sdfSmooth, softEdge, invert, rgbaBlendMode, rgba);\n  }\n`);function Ka(g,A,t,e){return new lA({inTypes:{gsplat:xA,sdfArray:ln,numEdits:"int",rgbaDisplaceEdits:"uvec4"},outTypes:{gsplat:xA},globals:()=>[un,dn],inputs:{gsplat:g,sdfArray:A,numEdits:t,rgbaDisplaceEdits:e},statements:({inputs:s,outputs:n})=>{const{sdfArray:r,numEdits:a,rgbaDisplaceEdits:o}=s,{gsplat:B}=n;return et(`\n        ${B} = ${s.gsplat};\n        if (isGsplatActive(${B}.flags)) {\n          for (int editIndex = 0; editIndex < ${a}; ++editIndex) {\n            applyPackedRgbaDisplaceEdit(\n              ${o}[editIndex], ${r}.sdfTexture, ${r}.numSdfs,\n              ${B}.center, ${B}.rgba\n            );\n          }\n        }\n      `)}}).outputs.gsplat}const Pt=new Float32Array(1);class ii{constructor(){this.scale=new ti({value:Number.NEGATIVE_INFINITY}),this.rotate=new gn({value:new aA(Number.POSITIVE_INFINITY,Number.POSITIVE_INFINITY,Number.POSITIVE_INFINITY,Number.POSITIVE_INFINITY)}),this.translate=new ua({value:new u(Number.POSITIVE_INFINITY,Number.POSITIVE_INFINITY,Number.POSITIVE_INFINITY)})}apply(A){return Ra(A,{scale:this.scale,rotate:this.rotate,translate:this.translate})}applyDir(A){return Ga(A,{rotate:this.rotate})}applyGsplat(A){return oa(A,{scale:this.scale,rotate:this.rotate,translate:this.translate})}updateFromMatrix(A){const t=new u,e=new aA,i=new u;A.decompose(i,e,t);const s=(t.x+t.y+t.z)/3;let n=!1;return s!==this.scale.value&&(this.scale.value=s,n=!0),i.equals(this.translate.value)||(this.translate.value.copy(i),n=!0),e.equals(this.rotate.value)||(this.rotate.value.copy(e),n=!0),n}update(A){return A.updateMatrixWorld(),this.updateFromMatrix(A.matrixWorld)}}class _a extends mA{constructor({numSplats:A,generator:t,construct:e,update:i}){if(super(),this.numSplats=A??0,this.generator=t,this.frameUpdate=i,this.version=0,e){const s=e(this);Object.assign(this,s)}}updateVersion(){this.version+=1}set needsUpdate(A){A&&this.updateVersion()}}const ct=class ct extends _a{constructor(A={}){const t=new ii,e=new ii,i=new ii,s=new ii,n=new gn({value:new dA(Number.NEGATIVE_INFINITY,Number.NEGATIVE_INFINITY,Number.NEGATIVE_INFINITY,Number.NEGATIVE_INFINITY)}),r=new ti({value:0}),a=new ti({value:0}),o={transform:t,viewToWorld:e,worldToView:i,viewToObject:s,recolor:n,time:r,deltaTime:a};if(super({update:({time:B,deltaTime:I,viewToWorld:Q,globalEdits:h})=>this.update({time:B,deltaTime:I,viewToWorld:Q,globalEdits:h})}),this.isInitialized=!1,this.recolor=new wt(1,1,1),this.opacity=1,this.enableViewToObject=!1,this.enableViewToWorld=!1,this.enableWorldToView=!1,this.skinning=null,this.edits=null,this.rgbaDisplaceEdits=null,this.splatRgba=null,this.maxSh=3,this.packedSplats=A.packedSplats??new Ee,this.numSplats=this.packedSplats.numSplats,this.editable=A.editable??!0,this.onFrame=A.onFrame,this.context=o,this.objectModifier=A.objectModifier,this.worldModifier=A.worldModifier,this.updateGenerator(),A.url||A.fileBytes||A.constructSplats||A.packedSplats&&!A.packedSplats.isInitialized)this.initialized=this.asyncInitialize(A).then(async()=>{if(this.updateGenerator(),this.isInitialized=!0,A.onLoad){const B=A.onLoad(this);B instanceof Promise&&await B}return this});else if(this.isInitialized=!0,this.initialized=Promise.resolve(this),A.onLoad){const B=A.onLoad(this);B instanceof Promise&&(this.initialized=B.then(()=>this))}}async asyncInitialize(A){const{url:t,fileBytes:e,fileType:i,fileName:s,maxSplats:n,constructSplats:r}=A;if(t||e||r){const a={url:t,fileBytes:e,fileType:i,fileName:s,maxSplats:n,construct:r};this.packedSplats.reinitialize(a)}this.packedSplats&&(await this.packedSplats.initialized,this.numSplats=this.packedSplats.numSplats,this.updateGenerator())}static async staticInitialize(){await gi(),ct.isStaticInitialized=!0}pushSplat(A,t,e,i,s){this.packedSplats.pushSplat(A,t,e,i,s)}forEachSplat(A){this.packedSplats.forEachSplat(A)}dispose(){this.packedSplats.dispose()}constructGenerator(A){const{transform:t,viewToObject:e,recolor:i}=A,s=We({index:"int"},{gsplat:xA},({index:n})=>{if(!n)throw new Error("index is undefined");let r=aa(this.packedSplats.dyno,n);if(this.maxSh>=1){const{sh1Texture:o,sh2Texture:B,sh3Texture:I}=this.ensureShTextures();if(o){const Q=e.translate,{center:h}=Ai(r).outputs,C=Ma(wa(h,Q));let E=Oa(r,o,C);this.maxSh>=2&&B&&(E=ei(E,ja(r,B,C))),this.maxSh>=3&&I&&(E=ei(E,Va(r,I,C)));let{rgba:c}=Ai(r).outputs;c=ei(c,Sa(E,Jr("float",0))),r=qi({gsplat:r,rgba:c})}}if(this.splatRgba){const o=Ja(this.splatRgba.dyno,n);r=qi({gsplat:r,rgba:o})}this.skinning&&(r=this.skinning.modify(r)),this.objectModifier&&(r=this.objectModifier.apply({gsplat:r}).gsplat),r=t.applyGsplat(r);const a=pa(i,Ai(r).outputs.rgba);return r=qi({gsplat:r,rgba:a}),this.rgbaDisplaceEdits&&(r=this.rgbaDisplaceEdits.modify(r)),this.worldModifier&&(r=this.worldModifier.apply({gsplat:r}).gsplat),{gsplat:r}});this.generator=s}updateGenerator(){this.constructGenerator(this.context)}update({time:A,viewToWorld:t,deltaTime:e,globalEdits:i}){var c;this.numSplats=this.packedSplats.numSplats,this.context.time.value=A,this.context.deltaTime.value=e,ct.dynoTime.value=A;const{transform:s,viewToObject:n,recolor:r}=this.context;let a=s.update(this);this.context.viewToWorld.updateFromMatrix(t)&&this.enableViewToWorld&&(a=!0);const o=t.clone().invert();this.context.worldToView.updateFromMatrix(o)&&this.enableWorldToView&&(a=!0);const Q=new EA().compose(s.translate.value,s.rotate.value,new u().setScalar(s.scale.value)).invert().multiply(t);n.updateFromMatrix(Q)&&(this.enableViewToObject||this.packedSplats.extra.sh1)&&(a=!0);const h=new dA(this.recolor.r,this.recolor.g,this.recolor.b,this.opacity);h.equals(r.value)||(r.value.copy(h),a=!0);const C=this.editable?(this.edits??[]).concat(i):[];this.editable&&!this.edits&&this.traverseVisible(l=>{l instanceof Vi&&C.push(l)}),C.sort((l,y)=>l.ordering-y.ordering);const E=C.map(l=>{if(l.sdfs!=null)return{edit:l,sdfs:l.sdfs};const y=[];return l.traverseVisible(d=>{d instanceof va&&y.push(d)}),{edit:l,sdfs:y}});if(E.length>0&&!this.rgbaDisplaceEdits){const l=E.length,y=E.reduce((d,f)=>d+f.sdfs.length,0);this.rgbaDisplaceEdits=new za({maxEdits:l,maxSdfs:y}),this.updateGenerator()}if(this.rgbaDisplaceEdits){const l=this.rgbaDisplaceEdits.update(E);a||(a=l.updated),l.dynoUpdated&&this.updateGenerator()}a&&this.updateVersion(),(c=this.onFrame)==null||c.call(this,{mesh:this,time:A,deltaTime:e})}raycast(A,t){if(!this.packedSplats.packedArray||!this.packedSplats.numSplats)return;const{near:e,far:i,ray:s}=A,n=this.matrixWorld.clone().invert(),r=new WA().setFromMatrix4(n),a=s.origin.clone().applyMatrix4(n),o=s.direction.clone().applyMatrix3(r),B=new u;n.decompose(new u,new aA,B),(B.x*B.y*B.z)**(1/3);const Q=Un(a.x,a.y,a.z,o.x,o.y,o.z,e,i,this.packedSplats.numSplats,this.packedSplats.packedArray,!0);for(const h of Q){const C=s.direction.clone().multiplyScalar(h).add(s.origin);t.push({distance:h,point:C,object:this})}}ensureShTextures(){if(!this.packedSplats.extra.sh1)return{};let A=this.packedSplats.extra.sh1Texture;if(!A){let i=this.packedSplats.extra.sh1;const{width:s,height:n,depth:r,maxSplats:a}=kA(i.length/2);if(i.length<a*2){const B=new Uint32Array(a*2);B.set(i),this.packedSplats.extra.sh1=B,i=B}const o=new at(i,s,n,r);o.format=tr,o.type=ut,o.internalFormat="RG32UI",o.needsUpdate=!0,A=new Oi({value:o,key:"sh1"}),this.packedSplats.extra.sh1Texture=A}if(!this.packedSplats.extra.sh2)return{sh1Texture:A};let t=this.packedSplats.extra.sh2Texture;if(!t){let i=this.packedSplats.extra.sh2;const{width:s,height:n,depth:r,maxSplats:a}=kA(i.length/4);if(i.length<a*4){const B=new Uint32Array(a*4);B.set(i),this.packedSplats.extra.sh2=B,i=B}const o=new at(i,s,n,r);o.format=Ft,o.type=ut,o.internalFormat="RGBA32UI",o.needsUpdate=!0,t=new Oi({value:o,key:"sh2"}),this.packedSplats.extra.sh2Texture=t}if(!this.packedSplats.extra.sh3)return{sh1Texture:A,sh2Texture:t};let e=this.packedSplats.extra.sh3Texture;if(!e){let i=this.packedSplats.extra.sh3;const{width:s,height:n,depth:r,maxSplats:a}=kA(i.length/4);if(i.length<a*4){const B=new Uint32Array(a*4);B.set(i),this.packedSplats.extra.sh3=B,i=B}const o=new at(i,s,n,r);o.format=Ft,o.type=ut,o.internalFormat="RGBA32UI",o.needsUpdate=!0,e=new Oi({value:o,key:"sh3"}),this.packedSplats.extra.sh3Texture=e}return{sh1Texture:A,sh2Texture:t,sh3Texture:e}}};ct.staticInitialized=ct.staticInitialize(),ct.isStaticInitialized=!1,ct.dynoTime=new ti({value:0});let yn=ct;const qa=KA(`\n  vec3 evaluateSH1(Gsplat gsplat, usampler2DArray sh1, vec3 viewDir) {\n    // Extract sint7 values packed into 2 x uint32\n    uvec2 packed = texelFetch(sh1, splatTexCoord(gsplat.index), 0).rg;\n    vec3 sh1_0 = vec3(ivec3(\n      int(packed.x << 25u) >> 25,\n      int(packed.x << 18u) >> 25,\n      int(packed.x << 11u) >> 25\n    )) / 63.0;\n    vec3 sh1_1 = vec3(ivec3(\n      int(packed.x << 4u) >> 25,\n      int((packed.x >> 3u) | (packed.y << 29u)) >> 25,\n      int(packed.y << 22u) >> 25\n    )) / 63.0;\n    vec3 sh1_2 = vec3(ivec3(\n      int(packed.y << 15u) >> 25,\n      int(packed.y << 8u) >> 25,\n      int(packed.y << 1u) >> 25\n    )) / 63.0;\n\n    return sh1_0 * (-0.4886025 * viewDir.y)\n      + sh1_1 * (0.4886025 * viewDir.z)\n      + sh1_2 * (-0.4886025 * viewDir.x);\n  }\n`),Za=KA(`\n  vec3 evaluateSH2(Gsplat gsplat, usampler2DArray sh2, vec3 viewDir) {\n    // Extract sint8 values packed into 4 x uint32\n    uvec4 packed = texelFetch(sh2, splatTexCoord(gsplat.index), 0);\n    vec3 sh2_0 = vec3(ivec3(\n      int(packed.x << 24u) >> 24,\n      int(packed.x << 16u) >> 24,\n      int(packed.x << 8u) >> 24\n    )) / 127.0;\n    vec3 sh2_1 = vec3(ivec3(\n      int(packed.x) >> 24,\n      int(packed.y << 24u) >> 24,\n      int(packed.y << 16u) >> 24\n    )) / 127.0;\n    vec3 sh2_2 = vec3(ivec3(\n      int(packed.y << 8u) >> 24,\n      int(packed.y) >> 24,\n      int(packed.z << 24u) >> 24\n    )) / 127.0;\n    vec3 sh2_3 = vec3(ivec3(\n      int(packed.z << 16u) >> 24,\n      int(packed.z << 8u) >> 24,\n      int(packed.z) >> 24\n    )) / 127.0;\n    vec3 sh2_4 = vec3(ivec3(\n      int(packed.w << 24u) >> 24,\n      int(packed.w << 16u) >> 24,\n      int(packed.w << 8u) >> 24\n    )) / 127.0;\n\n    return sh2_0 * (1.0925484 * viewDir.x * viewDir.y)\n      + sh2_1 * (-1.0925484 * viewDir.y * viewDir.z)\n      + sh2_2 * (0.3153915 * (2.0 * viewDir.z * viewDir.z - viewDir.x * viewDir.x - viewDir.y * viewDir.y))\n      + sh2_3 * (-1.0925484 * viewDir.x * viewDir.z)\n      + sh2_4 * (0.5462742 * (viewDir.x * viewDir.x - viewDir.y * viewDir.y));\n  }\n`),Wa=KA(`\n  vec3 evaluateSH3(Gsplat gsplat, usampler2DArray sh3, vec3 viewDir) {\n    // Extract sint6 values packed into 4 x uint32\n    uvec4 packed = texelFetch(sh3, splatTexCoord(gsplat.index), 0);\n    vec3 sh3_0 = vec3(ivec3(\n      int(packed.x << 26u) >> 26,\n      int(packed.x << 20u) >> 26,\n      int(packed.x << 14u) >> 26\n    )) / 31.0;\n    vec3 sh3_1 = vec3(ivec3(\n      int(packed.x << 8u) >> 26,\n      int(packed.x << 2u) >> 26,\n      int((packed.x >> 4u) | (packed.y << 28u)) >> 26\n    )) / 31.0;\n    vec3 sh3_2 = vec3(ivec3(\n      int(packed.y << 22u) >> 26,\n      int(packed.y << 16u) >> 26,\n      int(packed.y << 10u) >> 26\n    )) / 31.0;\n    vec3 sh3_3 = vec3(ivec3(\n      int(packed.y << 4u) >> 26,\n      int((packed.y >> 2u) | (packed.z << 30u)) >> 26,\n      int(packed.z << 24u) >> 26\n    )) / 31.0;\n    vec3 sh3_4 = vec3(ivec3(\n      int(packed.z << 18u) >> 26,\n      int(packed.z << 12u) >> 26,\n      int(packed.z << 6u) >> 26\n    )) / 31.0;\n    vec3 sh3_5 = vec3(ivec3(\n      int(packed.z) >> 26,\n      int(packed.w << 26u) >> 26,\n      int(packed.w << 20u) >> 26\n    )) / 31.0;\n    vec3 sh3_6 = vec3(ivec3(\n      int(packed.w << 14u) >> 26,\n      int(packed.w << 8u) >> 26,\n      int(packed.w << 2u) >> 26\n    )) / 31.0;\n\n    float xx = viewDir.x * viewDir.x;\n    float yy = viewDir.y * viewDir.y;\n    float zz = viewDir.z * viewDir.z;\n    float xy = viewDir.x * viewDir.y;\n    float yz = viewDir.y * viewDir.z;\n    float zx = viewDir.z * viewDir.x;\n\n    return sh3_0 * (-0.5900436 * viewDir.y * (3.0 * xx - yy))\n      + sh3_1 * (2.8906114 * xy * viewDir.z) +\n      + sh3_2 * (-0.4570458 * viewDir.y * (4.0 * zz - xx - yy))\n      + sh3_3 * (0.3731763 * viewDir.z * (2.0 * zz - 3.0 * xx - 3.0 * yy))\n      + sh3_4 * (-0.4570458 * viewDir.x * (4.0 * zz - xx - yy))\n      + sh3_5 * (1.4453057 * viewDir.z * (xx - yy))\n      + sh3_6 * (-0.5900436 * viewDir.x * (xx - 3.0 * yy));\n  }\n`);function Oa(g,A,t){return Ji({inTypes:{gsplat:xA,sh1:"usampler2DArray",viewDir:"vec3"},outTypes:{rgb:"vec3"},inputs:{gsplat:g,sh1:A,viewDir:t},globals:()=>[it,qa],statements:({inputs:e,outputs:i})=>et(`\n        if (isGsplatActive(${e.gsplat}.flags)) {\n          ${i.rgb} = evaluateSH1(${e.gsplat}, ${e.sh1}, ${e.viewDir});\n        } else {\n          ${i.rgb} = vec3(0.0);\n        }\n      `)}).outputs.rgb}function ja(g,A,t){return Ji({inTypes:{gsplat:xA,sh2:"usampler2DArray",viewDir:"vec3"},outTypes:{rgb:"vec3"},inputs:{gsplat:g,sh2:A,viewDir:t},globals:()=>[it,Za],statements:({inputs:e,outputs:i})=>et(`\n        if (isGsplatActive(${e.gsplat}.flags)) {\n          ${i.rgb} = evaluateSH2(${e.gsplat}, ${e.sh2}, ${e.viewDir});\n        } else {\n          ${i.rgb} = vec3(0.0);\n        }\n      `)}).outputs.rgb}function Va(g,A,t){return Ji({inTypes:{gsplat:xA,sh3:"usampler2DArray",viewDir:"vec3"},outTypes:{rgb:"vec3"},inputs:{gsplat:g,sh3:A,viewDir:t},globals:()=>[it,Wa],statements:({inputs:e,outputs:i})=>et(`\n        if (isGsplatActive(${e.gsplat}.flags)) {\n          ${i.rgb} = evaluateSH3(${e.gsplat}, ${e.sh3}, ${e.viewDir});\n        } else {\n          ${i.rgb} = vec3(0.0);\n        }\n      `)}).outputs.rgb}function Pa(g){return new Worker(self.location.href,{name:g==null?void 0:g.name})}class Xa{constructor(){this.messages={},this.messageIdNext=0,this.worker=new Pa,this.worker.onmessage=A=>this.onMessage(A)}makeMessageId(){return++this.messageIdNext}makeMessagePromiseId(){const A=this.makeMessageId(),t=new Promise((e,i)=>{this.messages[A]={resolve:e,reject:i}});return{id:A,promise:t}}onMessage(A){const{id:t,result:e,error:i}=A.data,s=this.messages[t];s&&(delete this.messages[t],i?s.reject(i):s.resolve(e))}async call(A,t){const{id:e,promise:i}=this.makeMessagePromiseId();return this.worker.postMessage({name:A,args:t,id:e},{transfer:$s(t)}),i}}let fn=4,si=0;const wn=[],pn=[];async function $a(){const g=wn.shift();if(g)return g;if(si<fn){const A=new Xa;return si+=1,A}return new Promise(A=>{pn.push(A)})}function Ag(g){if(si>fn){si-=1;return}const A=pn.shift();if(A){A(g);return}wn.push(g)}async function ni(g){const A=await $a();try{return await g(A)}finally{Ag(A)}}var ce=(g=>(g.PLY="ply",g.SPZ="spz",g.SPLAT="splat",g.KSPLAT="ksplat",g))(ce||{});function Dn(g){const A=new DataView(g.buffer);if((A.getUint32(0,!0)&16777215)===7957616)return"ply";if((A.getUint32(0,!0)&16777215)===559903){const t=Aa(g,4);return new DataView(t.buffer).getUint32(0,!0)===1347635022?"spz":void 0}}function tg(g){const A=g.split(/[?#]/,1)[0],t=Math.max(A.lastIndexOf("/"),A.lastIndexOf("\\\\")),e=A.slice(t+1),i=e.lastIndexOf(".");return i<=0||i===e.length-1?"":e.slice(i+1).toLowerCase()}function mn(g){const A=tg(g);if(A==="ply")return"ply";if(A==="spz")return"spz";if(A==="splat")return"splat";if(A==="ksplat")return"ksplat"}async function eg({input:g,fileType:A,pathOrUrl:t}){const e=g instanceof ArrayBuffer?new Uint8Array(g):g;let i=A;switch(A||(i=Dn(e),!i&&t&&(i=mn(t))),i){case"ply":{const s=new Ce({fileBytes:e});await s.parseHeader();const n=s.numSplats,r=kA(n).maxSplats,a={fileBytes:e,packedArray:new Uint32Array(r*4)};return await ni(async o=>{const{packedArray:B,numSplats:I,extra:Q}=await o.call("unpackPly",a);return{packedArray:B,numSplats:I,extra:Q}})}case"spz":return await ni(async s=>{const{packedArray:n,numSplats:r,extra:a}=await s.call("decodeSpz",{fileBytes:e});return{packedArray:n,numSplats:r,extra:a}});case"splat":return await ni(async s=>{const{packedArray:n,numSplats:r}=await s.call("decodeAntiSplat",{fileBytes:e});return{packedArray:n,numSplats:r}});case"ksplat":return await ni(async s=>{const{packedArray:n,numSplats:r,extra:a}=await s.call("decodeKsplat",{fileBytes:e});return{packedArray:n,numSplats:r,extra:a}});default:throw new Error(`Unknown splat file type: ${i}`)}}class ig{constructor({maxSplats:A=1}={}){this.numSplats=0,this.maxSplats=kA(A).maxSplats,this.centers=new Float32Array(this.maxSplats*3),this.scales=new Float32Array(this.maxSplats*3),this.quaternions=new Float32Array(this.maxSplats*4),this.opacities=new Float32Array(this.maxSplats),this.colors=new Float32Array(this.maxSplats*3)}pushSplat(){const A=this.numSplats;return this.ensureIndex(A),this.numSplats+=1,A}unpushSplat(A){if(A===this.numSplats-1)this.numSplats-=1;else throw new Error("Cannot unpush splat from non-last position")}ensureCapacity(A){if(A>this.maxSplats){const t=Math.max(A,this.maxSplats*2),e=new Float32Array(t*3),i=new Float32Array(t*3),s=new Float32Array(t*4),n=new Float32Array(t),r=new Float32Array(t*3);if(e.set(this.centers),i.set(this.scales),s.set(this.quaternions),n.set(this.opacities),r.set(this.colors),this.centers=e,this.scales=i,this.quaternions=s,this.opacities=n,this.colors=r,this.sh1){const a=new Float32Array(t*9);a.set(this.sh1),this.sh1=a}if(this.sh2){const a=new Float32Array(t*15);a.set(this.sh2),this.sh2=a}if(this.sh3){const a=new Float32Array(t*21);a.set(this.sh3),this.sh3=a}this.maxSplats=t}}ensureIndex(A){this.ensureCapacity(A+1)}setCenter(A,t,e,i){this.centers[A*3]=t,this.centers[A*3+1]=e,this.centers[A*3+2]=i}setScale(A,t,e,i){this.scales[A*3]=t,this.scales[A*3+1]=e,this.scales[A*3+2]=i}setQuaternion(A,t,e,i,s){this.quaternions[A*4]=t,this.quaternions[A*4+1]=e,this.quaternions[A*4+2]=i,this.quaternions[A*4+3]=s}setOpacity(A,t){this.opacities[A]=t}setColor(A,t,e,i){this.colors[A*3]=t,this.colors[A*3+1]=e,this.colors[A*3+2]=i}setSh1(A,t){this.sh1||(this.sh1=new Float32Array(this.maxSplats*9));for(let e=0;e<9;++e)this.sh1[A*9+e]=t[e]}setSh2(A,t){this.sh2||(this.sh2=new Float32Array(this.maxSplats*15));for(let e=0;e<15;++e)this.sh2[A*15+e]=t[e]}setSh3(A,t){this.sh3||(this.sh3=new Float32Array(this.maxSplats*21));for(let e=0;e<21;++e)this.sh3[A*21+e]=t[e]}}class xn{constructor({fileBytes:A}){this.fileBytes=A instanceof ArrayBuffer?new Uint8Array(A):A,this.reader=new ta({fileBytes:this.fileBytes});const t=new DataView(this.reader.read(16).buffer);if(t.getUint32(0,!0)!==1347635022)throw new Error("Invalid SPZ file");if(this.version=t.getUint32(4,!0),this.version<1||this.version>2)throw new Error(`Unsupported SPZ version: ${this.version}`);this.numSplats=t.getUint32(8,!0),this.shDegree=t.getUint8(12),this.fractionalBits=t.getUint8(13),this.flags=t.getUint8(14),this.flagAntiAlias=(this.flags&1)!==0,this.reserved=t.getUint8(15),this.parsed=!1}parseSplats(A,t,e,i,s,n){if(this.parsed)throw new Error("SPZ file already parsed");if(this.parsed=!0,this.version===1){const r=this.reader.read(this.numSplats*3*2),a=new Uint16Array(r.buffer);for(let o=0;o<this.numSplats;o++){const B=o*3,I=AA(a[B]),Q=AA(a[B+1]),h=AA(a[B+2]);A==null||A(o,I,Q,h)}}else if(this.version===2){const r=1<<this.fractionalBits,a=this.reader.read(this.numSplats*3*3);for(let o=0;o<this.numSplats;o++){const B=o*9,I=((a[B+2]<<24|a[B+1]<<16|a[B]<<8)>>8)/r,Q=((a[B+5]<<24|a[B+4]<<16|a[B+3]<<8)>>8)/r,h=((a[B+8]<<24|a[B+7]<<16|a[B+6]<<8)>>8)/r;A==null||A(o,I,Q,h)}}else throw new Error("Unreachable");{const r=this.reader.read(this.numSplats);for(let a=0;a<this.numSplats;a++)t==null||t(a,r[a]/255)}{const r=this.reader.read(this.numSplats*3),a=Sn/.15;for(let o=0;o<this.numSplats;o++){const B=o*3,I=(r[B]/255-.5)*a+.5,Q=(r[B+1]/255-.5)*a+.5,h=(r[B+2]/255-.5)*a+.5;e==null||e(o,I,Q,h)}}{const r=this.reader.read(this.numSplats*3);for(let a=0;a<this.numSplats;a++){const o=a*3,B=Math.exp(r[o]/16-10),I=Math.exp(r[o+1]/16-10),Q=Math.exp(r[o+2]/16-10);i==null||i(a,B,I,Q)}}{const r=this.reader.read(this.numSplats*3);for(let a=0;a<this.numSplats;a++){const o=a*3,B=r[o]/127.5-1,I=r[o+1]/127.5-1,Q=r[o+2]/127.5-1,h=Math.sqrt(Math.max(0,1-B*B-I*I-Q*Q));s==null||s(a,B,I,Q,h)}}if(n&&this.shDegree>=1){const r=new Float32Array(9),a=this.shDegree>=2?new Float32Array(5*3):void 0,o=this.shDegree>=3?new Float32Array(7*3):void 0,B=this.reader.read(this.numSplats*Mn[this.shDegree]*3);let I=0;for(let Q=0;Q<this.numSplats;Q++){for(let h=0;h<9;++h)r[h]=(B[I+h]-128)/128;if(I+=9,a){for(let h=0;h<15;++h)a[h]=(B[I+h]-128)/128;I+=15}if(o){for(let h=0;h<21;++h)o[h]=(B[I+h]-128)/128;I+=21}n==null||n(Q,r,a,o)}}}}const Mn={1:3,2:8,3:15},Sn=.28209479177387814,sg=1347635022,ng=2,rg=1;class Et{constructor({numSplats:A,shDegree:t,fractionalBits:e=12,flagAntiAlias:i=!0}){this.clippedCount=0;const s=19+(t>=1?9:0)+(t>=2?15:0)+(t>=3?21:0),n=16+A*s;this.buffer=new ArrayBuffer(n),this.view=new DataView(this.buffer),this.view.setUint32(0,sg,!0),this.view.setUint32(4,ng,!0),this.view.setUint32(8,A,!0),this.view.setUint8(12,t),this.view.setUint8(13,e),this.view.setUint8(14,i?rg:0),this.view.setUint8(15,0),this.numSplats=A,this.shDegree=t,this.fractionalBits=e,this.fraction=1<<e,this.flagAntiAlias=i}setCenter(A,t,e,i){const s=Math.round(t*this.fraction),n=Math.max(-8388607,Math.min(8388607,s)),r=Math.round(e*this.fraction),a=Math.max(-8388607,Math.min(8388607,r)),o=Math.round(i*this.fraction),B=Math.max(-8388607,Math.min(8388607,o));(s!==n||r!==a||o!==B)&&(this.clippedCount+=1);const h=16+A*9;this.view.setUint8(h,n&255),this.view.setUint8(h+1,n>>8&255),this.view.setUint8(h+2,n>>16&255),this.view.setUint8(h+3,a&255),this.view.setUint8(h+4,a>>8&255),this.view.setUint8(h+5,a>>16&255),this.view.setUint8(h+6,B&255),this.view.setUint8(h+7,B>>8&255),this.view.setUint8(h+8,B>>16&255)}setAlpha(A,t){const e=16+this.numSplats*9+A;this.view.setUint8(e,Math.max(0,Math.min(255,Math.round(t*255))))}static scaleRgb(A){const t=((A-.5)/(Sn/.15)+.5)*255;return Math.max(0,Math.min(255,Math.round(t)))}setRgb(A,t,e,i){const s=16+this.numSplats*10+A*3;this.view.setUint8(s,Et.scaleRgb(t)),this.view.setUint8(s+1,Et.scaleRgb(e)),this.view.setUint8(s+2,Et.scaleRgb(i))}setScale(A,t,e,i){const s=16+this.numSplats*13+A*3;this.view.setUint8(s,Math.max(0,Math.min(255,Math.round((Math.log(t)+10)*16)))),this.view.setUint8(s+1,Math.max(0,Math.min(255,Math.round((Math.log(e)+10)*16)))),this.view.setUint8(s+2,Math.max(0,Math.min(255,Math.round((Math.log(i)+10)*16))))}setQuat(A,t,e,i,s){const n=16+this.numSplats*16+A*3,r=s<0;this.view.setUint8(n,Math.max(0,Math.min(255,Math.round(((r?-t:t)+1)*127.5)))),this.view.setUint8(n+1,Math.max(0,Math.min(255,Math.round(((r?-e:e)+1)*127.5)))),this.view.setUint8(n+2,Math.max(0,Math.min(255,Math.round(((r?-i:i)+1)*127.5))))}static quantizeSh(A,t){const e=Math.round(A*128)+128,i=1<<8-t,s=Math.floor((e+i/2)/i)*i;return Math.max(0,Math.min(255,s))}setSh(A,t,e,i){const s=Mn[this.shDegree]||0,n=16+this.numSplats*19+A*s*3;for(let r=0;r<9;++r)this.view.setUint8(n+r,Et.quantizeSh(t[r],5));if(e){const r=n+9;for(let a=0;a<15;++a)this.view.setUint8(r+a,Et.quantizeSh(e[a],4));if(i){const a=r+15;for(let o=0;o<21;++o)this.view.setUint8(a+o,Et.quantizeSh(i[o],4))}}}async finalize(){const A=new Uint8Array(this.buffer),e=new ReadableStream({async start(n){n.enqueue(A),n.close()}}).pipeThrough(new CompressionStream("gzip")),s=await new Response(e).arrayBuffer();return console.log("Compressed",A.length,"bytes to",s.byteLength,"bytes"),new Uint8Array(s)}}async function ag(g){var B,I,Q;const A=new ig,{inputs:t,clipXyz:e,maxSh:i,fractionalBits:s=12,opacityThreshold:n}=g;for(const h of t){let C=function(w){return w.multiplyScalar(d),w.applyQuaternion(f),w.add(p),w},E=function(w){return w.multiplyScalar(d),w},c=function(w){return w.premultiply(f),w},l=function(w){return!m||m.containsPoint(w)},y=function(w){return n!==void 0?w>=n:!0};const d=((B=h.transform)==null?void 0:B.scale)??1,f=new aA().fromArray(((I=h.transform)==null?void 0:I.quaternion)??[0,0,0,1]),p=new u().fromArray(((Q=h.transform)==null?void 0:Q.translate)??[0,0,0]),m=e?new Gt(new u().fromArray(e.min),new u().fromArray(e.max)):void 0;let x=h.fileType;switch(x||(x=Dn(h.fileBytes),!x&&h.pathOrUrl&&(x=mn(h.pathOrUrl))),x){case ce.PLY:{const w=new Ce({fileBytes:h.fileBytes});await w.parseHeader();let D=null;w.parseSplats((N,S,M,F,k,b,R,G,P,L,Z,W,rA,V,_)=>{const T=C(new u(S,M,F));if(l(T)&&y(W)){D=A.pushSplat(),A.setCenter(D,T.x,T.y,T.z);const q=E(new u(k,b,R));A.setScale(D,q.x,q.y,q.z);const U=c(new aA(G,P,L,Z));A.setQuaternion(D,U.x,U.y,U.z,U.w),A.setOpacity(D,W),A.setColor(D,rA,V,_)}else D=null},(N,S,M,F)=>{S&&D!==null&&A.setSh1(D,S),M&&D!==null&&A.setSh2(D,M),F&&D!==null&&A.setSh3(D,F)});break}case ce.SPZ:{const w=new xn({fileBytes:h.fileBytes}),D=new Int32Array(w.numSplats);D.fill(-1);const N=new Float32Array(w.numSplats*3),S=new u;w.parseSplats((M,F,k,b)=>{const R=C(new u(F,k,b));N[M*3]=R.x,N[M*3+1]=R.y,N[M*3+2]=R.z},(M,F)=>{S.fromArray(N,M*3),l(S)&&y(F)&&(D[M]=A.pushSplat(),A.setCenter(D[M],S.x,S.y,S.z),A.setOpacity(D[M],F))},(M,F,k,b)=>{D[M]>=0&&A.setColor(D[M],F,k,b)},(M,F,k,b)=>{if(D[M]>=0){const R=E(new u(F,k,b));A.setScale(D[M],R.x,R.y,R.z)}},(M,F,k,b,R)=>{if(D[M]>=0){const G=c(new aA(F,k,b,R));A.setQuaternion(D[M],G.x,G.y,G.z,G.w)}},(M,F,k,b)=>{D[M]>=0&&(A.setSh1(D[M],F),k&&A.setSh2(D[M],k),b&&A.setSh3(D[M],b))});break}case ce.SPLAT:en(h.fileBytes,w=>{},(w,D,N,S,M,F,k,b,R,G,P,L,Z,W,rA)=>{const V=C(new u(D,N,S));if(l(V)&&y(L)){const _=A.pushSplat();A.setCenter(_,V.x,V.y,V.z);const T=E(new u(M,F,k));A.setScale(_,T.x,T.y,T.z);const q=c(new aA(b,R,G,P));A.setQuaternion(_,q.x,q.y,q.z,q.w),A.setOpacity(_,L),A.setColor(_,Z,W,rA)}});break;case ce.KSPLAT:{let w=null;ia(h.fileBytes,D=>{},(D,N,S,M,F,k,b,R,G,P,L,Z,W,rA,V)=>{const _=C(new u(N,S,M));if(l(_)&&y(Z)){w=A.pushSplat(),A.setCenter(w,_.x,_.y,_.z);const T=E(new u(F,k,b));A.setScale(w,T.x,T.y,T.z);const q=c(new aA(R,G,P,L));A.setQuaternion(w,q.x,q.y,q.z,q.w),A.setOpacity(w,Z),A.setColor(w,W,rA,V)}else w=null},(D,N,S,M)=>{w!==null&&(A.setSh1(w,N),S&&A.setSh2(w,S),M&&A.setSh3(w,M))});break}default:throw new Error(`transcodeSpz not implemented for ${x}`)}}const r=Math.min(i??3,A.sh3?3:A.sh2?2:A.sh1?1:0),a=new Et({numSplats:A.numSplats,shDegree:r,fractionalBits:s,flagAntiAlias:!0});for(let h=0;h<A.numSplats;++h){const C=h*3,E=h*4;a.setCenter(h,A.centers[C],A.centers[C+1],A.centers[C+2]),a.setScale(h,A.scales[C],A.scales[C+1],A.scales[C+2]),a.setQuat(h,A.quaternions[E],A.quaternions[E+1],A.quaternions[E+2],A.quaternions[E+3]),a.setAlpha(h,A.opacities[h]),a.setRgb(h,A.colors[C],A.colors[C+1],A.colors[C+2]),A.sh1&&r>=1&&a.setSh(h,A.sh1.slice(h*9,(h+1)*9),r>=2&&A.sh2?A.sh2.slice(h*15,(h+1)*15):void 0,r>=3&&A.sh3?A.sh3.slice(h*21,(h+1)*21):void 0)}return{fileBytes:await a.finalize(),clippedCount:a.clippedCount}}async function Fn(g){const{name:A,args:t,id:e}=g.data;let i,s;try{switch(A){case"unpackPly":{const{packedArray:n,fileBytes:r}=t,a=await gg({packedArray:n,fileBytes:r});i={id:e,numSplats:a.numSplats,packedArray:a.packedArray,extra:a.extra};break}case"decodeSpz":{const{fileBytes:n}=t,r=og(n);i={id:e,numSplats:r.numSplats,packedArray:r.packedArray,extra:r.extra};break}case"decodeAntiSplat":{const{fileBytes:n}=t,r=ea(n);i={id:e,numSplats:r.numSplats,packedArray:r.packedArray};break}case"decodeKsplat":{const{fileBytes:n}=t,r=sa(n);i={id:e,numSplats:r.numSplats,packedArray:r.packedArray,extra:r.extra};break}case"sortSplats":{const{maxSplats:n,totalSplats:r,readback:a,ordering:o}=t;i={id:e,readback:a,...Ig({totalSplats:r,readback:a,ordering:o})};break}case"sortDoubleSplats":{const{numSplats:n,readback:r,ordering:a}=t;i={id:e,readback:r,ordering:a},Ur&&(i={id:e,readback:r,ordering:a,activeSplats:Gn(n,r,a)});break}case"transcodeSpz":{const n=t,r=await ag(n);i={id:e,fileBytes:r,input:n};break}default:throw new Error(`Unknown name: ${A}`)}}catch(n){s=n}self.postMessage({id:e,result:i,error:s},{transfer:$s(i)})}async function gg({packedArray:g,fileBytes:A}){const t=new Ce({fileBytes:A});await t.parseHeader();const e=t.numSplats,i={},s=Math.exp(-20);return t.parseSplats((n,r,a,o,B,I,Q,h,C,E,c,l,y,d,f)=>{he(g,n,r,a,o,B<s?0:Math.max(Yi,B),I<s?0:Math.max(Yi,I),Q<s?0:Math.max(Yi,Q),h,C,E,c,l,y,d,f)},(n,r,a,o)=>{r&&(i.sh1||(i.sh1=new Uint32Array(e*2)),vi(i.sh1,n,r)),a&&(i.sh2||(i.sh2=new Uint32Array(e*4)),zi(i.sh2,n,a)),o&&(i.sh3||(i.sh3=new Uint32Array(e*4)),Ki(i.sh3,n,o))}),{packedArray:g,numSplats:e,extra:i}}function og(g){const A=new xn({fileBytes:g}),t=A.numSplats,e=Hi(t),i=new Uint32Array(e*4),s={};return A.parseSplats((n,r,a,o)=>{zr(i,n,r,a,o)},(n,r)=>{Zr(i,n,r)},(n,r,a,o)=>{qr(i,n,r,a,o)},(n,r,a,o)=>{Kr(i,n,r,a,o)},(n,r,a,o,B)=>{_r(i,n,r,a,o,B)},(n,r,a,o)=>{r&&(s.sh1||(s.sh1=new Uint32Array(t*2)),vi(s.sh1,n,r)),a&&(s.sh2||(s.sh2=new Uint32Array(t*4)),zi(s.sh2,n,a)),o&&(s.sh3||(s.sh3=new Uint32Array(t*4)),Ki(s.sh3,n,o))}),{packedArray:i,numSplats:t,extra:s}}const Xt=31744,le=Xt+1;let iA=null;function Ig({totalSplats:g,readback:A,ordering:t}){iA||(iA=new Uint32Array(le)),iA.fill(0);const e=A.map(a=>new Uint32Array(a.buffer)),i=e[0].length,s=Math.ceil(g/i);let n=0;for(let a=0;a<s;++a){const o=e[a],B=Math.min(o.length,g-n);for(let I=0;I<B;++I){const Q=o[I]&32767;Q<Xt&&(iA[Q]+=1)}n+=B}let r=0;for(let a=0;a<le;++a){const o=r+iA[a];iA[a]=r,r=o}n=0;for(let a=0;a<s;++a){const o=e[a],B=Math.min(o.length,g-n);for(let I=0;I<B;++I){const Q=o[I]&32767;Q<Xt&&(t[iA[Q]]=n+I,iA[Q]+=1)}n+=B}if(iA[le-1]!==r)throw new Error(`Expected ${r} active splats but got ${iA[le-1]}`);return{activeSplats:r,ordering:t}}function yg({numSplats:g,readback:A,ordering:t}){iA||(iA=new Uint32Array(le)),iA.fill(0);for(let i=0;i<g;++i){const s=A[i];s<Xt&&(iA[s]+=1)}let e=0;for(let i=Xt-1;i>=0;--i){const s=e+iA[i];iA[i]=e,e=s}for(let i=0;i<g;++i){const s=A[i];s<Xt&&(t[iA[s]]=i,iA[s]+=1)}if(iA[0]!==e)throw new Error(`Expected ${e} active splats but got ${iA[0]}`);return{activeSplats:e,ordering:t}}const Pi=[];function Nn(g){Pi.push(g)}async function Bg(){self.addEventListener("message",Nn),await gi(),self.removeEventListener("message",Nn),self.addEventListener("message",Fn);for(const g of Pi)Fn(g);Pi.length=0}Bg().catch(console.error)})();\n//# sourceMappingURL=worker-CZsGgE4g.js.map\n', es = typeof self < "u" && self.Blob && new Blob([mr], { type: "text/javascript;charset=utf-8" });
function YQ(t) {
  let A;
  try {
    if (A = es && (self.URL || self.webkitURL).createObjectURL(es), !A) throw "";
    const e = new Worker(A, {
      name: t == null ? void 0 : t.name
    });
    return e.addEventListener("error", () => {
      (self.URL || self.webkitURL).revokeObjectURL(A);
    }), e;
  } catch {
    return new Worker(
      "data:text/javascript;charset=utf-8," + encodeURIComponent(mr),
      {
        name: t == null ? void 0 : t.name
      }
    );
  } finally {
    A && (self.URL || self.webkitURL).revokeObjectURL(A);
  }
}
class JQ {
  constructor() {
    this.messages = {}, this.messageIdNext = 0, this.worker = new YQ(), this.worker.onmessage = (A) => this.onMessage(A);
  }
  makeMessageId() {
    return ++this.messageIdNext;
  }
  makeMessagePromiseId() {
    const A = this.makeMessageId(), e = new Promise((s, i) => {
      this.messages[A] = { resolve: s, reject: i };
    });
    return { id: A, promise: e };
  }
  onMessage(A) {
    const { id: e, result: s, error: i } = A.data, n = this.messages[e];
    n && (delete this.messages[e], i ? n.reject(i) : n.resolve(s));
  }
  // Invoke an RPC on the worker with the given name and arguments.
  // The normal usage of a worker is to run one activity at a time,
  // but this function allows for concurrent calls, tagging each request
  // with a unique message Id and awaiting a response to that same Id.
  // The method will automatically transfer any ArrayBuffers in the
  // arguments to the worker. If you'd like to transfer a copy of a
  // buffer then you must clone it before passing to this function.
  async call(A, e) {
    const { id: s, promise: i } = this.makeMessagePromiseId();
    return this.worker.postMessage(
      { name: A, args: e, id: s },
      { transfer: wi(e) }
    ), i;
  }
}
let Mr = 4, te = 0;
const xr = [], Sr = [];
async function TQ() {
  const t = xr.shift();
  if (t)
    return t;
  if (te < Mr) {
    const A = new JQ();
    return te += 1, A;
  }
  return new Promise((A) => {
    Sr.push(A);
  });
}
function HQ(t) {
  if (te > Mr) {
    te -= 1;
    return;
  }
  const A = Sr.shift();
  if (A) {
    A(t);
    return;
  }
  xr.push(t);
}
async function Mt(t) {
  const A = await TQ();
  try {
    return await t(A);
  } finally {
    HQ(A);
  }
}
class qC extends _r {
  constructor(A) {
    super(A), this.fileLoader = new Vr(A);
  }
  load(A, e, s, i) {
    this.fileLoader.setResponseType("arraybuffer"), this.fileLoader.setCrossOrigin(this.crossOrigin), this.fileLoader.setWithCredentials(this.withCredentials), this.fileLoader.setPath(this.path), this.fileLoader.setResourcePath(this.resourcePath), this.fileLoader.setRequestHeader(this.requestHeader), this.fileLoader.load(
      A,
      async (n) => {
        if (e) {
          const r = await kr({
            input: n,
            fileType: this.fileType,
            pathOrUrl: A
          });
          e(new TA(r));
        }
      },
      s,
      i
    );
  }
  async loadAsync(A, e) {
    return new Promise((s, i) => {
      this.load(
        A,
        (n) => {
          s(n);
        },
        e,
        i
      );
    });
  }
  parse(A) {
    return new VA({ packedSplats: A });
  }
}
var xt = /* @__PURE__ */ ((t) => (t.PLY = "ply", t.SPZ = "spz", t.SPLAT = "splat", t.KSPLAT = "ksplat", t))(xt || {});
function Nr(t) {
  const A = new DataView(t.buffer);
  if ((A.getUint32(0, !0) & 16777215) === 7957616)
    return "ply";
  if ((A.getUint32(0, !0) & 16777215) === 559903) {
    const e = Ni(t, 4);
    return new DataView(e.buffer).getUint32(0, !0) === 1347635022 ? "spz" : void 0;
  }
}
function KQ(t) {
  const A = t.split(/[?#]/, 1)[0], e = Math.max(
    A.lastIndexOf("/"),
    A.lastIndexOf("\\")
  ), s = A.slice(e + 1), i = s.lastIndexOf(".");
  return i <= 0 || i === s.length - 1 ? "" : s.slice(i + 1).toLowerCase();
}
function Fr(t) {
  const A = KQ(t);
  if (A === "ply")
    return "ply";
  if (A === "spz")
    return "spz";
  if (A === "splat")
    return "splat";
  if (A === "ksplat")
    return "ksplat";
}
async function kr({
  input: t,
  fileType: A,
  pathOrUrl: e
}) {
  const s = t instanceof ArrayBuffer ? new Uint8Array(t) : t;
  let i = A;
  switch (A || (i = Nr(s), !i && e && (i = Fr(e))), i) {
    case "ply": {
      const n = new Ae({ fileBytes: s });
      await n.parseHeader();
      const a = n.numSplats, r = mA(a).maxSplats, g = { fileBytes: s, packedArray: new Uint32Array(r * 4) };
      return await Mt(async (I) => {
        const { packedArray: B, numSplats: o, extra: C } = await I.call(
          "unpackPly",
          g
        );
        return { packedArray: B, numSplats: o, extra: C };
      });
    }
    case "spz":
      return await Mt(async (n) => {
        const { packedArray: a, numSplats: r, extra: g } = await n.call(
          "decodeSpz",
          {
            fileBytes: s
          }
        );
        return { packedArray: a, numSplats: r, extra: g };
      });
    case "splat":
      return await Mt(async (n) => {
        const { packedArray: a, numSplats: r } = await n.call(
          "decodeAntiSplat",
          {
            fileBytes: s
          }
        );
        return { packedArray: a, numSplats: r };
      });
    case "ksplat":
      return await Mt(async (n) => {
        const { packedArray: a, numSplats: r, extra: g } = await n.call(
          "decodeKsplat",
          { fileBytes: s }
        );
        return { packedArray: a, numSplats: r, extra: g };
      });
    default:
      throw new Error(`Unknown splat file type: ${i}`);
  }
}
class qQ {
  constructor({ maxSplats: A = 1 } = {}) {
    this.numSplats = 0, this.maxSplats = mA(A).maxSplats, this.centers = new Float32Array(this.maxSplats * 3), this.scales = new Float32Array(this.maxSplats * 3), this.quaternions = new Float32Array(this.maxSplats * 4), this.opacities = new Float32Array(this.maxSplats), this.colors = new Float32Array(this.maxSplats * 3);
  }
  pushSplat() {
    const A = this.numSplats;
    return this.ensureIndex(A), this.numSplats += 1, A;
  }
  unpushSplat(A) {
    if (A === this.numSplats - 1)
      this.numSplats -= 1;
    else
      throw new Error("Cannot unpush splat from non-last position");
  }
  ensureCapacity(A) {
    if (A > this.maxSplats) {
      const e = Math.max(A, this.maxSplats * 2), s = new Float32Array(e * 3), i = new Float32Array(e * 3), n = new Float32Array(e * 4), a = new Float32Array(e), r = new Float32Array(e * 3);
      if (s.set(this.centers), i.set(this.scales), n.set(this.quaternions), a.set(this.opacities), r.set(this.colors), this.centers = s, this.scales = i, this.quaternions = n, this.opacities = a, this.colors = r, this.sh1) {
        const g = new Float32Array(e * 9);
        g.set(this.sh1), this.sh1 = g;
      }
      if (this.sh2) {
        const g = new Float32Array(e * 15);
        g.set(this.sh2), this.sh2 = g;
      }
      if (this.sh3) {
        const g = new Float32Array(e * 21);
        g.set(this.sh3), this.sh3 = g;
      }
      this.maxSplats = e;
    }
  }
  ensureIndex(A) {
    this.ensureCapacity(A + 1);
  }
  setCenter(A, e, s, i) {
    this.centers[A * 3] = e, this.centers[A * 3 + 1] = s, this.centers[A * 3 + 2] = i;
  }
  setScale(A, e, s, i) {
    this.scales[A * 3] = e, this.scales[A * 3 + 1] = s, this.scales[A * 3 + 2] = i;
  }
  setQuaternion(A, e, s, i, n) {
    this.quaternions[A * 4] = e, this.quaternions[A * 4 + 1] = s, this.quaternions[A * 4 + 2] = i, this.quaternions[A * 4 + 3] = n;
  }
  setOpacity(A, e) {
    this.opacities[A] = e;
  }
  setColor(A, e, s, i) {
    this.colors[A * 3] = e, this.colors[A * 3 + 1] = s, this.colors[A * 3 + 2] = i;
  }
  setSh1(A, e) {
    this.sh1 || (this.sh1 = new Float32Array(this.maxSplats * 9));
    for (let s = 0; s < 9; ++s)
      this.sh1[A * 9 + s] = e[s];
  }
  setSh2(A, e) {
    this.sh2 || (this.sh2 = new Float32Array(this.maxSplats * 15));
    for (let s = 0; s < 15; ++s)
      this.sh2[A * 15 + s] = e[s];
  }
  setSh3(A, e) {
    this.sh3 || (this.sh3 = new Float32Array(this.maxSplats * 21));
    for (let s = 0; s < 21; ++s)
      this.sh3[A * 21 + s] = e[s];
  }
}
var zQ = `precision highp float;
precision highp int;
precision highp sampler2D;
precision highp usampler2D;
precision highp isampler2D;
precision highp sampler2DArray;
precision highp usampler2DArray;
precision highp isampler2DArray;
precision highp sampler3D;
precision highp usampler3D;
precision highp isampler3D;

#include <splatDefines>

uniform uint targetLayer;
uniform int targetBase;
uniform int targetCount;

out uvec4 target;

{{ GLOBALS }}

void produceSplat(int index) {
    {{ STATEMENTS }}
}

void main() {
    int targetIndex = int(targetLayer << SPLAT_TEX_LAYER_BITS) + int(uint(gl_FragCoord.y) << SPLAT_TEX_WIDTH_BITS) + int(gl_FragCoord.x);
    int index = targetIndex - targetBase;

    if ((index >= 0) && (index < targetCount)) {
        produceSplat(index);
    } else {
        target = uvec4(0u, 0u, 0u, 0u);
    }
}`;
const eA = class eA {
  constructor(A = {}) {
    this.maxSplats = 0, this.numSplats = 0, this.packedArray = null, this.isInitialized = !1, this.target = null, this.source = null, this.needsUpdate = !0, this.extra = {}, this.dyno = new Ze({ packedSplats: this }), this.initialized = Promise.resolve(this), this.reinitialize(A);
  }
  reinitialize(A) {
    this.isInitialized = !1, A.url || A.fileBytes || A.construct ? this.initialized = this.asyncInitialize(A).then(() => (this.isInitialized = !0, this)) : (this.initialize(A), this.isInitialized = !0, this.initialized = Promise.resolve(this));
  }
  initialize(A) {
    A.packedArray ? (this.packedArray = A.packedArray, this.maxSplats = Math.floor(this.packedArray.length / 4), this.maxSplats = Math.floor(this.maxSplats / j) * j, this.numSplats = Math.min(
      this.maxSplats,
      A.numSplats ?? Number.POSITIVE_INFINITY
    )) : (this.maxSplats = A.maxSplats ?? 0, this.numSplats = 0), this.extra = A.extra ?? {};
  }
  async asyncInitialize(A) {
    let { url: e, fileBytes: s, construct: i } = A;
    if (e && (s = await fetch(e).then(async (n) => {
      if (!n.ok)
        throw new Error(
          `${n.status} "${n.statusText}" fetching URL: ${e}`
        );
      return await n.arrayBuffer();
    })), s) {
      const n = await kr({
        input: s,
        fileType: A.fileType,
        pathOrUrl: A.fileName ?? e
      });
      this.initialize(n);
    }
    if (i) {
      const n = i(this);
      n instanceof Promise && await n;
    }
  }
  // Call this when you are finished with the PackedSplats and want to free
  // any buffers it holds.
  dispose() {
    this.target && (this.target.dispose(), this.target = null), this.source && (this.source.dispose(), this.source = null);
  }
  // Ensures that this.packedArray can fit numSplats Gsplats. If it's too small,
  // resize exponentially and copy over the original data.
  //
  // Typically you don't need to call this, because calling this.setSplat(index, ...)
  // and this.pushSplat(...) will automatically call ensureSplats() so we have
  // enough splats.
  ensureSplats(A) {
    const e = A <= this.maxSplats ? this.maxSplats : (
      // Grow exponentially to avoid frequent reallocations
      Math.max(A, 2 * this.maxSplats)
    ), s = this.packedArray ? this.packedArray.length / 4 : 0;
    if (!this.packedArray || e > s) {
      this.maxSplats = mA(e).maxSplats;
      const i = new Uint32Array(this.maxSplats * 4);
      this.packedArray && i.set(this.packedArray), this.packedArray = i;
    }
    return this.packedArray;
  }
  // Ensure the extra array for the given level is large enough to hold numSplats
  ensureSplatsSh(A, e) {
    let s, i;
    if (A === 0)
      return this.ensureSplats(e);
    if (A === 1)
      s = 2, i = "sh1";
    else if (A === 2)
      s = 4, i = "sh2";
    else if (A === 3)
      s = 4, i = "sh3";
    else
      throw new Error(`Invalid level: ${A}`);
    let n = this.extra[i] ? this.extra[i].length / s : 0;
    const a = e <= n ? n : Math.max(e, 2 * n);
    if (!this.extra[i] || a > n) {
      n = mA(a).maxSplats;
      const r = new Uint32Array(n * s);
      this.extra[i] && r.set(this.extra[i]), this.extra[i] = r;
    }
    return this.extra[i];
  }
  // Unpack the 16-byte Gsplat data at index into the Three.js components
  // center: THREE.Vector3, scales: THREE.Vector3, quaternion: THREE.Quaternion,
  // opacity: number 0..1, color: THREE.Color 0..1.
  getSplat(A) {
    if (!this.packedArray || A >= this.numSplats)
      throw new Error("Invalid index");
    return Se(this.packedArray, A);
  }
  // Set all PackedSplat components at index with the provided Gsplat attributes
  // (can be the same objects returned by getSplat). Ensures there is capacity
  // for at least index+1 Gsplats.
  setSplat(A, e, s, i, n, a) {
    const r = this.ensureSplats(A + 1);
    xe(
      r,
      A,
      e.x,
      e.y,
      e.z,
      s.x,
      s.y,
      s.z,
      i.x,
      i.y,
      i.z,
      i.w,
      n,
      a.r,
      a.g,
      a.b
    ), this.numSplats = Math.max(this.numSplats, A + 1);
  }
  // Effectively calls this.setSplat(this.numSplats++, center, ...), useful on
  // construction where you just want to iterate and create a collection of Gsplats.
  pushSplat(A, e, s, i, n) {
    const a = this.ensureSplats(this.numSplats + 1);
    xe(
      a,
      this.numSplats,
      A.x,
      A.y,
      A.z,
      e.x,
      e.y,
      e.z,
      s.x,
      s.y,
      s.z,
      s.w,
      i,
      n.r,
      n.g,
      n.b
    ), ++this.numSplats;
  }
  // Iterate over Gsplats index 0..=(this.numSplats-1), unpack each Gsplat
  // and invoke the callback function with the Gsplat attributes.
  forEachSplat(A) {
    if (!(!this.packedArray || !this.numSplats))
      for (let e = 0; e < this.numSplats; ++e) {
        const s = Se(this.packedArray, e);
        A(
          e,
          s.center,
          s.scales,
          s.quaternion,
          s.opacity,
          s.color
        );
      }
  }
  // Ensures our PackedSplats.target render target has enough space to generate
  // maxSplats total Gsplats, and reallocate if not large enough.
  ensureGenerate(A) {
    if (this.target && (A ?? 1) <= this.maxSplats)
      return !1;
    this.dispose();
    const e = mA(A ?? 1), { width: s, height: i, depth: n } = e;
    return this.maxSplats = e.maxSplats, this.target = new Q.WebGLArrayRenderTarget(s, i, n, {
      depthBuffer: !1,
      stencilBuffer: !1,
      generateMipmaps: !1,
      magFilter: Q.NearestFilter,
      minFilter: Q.NearestFilter
    }), this.target.texture.format = Q.RGBAIntegerFormat, this.target.texture.type = Q.UnsignedIntType, this.target.texture.internalFormat = "RGBA32UI", !0;
  }
  // Given an array of splatCounts (.numSplats for each
  // SplatGenerator/SplatMesh in the scene), compute a
  // "mapping layout" in the composite array of generated outputs.
  generateMapping(A) {
    let e = 0;
    const s = A.map((i) => {
      const n = e, a = Math.ceil(i / j) * j;
      return e += a, { base: n, count: i };
    });
    return { maxSplats: e, mapping: s };
  }
  // Returns a THREE.DataArrayTexture representing the PackedSplats content as
  // a Uint32x4 data array texture (2048 x 2048 x depth in size)
  getTexture() {
    return this.target ? this.target.texture : this.source || this.packedArray ? this.maybeUpdateSource() : eA.getEmpty();
  }
  // Check if source texture needs to be created/updated
  maybeUpdateSource() {
    if (!this.packedArray)
      throw new Error("No packed splats");
    if (this.needsUpdate || !this.source) {
      if (this.needsUpdate = !1, this.source) {
        const { width: A, height: e, depth: s } = this.source.image;
        this.maxSplats !== A * e * s && (this.source.dispose(), this.source = null);
      }
      if (this.source)
        this.packedArray.buffer !== this.source.image.data.buffer && (this.source.image.data = new Uint8Array(this.packedArray.buffer));
      else {
        const { width: A, height: e, depth: s } = mA(this.maxSplats);
        this.source = new Q.DataArrayTexture(
          this.packedArray,
          A,
          e,
          s
        ), this.source.format = Q.RGBAIntegerFormat, this.source.type = Q.UnsignedIntType, this.source.internalFormat = "RGBA32UI", this.source.needsUpdate = !0;
      }
      this.source.needsUpdate = !0;
    }
    return this.source;
  }
  // Can be used where you need an uninitialized THREE.DataArrayTexture like
  // a uniform you will update with the result of this.getTexture() later.
  static getEmpty() {
    if (!eA.emptySource) {
      const { width: A, height: e, depth: s, maxSplats: i } = mA(1), n = new Uint32Array(i * 4);
      eA.emptySource = new Q.DataArrayTexture(
        n,
        A,
        e,
        s
      ), eA.emptySource.format = Q.RGBAIntegerFormat, eA.emptySource.type = Q.UnsignedIntType, eA.emptySource.internalFormat = "RGBA32UI", eA.emptySource.needsUpdate = !0;
    }
    return eA.emptySource;
  }
  // Get a program and THREE.RawShaderMaterial for a given GsplatGenerator,
  // generating it if necessary and caching the result.
  prepareProgramMaterial(A) {
    let e = eA.generatorProgram.get(A);
    if (!e) {
      const i = SA(
        { index: "int" },
        { output: "uvec4" },
        ({ index: n }) => {
          A.inputs.index = n;
          const a = A.outputs.gsplat;
          return { output: xs(a) };
        }
      );
      eA.programTemplate || (eA.programTemplate = new qe(
        zQ
      )), e = new Ke({
        graph: i,
        inputs: { index: "index" },
        outputs: { output: "target" },
        template: eA.programTemplate
      }), Object.assign(e.uniforms, {
        targetLayer: { value: 0 },
        targetBase: { value: 0 },
        targetCount: { value: 0 }
      }), eA.generatorProgram.set(A, e);
    }
    const s = e.prepareMaterial();
    return eA.mesh.material = s, { program: e, material: s };
  }
  saveRenderState(A) {
    return {
      xrPresenting: A.xr.isPresenting,
      autoClear: A.autoClear,
      scissorTest: A.getScissorTest(),
      pixelRatio: A.getPixelRatio()
    };
  }
  resetRenderState(A, e) {
    A.setRenderTarget(null), A.setPixelRatio(e.pixelRatio), A.xr.isPresenting = e.xrPresenting, A.autoClear = e.autoClear, A.setScissorTest(e.scissorTest);
  }
  // Executes a dyno program specified by generator which is any DynoBlock that
  // maps { index: "int" } to { gsplat: Gsplat }. This is called in
  // SparkRenderer.updateInternal() to re-generate Gsplats in the scene for
  // SplatGenerator instances whose version is newer than what was generated
  // for it last time.
  generate({
    generator: A,
    base: e,
    count: s,
    renderer: i
  }) {
    if (!this.target)
      throw new Error("Target must be initialized with ensureSplats");
    if (e + s > this.maxSplats)
      throw new Error("Base + count exceeds maxSplats");
    const { program: n, material: a } = this.prepareProgramMaterial(A);
    n.update();
    const r = this.saveRenderState(i), g = Math.ceil((e + s) / j) * j, I = j * XA;
    for (a.uniforms.targetBase.value = e, a.uniforms.targetCount.value = s; e < g; ) {
      const B = Math.floor(e / I);
      a.uniforms.targetLayer.value = B;
      const o = B * I, C = Math.floor((e - o) / j), E = Math.min(
        XA,
        Math.ceil((g - o) / j)
      );
      i.setPixelRatio(1), i.setRenderTarget(this.target, B), i.xr.isPresenting = !1, i.autoClear = !1, i.setScissorTest(!0), i.setScissor(
        0,
        C,
        j,
        E - C
      ), i.render(eA.scene, eA.camera), e += j * (E - C);
    }
    return this.resetRenderState(i, r), { nextBase: g };
  }
};
eA.emptySource = null, eA.programTemplate = null, eA.generatorProgram = /* @__PURE__ */ new Map(), eA.geometry = new Q.PlaneGeometry(2, 2), eA.mesh = new Q.Mesh(
  eA.geometry,
  new Q.RawShaderMaterial({ visible: !1 })
), eA.scene = new Q.Scene().add(eA.mesh), eA.camera = new Q.Camera();
let TA = eA;
class Ze extends k {
  constructor({ packedSplats: A } = {}) {
    super({
      key: "packedSplats",
      type: vt,
      globals: () => [ne],
      value: {
        texture: TA.getEmpty(),
        numSplats: 0
      },
      update: (e) => {
        var s, i;
        return e.texture = ((s = this.packedSplats) == null ? void 0 : s.getTexture()) ?? TA.getEmpty(), e.numSplats = ((i = this.packedSplats) == null ? void 0 : i.numSplats) ?? 0, e;
      }
    }), this.packedSplats = A;
  }
}
class Re extends Q.InstancedBufferGeometry {
  constructor(A, e) {
    super(), this.ordering = A, this.setAttribute("position", new Q.BufferAttribute(_Q, 3)), this.setIndex(new Q.BufferAttribute(VQ, 1)), this._maxInstanceCount = A.length, this.instanceCount = e, this.attribute = new Q.InstancedBufferAttribute(A, 1, !1, 1), this.attribute.setUsage(Q.DynamicDrawUsage), this.setAttribute("splatIndex", this.attribute);
  }
  update(A, e) {
    this.ordering = A, this.attribute.array = A, this.instanceCount = e, this.attribute.addUpdateRange(0, e), this.attribute.needsUpdate = !0;
  }
}
const _Q = new Float32Array([
  -1,
  -1,
  0,
  1,
  -1,
  0,
  1,
  1,
  0,
  -1,
  1,
  0
]), VQ = new Uint16Array([0, 1, 2, 0, 2, 3]), PA = class PA {
  constructor(A) {
    if (this.lastTime = null, this.encodeLinear = !1, this.superXY = 1, this.display = null, this.sorting = null, this.pending = null, this.sortingCheck = !1, this.readback = new Uint16Array(0), this.spark = A.spark, this.camera = A.camera, this.viewToWorld = A.viewToWorld ?? new Q.Matrix4(), A.target) {
      const { width: e, height: s, doubleBuffer: i } = A.target, n = Math.max(1, Math.min(4, A.target.superXY ?? 1));
      if (this.superXY = n, e * n > 8192 || s * n > 8192)
        throw new Error("Target size too large");
      this.target = new Q.WebGLRenderTarget(
        e * n,
        s * n,
        {
          format: Q.RGBAFormat,
          type: Q.UnsignedByteType,
          colorSpace: Q.SRGBColorSpace
        }
      ), i && (this.back = new Q.WebGLRenderTarget(
        e * n,
        s * n,
        {
          format: Q.RGBAFormat,
          type: Q.UnsignedByteType,
          colorSpace: Q.SRGBColorSpace
        }
      )), this.encodeLinear = !0;
    }
    this.onTextureUpdated = A.onTextureUpdated, this.sortRadial = A.sortRadial ?? !0, this.sortDistance = A.sortDistance, this.sortCoorient = A.sortCoorient, this.depthBias = A.depthBias, this.sort360 = A.sort360, this.orderingFreelist = new pi({
      allocate: (e) => new Uint32Array(e),
      valid: (e, s) => e.length === s
    }), this.autoUpdate = !1, this.setAutoUpdate(A.autoUpdate ?? !1);
  }
  // Call this when you are done with the SparkViewpoint and want to
  // free up its resources (GPU targets, pixel buffers, etc.)
  dispose() {
    var A;
    this.setAutoUpdate(!1), this.target && (this.target.dispose(), this.target = void 0), this.back && (this.back.dispose(), this.back = void 0), this.display && (this.spark.releaseAccumulator(this.display.accumulator), this.display.geometry.dispose(), this.display = null), (A = this.pending) != null && A.accumulator && (this.spark.releaseAccumulator(this.pending.accumulator), this.pending = null);
  }
  // Use this function to change whether this viewpoint will auto-update
  // its sort order whenever the attached SparkRenderer updates the Gsplats.
  // Turn this on or off depending on whether you expect to do renders from
  // this viewpoint most frames.
  setAutoUpdate(A) {
    !this.autoUpdate && A ? this.spark.autoViewpoints.push(this) : this.autoUpdate && !A && (this.spark.autoViewpoints = this.spark.autoViewpoints.filter(
      (e) => e !== this
    )), this.autoUpdate = A;
  }
  // See below async prepareRenderPixels() for explanation of parameters.
  // Awaiting this method updates the Gsplats in the scene and performs a sort of the
  // Gsplats from this viewpoint, preparing it for a subsequent this.renderTarget()
  // call in the same tick.
  async prepare({
    scene: A,
    camera: e,
    viewToWorld: s,
    update: i,
    forceOrigin: n
  }) {
    var r;
    for (s ? this.viewToWorld = s : (this.camera = e ?? this.camera, this.camera && (this.camera.updateMatrixWorld(), this.viewToWorld = this.camera.matrixWorld.clone())); i ?? !0; ) {
      const g = n ? this.viewToWorld : void 0;
      if (this.spark.updateInternal({ scene: A, originToWorld: g }))
        break;
      await new Promise((B) => setTimeout(B, 10));
    }
    const a = this.spark.active;
    a !== ((r = this.display) == null ? void 0 : r.accumulator) && (this.spark.active.refCount += 1), await this.sortUpdate({ accumulator: a, viewToWorld: this.viewToWorld });
  }
  // Render out the viewpoint to the view target RGBA buffer.
  // Swaps buffers if doubleBuffer: true was set.
  // Calls onTextureUpdated(texture) with the resulting texture.
  renderTarget({
    scene: A,
    camera: e
  }) {
    var i;
    const s = this.back ?? this.target;
    if (!s)
      throw new Error("Must initialize SparkViewpoint with target");
    if (e = e ?? this.camera, !e)
      throw new Error("Must provide camera");
    if (e instanceof Q.PerspectiveCamera) {
      const n = new Q.PerspectiveCamera().copy(e, !1);
      n.aspect = s.width / s.height, n.updateProjectionMatrix(), e = n;
    }
    this.viewToWorld = e.matrixWorld.clone();
    try {
      this.spark.renderer.setRenderTarget(s), this.spark.prepareViewpoint(this), this.spark.renderer.render(A, e);
    } finally {
      this.spark.prepareViewpoint(this.spark.defaultView), this.spark.renderer.setRenderTarget(null);
    }
    s !== this.target && ([this.target, this.back] = [this.back, this.target]), (i = this.onTextureUpdated) == null || i.call(this, s.texture);
  }
  // Read back the previously rendered target image as a Uint8Array of packed
  // RGBA values (in that order). If superXY was set greater than 1 then
  // downsampling is performed in the target pixel array with simple averaging
  // to derive the returned pixel values. Subsequent calls to this.readTarget()
  // will reuse the same buffers to minimize memory allocations.
  async readTarget() {
    if (!this.target)
      throw new Error("Must initialize SparkViewpoint with target");
    const { width: A, height: e } = this.target, s = A * e * 4;
    (!this.superPixels || this.superPixels.length < s) && (this.superPixels = new Uint8Array(s)), await this.spark.renderer.readRenderTargetPixelsAsync(
      this.target,
      0,
      0,
      A,
      e,
      this.superPixels
    );
    const { superXY: i } = this;
    if (i === 1)
      return this.superPixels;
    const n = A / i, a = e / i, r = n * a * 4;
    (!this.pixels || this.pixels.length < r) && (this.pixels = new Uint8Array(r));
    const { superPixels: g, pixels: I } = this, B = i * i;
    for (let o = 0; o < a; o++) {
      const C = o * n;
      for (let E = 0; E < n; E++) {
        const h = E * i;
        let c = 0, l = 0, u = 0, w = 0;
        for (let y = 0; y < i; y++) {
          const p = (o * i + y) * this.target.width;
          for (let f = 0; f < i; f++) {
            const N = (p + h + f) * 4;
            c += g[N], l += g[N + 1], u += g[N + 2], w += g[N + 3];
          }
        }
        const d = (C + E) * 4;
        I[d] = c / B, I[d + 1] = l / B, I[d + 2] = u / B, I[d + 3] = w / B;
      }
    }
    return I;
  }
  // Render out a viewpoint as a Uint8Array of RGBA values for the provided scene
  // and any camera/viewToWorld viewpoint overrides. By default update is true,
  // which triggers its SparkRenderer to check and potentially update the Gsplats.
  // Setting update to false disables this and sorts the Gsplats as they are.
  // Setting forceOrigin (default: false) to true forces the view update to
  // recalculate the splats with this view origin, potentially altering any
  // view-dependent effects. If you expect view-dependent effects to play a role
  // in the rendering quality, enable this.
  //
  // Underneath, prepareRenderPixels() simply calls await this.prepare(...),
  // this.renderTarget(...), and finally returns the result this.readTarget(),
  // a Promise to a Uint8Array with RGBA values for all the pixels (potentially
  // downsampled if the superXY parameter was used). These steps can also be called
  // manually, for example if you need to alter the scene before and after
  // this.renderTarget(...) to hide UI elements from being rendered.
  async prepareRenderPixels({
    scene: A,
    camera: e,
    viewToWorld: s,
    update: i,
    forceOrigin: n
  }) {
    return await this.prepare({ scene: A, camera: e, viewToWorld: s, update: i, forceOrigin: n }), this.renderTarget({ scene: A, camera: e }), this.readTarget();
  }
  // This is called automatically by SparkRenderer, there is no need to call it!
  // The method cannot be private because then SparkRenderer would
  // not be able to call it.
  autoPoll({ accumulator: A }) {
    var n, a, r, g;
    this.camera && (this.camera.updateMatrixWorld(), this.viewToWorld = this.camera.matrixWorld.clone());
    let e = !1, s = !1;
    if (!this.display)
      e = !0;
    else if (A) {
      e = !0;
      const { mappingVersion: I } = this.display.accumulator;
      A.mappingVersion === I && (this.spark.releaseAccumulator(this.display.accumulator), this.display.accumulator = A, s = !0);
    }
    const i = ((n = this.sorting) == null ? void 0 : n.viewToWorld) ?? ((a = this.display) == null ? void 0 : a.viewToWorld);
    i && !Pt({
      matrix1: this.viewToWorld,
      matrix2: i,
      // By default update sort each 1 cm
      maxDistance: this.sortDistance ?? 0.01,
      // By default for radial sort, update for intermittent movement so that
      // we bring back splats culled by being behind the camera.
      // For depth sort, small rotations can change sort order a lot, so
      // update sort for even small rotations.
      minCoorient: this.sortCoorient ?? this.sortRadial ? 0.99 : 0.999
    }) && (e = !0), e && (A && (A.refCount += 1), A && ((r = this.pending) != null && r.accumulator) && this.pending.accumulator !== ((g = this.display) == null ? void 0 : g.accumulator) && this.spark.releaseAccumulator(this.pending.accumulator), this.pending = { accumulator: A, viewToWorld: this.viewToWorld, displayed: s }, this.driveSort());
  }
  async driveSort() {
    var A;
    for (; ; ) {
      if (this.sorting || !this.pending)
        return;
      const { viewToWorld: e, displayed: s } = this.pending;
      let i = this.pending.accumulator ?? ((A = this.display) == null ? void 0 : A.accumulator);
      if (i || (i = this.spark.active, i.refCount += 1), this.pending = null, !i)
        throw new Error("No accumulator to sort");
      this.sorting = { viewToWorld: e }, await this.sortUpdate({ accumulator: i, viewToWorld: e, displayed: s }), this.sorting = null;
    }
  }
  async sortUpdate({
    accumulator: A,
    viewToWorld: e,
    displayed: s = !1
  }) {
    if (this.sortingCheck)
      throw new Error("Only one sort at a time");
    this.sortingCheck = !0, A = A ?? this.spark.active;
    const { numSplats: i, maxSplats: n } = A.splats;
    let a = 0, r = this.orderingFreelist.alloc(n);
    if (i > 0) {
      const {
        reader: g,
        doubleSortReader: I,
        dynoSortRadial: B,
        dynoOrigin: o,
        dynoDirection: C,
        dynoDepthBias: E,
        dynoSort360: h,
        dynoSplats: c
      } = PA.makeSorter(), l = Math.ceil(n / 2);
      this.readback = g.ensureBuffer(l, this.readback);
      const u = A.toWorld.clone().invert(), w = e.clone().premultiply(u);
      B.value = this.sort360 ? !0 : this.sortRadial, o.value.set(0, 0, 0).applyMatrix4(w), C.value.set(0, 0, -1).applyMatrix4(w).sub(o.value).normalize(), E.value = this.depthBias ?? 1, h.value = this.sort360 ?? !1, c.packedSplats = A.splats, await g.renderReadback({
        renderer: this.spark.renderer,
        reader: I,
        count: Math.ceil(i / 2),
        readback: this.readback
      });
      const d = await Mt(async (y) => y.call("sortDoubleSplats", {
        numSplats: i,
        readback: this.readback,
        ordering: r
      }));
      this.readback = d.readback, r = d.ordering, a = d.activeSplats;
    }
    this.updateDisplay({
      accumulator: A,
      viewToWorld: e,
      ordering: r,
      activeSplats: a,
      displayed: s
    }), this.sortingCheck = !1;
  }
  updateDisplay({
    accumulator: A,
    viewToWorld: e,
    ordering: s,
    activeSplats: i,
    displayed: n = !1
  }) {
    if (!this.display)
      this.display = {
        accumulator: A,
        viewToWorld: e,
        geometry: new Re(s, i)
      };
    else {
      !n && A !== this.display.accumulator && (this.spark.releaseAccumulator(this.display.accumulator), this.display.accumulator = A), this.display.viewToWorld = e;
      const a = this.display.geometry.ordering;
      a.length === s.length ? this.display.geometry.update(s, i) : (this.display.geometry.dispose(), this.display.geometry = new Re(s, i)), this.orderingFreelist.free(a);
    }
    this.spark.viewpoint === this && this.spark.prepareViewpoint(this);
  }
  static makeSorter() {
    if (!PA.dynos) {
      const A = new jt({ value: !0 }), e = new dt({ value: new Q.Vector3() }), s = new dt({ value: new Q.Vector3() }), i = new at({ value: 1 }), n = new jt({ value: !1 }), a = new Ze(), r = new Xt(), g = SA(
        { index: "int" },
        { rgba8: "vec4" },
        ({ index: I }) => {
          if (!I)
            throw new Error("No index");
          const B = {
            sortRadial: A,
            sortOrigin: e,
            sortDirection: s,
            sortDepthBias: i,
            sort360: n
          }, o = QA(I, K("int", 2)), C = kt(a, o), E = ss({ gsplat: C, ...B }), h = kt(
            a,
            fA(o, K("int", 1))
          ), c = ss({ gsplat: h, ...B }), l = JA({
            vectorType: "vec2",
            x: E,
            y: c
          });
          return { rgba8: bn(Un(l)) };
        }
      );
      PA.dynos = {
        dynoSortRadial: A,
        dynoOrigin: e,
        dynoDirection: s,
        dynoDepthBias: i,
        dynoSort360: n,
        dynoSplats: a,
        reader: r,
        doubleSortReader: g
      };
    }
    return PA.dynos;
  }
};
PA.EMPTY_TEXTURE = new Q.Texture(), PA.dynos = null;
let ee = PA;
const ZQ = CA(`
  float computeSort(Gsplat gsplat, bool sortRadial, vec3 sortOrigin, vec3 sortDirection, float sortDepthBias, bool sort360) {
    if (!isGsplatActive(gsplat.flags)) {
      return INFINITY;
    }

    vec3 center = gsplat.center - sortOrigin;
    float biasedDepth = dot(center, sortDirection) + sortDepthBias;
    if (!sort360 && (biasedDepth <= 0.0)) {
      return INFINITY;
    }

    return sortRadial ? length(center) : biasedDepth;
  }
`);
function ss({
  gsplat: t,
  sortRadial: A,
  sortOrigin: e,
  sortDirection: s,
  sortDepthBias: i,
  sort360: n
}) {
  return bt({
    inTypes: {
      gsplat: P,
      sortRadial: "bool",
      sortOrigin: "vec3",
      sortDirection: "vec3",
      sortDepthBias: "float",
      sort360: "bool"
    },
    outTypes: { metric: "float" },
    globals: () => [xA, ZQ],
    inputs: {
      gsplat: t,
      sortRadial: A,
      sortOrigin: e,
      sortDirection: s,
      sortDepthBias: i,
      sort360: n
    },
    statements: ({ inputs: a, outputs: r }) => {
      const {
        gsplat: g,
        sortRadial: I,
        sortOrigin: B,
        sortDirection: o,
        sortDepthBias: C,
        sort360: E
      } = a;
      return GA(`
        ${r.metric} = computeSort(${g}, ${I}, ${B}, ${o}, ${C}, ${E});
      `);
    }
  }).outputs.metric;
}
class De {
  constructor() {
    this.splats = new TA(), this.toWorld = new Q.Matrix4(), this.mapping = [], this.refCount = 0, this.splatsVersion = -1, this.mappingVersion = -1;
  }
  ensureGenerate(A) {
    this.splats.ensureGenerate(A) && (this.mapping = []);
  }
  // Generate all Gsplats from an array of generators
  generateSplats({
    renderer: A,
    modifier: e,
    generators: s,
    forceUpdate: i,
    originToWorld: n
  }) {
    const a = this.mapping.reduce((I, B) => (I.set(B.node, B), I), /* @__PURE__ */ new Map());
    let r = 0, g = 0;
    for (const { node: I, generator: B, version: o, base: C, count: E } of s) {
      const h = a.get(I);
      if ((i || B !== (h == null ? void 0 : h.generator) || o !== (h == null ? void 0 : h.version) || C !== (h == null ? void 0 : h.base) || E !== (h == null ? void 0 : h.count)) && B && E > 0) {
        const c = e.apply(B);
        try {
          this.splats.generate({
            generator: c,
            base: C,
            count: E,
            renderer: A
          });
        } catch (l) {
          I.generator = void 0, I.generatorError = l;
        }
        r += 1;
      }
      g = Math.max(g, C + E);
    }
    return this.splats.numSplats = g, this.toWorld = n, this.mapping = s, r !== 0;
  }
  // Check if this accumulator has exactly the same generator mapping as
  // the previous one. If so, we can reuse the Gsplat sort order.
  hasCorrespondence(A) {
    return this.mapping.length !== A.mapping.length ? !1 : this.mapping.every(({ node: e, base: s, count: i }, n) => {
      const {
        node: a,
        base: r,
        count: g
      } = A.mapping[n];
      return e === a && s === r && i === g;
    });
  }
}
var OQ = `const float LN_SCALE_MIN = -9.0;
const float LN_SCALE_MAX = 9.0;
const float LN_RESCALE = (LN_SCALE_MAX - LN_SCALE_MIN) / 254.0; 

const uint SPLAT_TEX_WIDTH_BITS = 11u;
const uint SPLAT_TEX_HEIGHT_BITS = 11u;
const uint SPLAT_TEX_DEPTH_BITS = 11u;
const uint SPLAT_TEX_LAYER_BITS = SPLAT_TEX_WIDTH_BITS + SPLAT_TEX_HEIGHT_BITS;

const uint SPLAT_TEX_WIDTH = 1u << SPLAT_TEX_WIDTH_BITS;
const uint SPLAT_TEX_HEIGHT = 1u << SPLAT_TEX_HEIGHT_BITS;
const uint SPLAT_TEX_DEPTH = 1u << SPLAT_TEX_DEPTH_BITS;

const uint SPLAT_TEX_WIDTH_MASK = SPLAT_TEX_WIDTH - 1u;
const uint SPLAT_TEX_HEIGHT_MASK = SPLAT_TEX_HEIGHT - 1u;
const uint SPLAT_TEX_DEPTH_MASK = SPLAT_TEX_DEPTH - 1u;

const uint F16_INF = 0x7c00u;
const float PI = 3.1415926535897932384626433832795;

const float INFINITY = 1.0 / 0.0;
const float NEG_INFINITY = -INFINITY;

const float MAX_PIXEL_RADIUS = 512.0;
const float MIN_ALPHA = 0.5 * (1.0 / 255.0); 
const float MAX_STDDEV = sqrt(8.0);

float sqr(float x) {
    return x * x;
}

float pow4(float x) {
    float x2 = x * x;
    return x2 * x2;
}

float pow8(float x) {
    float x4 = pow4(x);
    return x4 * x4;
}

vec3 srgbToLinear(vec3 rgb) {
    return pow(rgb, vec3(2.2));
}

vec3 linearToSrgb(vec3 rgb) {
    return pow(rgb, vec3(1.0 / 2.2));
}

uint encodeQuatOctXy88R8(vec4 q) {
    
    if (q.w < 0.0) {
        q = -q;
    }
    
    float theta = 2.0 * acos(q.w);
    float halfTheta = theta * 0.5;
    float s = sin(halfTheta);
    
    vec3 axis = (abs(s) < 1e-6) ? vec3(1.0, 0.0, 0.0) : q.xyz / s;
    
    
    
    float sum = abs(axis.x) + abs(axis.y) + abs(axis.z);
    vec2 p = vec2(axis.x, axis.y) / sum;
    
    if (axis.z < 0.0) {
        float oldPx = p.x;
        p.x = (1.0 - abs(p.y)) * (p.x >= 0.0 ? 1.0 : -1.0);
        p.y = (1.0 - abs(oldPx)) * (p.y >= 0.0 ? 1.0 : -1.0);
    }
    
    float u_f = p.x * 0.5 + 0.5;
    float v_f = p.y * 0.5 + 0.5;
    
    uint quantU = uint(clamp(round(u_f * 255.0), 0.0, 255.0));
    uint quantV = uint(clamp(round(v_f * 255.0), 0.0, 255.0));
    
    
    
    uint angleInt = uint(clamp(round((theta / 3.14159265359) * 255.0), 0.0, 255.0));
    
    
    return (angleInt << 16u) | (quantV << 8u) | quantU;
}

vec4 decodeQuatOctXy88R8(uint encoded) {
    
    uint quantU = encoded & uint(0xFFu);               
    uint quantV = (encoded >> 8u) & uint(0xFFu);         
    uint angleInt = encoded >> 16u;                      

    
    float u_f = float(quantU) / 255.0;
    float v_f = float(quantV) / 255.0;
    vec2 f = vec2(u_f * 2.0 - 1.0, v_f * 2.0 - 1.0);

    vec3 axis = vec3(f.xy, 1.0 - abs(f.x) - abs(f.y));
    float t = max(-axis.z, 0.0);
    axis.x += (axis.x >= 0.0) ? -t : t;
    axis.y += (axis.y >= 0.0) ? -t : t;
    axis = normalize(axis);
    
    
    float theta = (float(angleInt) / 255.0) * 3.14159265359;
    float halfTheta = theta * 0.5;
    float s = sin(halfTheta);
    float w = cos(halfTheta);
    
    return vec4(axis * s, w);
}

    

    

    

    

    

    

    

    

    

    

uvec4 packSplat(vec3 center, vec3 scales, vec4 quaternion, vec4 rgba) {
    uvec4 uRgba = uvec4(round(clamp(rgba * 255.0, 0.0, 255.0)));

    uint uQuat = encodeQuatOctXy88R8(quaternion);
    
    
    uvec3 uQuat3 = uvec3(uQuat & 0xffu, (uQuat >> 8u) & 0xffu, (uQuat >> 16u) & 0xffu);

    
    uvec3 uScales = uvec3(
        (scales.x == 0.0) ? 0u : uint(round(clamp((log(scales.x) - LN_SCALE_MIN) / LN_RESCALE, 0.0, 254.0))) + 1u,
        (scales.y == 0.0) ? 0u : uint(round(clamp((log(scales.y) - LN_SCALE_MIN) / LN_RESCALE, 0.0, 254.0))) + 1u,
        (scales.z == 0.0) ? 0u : uint(round(clamp((log(scales.z) - LN_SCALE_MIN) / LN_RESCALE, 0.0, 254.0))) + 1u
    );

    
    uint word0 = uRgba.r | (uRgba.g << 8u) | (uRgba.b << 16u) | (uRgba.a << 24u);
    uint word1 = packHalf2x16(center.xy);
    uint word2 = packHalf2x16(vec2(center.z, 0.0)) | (uQuat3.x << 16u) | (uQuat3.y << 24u);
    uint word3 = uScales.x | (uScales.y << 8u) | (uScales.z << 16u) | (uQuat3.z << 24u);
    return uvec4(word0, word1, word2, word3);
}

void unpackSplat(uvec4 packed, out vec3 center, out vec3 scales, out vec4 quaternion, out vec4 rgba) {
    uint word0 = packed.x, word1 = packed.y, word2 = packed.z, word3 = packed.w;

    uvec4 uRgba = uvec4(word0 & 0xffu, (word0 >> 8u) & 0xffu, (word0 >> 16u) & 0xffu, (word0 >> 24u) & 0xffu);
    rgba = vec4(uRgba) / 255.0;

    center = vec4(
        unpackHalf2x16(word1),
        unpackHalf2x16(word2 & 0xffffu)
    ).xyz;

    uvec3 uScales = uvec3(word3 & 0xffu, (word3 >> 8u) & 0xffu, (word3 >> 16u) & 0xffu);
    scales = vec3(
        (uScales.x == 0u) ? 0.0 : exp(LN_SCALE_MIN + float(uScales.x - 1u) * LN_RESCALE),
        (uScales.y == 0u) ? 0.0 : exp(LN_SCALE_MIN + float(uScales.y - 1u) * LN_RESCALE),
        (uScales.z == 0u) ? 0.0 : exp(LN_SCALE_MIN + float(uScales.z - 1u) * LN_RESCALE)
    );

    uint uQuat = ((word2 >> 16u) & 0xFFFFu) | ((word3 >> 8u) & 0xFF0000u);
    quaternion = decodeQuatOctXy88R8(uQuat);
    
    
}

vec3 quatVec(vec4 q, vec3 v) {
    
    vec3 t = 2.0 * cross(q.xyz, v);
    return v + q.w * t + cross(q.xyz, t);
}

vec4 quatQuat(vec4 q1, vec4 q2) {
    return vec4(
        q1.w * q2.x + q1.x * q2.w + q1.y * q2.z - q1.z * q2.y,
        q1.w * q2.y - q1.x * q2.z + q1.y * q2.w + q1.z * q2.x,
        q1.w * q2.z + q1.x * q2.y - q1.y * q2.x + q1.z * q2.w,
        q1.w * q2.w - q1.x * q2.x - q1.y * q2.y - q1.z * q2.z
    );
}

mat3 scaleQuaternionToMatrix(vec3 s, vec4 q) {
    
    return mat3(
        s.x * (1.0 - 2.0 * (q.y * q.y + q.z * q.z)),
        s.x * (2.0 * (q.x * q.y + q.w * q.z)),
        s.x * (2.0 * (q.x * q.z - q.w * q.y)),
        s.y * (2.0 * (q.x * q.y - q.w * q.z)),
        s.y * (1.0 - 2.0 * (q.x * q.x + q.z * q.z)),
        s.y * (2.0 * (q.y * q.z + q.w * q.x)),
        s.z * (2.0 * (q.x * q.z + q.w * q.y)),
        s.z * (2.0 * (q.y * q.z - q.w * q.x)),
        s.z * (1.0 - 2.0 * (q.x * q.x + q.y * q.y))
    );
}

vec4 slerp(vec4 q1, vec4 q2, float t) {
    
    float cosHalfTheta = dot(q1, q2);

    
    if (abs(cosHalfTheta) >= 0.999) {
        return q1;
    }
    
    
    
    if (cosHalfTheta < 0.0) {
        q2 = -q2;
        cosHalfTheta = -cosHalfTheta;
    }

    
    float halfTheta = acos(cosHalfTheta);
    float sinHalfTheta = sqrt(1.0 - cosHalfTheta * cosHalfTheta);

    
    float ratioA = sin((1.0 - t) * halfTheta) / sinHalfTheta;
    float ratioB = sin(t * halfTheta) / sinHalfTheta;

    
    return q1 * ratioA + q2 * ratioB;
}

ivec3 splatTexCoord(int index) {
    uint x = uint(index) & SPLAT_TEX_WIDTH_MASK;
    uint y = (uint(index) >> SPLAT_TEX_WIDTH_BITS) & SPLAT_TEX_HEIGHT_MASK;
    uint z = uint(index) >> SPLAT_TEX_LAYER_BITS;
    return ivec3(x, y, z);
}`, WQ = `precision highp float;
precision highp int;

#include <splatDefines>

uniform bool encodeLinear;
uniform float maxStdDev;
uniform bool disableFalloff;
uniform float falloff;

out vec4 fragColor;

in vec4 vRgba;
in vec2 vSplatUv;
in vec3 vNdc;

void main() {
    float z = dot(vSplatUv, vSplatUv);
    if (z > (maxStdDev * maxStdDev)) {
        discard;
    }

    float alpha = vRgba.a;
    alpha *= mix(1.0, exp(-0.5 * z), falloff);
    if (alpha < MIN_ALPHA) {
        discard;
    }

    vec3 rgb = vRgba.rgb;
    if (encodeLinear) {
        rgb = srgbToLinear(rgb);
    }
    fragColor = vec4(rgb, alpha);
}`, jQ = `precision highp float;
precision highp int;
precision highp usampler2DArray;

#include <splatDefines>

attribute uint splatIndex;

out vec4 vRgba;
out vec2 vSplatUv;
out vec3 vNdc;

uniform vec2 renderSize;
uniform uint numSplats;
uniform vec4 renderToViewQuat;
uniform vec3 renderToViewPos;
uniform float maxStdDev;
uniform float time;
uniform float deltaTime;
uniform bool debugFlag;
uniform bool enable2DGS;
uniform float blurAmount;
uniform float preBlurAmount;
uniform float focalDistance;
uniform float apertureAngle;
uniform float clipXY;

uniform usampler2DArray packedSplats;

void main() {
    
    gl_Position = vec4(0.0, 0.0, 2.0, 1.0);

    if (uint(gl_InstanceID) >= numSplats) {
        return;
    }
    if (splatIndex == 0xffffffffu) {
        
        return;
    }

    ivec3 texCoord = ivec3(
        splatIndex & SPLAT_TEX_WIDTH_MASK,
        (splatIndex >> SPLAT_TEX_WIDTH_BITS) & SPLAT_TEX_HEIGHT_MASK,
        splatIndex >> SPLAT_TEX_LAYER_BITS
    );
    uvec4 packed = texelFetch(packedSplats, texCoord, 0);

    vec3 center, scales;
    vec4 quaternion, rgba;
    unpackSplat(packed, center, scales, quaternion, rgba);

    if (rgba.a < MIN_ALPHA) {
        return;
    }
    bvec3 zeroScales = equal(scales, vec3(0.0));
    if (all(zeroScales)) {
        return;
    }

    
    vec3 viewCenter = quatVec(renderToViewQuat, center) + renderToViewPos;

    
    if (viewCenter.z >= 0.0) {
        return;
    }

    
    vec4 clipCenter = projectionMatrix * vec4(viewCenter, 1.0);

    
    if (abs(clipCenter.z) >= clipCenter.w) {
        return;
    }

    
    float clip = clipXY * clipCenter.w;
    if (abs(clipCenter.x) > clip || abs(clipCenter.y) > clip) {
        return;
    }

    
    vec4 viewQuaternion = quatQuat(renderToViewQuat, quaternion);

    if (enable2DGS && any(zeroScales)) {
        vRgba = rgba;
        vSplatUv = position.xy * maxStdDev;

        vec3 offset;
        if (zeroScales.z) {
            offset = vec3(vSplatUv.xy * scales.xy, 0.0);
        } else if (zeroScales.y) {
            offset = vec3(vSplatUv.x * scales.x, 0.0, vSplatUv.y * scales.z);
        } else {
            offset = vec3(0.0, vSplatUv.xy * scales.yz);
        }

        vec3 viewPos = viewCenter + quatVec(viewQuaternion, offset);
        gl_Position = projectionMatrix * vec4(viewPos, 1.0);
        vNdc = gl_Position.xyz / gl_Position.w;
        return;
    }

    
    vec3 ndcCenter = clipCenter.xyz / clipCenter.w;

    
    mat3 RS = scaleQuaternionToMatrix(scales, viewQuaternion);
    mat3 cov3D = RS * transpose(RS);

    
    vec2 focal = 0.5 * renderSize * vec2(projectionMatrix[0][0], projectionMatrix[1][1]);
    float invZ = 1.0 / viewCenter.z;
    vec2 J1 = focal * invZ;
    vec2 J2 = -(J1 * viewCenter.xy) * invZ;
    mat3 J = mat3(
        J1.x, 0.0, J2.x,
        0.0, J1.y, J2.y,
        0.0, 0.0, 0.0
    );

    
    
    
    
    
    
    
    mat3 cov2D = transpose(J) * cov3D * J;
    float a = cov2D[0][0];
    float d = cov2D[1][1];
    float b = cov2D[0][1];

    
    a += preBlurAmount;
    d += preBlurAmount;

    float fullBlurAmount = blurAmount;
    if ((focalDistance > 0.0) && (apertureAngle > 0.0)) {
        float focusRadius = MAX_PIXEL_RADIUS;
        if (viewCenter.z < 0.0) {
            float focusBlur = abs((-viewCenter.z - focalDistance) / viewCenter.z);
            float apertureRadius = focal.x * tan(0.5 * apertureAngle);
            focusRadius = focusBlur * apertureRadius;
        }
        fullBlurAmount = clamp(sqr(focusRadius), blurAmount, sqr(MAX_PIXEL_RADIUS));
    }

    
    float detOrig = a * d - b * b;
    a += fullBlurAmount;
    d += fullBlurAmount;
    float det = a * d - b * b;

    
    float blurAdjust = sqrt(max(0.0, detOrig / det));
    rgba.a *= blurAdjust;
    if (rgba.a < MIN_ALPHA) {
        return;
    }

    
    float eigenAvg = 0.5 * (a + d);
    float eigenDelta = sqrt(max(0.0, eigenAvg * eigenAvg - det));
    float eigen1 = eigenAvg + eigenDelta;
    float eigen2 = eigenAvg - eigenDelta;

    vec2 eigenVec1 = normalize(vec2((abs(b) < 0.001) ? 1.0 : b, eigen1 - a));
    vec2 eigenVec2 = vec2(eigenVec1.y, -eigenVec1.x);

    float scale1 = position.x * min(MAX_PIXEL_RADIUS, maxStdDev * sqrt(eigen1));
    float scale2 = position.y * min(MAX_PIXEL_RADIUS, maxStdDev * sqrt(eigen2));

    
    vec2 pixelOffset = eigenVec1 * scale1 + eigenVec2 * scale2;
    vec2 ndcOffset = (2.0 / renderSize) * pixelOffset;
    vec3 ndc = vec3(ndcCenter.xy + ndcOffset, ndcCenter.z);

    vRgba = rgba;
    vSplatUv = position.xy * maxStdDev;
    vNdc = ndc;
    gl_Position = vec4(ndc.xy * clipCenter.w, clipCenter.zw);
}`;
let fe = null;
function PQ() {
  return fe || (Q.ShaderChunk.splatDefines = OQ, fe = {
    splatVertex: jQ,
    splatFragment: WQ
  }), fe;
}
const is = 5;
let Ue = !1, be = !1, Gr;
function XQ(t) {
  let A = !1;
  return t instanceof VA ? !0 : (t.traverse((e) => {
    A = A || e instanceof VA;
  }), A);
}
const Rr = Q.Scene.prototype.add;
Q.Scene.prototype.add = function(t) {
  return Ue = Ue || XQ(t), be = be || t instanceof se, Rr.call(this, t), this;
};
const $Q = Q.Scene.prototype.onBeforeRender;
Q.Scene.prototype.onBeforeRender = function(t) {
  if (Ue) {
    if (!be) {
      const A = Gr || new se({ renderer: t });
      this.add(A);
    }
    Q.Scene.prototype.onBeforeRender = $Q, Q.Scene.prototype.add = Rr;
  }
};
const wA = class wA extends Q.Mesh {
  constructor(A) {
    const e = wA.makeUniforms(), s = PQ(), i = new Q.ShaderMaterial({
      glslVersion: Q.GLSL3,
      vertexShader: s.splatVertex,
      fragmentShader: s.splatFragment,
      uniforms: e,
      transparent: !0,
      blending: Q.NormalBlending,
      depthTest: !0,
      depthWrite: !1,
      side: Q.DoubleSide
    });
    super(ns, i), this.autoViewpoints = [], this.rotateToAccumulator = new Lt({ value: new Q.Quaternion() }), this.translateToAccumulator = new dt({ value: new Q.Vector3() }), this.lastFrame = -1, this.lastUpdateTime = null, this.defaultCameras = [], this.pendingUpdate = null, this.envViewpoint = null, this.frustumCulled = !1, this.renderer = A.renderer, this.material = i, this.uniforms = e;
    const n = SA(
      { gsplat: P },
      { gsplat: P },
      ({ gsplat: a }) => {
        if (!a)
          throw new Error("gsplat not defined");
        return a = Je(a, {
          rotate: this.rotateToAccumulator,
          translate: this.translateToAccumulator
        }), { gsplat: a };
      }
    );
    this.modifier = new NQ(n), this.autoUpdate = A.autoUpdate ?? !0, this.preUpdate = A.preUpdate ?? !1, this.originDistance = A.originDistance ?? 1, this.maxStdDev = A.maxStdDev ?? Math.sqrt(8), this.enable2DGS = A.enable2DGS ?? !1, this.preBlurAmount = A.preBlurAmount ?? 0, this.blurAmount = A.blurAmount ?? 0.3, this.focalDistance = A.focalDistance ?? 0, this.apertureAngle = A.apertureAngle ?? 0, this.falloff = A.falloff ?? 1, this.clipXY = A.clipXY ?? 1.4, this.active = new De(), this.accumulatorCount = 1, this.freeAccumulators = [];
    for (let a = 0; a < 1; ++a)
      this.freeAccumulators.push(new De()), this.accumulatorCount += 1;
    this.defaultView = new ee({
      ...A.view,
      autoUpdate: !0,
      spark: this
    }), this.viewpoint = this.defaultView, this.prepareViewpoint(this.viewpoint), this.clock = A.clock ? yi(A.clock) : new Q.Clock(), Gr = this;
  }
  static makeUniforms() {
    return {
      // Size of render viewport in pixels
      renderSize: { value: new Q.Vector2() },
      // Total number of Gsplats in packedSplats to render
      numSplats: { value: 0 },
      // SplatAccumulator to view transformation quaternion
      renderToViewQuat: { value: new Q.Quaternion() },
      // SplatAccumulator to view transformation translation
      renderToViewPos: { value: new Q.Vector3() },
      // Maximum distance (in stddevs) from Gsplat center to render
      maxStdDev: { value: 1 },
      // Enable interpreting 0-thickness Gsplats as 2DGS
      enable2DGS: { value: !1 },
      // Add to projected 2D splat covariance diagonal (thickens and brightens)
      preBlurAmount: { value: 0 },
      // Add to 2D splat covariance diagonal and adjust opacity (anti-aliasing)
      blurAmount: { value: 0.3 },
      // Depth-of-field distance to focal plane
      focalDistance: { value: 0 },
      // Full-width angle of aperture opening (in radians)
      apertureAngle: { value: 0 },
      // Modulate Gaussian kernal falloff. 0 means "no falloff, flat shading",
      // 1 is normal e^-x^2 falloff.
      falloff: { value: 1 },
      // Clip Gsplats that are clipXY times beyond the +-1 frustum bounds
      clipXY: { value: 1.4 },
      // Gsplat collection to render
      packedSplats: { type: "t", value: TA.getEmpty() },
      // Time in seconds for time-based effects
      time: { value: 0 },
      // Delta time in seconds since last frame
      deltaTime: { value: 0 },
      // Whether to encode Gsplat with linear RGB (for environment mapping)
      encodeLinear: { value: !1 },
      // Debug flag that alternates each frame
      debugFlag: { value: !1 }
    };
  }
  canAllocAccumulator() {
    return this.freeAccumulators.length > 0 || this.accumulatorCount < is;
  }
  maybeAllocAccumulator() {
    let A = this.freeAccumulators.pop();
    if (A === void 0) {
      if (this.accumulatorCount >= is)
        return null;
      A = new De(), this.accumulatorCount += 1;
    }
    return A.refCount = 1, A;
  }
  releaseAccumulator(A) {
    A.refCount -= 1, A.refCount === 0 && this.freeAccumulators.push(A);
  }
  newViewpoint(A) {
    return new ee({ ...A, spark: this });
  }
  onBeforeRender(A, e, s) {
    var C, E;
    const i = this.time ?? this.clock.getElapsedTime(), n = i - (this.viewpoint.lastTime ?? i);
    this.viewpoint.lastTime = i;
    const a = A.info.render.frame, r = a !== this.lastFrame;
    this.lastFrame = a;
    const g = this.viewpoint;
    if (g === this.defaultView) {
      if (r)
        if (!A.xr.isPresenting)
          this.defaultView.viewToWorld = s.matrixWorld.clone(), this.defaultCameras = [this.defaultView.viewToWorld];
        else {
          const h = A.xr.getCamera().cameras;
          this.defaultCameras = h.map((c) => c.matrixWorld), this.defaultView.viewToWorld = AC(this.defaultCameras) ?? new Q.Matrix4();
        }
      this.autoUpdate && this.update({ scene: e, viewToWorld: this.defaultView.viewToWorld });
    }
    if (r && (this.uniforms.time.value = i, this.uniforms.deltaTime.value = n, this.uniforms.debugFlag.value = performance.now() / 1e3 % 2 < 1), g.target)
      this.uniforms.renderSize.value.set(
        g.target.width,
        g.target.height
      );
    else {
      const h = A.getSize(this.uniforms.renderSize.value);
      if (h.x === 1 && h.y === 1) {
        const c = (C = A.xr.getSession()) == null ? void 0 : C.renderState.baseLayer;
        c && (h.x = c.framebufferWidth, h.y = c.framebufferHeight);
      }
    }
    this.uniforms.encodeLinear.value = g.encodeLinear, this.uniforms.maxStdDev.value = this.maxStdDev, this.uniforms.enable2DGS.value = this.enable2DGS, this.uniforms.preBlurAmount.value = this.preBlurAmount, this.uniforms.blurAmount.value = this.blurAmount, this.uniforms.focalDistance.value = this.focalDistance, this.uniforms.apertureAngle.value = this.apertureAngle, this.uniforms.falloff.value = this.falloff, this.uniforms.clipXY.value = this.clipXY;
    const I = ((E = g.display) == null ? void 0 : E.accumulator.toWorld) ?? new Q.Matrix4(), B = s.matrixWorld.clone().invert();
    I.clone().premultiply(B).decompose(
      this.uniforms.renderToViewPos.value,
      this.uniforms.renderToViewQuat.value,
      new Q.Vector3()
    );
  }
  // Update the uniforms for the given viewpoint.
  // Note that the client expects to be able to call render() at any point
  // to update the canvas, so we must switch the viewpoint back to
  // defaultView when we're finished.
  prepareViewpoint(A) {
    if (this.viewpoint = A ?? this.viewpoint, this.viewpoint.display) {
      const { accumulator: e, geometry: s } = this.viewpoint.display;
      this.uniforms.numSplats.value = e.splats.numSplats, this.uniforms.packedSplats.value = e.splats.getTexture(), this.geometry = s;
    } else
      this.uniforms.numSplats.value = 0, this.uniforms.packedSplats.value = TA.getEmpty(), this.geometry = ns;
  }
  // If spark.autoUpdate is false then you must manually call
  // spark.update({ scene }) to have the scene Gsplats be re-generated.
  update({
    scene: A,
    viewToWorld: e
  }) {
    const s = this.matrixWorld.clone();
    this.preUpdate ? this.updateInternal({ scene: A, originToWorld: s, viewToWorld: e }) : (this.pendingUpdate = {
      scene: A,
      originToWorld: s
    }, setTimeout(() => {
      if (this.pendingUpdate) {
        const { scene: i, originToWorld: n } = this.pendingUpdate;
        this.pendingUpdate = null, this.updateInternal({ scene: i, originToWorld: n, viewToWorld: e });
      }
    }, 1));
  }
  updateInternal({
    scene: A,
    originToWorld: e,
    viewToWorld: s
  }) {
    var C;
    if (!this.canAllocAccumulator())
      return !1;
    e || (e = this.active.toWorld), s = s ?? e.clone();
    const i = this.time ?? this.clock.getElapsedTime(), n = i - (this.lastUpdateTime ?? i);
    this.lastUpdateTime = i;
    const a = this.active.mapping.reduce((E, h) => (E.set(h.node, h), E), /* @__PURE__ */ new Map()), { generators: r, globalEdits: g } = this.compileScene(A);
    for (const E of r)
      (C = E.frameUpdate) == null || C.call(E, {
        object: E,
        time: i,
        deltaTime: n,
        viewToWorld: s,
        globalEdits: g
      });
    for (const E of r) {
      const h = a.get(E), c = E.generator ? E.numSplats : 0;
      (E.generator !== (h == null ? void 0 : h.generator) || c !== (h == null ? void 0 : h.count)) && E.updateVersion();
    }
    const B = !Pt({
      matrix1: e,
      matrix2: this.active.toWorld,
      maxDistance: this.originDistance
    }) || r.length !== a.size || r.some((E) => {
      var h;
      return E.version !== ((h = a.get(E)) == null ? void 0 : h.version);
    });
    let o = null;
    if (B) {
      if (o = this.maybeAllocAccumulator(), !o)
        throw new Error("Unreachable");
      const E = !Pt({
        matrix1: e,
        matrix2: this.active.toWorld,
        maxDistance: 1e-5,
        minCoorient: 0.99999
      }), c = r.map((p, f) => {
        const N = a.get(p);
        return N ? (
          // Sort by version deltas then by previous ordering in the mapping,
          // attempting to keep unchanging generators near the front
          // to improve our chances of avoiding a re-generation.
          [p.version - N.version, N.base, p]
        ) : [Number.POSITIVE_INFINITY, p.version, p];
      }).sort((p, f) => p[0] !== f[0] ? p[0] - f[0] : p[1] - f[1]).map(([p, f, N]) => N), l = c.map((p) => p.numSplats), { maxSplats: u, mapping: w } = o.splats.generateMapping(l), d = c.map((p, f) => {
        const { base: N, count: m } = w[f];
        return {
          node: p,
          generator: p.generator,
          version: p.version,
          base: N,
          count: m
        };
      });
      e.clone().invert().decompose(
        this.translateToAccumulator.value,
        this.rotateToAccumulator.value,
        new Q.Vector3()
      ), o.ensureGenerate(u), o.generateSplats({
        renderer: this.renderer,
        modifier: this.modifier,
        generators: d,
        forceUpdate: E,
        originToWorld: e
      }), o.splatsVersion = this.active.splatsVersion + 1;
      const y = o.hasCorrespondence(this.active);
      o.mappingVersion = this.active.mappingVersion + (y ? 0 : 1), this.releaseAccumulator(this.active), this.active = o, this.prepareViewpoint();
    }
    return setTimeout(() => {
      for (const E of this.autoViewpoints)
        E.autoPoll({ accumulator: o ?? void 0 });
    }, 1), !0;
  }
  compileScene(A) {
    const e = [];
    A.traverse((i) => {
      i instanceof ge && e.push(i);
    });
    const s = /* @__PURE__ */ new Set();
    return A.traverseVisible((i) => {
      if (i instanceof $t) {
        let n = i.parent;
        for (; n != null && !(n instanceof VA); )
          n = n.parent;
        n == null && s.add(i);
      }
    }), { generators: e, globalEdits: Array.from(s) };
  }
  // Renders out the scene to an environment map that can be used for
  // Image-based lighting or similar applications. First optionally updates Gsplats,
  // sorts them with respect to the provided worldCenter, renders 6 cube faces,
  // then pre-filters them using THREE.PMREMGenerator and returns a THREE.Texture
  // that can assigned directly to a THREE.MeshStandardMaterial.envMap property.
  async renderEnvMap({
    renderer: A,
    scene: e,
    worldCenter: s,
    size: i = 256,
    near: n = 0.1,
    far: a = 1e3,
    hideObjects: r = [],
    update: g = !1
  }) {
    var E, h;
    if (this.envViewpoint || (this.envViewpoint = this.newViewpoint({ sort360: !0 })), !wA.cubeRender || wA.cubeRender.target.width !== i || wA.cubeRender.near !== n || wA.cubeRender.far !== a) {
      wA.cubeRender && wA.cubeRender.target.dispose();
      const c = new Q.WebGLCubeRenderTarget(i, {
        format: Q.RGBAFormat,
        generateMipmaps: !0,
        minFilter: Q.LinearMipMapLinearFilter
      }), l = new Q.CubeCamera(n, a, c);
      wA.cubeRender = { target: c, camera: l, near: n, far: a };
    }
    wA.pmrem || (wA.pmrem = new Q.PMREMGenerator(A ?? this.renderer));
    const I = new Q.Matrix4().setPosition(s);
    await ((E = this.envViewpoint) == null ? void 0 : E.prepare({ scene: e, viewToWorld: I, update: g }));
    const { target: B, camera: o } = wA.cubeRender;
    o.position.copy(s);
    const C = /* @__PURE__ */ new Map();
    for (const c of r)
      C.set(c, c.visible), c.visible = !1;
    this.prepareViewpoint(this.envViewpoint), o.update(A ?? this.renderer, e), this.prepareViewpoint(this.defaultView);
    for (const [c, l] of C.entries())
      c.visible = l;
    return (h = wA.pmrem) == null ? void 0 : h.fromCubemap(B.texture).texture;
  }
  // Utility function to recursively set the envMap property for any
  // THREE.MeshStandardMaterial within the subtree of root.
  recurseSetEnvMap(A, e) {
    A.traverse((s) => {
      if (s instanceof Q.Mesh)
        if (Array.isArray(s.material))
          for (const i of s.material)
            i instanceof Q.MeshStandardMaterial && (i.envMap = e);
        else
          s.material instanceof Q.MeshStandardMaterial && (s.material.envMap = e);
    });
  }
  // Utility function that helps extract the Gsplat RGBA values from a
  // SplatGenerator, including the result of any real-time RGBA SDF edits applied
  // to a SplatMesh. This effectively "bakes" any computed RGBA values, which can
  // now be used as a pipeline input via SplatMesh.splatRgba to inject these
  // baked values into the Gsplat data.
  getRgba({
    generator: A,
    rgba: e
  }) {
    const s = this.active.mapping.find(({ node: i }) => i === A);
    if (!s)
      throw new Error("Generator not found");
    return e = e ?? new Ge(), e.fromPackedSplats({
      packedSplats: this.active.splats,
      base: s.base,
      count: s.count,
      renderer: this.renderer
    }), e;
  }
  // Utility function that builds on getRgba({ generator }) and additionally
  // reads back the RGBA values to the CPU in a Uint8Array with packed RGBA
  // in that byte order.
  async readRgba({
    generator: A,
    rgba: e
  }) {
    return e = this.getRgba({ generator: A, rgba: e }), e.read();
  }
};
wA.cubeRender = null, wA.pmrem = null;
let se = wA;
const ns = new Re(new Uint32Array(1), 0);
SA(
  { packedSplats: vt, index: "int" },
  { gsplat: P },
  ({ packedSplats: t, index: A }) => {
    if (!t || !A)
      throw new Error("Invalid input");
    return { gsplat: kt(t, A) };
  }
);
function AC(t) {
  if (t.length === 0)
    return null;
  const A = new Q.Vector3(), e = new Q.Quaternion(), s = new Q.Vector3(), i = [], n = [];
  for (const a of t)
    a.decompose(A, e, s), i.push(A), n.push(e);
  return new Q.Matrix4().compose(
    fi(i),
    mi(n),
    new Q.Vector3(1, 1, 1)
  );
}
function tC(t, A, e) {
  const s = Math.floor(t.length / 32);
  if (s * 32 !== t.length)
    throw new Error("Invalid .splat file size");
  const i = new Float32Array(t.buffer);
  for (let n = 0; n < s; ++n) {
    const a = n * 32, r = n * 8, g = i[r + 0], I = i[r + 1], B = i[r + 2], o = i[r + 3], C = i[r + 4], E = i[r + 5], h = t[a + 24] / 255, c = t[a + 25] / 255, l = t[a + 26] / 255, u = t[a + 27] / 255, w = (t[a + 28] - 128) / 128, d = (t[a + 29] - 128) / 128, y = (t[a + 30] - 128) / 128, p = (t[a + 31] - 128) / 128;
    e(
      n,
      g,
      I,
      B,
      o,
      C,
      E,
      d,
      y,
      p,
      w,
      u,
      h,
      c,
      l
    );
  }
}
const as = {
  0: {
    bytesPerCenter: 12,
    bytesPerScale: 12,
    bytesPerRotation: 16,
    bytesPerColor: 4,
    bytesPerSphericalHarmonicsComponent: 4,
    scaleOffsetBytes: 12,
    rotationOffsetBytes: 24,
    colorOffsetBytes: 40,
    sphericalHarmonicsOffsetBytes: 44,
    scaleRange: 1
  },
  1: {
    bytesPerCenter: 6,
    bytesPerScale: 6,
    bytesPerRotation: 8,
    bytesPerColor: 4,
    bytesPerSphericalHarmonicsComponent: 2,
    scaleOffsetBytes: 6,
    rotationOffsetBytes: 12,
    colorOffsetBytes: 20,
    sphericalHarmonicsOffsetBytes: 24,
    scaleRange: 32767
  },
  2: {
    bytesPerCenter: 6,
    bytesPerScale: 6,
    bytesPerRotation: 8,
    bytesPerColor: 4,
    bytesPerSphericalHarmonicsComponent: 1,
    scaleOffsetBytes: 6,
    rotationOffsetBytes: 12,
    colorOffsetBytes: 20,
    sphericalHarmonicsOffsetBytes: 24,
    scaleRange: 32767
  }
}, eC = {
  0: 0,
  1: 9,
  2: 24,
  3: 45
};
function sC(t, A, e, s) {
  var E;
  let a = 0;
  const r = new DataView(t.buffer, a, 4096);
  a += 4096;
  const g = r.getUint8(0), I = r.getUint8(1);
  if (g !== 0 || I < 1)
    throw new Error(
      `Unsupported .ksplat version: ${g}.${I}`
    );
  const B = r.getUint32(4, !0);
  r.getUint32(16, !0);
  const o = r.getUint16(20, !0);
  if (o < 0 || o > 2)
    throw new Error(`Invalid .ksplat compression level: ${o}`);
  r.getFloat32(36, !0), r.getFloat32(40, !0);
  let C = 4096 + B * 1024;
  for (let h = 0; h < B; ++h) {
    const c = new DataView(t.buffer, a, 1024);
    a += 1024;
    const l = c.getUint32(0, !0), u = c.getUint32(4, !0), w = c.getUint32(8, !0), d = c.getUint32(12, !0), y = c.getFloat32(16, !0), p = c.getUint16(20, !0), f = (c.getUint32(24, !0) || ((E = as[o]) == null ? void 0 : E.scaleRange)) ?? 1, N = c.getUint32(32, !0), m = N * w, D = c.getUint32(36, !0), U = D * 4, x = p * d + U, M = c.getUint16(40, !0), b = eC[M], {
      bytesPerCenter: F,
      bytesPerScale: G,
      bytesPerRotation: R,
      bytesPerColor: J,
      bytesPerSphericalHarmonicsComponent: $,
      scaleOffsetBytes: L,
      rotationOffsetBytes: z,
      colorOffsetBytes: Z,
      sphericalHarmonicsOffsetBytes: iA
    } = as[o], AA = F + G + R + J + b * $, tA = AA * u, W = tA + x, O = M >= 1 ? new Float32Array(3 * 3) : void 0, v = M >= 2 ? new Float32Array(5 * 3) : void 0, pA = M >= 3 ? new Float32Array(7 * 3) : void 0, nA = y / 2 / f, yA = C + U, DA = C + x, Y = new DataView(
      t.buffer,
      DA,
      tA
    ), EA = new Float32Array(
      t.buffer,
      yA,
      d * 3
    ), RA = new Uint32Array(
      t.buffer,
      C,
      D
    );
    let dA = N, UA = m;
    for (let cA = 0; cA < l; ++cA) {
      const T = cA * AA;
      let aA;
      if (cA < m)
        aA = Math.floor(cA / w);
      else {
        const We = RA[dA - N];
        cA >= UA + We && (dA += 1, UA += We), aA = dA;
      }
      const KA = o === 0 ? Y.getFloat32(T + 0, !0) : (Y.getUint16(T + 0, !0) - f) * nA + EA[3 * aA + 0], oe = o === 0 ? Y.getFloat32(T + 4, !0) : (Y.getUint16(T + 2, !0) - f) * nA + EA[3 * aA + 1], Ie = o === 0 ? Y.getFloat32(T + 8, !0) : (Y.getUint16(T + 4, !0) - f) * nA + EA[3 * aA + 2], Be = o === 0 ? Y.getFloat32(T + L + 0, !0) : MA(Y.getUint16(T + L + 0, !0)), Qe = o === 0 ? Y.getFloat32(T + L + 4, !0) : MA(Y.getUint16(T + L + 2, !0)), Ce = o === 0 ? Y.getFloat32(T + L + 8, !0) : MA(Y.getUint16(T + L + 4, !0)), Ee = o === 0 ? Y.getFloat32(T + z + 0, !0) : MA(
        Y.getUint16(T + z + 0, !0)
      ), ce = o === 0 ? Y.getFloat32(T + z + 4, !0) : MA(
        Y.getUint16(T + z + 2, !0)
      ), he = o === 0 ? Y.getFloat32(T + z + 8, !0) : MA(
        Y.getUint16(T + z + 4, !0)
      ), le = o === 0 ? Y.getFloat32(T + z + 12, !0) : MA(
        Y.getUint16(T + z + 6, !0)
      ), ue = Y.getUint8(T + Z + 0) / 255, Kr = Y.getUint8(T + Z + 1) / 255, qr = Y.getUint8(T + Z + 2) / 255, zr = Y.getUint8(T + Z + 3) / 255;
      e(
        cA,
        KA,
        oe,
        Ie,
        Be,
        Qe,
        Ce,
        ce,
        he,
        le,
        Ee,
        zr,
        ue,
        Kr,
        qr
      ), M >= 1 && O && (s == null || s(cA, O, v, pA));
    }
    C += W;
  }
}
class iC {
  constructor({ fileBytes: A }) {
    this.fileBytes = A instanceof ArrayBuffer ? new Uint8Array(A) : A, this.reader = new Fi({ fileBytes: this.fileBytes });
    const e = new DataView(this.reader.read(16).buffer);
    if (e.getUint32(0, !0) !== 1347635022)
      throw new Error("Invalid SPZ file");
    if (this.version = e.getUint32(4, !0), this.version < 1 || this.version > 2)
      throw new Error(`Unsupported SPZ version: ${this.version}`);
    this.numSplats = e.getUint32(8, !0), this.shDegree = e.getUint8(12), this.fractionalBits = e.getUint8(13), this.flags = e.getUint8(14), this.flagAntiAlias = (this.flags & 1) !== 0, this.reserved = e.getUint8(15), this.parsed = !1;
  }
  parseSplats(A, e, s, i, n, a) {
    if (this.parsed)
      throw new Error("SPZ file already parsed");
    if (this.parsed = !0, this.version === 1) {
      const r = this.reader.read(this.numSplats * 3 * 2), g = new Uint16Array(r.buffer);
      for (let I = 0; I < this.numSplats; I++) {
        const B = I * 3, o = MA(g[B]), C = MA(g[B + 1]), E = MA(g[B + 2]);
        A == null || A(I, o, C, E);
      }
    } else if (this.version === 2) {
      const r = 1 << this.fractionalBits, g = this.reader.read(this.numSplats * 3 * 3);
      for (let I = 0; I < this.numSplats; I++) {
        const B = I * 9, o = ((g[B + 2] << 24 | g[B + 1] << 16 | g[B] << 8) >> 8) / r, C = ((g[B + 5] << 24 | g[B + 4] << 16 | g[B + 3] << 8) >> 8) / r, E = ((g[B + 8] << 24 | g[B + 7] << 16 | g[B + 6] << 8) >> 8) / r;
        A == null || A(I, o, C, E);
      }
    } else
      throw new Error("Unreachable");
    {
      const r = this.reader.read(this.numSplats);
      for (let g = 0; g < this.numSplats; g++)
        e == null || e(g, r[g] / 255);
    }
    {
      const r = this.reader.read(this.numSplats * 3), g = br / 0.15;
      for (let I = 0; I < this.numSplats; I++) {
        const B = I * 3, o = (r[B] / 255 - 0.5) * g + 0.5, C = (r[B + 1] / 255 - 0.5) * g + 0.5, E = (r[B + 2] / 255 - 0.5) * g + 0.5;
        s == null || s(I, o, C, E);
      }
    }
    {
      const r = this.reader.read(this.numSplats * 3);
      for (let g = 0; g < this.numSplats; g++) {
        const I = g * 3, B = Math.exp(r[I] / 16 - 10), o = Math.exp(r[I + 1] / 16 - 10), C = Math.exp(r[I + 2] / 16 - 10);
        i == null || i(g, B, o, C);
      }
    }
    {
      const r = this.reader.read(this.numSplats * 3);
      for (let g = 0; g < this.numSplats; g++) {
        const I = g * 3, B = r[I] / 127.5 - 1, o = r[I + 1] / 127.5 - 1, C = r[I + 2] / 127.5 - 1, E = Math.sqrt(
          Math.max(0, 1 - B * B - o * o - C * C)
        );
        n == null || n(g, B, o, C, E);
      }
    }
    if (a && this.shDegree >= 1) {
      const r = new Float32Array(9), g = this.shDegree >= 2 ? new Float32Array(5 * 3) : void 0, I = this.shDegree >= 3 ? new Float32Array(7 * 3) : void 0, B = this.reader.read(
        this.numSplats * Ur[this.shDegree] * 3
      );
      let o = 0;
      for (let C = 0; C < this.numSplats; C++) {
        for (let E = 0; E < 9; ++E)
          r[E] = (B[o + E] - 128) / 128;
        if (o += 9, g) {
          for (let E = 0; E < 15; ++E)
            g[E] = (B[o + E] - 128) / 128;
          o += 15;
        }
        if (I) {
          for (let E = 0; E < 21; ++E)
            I[E] = (B[o + E] - 128) / 128;
          o += 21;
        }
        a == null || a(C, r, g, I);
      }
    }
  }
}
const Ur = { 1: 3, 2: 8, 3: 15 }, br = 0.28209479177387814, nC = 1347635022, aC = 2, rC = 1;
class WA {
  constructor({
    numSplats: A,
    shDegree: e,
    fractionalBits: s = 12,
    flagAntiAlias: i = !0
  }) {
    this.clippedCount = 0;
    const n = 19 + (e >= 1 ? 9 : 0) + (e >= 2 ? 15 : 0) + (e >= 3 ? 21 : 0), a = 16 + A * n;
    this.buffer = new ArrayBuffer(a), this.view = new DataView(this.buffer), this.view.setUint32(0, nC, !0), this.view.setUint32(4, aC, !0), this.view.setUint32(8, A, !0), this.view.setUint8(12, e), this.view.setUint8(13, s), this.view.setUint8(14, i ? rC : 0), this.view.setUint8(15, 0), this.numSplats = A, this.shDegree = e, this.fractionalBits = s, this.fraction = 1 << s, this.flagAntiAlias = i;
  }
  setCenter(A, e, s, i) {
    const n = Math.round(e * this.fraction), a = Math.max(-8388607, Math.min(8388607, n)), r = Math.round(s * this.fraction), g = Math.max(-8388607, Math.min(8388607, r)), I = Math.round(i * this.fraction), B = Math.max(-8388607, Math.min(8388607, I));
    (n !== a || r !== g || I !== B) && (this.clippedCount += 1);
    const E = 16 + A * 9;
    this.view.setUint8(E, a & 255), this.view.setUint8(E + 1, a >> 8 & 255), this.view.setUint8(E + 2, a >> 16 & 255), this.view.setUint8(E + 3, g & 255), this.view.setUint8(E + 4, g >> 8 & 255), this.view.setUint8(E + 5, g >> 16 & 255), this.view.setUint8(E + 6, B & 255), this.view.setUint8(E + 7, B >> 8 & 255), this.view.setUint8(E + 8, B >> 16 & 255);
  }
  setAlpha(A, e) {
    const s = 16 + this.numSplats * 9 + A;
    this.view.setUint8(
      s,
      Math.max(0, Math.min(255, Math.round(e * 255)))
    );
  }
  static scaleRgb(A) {
    const e = ((A - 0.5) / (br / 0.15) + 0.5) * 255;
    return Math.max(0, Math.min(255, Math.round(e)));
  }
  setRgb(A, e, s, i) {
    const n = 16 + this.numSplats * 10 + A * 3;
    this.view.setUint8(n, WA.scaleRgb(e)), this.view.setUint8(n + 1, WA.scaleRgb(s)), this.view.setUint8(n + 2, WA.scaleRgb(i));
  }
  setScale(A, e, s, i) {
    const n = 16 + this.numSplats * 13 + A * 3;
    this.view.setUint8(
      n,
      Math.max(0, Math.min(255, Math.round((Math.log(e) + 10) * 16)))
    ), this.view.setUint8(
      n + 1,
      Math.max(0, Math.min(255, Math.round((Math.log(s) + 10) * 16)))
    ), this.view.setUint8(
      n + 2,
      Math.max(0, Math.min(255, Math.round((Math.log(i) + 10) * 16)))
    );
  }
  setQuat(A, e, s, i, n) {
    const a = 16 + this.numSplats * 16 + A * 3, r = n < 0;
    this.view.setUint8(
      a,
      Math.max(
        0,
        Math.min(255, Math.round(((r ? -e : e) + 1) * 127.5))
      )
    ), this.view.setUint8(
      a + 1,
      Math.max(
        0,
        Math.min(255, Math.round(((r ? -s : s) + 1) * 127.5))
      )
    ), this.view.setUint8(
      a + 2,
      Math.max(
        0,
        Math.min(255, Math.round(((r ? -i : i) + 1) * 127.5))
      )
    );
  }
  static quantizeSh(A, e) {
    const s = Math.round(A * 128) + 128, i = 1 << 8 - e, n = Math.floor((s + i / 2) / i) * i;
    return Math.max(0, Math.min(255, n));
  }
  setSh(A, e, s, i) {
    const n = Ur[this.shDegree] || 0, a = 16 + this.numSplats * 19 + A * n * 3;
    for (let r = 0; r < 9; ++r)
      this.view.setUint8(a + r, WA.quantizeSh(e[r], 5));
    if (s) {
      const r = a + 9;
      for (let g = 0; g < 15; ++g)
        this.view.setUint8(r + g, WA.quantizeSh(s[g], 4));
      if (i) {
        const g = r + 15;
        for (let I = 0; I < 21; ++I)
          this.view.setUint8(g + I, WA.quantizeSh(i[I], 4));
      }
    }
  }
  async finalize() {
    const A = new Uint8Array(this.buffer), s = new ReadableStream({
      async start(a) {
        a.enqueue(A), a.close();
      }
    }).pipeThrough(new CompressionStream("gzip")), n = await new Response(s).arrayBuffer();
    return console.log(
      "Compressed",
      A.length,
      "bytes to",
      n.byteLength,
      "bytes"
    ), new Uint8Array(n);
  }
}
async function zC(t) {
  var B, o, C;
  const A = new qQ(), {
    inputs: e,
    clipXyz: s,
    maxSh: i,
    fractionalBits: n = 12,
    opacityThreshold: a
  } = t;
  for (const E of e) {
    let h = function(m) {
      return m.multiplyScalar(d), m.applyQuaternion(y), m.add(p), m;
    }, c = function(m) {
      return m.multiplyScalar(d), m;
    }, l = function(m) {
      return m.premultiply(y), m;
    }, u = function(m) {
      return !f || f.containsPoint(m);
    }, w = function(m) {
      return a !== void 0 ? m >= a : !0;
    };
    const d = ((B = E.transform) == null ? void 0 : B.scale) ?? 1, y = new Q.Quaternion().fromArray(
      ((o = E.transform) == null ? void 0 : o.quaternion) ?? [0, 0, 0, 1]
    ), p = new Q.Vector3().fromArray(
      ((C = E.transform) == null ? void 0 : C.translate) ?? [0, 0, 0]
    ), f = s ? new Q.Box3(
      new Q.Vector3().fromArray(s.min),
      new Q.Vector3().fromArray(s.max)
    ) : void 0;
    let N = E.fileType;
    switch (N || (N = Nr(E.fileBytes), !N && E.pathOrUrl && (N = Fr(E.pathOrUrl))), N) {
      case xt.PLY: {
        const m = new Ae({ fileBytes: E.fileBytes });
        await m.parseHeader();
        let D = null;
        m.parseSplats(
          (U, x, M, b, F, G, R, J, $, L, z, Z, iA, AA, tA) => {
            const W = h(new Q.Vector3(x, M, b));
            if (u(W) && w(Z)) {
              D = A.pushSplat(), A.setCenter(D, W.x, W.y, W.z);
              const O = c(
                new Q.Vector3(F, G, R)
              );
              A.setScale(D, O.x, O.y, O.z);
              const v = l(
                new Q.Quaternion(J, $, L, z)
              );
              A.setQuaternion(
                D,
                v.x,
                v.y,
                v.z,
                v.w
              ), A.setOpacity(D, Z), A.setColor(D, iA, AA, tA);
            } else
              D = null;
          },
          (U, x, M, b) => {
            x && D !== null && A.setSh1(D, x), M && D !== null && A.setSh2(D, M), b && D !== null && A.setSh3(D, b);
          }
        );
        break;
      }
      case xt.SPZ: {
        const m = new iC({ fileBytes: E.fileBytes }), D = new Int32Array(m.numSplats);
        D.fill(-1);
        const U = new Float32Array(m.numSplats * 3), x = new Q.Vector3();
        m.parseSplats(
          (M, b, F, G) => {
            const R = h(new Q.Vector3(b, F, G));
            U[M * 3] = R.x, U[M * 3 + 1] = R.y, U[M * 3 + 2] = R.z;
          },
          (M, b) => {
            x.fromArray(U, M * 3), u(x) && w(b) && (D[M] = A.pushSplat(), A.setCenter(D[M], x.x, x.y, x.z), A.setOpacity(D[M], b));
          },
          (M, b, F, G) => {
            D[M] >= 0 && A.setColor(D[M], b, F, G);
          },
          (M, b, F, G) => {
            if (D[M] >= 0) {
              const R = c(
                new Q.Vector3(b, F, G)
              );
              A.setScale(D[M], R.x, R.y, R.z);
            }
          },
          (M, b, F, G, R) => {
            if (D[M] >= 0) {
              const J = l(
                new Q.Quaternion(b, F, G, R)
              );
              A.setQuaternion(
                D[M],
                J.x,
                J.y,
                J.z,
                J.w
              );
            }
          },
          (M, b, F, G) => {
            D[M] >= 0 && (A.setSh1(D[M], b), F && A.setSh2(D[M], F), G && A.setSh3(D[M], G));
          }
        );
        break;
      }
      case xt.SPLAT:
        tC(
          E.fileBytes,
          (m) => {
          },
          (m, D, U, x, M, b, F, G, R, J, $, L, z, Z, iA) => {
            const AA = h(new Q.Vector3(D, U, x));
            if (u(AA) && w(L)) {
              const tA = A.pushSplat();
              A.setCenter(tA, AA.x, AA.y, AA.z);
              const W = c(
                new Q.Vector3(M, b, F)
              );
              A.setScale(tA, W.x, W.y, W.z);
              const O = l(
                new Q.Quaternion(G, R, J, $)
              );
              A.setQuaternion(
                tA,
                O.x,
                O.y,
                O.z,
                O.w
              ), A.setOpacity(tA, L), A.setColor(tA, z, Z, iA);
            }
          }
        );
        break;
      case xt.KSPLAT: {
        let m = null;
        sC(
          E.fileBytes,
          (D) => {
          },
          (D, U, x, M, b, F, G, R, J, $, L, z, Z, iA, AA) => {
            const tA = h(new Q.Vector3(U, x, M));
            if (u(tA) && w(z)) {
              m = A.pushSplat(), A.setCenter(m, tA.x, tA.y, tA.z);
              const W = c(
                new Q.Vector3(b, F, G)
              );
              A.setScale(m, W.x, W.y, W.z);
              const O = l(
                new Q.Quaternion(R, J, $, L)
              );
              A.setQuaternion(
                m,
                O.x,
                O.y,
                O.z,
                O.w
              ), A.setOpacity(m, z), A.setColor(m, Z, iA, AA);
            } else
              m = null;
          },
          (D, U, x, M) => {
            m !== null && (A.setSh1(m, U), x && A.setSh2(m, x), M && A.setSh3(m, M));
          }
        );
        break;
      }
      default:
        throw new Error(`transcodeSpz not implemented for ${N}`);
    }
  }
  const r = Math.min(
    i ?? 3,
    A.sh3 ? 3 : A.sh2 ? 2 : A.sh1 ? 1 : 0
  ), g = new WA({
    numSplats: A.numSplats,
    shDegree: r,
    fractionalBits: n,
    flagAntiAlias: !0
  });
  for (let E = 0; E < A.numSplats; ++E) {
    const h = E * 3, c = E * 4;
    g.setCenter(
      E,
      A.centers[h],
      A.centers[h + 1],
      A.centers[h + 2]
    ), g.setScale(
      E,
      A.scales[h],
      A.scales[h + 1],
      A.scales[h + 2]
    ), g.setQuat(
      E,
      A.quaternions[c],
      A.quaternions[c + 1],
      A.quaternions[c + 2],
      A.quaternions[c + 3]
    ), g.setAlpha(E, A.opacities[E]), g.setRgb(
      E,
      A.colors[h],
      A.colors[h + 1],
      A.colors[h + 2]
    ), A.sh1 && r >= 1 && g.setSh(
      E,
      A.sh1.slice(E * 9, (E + 1) * 9),
      r >= 2 && A.sh2 ? A.sh2.slice(E * 15, (E + 1) * 15) : void 0,
      r >= 3 && A.sh3 ? A.sh3.slice(E * 21, (E + 1) * 21) : void 0
    );
  }
  return { fileBytes: await g.finalize(), clippedCount: g.clippedCount };
}
class _C {
  constructor(A) {
    this.mesh = A.mesh, this.numSplats = A.numSplats ?? this.mesh.numSplats;
    const { width: e, height: s, depth: i, maxSplats: n } = mA(this.numSplats);
    this.skinData = new Uint16Array(n * 4), this.skinTexture = new Q.DataArrayTexture(
      this.skinData,
      e,
      s,
      i
    ), this.skinTexture.format = Q.RGBAIntegerFormat, this.skinTexture.type = Q.UnsignedShortType, this.skinTexture.internalFormat = "RGBA16UI", this.skinTexture.needsUpdate = !0, this.numBones = A.numBones ?? 256, this.boneData = new Float32Array(this.numBones * 16), this.boneTexture = new Q.DataTexture(
      this.boneData,
      4,
      this.numBones,
      Q.RGBAFormat,
      Q.FloatType
    ), this.boneTexture.internalFormat = "RGBA32F", this.boneTexture.needsUpdate = !0, this.uniform = new k({
      key: "skinning",
      type: vr,
      globals: () => [Lr],
      value: {
        numSplats: this.numSplats,
        numBones: this.numBones,
        skinTexture: this.skinTexture,
        boneTexture: this.boneTexture
      }
    });
  }
  // Apply the skeletal animation to a Gsplat in a dyno program.
  modify(A) {
    return oC(A, this.uniform);
  }
  // Set the "rest" pose for a bone with position and quaternion orientation.
  setRestQuatPos(A, e, s) {
    const i = A * 16;
    this.boneData[i + 0] = e.x, this.boneData[i + 1] = e.y, this.boneData[i + 2] = e.z, this.boneData[i + 3] = e.w, this.boneData[i + 4] = s.x, this.boneData[i + 5] = s.y, this.boneData[i + 6] = s.z, this.boneData[i + 7] = 0, this.boneData[i + 8] = 0, this.boneData[i + 9] = 0, this.boneData[i + 10] = 0, this.boneData[i + 11] = 1, this.boneData[i + 12] = 0, this.boneData[i + 13] = 0, this.boneData[i + 14] = 0, this.boneData[i + 15] = 0;
  }
  // Set the "current" position and orientation of a bone.
  setBoneQuatPos(A, e, s) {
    const i = A * 16, n = new Q.Quaternion(
      this.boneData[i + 0],
      this.boneData[i + 1],
      this.boneData[i + 2],
      this.boneData[i + 3]
    ), a = new Q.Vector3(
      this.boneData[i + 4],
      this.boneData[i + 5],
      this.boneData[i + 6]
    ), r = n.clone().invert(), g = s.clone().sub(a);
    g.applyQuaternion(r), r.multiply(e);
    const I = new Q.Quaternion(
      g.x,
      g.y,
      g.z,
      0
    ).multiply(n);
    this.boneData[i + 8] = r.x, this.boneData[i + 9] = r.y, this.boneData[i + 10] = r.z, this.boneData[i + 11] = r.w, this.boneData[i + 12] = 0.5 * I.x, this.boneData[i + 13] = 0.5 * I.y, this.boneData[i + 14] = 0.5 * I.z, this.boneData[i + 15] = 0.5 * I.w;
  }
  // Set up to 4 bone indices and weights for a Gsplat. For fewer than 4 bones,
  // you can set the remaining weights to 0 (and index=0).
  setSplatBones(A, e, s) {
    const i = A * 4;
    this.skinData[i + 0] = Math.min(255, Math.max(0, Math.round(s.x * 255))) + (e.x << 8), this.skinData[i + 1] = Math.min(255, Math.max(0, Math.round(s.y * 255))) + (e.y << 8), this.skinData[i + 2] = Math.min(255, Math.max(0, Math.round(s.z * 255))) + (e.z << 8), this.skinData[i + 3] = Math.min(255, Math.max(0, Math.round(s.w * 255))) + (e.w << 8);
  }
  // Call this to indicate that the bones have changed and the Gsplats need to be
  // re-generated with updated skinning.
  updateBones() {
    this.boneTexture.needsUpdate = !0, this.mesh.needsUpdate = !0;
  }
}
const vr = { type: "GsplatSkinning" }, Lr = CA(`
  struct GsplatSkinning {
    int numSplats;
    int numBones;
    usampler2DArray skinTexture;
    sampler2D boneTexture;
  };
`), gC = CA(`
  void applyGsplatSkinning(
    int numSplats, int numBones,
    usampler2DArray skinTexture, sampler2D boneTexture,
    int splatIndex, inout vec3 center, inout vec4 quaternion
  ) {
    if ((splatIndex < 0) || (splatIndex >= numSplats)) {
      return;
    }

    uvec4 skinData = texelFetch(skinTexture, splatTexCoord(splatIndex), 0);

    float weights[4];
    weights[0] = float(skinData.x & 0xffu) / 255.0;
    weights[1] = float(skinData.y & 0xffu) / 255.0;
    weights[2] = float(skinData.z & 0xffu) / 255.0;
    weights[3] = float(skinData.w & 0xffu) / 255.0;

    uint boneIndices[4];
    boneIndices[0] = (skinData.x >> 8u) & 0xffu;
    boneIndices[1] = (skinData.y >> 8u) & 0xffu;
    boneIndices[2] = (skinData.z >> 8u) & 0xffu;
    boneIndices[3] = (skinData.w >> 8u) & 0xffu;

    vec4 quat = vec4(0.0);
    vec4 dual = vec4(0.0);
    for (int i = 0; i < 4; i++) {
      if (weights[i] > 0.0) {
        int boneIndex = int(boneIndices[i]);
        vec4 boneQuat = vec4(0.0, 0.0, 0.0, 1.0);
        vec4 boneDual = vec4(0.0);
        if (boneIndex < numBones) {
          boneQuat = texelFetch(boneTexture, ivec2(2, boneIndex), 0);
          boneDual = texelFetch(boneTexture, ivec2(3, boneIndex), 0);
        }

        if ((i > 0) && (dot(quat, boneQuat) < 0.0)) {
          // Flip sign if next blend is pointing in the opposite direction
          boneQuat = -boneQuat;
          boneDual = -boneDual;
        }
        quat += weights[i] * boneQuat;
        dual += weights[i] * boneDual;
      }
    }

    // Normalize dual quaternion
    float norm = length(quat);
    quat /= norm;
    dual /= norm;
    vec3 translate = vec3(
      2.0 * (-dual.w * quat.x + dual.x * quat.w - dual.y * quat.z + dual.z * quat.y),
      2.0 * (-dual.w * quat.y + dual.x * quat.z + dual.y * quat.w - dual.z * quat.x),
      2.0 * (-dual.w * quat.z - dual.x * quat.y + dual.y * quat.x + dual.z * quat.w)
    );

    center = quatVec(quat, center) + translate;
    quaternion = quatQuat(quat, quaternion);
  }
`);
function oC(t, A) {
  return new V({
    inTypes: { gsplat: P, skinning: vr },
    outTypes: { gsplat: P },
    globals: () => [Lr, gC],
    inputs: { gsplat: t, skinning: A },
    statements: ({ inputs: s, outputs: i }) => {
      const { skinning: n } = s, { gsplat: a } = i;
      return GA(`
        ${a} = ${s.gsplat};
        if (isGsplatActive(${a}.flags)) {
          applyGsplatSkinning(
            ${n}.numSplats, ${n}.numBones,
            ${n}.skinTexture, ${n}.boneTexture,
            ${a}.index, ${a}.center, ${a}.quaternion
          );
        }
      `);
    }
  }).outputs.gsplat;
}
function VC({
  // PackedSplats object to add splats to
  splats: t,
  // min and max box extents of the grid
  extents: A,
  // step size along each grid axis
  stepSize: e = 1,
  // spherical radius of each Gsplat
  pointRadius: s = 0.01,
  // relative size of the "shadow copy" of each Gsplat placed behind it
  pointShadowScale: i = 2,
  // Gsplat opacity
  opacity: n = 1,
  // Gsplat color (THREE.Color) or function to set color for position:
  // ((THREE.Color, THREE.Vector3) => void) (default: RGB-modulated grid)
  color: a
}) {
  const g = new Q.Vector3(), I = new Q.Vector3(), B = new Q.Quaternion(0, 0, 0, 1);
  a == null && (a = (C, E) => C.set(
    0.55 + 0.45 * Math.cos(E.x * 1),
    0.55 + 0.45 * Math.cos(E.y * 1),
    0.55 + 0.45 * Math.cos(E.z * 1)
  ));
  const o = new Q.Color();
  for (let C = A.min.z; C < A.max.z + 1e-6; C += e)
    for (let E = A.min.y; E < A.max.y + 1e-6; E += e)
      for (let h = A.min.x; h < A.max.x + 1e-6; h += e) {
        g.set(h, E, C);
        for (let c = 0; c < 2; ++c)
          I.setScalar(s * (c ? 1 : i)), c ? typeof a == "function" ? a(o, g) : o.copy(a) : o.setScalar(0), t.pushSplat(g, I, B, n, o);
      }
}
function ZC({
  // PackedSplats object to add splats to
  splats: t,
  // scale (Gsplat scale along axis)
  scale: A = 0.25,
  // radius of the axes (Gsplat scale orthogonal to axis)
  axisRadius: e = 75e-4,
  // relative size of the "shadow copy" of each Gsplat placed behind it
  axisShadowScale: s = 2,
  // origins of the axes (default single axis at origin)
  origins: i = [new Q.Vector3()]
}) {
  const n = new Q.Vector3(), a = new Q.Vector3(), r = new Q.Quaternion(0, 0, 0, 1), g = new Q.Color(), I = 1;
  for (const B of i)
    for (let o = 0; o < 3; ++o) {
      n.set(
        B.x + (o === 0 ? A : 0),
        B.y + (o === 1 ? A : 0),
        B.z + (o === 2 ? A : 0)
      );
      for (let C = 0; C < 2; ++C)
        a.set(
          (o === 0 ? A : e) * (C ? 1 : s),
          (o === 1 ? A : e) * (C ? 1 : s),
          (o === 2 ? A : e) * (C ? 1 : s)
        ), g.setRGB(
          C === 0 ? 0 : o === 0 ? 1 : 0,
          C === 0 ? 0 : o === 1 ? 1 : 0,
          C === 0 ? 0 : o === 2 ? 1 : 0
        ), t.pushSplat(n, a, r, I, g);
    }
}
function OC({
  // PackedSplats object to add splats to
  splats: t,
  // center of the sphere (default: origin)
  origin: A = new Q.Vector3(),
  // radius of the sphere
  radius: e = 1,
  // maximum depth of recursion for subdividing the sphere
  // Warning: Gsplat count grows exponentially with depth
  maxDepth: s = 3,
  // filter function to apply to each point, for example to select
  // points in a certain direction or other function ((THREE.Vector3) => boolean)
  // (default: null)
  filter: i = null,
  // radius of each oriented Gsplat
  pointRadius: n = 0.02,
  // flatness of each oriented Gsplat
  pointThickness: a = 1e-3,
  // color of each Gsplat (THREE.Color) or function to set color for point:
  // ((THREE.Color, THREE.Vector3) => void) (default: white)
  color: r = new Q.Color(1, 1, 1)
}) {
  const g = {};
  function I(c) {
    if (i && !i(c))
      return;
    const l = `${c.x},${c.y},${c.z}`;
    g[l] || (g[l] = c);
  }
  function B(c, l, u, w) {
    if (I(l), I(u), I(w), c >= s)
      return;
    const d = new Q.Vector3().addVectors(l, u).normalize(), y = new Q.Vector3().addVectors(u, w).normalize(), p = new Q.Vector3().addVectors(w, l).normalize();
    B(c + 1, l, d, p), B(c + 1, d, u, y), B(c + 1, p, y, w), B(c + 1, d, y, p);
  }
  for (const c of [-1, 1])
    for (const l of [-1, 1])
      for (const u of [-1, 1]) {
        const w = new Q.Vector3(c, 0, 0), d = new Q.Vector3(0, l, 0), y = new Q.Vector3(0, 0, u);
        B(0, w, d, y);
      }
  const o = Object.values(g), C = new Q.Vector3(n, n, a), E = new Q.Quaternion(), h = typeof r == "function" ? new Q.Color() : r;
  for (const c of o)
    E.setFromUnitVectors(new Q.Vector3(0, 0, -1), c), typeof r == "function" && r(h, c), c.multiplyScalar(e), c.add(A), t.pushSplat(c, C, E, 1, h);
}
function WC({
  // text string to display
  text: t,
  // browser font to render text with (default: "Arial")
  font: A,
  // font size in pixels/Gsplats (default: 32)
  fontSize: e,
  // SplatMesh.recolor tint assuming white Gsplats (default: white)
  color: s,
  // Individual Gsplat color (default: white)
  rgb: i,
  // Gsplat radius (default: 0.8 covers 1-unit spacing well)
  dotRadius: n,
  // text alignment: "left", "center", "right", "start", "end" (default: "start")
  textAlign: a,
  // line spacing multiplier, lines delimited by "\n" (default: 1.0)
  lineHeight: r,
  // Coordinate scale in object-space (default: 1.0)
  objectScale: g
}) {
  A = A ?? "Arial", e = e ?? 32, s = s ?? new Q.Color(1, 1, 1), n = n ?? 0.8, a = a ?? "start", r = r ?? 1, g = g ?? 1;
  const I = t.split(`
`), B = document.createElement("canvas"), o = B.getContext("2d");
  if (!o)
    throw new Error("Failed to create canvas context");
  o.font = `${e}px ${A}`, o.textAlign = a;
  const C = o.measureText(""), E = C.fontBoundingBoxAscent + C.fontBoundingBoxDescent;
  let h = Number.POSITIVE_INFINITY, c = Number.NEGATIVE_INFINITY, l = Number.POSITIVE_INFINITY, u = Number.NEGATIVE_INFINITY;
  for (let F = 0; F < I.length; ++F) {
    const G = o.measureText(I[F]), R = E * r * F;
    h = Math.min(h, -G.actualBoundingBoxLeft), c = Math.max(c, G.actualBoundingBoxRight), l = Math.min(l, R - G.actualBoundingBoxAscent), u = Math.max(u, R + G.actualBoundingBoxDescent);
  }
  const w = Math.floor(h), d = Math.floor(l), y = Math.ceil(c) - w, p = Math.ceil(u) - d;
  B.width = y, B.height = p, o.font = `${e}px ${A}`, o.textAlign = a, o.textBaseline = "alphabetic", o.fillStyle = "#FFFFFF";
  for (let F = 0; F < I.length; ++F) {
    const G = E * r * F - d;
    o.fillText(I[F], -w, G);
  }
  const f = o.getImageData(0, 0, y, p), N = new Uint8Array(f.data.buffer), m = new TA(), D = new Q.Vector3(), U = new Q.Vector3().setScalar(n * g), x = new Q.Quaternion(0, 0, 0, 1);
  i = i ?? new Q.Color(1, 1, 1);
  let M = 0;
  for (let F = 0; F < p; ++F)
    for (let G = 0; G < y; ++G) {
      const R = N[M + 3];
      if (R > 0) {
        const J = R / 255;
        D.set(G - 0.5 * (y - 1), 0.5 * (p - 1) - F, 0), D.multiplyScalar(g), m.pushSplat(D, U, x, J, i);
      }
      M += 4;
    }
  const b = new VA({ packedSplats: m });
  return b.recolor = s, b;
}
function jC({
  // URL of the image to convert to splats (example: `url: "./image.png"`)
  url: t,
  // Radius of each Gsplat, default covers 1-unit spacing well (default: 0.8)
  dotRadius: A,
  // Subsampling factor for the image. Higher values reduce resolution,
  // for example 2 will halve the width and height by averaging (default: 1)
  subXY: e,
  // Optional callback function to modify each Gsplat before it's added.
  // Return null to skip adding the Gsplat, or a number to set the opacity
  // and add the Gsplat with parameter values in the objects center, rgba etc. were
  // passed into the forEachSplat callback. Ending the callback in `return opacity;`
  // will retain the original opacity.
  // ((width: number, height: number, index: number, center: THREE.Vector3, scales: THREE.Vector3, quaternion: THREE.Quaternion, opacity: number, color: THREE.Color) => number | null)
  forEachSplat: s
}) {
  return A = A ?? 0.8, e = Math.max(1, Math.floor(e ?? 1)), new VA({
    constructSplats: async (i) => new Promise((n, a) => {
      const r = new Image();
      r.crossOrigin = "anonymous", r.onerror = a, r.onload = () => {
        const { width: g, height: I } = r, B = document.createElement("canvas");
        B.width = g, B.height = I;
        const o = B.getContext("2d");
        if (!o) {
          a(new Error("Failed to create canvas context"));
          return;
        }
        o.imageSmoothingEnabled = !0, o.imageSmoothingQuality = "high";
        const C = Math.round(g / e), E = Math.round(I / e);
        o.drawImage(r, 0, 0, C, E);
        try {
          const h = o.getImageData(0, 0, C, E), c = new Uint8Array(h.data.buffer), l = new Q.Vector3(), u = new Q.Vector3().setScalar(A), w = new Q.Quaternion(0, 0, 0, 1), d = new Q.Color();
          let y = 0;
          for (let p = 0; p < E; ++p)
            for (let f = 0; f < C; ++f) {
              const N = y * 4, m = c[N + 3];
              if (m > 0) {
                let D = m / 255;
                d.set(
                  c[N + 0] / 255,
                  c[N + 1] / 255,
                  c[N + 2] / 255
                ), l.set(
                  f - 0.5 * (C - 1),
                  0.5 * (E - 1) - p,
                  0
                ), u.setScalar(A), w.set(0, 0, 0, 1);
                let U = !0;
                if (s) {
                  const x = s(
                    C,
                    E,
                    y,
                    l,
                    u,
                    w,
                    D,
                    d
                  );
                  D = x ?? D, U = x !== null;
                }
                U && i.pushSplat(l, u, w, D, d);
              }
              y += 1;
            }
          n();
        } catch (h) {
          a(h);
        }
      }, r.src = t;
    })
  });
}
function IC({
  box: t,
  cells: A,
  dotScale: e,
  color: s,
  opacity: i
}) {
  A.x = Math.max(1, Math.round(A.x)), A.y = Math.max(1, Math.round(A.y)), A.z = Math.max(1, Math.round(A.z)), i = i ?? 1;
  const n = A.x * A.y * A.z, a = K("int", A.x), r = K("int", A.y);
  K("int", A.z);
  const g = LA(0), I = new ge({
    numSplats: n,
    generator: SA(
      { index: "int" },
      { gsplat: P },
      ({ index: o }) => {
        if (!o)
          throw new Error("index is undefined");
        const C = Ne(o, a), E = Zt(o, a), h = Ne(E, r), c = Zt(E, r), l = JA({
          vectorType: "ivec3",
          x: C,
          y: h,
          z: c
        }), u = Rn(g), w = JA({ vectorType: "ivec2", x: o, y: u }), d = La(w), y = K("vec3", t.min), p = K("vec3", t.max), f = wt(p, y), N = Zt(fA(gt(l), d), K("vec3", A));
        let m, D, U;
        s ? (m = K("float", s.r), D = K("float", s.g), U = K("float", s.b)) : { r: m, g: D, b: U } = ut(N).outputs;
        const x = JA({
          vectorType: "vec4",
          r: m,
          g: D,
          b: U,
          a: K("float", i)
        }), M = fA(y, QA(f, N)), b = gt(K("float", e)), F = K("vec4", new Q.Quaternion(0, 0, 0, 1));
        let G = At({
          flags: Wt("uint", "GSPLAT_FLAG_ACTIVE"),
          index: o,
          center: M,
          scales: b,
          quaternion: F,
          rgba: x
        });
        return G = B.applyGsplat(G), { gsplat: G };
      },
      {
        globals: () => [xA]
      }
    ),
    update: ({ time: o }) => {
      g.value = o, B.update(I), I.updateVersion();
    }
  }), B = new ct();
  return I;
}
const BC = {
  box: new Q.Box3(
    new Q.Vector3(-1, -1, -1),
    new Q.Vector3(1, 1, 1)
  ),
  density: 100,
  fallDirection: new Q.Vector3(-1, -3, 1).normalize(),
  fallVelocity: 0.02,
  wanderScale: 0.04,
  wanderVariance: 2,
  color1: new Q.Color(1, 1, 1),
  color2: new Q.Color(0.5, 0.5, 1),
  minScale: 1e-3,
  maxScale: 5e-3,
  anisoScale: new Q.Vector3(1, 1, 1)
}, QC = {
  box: new Q.Box3(
    new Q.Vector3(-2, -1, -2),
    new Q.Vector3(2, 5, 2)
  ),
  density: 10,
  fallDirection: new Q.Vector3(0, -1, 0),
  fallVelocity: 2,
  wanderScale: 0.1,
  wanderVariance: 1,
  color1: new Q.Color(1, 1, 1),
  color2: new Q.Color(0.25, 0.25, 0.5),
  minScale: 5e-3,
  maxScale: 0.01,
  anisoScale: new Q.Vector3(0.1, 1, 0.1)
};
function CC({
  // min and max box extents of the snowBox
  box: t,
  // minimum y-coordinate to clamp particle position, which can be used to
  // fake hitting a ground plane and lingering there for a bit
  minY: A,
  // number of Gsplats to generate (default: calculated from box and density)
  numSplats: e,
  // density of Gsplats per unit volume (default: 100)
  density: s,
  // The xyz anisotropic scale of the Gsplat, which can be used for example
  // to elongate rain particles (default: (1, 1, 1))
  anisoScale: i,
  // Minimum Gsplat particle scale (default: 0.001)
  minScale: n,
  // Maximum Gsplat particle scale (default: 0.005)
  maxScale: a,
  // The average direction of fall (default: (0, -1, 0))
  fallDirection: r,
  // The average speed of the fall (multiplied with fallDirection) (default: 0.02)
  fallVelocity: g,
  // The world scale of wandering overlay motion (default: 0.01)
  wanderScale: I,
  // Controls how uniformly the particles wander in sync, more variance mean
  // more randomness in the motion (default: 2)
  wanderVariance: B,
  // Color 1 of the two colors interpolated between (default: (1, 1, 1))
  color1: o,
  // Color 2 of the two colors interpolated between (default: (0.5, 0.5, 1))
  color2: C,
  // The base opacity of the Gsplats (default: 1)
  opacity: E,
  // Optional callback function to call each frame.
  onFrame: h
}) {
  t = t ?? new Q.Box3(new Q.Vector3(-1, -1, -1), new Q.Vector3(1, 1, 1));
  const c = (t.max.x - t.min.x) * (t.max.y - t.min.y) * (t.max.z - t.min.z);
  s = s ?? 100, e = e ?? Math.max(1, Math.min(1e6, Math.round(c * s)));
  const l = LA(n ?? 1e-3), u = LA(a ?? 5e-3), w = OA(
    ((i == null ? void 0 : i.clone()) ?? new Q.Vector3(1, 1, 1)).normalize()
  ), d = OA(
    (r ?? new Q.Vector3(0, -1, 0)).normalize()
  ), y = LA(g ?? 0.02), p = LA(I ?? 0.01), f = LA(B ?? 2), N = OA(o ?? new Q.Color(1, 1, 1)), m = OA(C ?? new Q.Color(0.5, 0.5, 1)), D = LA(E ?? 1), U = LA(0), x = OA(new Q.Vector3(0, 0, 0)), M = OA(t.min), b = OA(t.max), F = LA(A ?? Number.NEGATIVE_INFINITY), G = wt(b, M), R = new ge({
    numSplats: e,
    generator: SA(
      { index: "int" },
      { gsplat: P },
      ({ index: $ }) => {
        if (!$)
          throw new Error("index not defined");
        const L = Fe($), z = ut(L).outputs.w;
        let Z = gt(L), iA = Ot(QA(z, K("float", 100)));
        iA = ke(QA(Wt("float", "PI"), iA)), iA = fA(l, QA(iA, wt(u, l)));
        const AA = QA(iA, w), tA = Ot(QA(z, K("float", 10))), W = Ot(z), O = bi(N, m, W), v = QA(O, tA), pA = Fe(
          JA({
            vectorType: "ivec2",
            x: $,
            y: K("int", 6837)
          })
        );
        let nA = gt(pA), yA = QA(ut(pA).outputs.w, f);
        yA = fA(U, yA), Z = fA(Z, x);
        const DA = Ri(
          Z,
          K("vec3", new Q.Vector3(1, 1, 1))
        );
        Z = fA(M, QA(G, DA));
        const Y = K("vec4", new Q.Quaternion(0, 0, 0, 1));
        nA = ke(fA(gt(yA), nA)), nA = QA(nA, p);
        let EA = fA(Z, nA), RA = ut(EA).outputs.y;
        RA = Ui(F, RA), EA = JA({ vector: EA, y: RA });
        let dA = At({
          flags: Wt("uint", "GSPLAT_FLAG_ACTIVE"),
          index: $,
          center: EA,
          scales: AA,
          quaternion: Y,
          rgb: v,
          opacity: D
        });
        return dA = J.applyGsplat(dA), { gsplat: dA };
      },
      {
        globals: () => [xA]
      }
    ),
    update: ({ object: $, time: L, deltaTime: z }) => {
      U.value = L, J.update(R);
      const Z = d.value.clone().multiplyScalar(y.value * z);
      x.value.add(Z), $.visible = D.value > 0, h == null || h({ object: $, time: L, deltaTime: z }), R.updateVersion();
    }
  }), J = new ct();
  return {
    snow: R,
    min: M,
    max: b,
    minY: F,
    color1: N,
    color2: m,
    opacity: D,
    fallVelocity: y,
    wanderVariance: f,
    wanderScale: p,
    fallDirection: d,
    minScale: l,
    maxScale: u,
    anisoScale: w
  };
}
const PC = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  DEFAULT_RAIN: QC,
  DEFAULT_SNOW: BC,
  snowBox: CC,
  staticBox: IC
}, Symbol.toStringTag, { value: "Module" }));
function Yr(t) {
  return SA({ gsplat: P }, { gsplat: P }, ({ gsplat: A }) => {
    if (!A)
      throw new Error("No gsplat input");
    let e = me(A);
    const s = t.applyGsplat(A), i = nt(s).outputs.center, n = me(s), a = Qa(i, n), r = En(a, K("float", 0));
    e = Ve(r, _e(e), e);
    const g = fA(
      QA(e, K("float", 0.5)),
      K("float", 0.5)
    );
    return A = At({ gsplat: A, rgb: g }), { gsplat: A };
  });
}
function EC(t) {
  t.enableWorldToView = !0, t.worldModifier = Yr(t.context.worldToView), t.updateGenerator();
}
function Jr(t, A, e, s) {
  return SA({ gsplat: P }, { gsplat: P }, ({ gsplat: i }) => {
    if (!i)
      throw new Error("No gsplat input");
    let { center: n } = nt(i).outputs;
    n = t.apply(n);
    const { z: a } = ut(n).outputs;
    let r = Ya(_e(a), A, e);
    return r = Ve(s, wt(K("float", 1), r), r), i = At({ gsplat: i, r, g: r, b: r }), { gsplat: i };
  });
}
function cC(t, A, e, s) {
  t.enableWorldToView = !0;
  const i = K("float", A), n = K("float", e), a = K("bool", s ?? !1);
  return t.worldModifier = Jr(
    t.context.worldToView,
    i,
    n,
    a
  ), t.updateGenerator(), {
    minDepth: i,
    maxDepth: n,
    reverse: a
  };
}
const XC = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  makeDepthColorModifier: Jr,
  makeNormalColorModifier: Yr,
  setDepthColor: cC,
  setWorldNormalColor: EC
}, Symbol.toStringTag, { value: "Module" })), Ft = class Ft {
  static createButton(A, e = {}) {
    const s = navigator.xr;
    if (!s)
      return null;
    const i = s, n = document.createElement("button");
    A.xr.enabled = !0, A.xr.setReferenceSpaceType("local");
    function a() {
      let o = null;
      async function C(c) {
        console.log("onSessionStarted"), c.addEventListener("end", E), await A.xr.setSession(c), n.textContent = "EXIT VR", o = c;
      }
      function E() {
        console.log("onSessionEnded"), o == null || o.removeEventListener("end", E), n.textContent = "ENTER VR", o = null;
      }
      n.style.display = "", n.style.cursor = "pointer", n.style.left = "calc(50% - 100px)", n.style.width = "200px", n.style.height = "100px", n.textContent = "ENTER VR";
      const h = {
        ...e,
        optionalFeatures: [
          // "local-floor",
          // "bounded-floor",
          // "layers",
          ...e.optionalFeatures || []
        ]
      };
      n.onmouseenter = () => {
        n.style.opacity = "1.0";
      }, n.onmouseleave = () => {
        n.style.opacity = "0.5";
      }, n.onclick = () => {
        o === null ? (console.log("requesting session"), i.requestSession("immersive-vr", h).then(
          C
        )) : (console.log("ending session"), o.end());
      };
    }
    function r() {
      n.style.display = "none", n.style.cursor = "auto", n.style.left = "calc(50% - 75px)", n.style.width = "150px", n.onmouseenter = null, n.onmouseleave = null, n.onclick = null;
    }
    function g() {
      r(), n.textContent = "VR NOT SUPPORTED";
    }
    function I(o) {
      r(), console.warn(
        "Exception when trying to call xr.isSessionSupported",
        o
      ), n.textContent = "VR NOT ALLOWED";
    }
    function B(o) {
      o.style.position = "absolute", o.style.bottom = "20px", o.style.padding = "12px 6px", o.style.border = "1px solid #fff", o.style.borderRadius = "4px", o.style.background = "rgba(0,0,0,0.1)", o.style.color = "#fff", o.style.font = "normal 13px sans-serif", o.style.textAlign = "center", o.style.opacity = "0.5", o.style.outline = "none", o.style.zIndex = "999";
    }
    return n.id = "VRButton", n.style.display = "none", B(n), i.isSessionSupported("immersive-vr").then((o) => {
      o ? a() : g(), o && Ft.xrSessionIsGranted && n.click();
    }).catch(I), n;
  }
  static registerSessionGrantedListener() {
    const A = navigator.xr;
    if (!A)
      return null;
    const e = A;
    /WebXRViewer\//i.test(navigator.userAgent) || e.addEventListener("sessiongranted", () => {
      Ft.xrSessionIsGranted = !0;
    });
  }
};
Ft.xrSessionIsGranted = !1;
let ve = Ft;
ve.registerSessionGrantedListener();
const hC = 0.5, lC = 0.5, uC = 0;
var Oe = /* @__PURE__ */ ((t) => (t.w = "wrist", t.t0 = "thumb-metacarpal", t.t1 = "thumb-phalanx-proximal", t.t2 = "thumb-phalanx-distal", t.t3 = "thumb-tip", t.i0 = "index-finger-metacarpal", t.i1 = "index-finger-phalanx-proximal", t.i2 = "index-finger-phalanx-intermediate", t.i3 = "index-finger-phalanx-distal", t.i4 = "index-finger-tip", t.m0 = "middle-finger-metacarpal", t.m1 = "middle-finger-phalanx-proximal", t.m2 = "middle-finger-phalanx-intermediate", t.m3 = "middle-finger-phalanx-distal", t.m4 = "middle-finger-tip", t.r0 = "ring-finger-metacarpal", t.r1 = "ring-finger-phalanx-proximal", t.r2 = "ring-finger-phalanx-intermediate", t.r3 = "ring-finger-phalanx-distal", t.r4 = "ring-finger-tip", t.p0 = "pinky-finger-metacarpal", t.p1 = "pinky-finger-phalanx-proximal", t.p2 = "pinky-finger-phalanx-intermediate", t.p3 = "pinky-finger-phalanx-distal", t.p4 = "pinky-finger-tip", t))(Oe || {});
const Tr = Object.keys(Oe), $C = Tr.length, AE = {
  w: 0,
  t0: 1,
  t1: 2,
  t2: 3,
  t3: 4,
  i0: 5,
  i1: 6,
  i2: 7,
  i3: 8,
  i4: 9,
  m0: 10,
  m1: 11,
  m2: 12,
  m3: 13,
  m4: 14,
  r0: 15,
  r1: 16,
  r2: 17,
  r3: 18,
  r4: 19,
  p0: 20,
  p1: 21,
  p2: 22,
  p3: 23,
  p4: 24
}, zt = {
  w: 0.02,
  t0: 0.02,
  t1: 0.014,
  t2: 0.0115,
  t3: 85e-4,
  i0: 0.022,
  i1: 0.012,
  i2: 85e-4,
  i3: 75e-4,
  i4: 65e-4,
  m0: 0.021,
  m1: 0.012,
  m2: 8e-3,
  m3: 75e-4,
  m4: 65e-4,
  r0: 0.019,
  r1: 0.011,
  r2: 75e-4,
  r3: 7e-3,
  r4: 6e-3,
  p0: 0.012,
  p1: 0.01,
  p2: 7e-3,
  p3: 65e-4,
  p4: 55e-4
}, dC = [
  ["w", "t0", "t1", "t2", "t3"],
  ["w", "i0", "i1", "i2", "i3", "i4"],
  ["w", "m0", "m1", "m2", "m3", "m4"],
  ["w", "r0", "r1", "r2", "r3", "r4"],
  ["w", "p0", "p1", "p2", "p3", "p4"]
], wC = [
  [8, 10, 8, 6],
  [8, 19, 14, 8, 6],
  [8, 19, 14, 8, 6],
  [8, 19, 14, 8, 6],
  [8, 19, 14, 8, 6]
], tE = ["t3", "i4", "m4", "r4", "p4"], eE = ["i4", "m4", "r4", "p4"];
var Hr = /* @__PURE__ */ ((t) => (t.left = "left", t.right = "right", t))(Hr || {});
const Le = Object.keys(Hr);
class sE {
  constructor() {
    this.hands = {}, this.last = {}, this.values = {}, this.tests = {}, this.lastTests = {}, this.updated = !1;
  }
  update({ xr: A, xrFrame: e }) {
    const s = A.getSession();
    if (!s)
      return;
    const i = A.getReferenceSpace();
    if (i && e.getJointPose) {
      this.last = this.hands, this.lastTests = this.tests, this.hands = {}, this.values = {}, this.tests = {};
      for (const n of s.inputSources) {
        if (!n.hand)
          continue;
        const a = n.handedness;
        this.hands[a] = {};
        for (const r of Tr) {
          const g = n.hand.get(Oe[r]);
          if (g) {
            const I = e.getJointPose(g, i);
            if (I) {
              const { position: B, orientation: o } = I.transform;
              this.hands[a][r] = {
                position: new vA(B.x, B.y, B.z),
                quaternion: new je(
                  o.x,
                  o.y,
                  o.z,
                  o.w
                ),
                radius: I.radius || 1e-3
              };
            }
          }
        }
      }
      for (const n of Le)
        for (const { key: a, value: r } of [
          { key: `${n}AllTips`, value: this.allTipsTouching(n) },
          {
            key: `${n}IndexThumb`,
            value: this.touching(n, "i4", n, "t3")
          },
          {
            key: `${n}MiddleThumb`,
            value: this.touching(n, "m4", n, "t3")
          },
          {
            key: `${n}RingThumb`,
            value: this.touching(n, "r4", n, "t3")
          },
          {
            key: `${n}PinkyThumb`,
            value: this.touching(n, "p4", n, "t3")
          },
          { key: `${n}TriTips`, value: this.triTipsTouching(n) }
        ])
          this.values[a] = r, this.tests[a] = r === 1 ? !0 : r === 0 ? !1 : this.lastTests[a] ?? !1;
    }
  }
  makeGhostMesh() {
    const A = new vA(), e = new vA(0.01, 0.01, 0.01), s = new je(0, 0, 0, 1), i = new Pe(1, 1, 1), n = Math.PI * 3;
    new Pe(1, 1, 1);
    let a = 1;
    const r = new VA({
      onFrame: () => {
        let g = 0;
        for (const I of Le) {
          const B = this.hands[I];
          for (const [o, C] of dC.entries())
            for (let E = 1; E < C.length; ++E) {
              const h = wC[o][E - 1] * 2, c = E + 1 === C.length, l = B == null ? void 0 : B[C[E - 1]], u = B == null ? void 0 : B[C[E]];
              for (let w = 0; w < h; ++w) {
                const d = (w + 0.5) / h;
                if (a = 0, l && u) {
                  A.copy(l.position).lerp(u.position, d), s.copy(l.quaternion).slerp(u.quaternion, d);
                  const y = zt[C[E - 1]], p = zt[C[E]];
                  let f = (1 - d) * y + d * p;
                  c && d > 0.8 && (f *= Math.sqrt(1 - ((d - 0.8) / 0.2) ** 2)), e.set(0.65 * f, 0.5 * f, 3e-3), i.set(
                    0.55 + 0.45 * Math.sin(A.x * n),
                    0.55 + 0.45 * Math.sin(A.y * n),
                    0.55 + 0.45 * Math.sin(A.z * n)
                  ), I === "right" && i.set(1 - i.r, 1 - i.g, 1 - i.b), a = 0.75;
                }
                r.packedSplats.setSplat(
                  g,
                  A,
                  e,
                  s,
                  a,
                  i
                ), g += 1;
              }
            }
        }
        r.packedSplats.numSplats = g, r.packedSplats.needsUpdate = !0, r.numSplats = g, r.updateVersion();
      }
    });
    return r;
  }
  distance(A, e, s, i, n = !1) {
    const a = n ? this.last[A] : this.hands[A], r = n ? this.last[s] : this.hands[s], g = a == null ? void 0 : a[e], I = r == null ? void 0 : r[i];
    return !g || !I ? Number.POSITIVE_INFINITY : g.position.distanceTo(I.position);
  }
  separation(A, e, s, i, n = !1) {
    const a = this.distance(A, e, s, i, n);
    return a === Number.POSITIVE_INFINITY ? Number.POSITIVE_INFINITY : a - zt[e] - zt[i];
  }
  touching(A, e, s, i, n = !1) {
    const a = this.separation(A, e, s, i, n);
    return a === Number.POSITIVE_INFINITY ? Number.POSITIVE_INFINITY : 1 - Math.max(0, Math.min(1, a / 0.01 - uC));
  }
  allTipsTouching(A, e = !1) {
    return Math.min(
      this.touching(A, "t3", A, "i4", e),
      this.touching(A, "i4", A, "m4", e),
      this.touching(A, "m4", A, "r4", e),
      this.touching(A, "r4", A, "p4", e)
      // this.touching(hand, "p4", hand, "t3", last),
    );
  }
  triTipsTouching(A, e = !1) {
    return Math.min(
      this.touching(A, "t3", A, "i4", e),
      this.touching(A, "i4", A, "m4", e),
      this.touching(A, "m4", A, "t3", e)
    );
  }
}
class iE {
  constructor({
    xrHands: A,
    control: e,
    moveInertia: s,
    rotateInertia: i
  }) {
    this.lastGrip = {}, this.lastPivot = new vA(), this.rotateVelocity = 0, this.velocity = new vA(), this.xrHands = A, this.control = e, this.moveInertia = s ?? hC, this.rotateInertia = i ?? lC;
  }
  update(A) {
    var n, a, r, g, I;
    const e = {};
    for (const B of Le) {
      const o = this.xrHands.hands[B];
      o && this.xrHands.tests[`${B}MiddleThumb`] && (e[B] = new vA().add(((n = o.t3) == null ? void 0 : n.position) ?? new vA()).add(((a = o.i4) == null ? void 0 : a.position) ?? new vA()).add(((r = o.m4) == null ? void 0 : r.position) ?? new vA()).add(((g = o.r4) == null ? void 0 : g.position) ?? new vA()).add(((I = o.p4) == null ? void 0 : I.position) ?? new vA()).multiplyScalar(1 / 5));
    }
    if (e.left && e.right && this.lastGrip.left && this.lastGrip.right) {
      const B = e.left.clone().add(e.right).multiplyScalar(0.5), o = this.lastGrip.left.clone().add(this.lastGrip.right).multiplyScalar(0.5);
      this.lastPivot = B;
      const C = B.clone().applyMatrix4(this.control.matrix);
      C.sub(o.clone().applyMatrix4(this.control.matrix)), C.multiplyScalar(1 / A), this.velocity.lerp(C, 1 - Math.exp(-20 * A));
      const E = Math.atan2(e.left.z - B.z, e.left.x - B.x), h = Math.atan2(
        this.lastGrip.left.z - o.z,
        this.lastGrip.left.x - o.x
      );
      let c = E - h;
      c > Math.PI ? c -= Math.PI * 2 : c < -Math.PI && (c += Math.PI * 2);
      const l = c / A, u = Math.exp(-20 * A);
      this.rotateVelocity = this.rotateVelocity * u + l * (1 - u);
    } else if (this.rotateVelocity *= Math.exp(-A / this.rotateInertia), e.left && this.lastGrip.left) {
      const B = e.left.clone().applyMatrix4(this.control.matrix);
      B.sub(this.lastGrip.left.clone().applyMatrix4(this.control.matrix)), B.multiplyScalar(1 / A), this.velocity.lerp(B, 1 - Math.exp(-20 * A));
    } else if (e.right && this.lastGrip.right) {
      const B = e.right.clone().applyMatrix4(this.control.matrix);
      B.sub(
        this.lastGrip.right.clone().applyMatrix4(this.control.matrix)
      ), B.multiplyScalar(1 / A), this.velocity.lerp(B, 1 - Math.exp(-20 * A));
    } else
      this.velocity.multiplyScalar(Math.exp(-A / this.moveInertia));
    const s = this.lastPivot.clone().negate(), i = new de().makeTranslation(s).premultiply(new de().makeRotationY(this.rotateVelocity * A)).premultiply(new de().makeTranslation(this.lastPivot));
    this.control.matrix.multiply(i), this.control.matrix.decompose(
      this.control.position,
      this.control.quaternion,
      this.control.scale
    ), this.control.updateMatrixWorld(!0), this.control.position.sub(this.velocity.clone().multiplyScalar(A)), this.lastGrip = e;
  }
}
const pC = 1, yC = 2, DC = 2e-3, fC = 6e-3, mC = 15e-4, MC = 0.15, xC = 0.15, SC = 0.1, NC = 2, FC = 1, kC = 200, GC = 400, RC = 50, UC = {
  KeyW: new Q.Vector3(0, 0, -1),
  KeyS: new Q.Vector3(0, 0, 1),
  KeyA: new Q.Vector3(-1, 0, 0),
  KeyD: new Q.Vector3(1, 0, 0),
  KeyR: new Q.Vector3(0, 1, 0),
  KeyF: new Q.Vector3(0, -1, 0)
}, bC = {
  ArrowUp: new Q.Vector3(0, 0, -1),
  ArrowDown: new Q.Vector3(0, 0, 1),
  ArrowLeft: new Q.Vector3(-1, 0, 0),
  ArrowRight: new Q.Vector3(1, 0, 0),
  PageUp: new Q.Vector3(0, 1, 0),
  PageDown: new Q.Vector3(0, -1, 0)
}, vC = {
  KeyQ: new Q.Vector3(0, 0, 1),
  KeyE: new Q.Vector3(0, 0, -1)
}, LC = {
  Home: new Q.Vector3(0, -1, 0),
  End: new Q.Vector3(0, 1, 0),
  Insert: new Q.Vector3(-1, 0, 0),
  Delete: new Q.Vector3(1, 0, 0)
};
class nE {
  constructor({ canvas: A }) {
    this.lastTime = 0, this.fpsMovement = new YC({}), this.pointerControls = new JC({ canvas: A });
  }
  update(A) {
    const e = performance.now(), s = (e - (this.lastTime || e)) / 1e3;
    this.lastTime = e, this.fpsMovement.update(s, A), this.pointerControls.update(s, A);
  }
}
class YC {
  constructor({
    moveSpeed: A,
    rollSpeed: e,
    stickThreshold: s,
    rotateSpeed: i,
    keycodeMoveMapping: n,
    keycodeRotateMapping: a,
    gamepadMapping: r,
    capsMultiplier: g,
    shiftMultiplier: I,
    ctrlMultiplier: B,
    xr: o
  } = {}) {
    this.enable = !0, this.moveSpeed = A ?? pC, this.rollSpeed = e ?? yC, this.stickThreshold = s ?? SC, this.rotateSpeed = i ?? NC, this.keycodeMoveMapping = n ?? {
      ...UC,
      ...bC
    }, this.keycodeRotateMapping = a ?? {
      ...vC,
      ...LC
    }, this.gamepadMapping = r ?? {
      4: "rollLeft",
      5: "rollRight",
      6: "ctrl",
      7: "shift"
    }, this.capsMultiplier = g ?? 10, this.shiftMultiplier = I ?? 5, this.ctrlMultiplier = B ?? 1 / 5, this.xr = o, this.keydown = {}, this.keycode = {}, document.addEventListener("keydown", (C) => {
      this.keydown[C.key] = !0, this.keycode[C.code] = !0;
    }), document.addEventListener("keyup", (C) => {
      this.keydown[C.key] = !1, this.keycode[C.code] = !1;
    }), window.addEventListener("blur", () => {
      this.keydown = {}, this.keycode = {};
    });
  }
  // Call this method in your render loop with `control` set to the object to control
  // (`THREE.Camera` or a `THREE.Object3D` that contains it), with `deltaTime`
  // in seconds since the last update.
  update(A, e) {
    var B, o;
    if (!this.enable)
      return;
    const s = [new Q.Vector2(), new Q.Vector2()], i = navigator.getGamepads()[0];
    i && (s[0].set(i.axes[0], i.axes[1]), s[1].set(i.axes[2], i.axes[3]));
    const n = (i == null ? void 0 : i.buttons.map((C) => C.pressed)) || [], a = Array.from(((o = (B = this.xr) == null ? void 0 : B.getSession()) == null ? void 0 : o.inputSources) ?? []);
    for (const C of a) {
      const E = C.gamepad;
      if (E)
        switch (C.handedness) {
          case "none": {
            s[0].x += E.axes[0], s[0].y += E.axes[1], s[1].x += E.axes[2], s[1].y += E.axes[3];
            break;
          }
          case "left": {
            s[0].x += E.axes[2], s[0].y += E.axes[3];
            break;
          }
          case "right": {
            s[1].x += E.axes[2], s[1].y += E.axes[3];
            break;
          }
        }
    }
    for (const C of s)
      C.x = Math.abs(C.x) >= this.stickThreshold ? C.x : 0, C.y = Math.abs(C.y) >= this.stickThreshold ? C.y : 0;
    const r = new Q.Vector3(
      s[1].x,
      s[1].y,
      0
    ).multiplyScalar(this.rotateSpeed);
    for (const [C, E] of Object.entries(this.keycodeRotateMapping))
      this.keycode[C] && r.add(E);
    for (const C in this.gamepadMapping)
      if (n[Number.parseInt(C)])
        switch (this.gamepadMapping[C]) {
          case "rollLeft":
            r.z += 1;
            break;
          case "rollRight":
            r.z -= 1;
            break;
        }
    if (r.multiply(
      new Q.Vector3(this.rotateSpeed, this.rotateSpeed, this.rollSpeed)
    ), r.manhattanLength() > 0) {
      r.multiplyScalar(A);
      const C = new Q.Euler().setFromQuaternion(
        e.quaternion,
        "YXZ"
      );
      C.y -= r.x, C.x = Math.max(
        -Math.PI / 2,
        Math.min(Math.PI / 2, C.x - r.y)
      ), C.z = Math.max(-Math.PI, Math.min(Math.PI, C.z + r.z)), e.quaternion.setFromEuler(C);
    }
    const g = new Q.Vector3(s[0].x, 0, s[0].y);
    for (const [C, E] of Object.entries(this.keycodeMoveMapping))
      this.keycode[C] && g.add(E);
    let I = 1;
    this.keydown.CapsLock && (I *= this.capsMultiplier), (this.keycode.ShiftLeft || this.keycode.ShiftRight) && (I *= this.shiftMultiplier), (this.keycode.ControlLeft || this.keycode.ControlRight) && (I *= this.ctrlMultiplier);
    for (const C in this.gamepadMapping)
      if (n[Number.parseInt(C)])
        switch (this.gamepadMapping[C]) {
          case "shift":
            I *= this.shiftMultiplier;
            break;
          case "ctrl":
            I *= this.ctrlMultiplier;
            break;
        }
    g.applyQuaternion(e.quaternion), e.position.add(
      g.multiplyScalar(this.moveSpeed * I * A)
    );
  }
}
class JC {
  constructor({
    // The HTML canvas element to attach pointer events to
    canvas: A,
    // Speed of rotation (default DEFAULT_ROTATE_SPEED)
    rotateSpeed: e,
    // Speed of sliding when dragging with right/middle mouse button or two fingers
    // (default DEFAULT_SLIDE_SPEED)
    slideSpeed: s,
    // Speed of movement when using mouse scroll wheel (default DEFAULT_SCROLL_SPEED)
    scrollSpeed: i,
    // Swap the direction of rotation and sliding (default: false)
    swapRotateSlide: n,
    // Reverse the direction of rotation (default: false)
    reverseRotate: a,
    // Reverse the direction of sliding (default: false)
    reverseSlide: r,
    // Reverse the direction of swipe gestures (default: false)
    reverseSwipe: g,
    // Reverse the direction of scroll wheel movement (default: false)
    reverseScroll: I,
    // Inertia factor for movement (default: DEFAULT_MOVE_INERTIA)
    moveInertia: B,
    // Inertia factor for rotation (default: DEFAULT_ROTATE_INERTIA)
    rotateInertia: o,
    // Pointer rolling scale factor (default: DEFAULT_POINTER_ROLL_SCALE)
    pointerRollScale: C,
    // Callback for double press events (default: () => {})
    doublePress: E
  }) {
    this.enable = !0, this.canvas = A, this.rotateSpeed = e ?? DC, this.slideSpeed = s ?? fC, this.scrollSpeed = i ?? mC, this.swapRotateSlide = n ?? !1, this.reverseRotate = a ?? !1, this.reverseSlide = r ?? !1, this.reverseSwipe = g ?? !1, this.reverseScroll = I ?? !1, this.moveInertia = B ?? xC, this.rotateInertia = o ?? MC, this.pointerRollScale = C ?? FC, this.doublePress = E ?? (() => {
    }), this.doublePressLimitMs = GC, this.doublePressDistance = RC, this.lastUp = null, this.rotating = null, this.sliding = null, this.dualPress = !1, this.scroll = new Q.Vector3(), this.rotateVelocity = new Q.Vector3(), this.moveVelocity = new Q.Vector3(), A.addEventListener("pointerdown", (c) => {
      const l = this.getPointerPosition(c), u = l.clone(), w = l.clone(), d = !this.swapRotateSlide && !this.rotating && (c.pointerType !== "mouse" || c.button === 0) || this.swapRotateSlide && this.sliding && !this.rotating && (c.pointerType !== "mouse" || c.button === 1), { pointerId: y, timeStamp: p } = c;
      if (d)
        this.rotating = { initial: u, last: w, position: l, pointerId: y, timeStamp: p }, A.setPointerCapture(c.pointerId), this.dualPress = !1;
      else if (!this.sliding) {
        const f = c.pointerType === "mouse" ? c.button : void 0;
        this.sliding = {
          initial: u,
          last: w,
          position: l,
          pointerId: y,
          button: f,
          timeStamp: p
        }, A.setPointerCapture(c.pointerId), this.dualPress = this.rotating != null && p - this.rotating.timeStamp < kC;
      }
    });
    const h = (c) => {
      var w, d;
      ((w = this.rotating) == null ? void 0 : w.pointerId) === c.pointerId ? (this.rotating = null, A.releasePointerCapture(c.pointerId), this.dualPress && this.sliding && (A.releasePointerCapture(this.sliding.pointerId), this.sliding = null)) : ((d = this.sliding) == null ? void 0 : d.pointerId) === c.pointerId && (this.sliding = null, A.releasePointerCapture(c.pointerId), this.dualPress && this.rotating && (A.releasePointerCapture(this.rotating.pointerId), this.rotating = null));
      const l = this.getPointerPosition(c), u = this.lastUp;
      if (this.lastUp = { position: l, time: c.timeStamp }, u && u.position.distanceTo(l) < this.doublePressDistance) {
        const p = c.timeStamp - u.time;
        p < this.doublePressLimitMs && (this.lastUp = null, this.doublePress({ position: l, intervalMs: p }));
      }
    };
    document.addEventListener("pointerup", h), document.addEventListener("pointercancel", h), document.addEventListener("pointermove", (c) => {
      var l, u;
      ((l = this.rotating) == null ? void 0 : l.pointerId) === c.pointerId ? this.rotating.position = this.getPointerPosition(c) : ((u = this.sliding) == null ? void 0 : u.pointerId) === c.pointerId && (this.sliding.position = this.getPointerPosition(c));
    }), A.addEventListener("contextmenu", (c) => {
      c.preventDefault();
    }), A.addEventListener("wheel", (c) => {
      this.scroll.add(
        new Q.Vector3(c.deltaX, c.deltaY, c.deltaZ)
      ), c.preventDefault();
    });
  }
  getPointerPosition(A) {
    const e = this.canvas.getBoundingClientRect();
    return new Q.Vector2(
      A.clientX - e.left,
      A.clientY - e.top
    );
  }
  update(A, e) {
    if (!this.enable)
      return;
    if (this.dualPress && this.rotating && this.sliding) {
      const i = [
        this.rotating.position.clone().sub(this.rotating.last),
        this.sliding.position.clone().sub(this.sliding.last)
      ], n = i[0].dot(i[1]);
      if (n >= 0.2) {
        const a = i[0].clone().add(i[1]), r = new Q.Vector3(a.x, -a.y, 0);
        r.multiplyScalar(this.slideSpeed * (this.reverseSwipe ? 1 : -1)), r.applyQuaternion(e.quaternion), e.position.add(r), this.moveVelocity = r.clone().multiplyScalar(1 / A);
      } else if (n <= -0.2) {
        const a = this.sliding.last.clone().sub(this.rotating.last), r = a.length();
        a.multiplyScalar(1 / r).normalize();
        const g = new Q.Vector2(-a.y, a.x), I = [i[0].dot(a), i[1].dot(a)], B = [i[0].dot(g), i[1].dot(g)], o = this.rotating.last.clone().add(this.sliding.last).multiplyScalar(0.5);
        let C = new Q.Vector3();
        if (e instanceof Q.Camera) {
          const w = new Q.Vector2(
            o.x / this.canvas.clientWidth * 2 - 1,
            -(o.y / this.canvas.clientHeight) * 2 + 1
          ), d = new Q.Raycaster();
          d.setFromCamera(w, e), C = d.ray.direction;
        }
        const E = I[1] - I[0], h = C.multiplyScalar(E * this.slideSpeed);
        e.position.add(h), this.moveVelocity = h.clone().multiplyScalar(1 / A);
        const c = [
          Math.atan(B[0] / (-0.5 * r)),
          Math.atan(B[1] / (0.5 * r))
        ], l = 0.5 * (c[0] + c[1]) * this.pointerRollScale, u = new Q.Euler().setFromQuaternion(
          e.quaternion,
          "YXZ"
        );
        u.z = Math.max(
          -Math.PI,
          Math.min(Math.PI, u.z + 0.5 * l)
        ), e.quaternion.setFromEuler(u);
      }
      this.rotating.last.copy(this.rotating.position), this.sliding.last.copy(this.sliding.position);
    } else {
      const i = new Q.Vector3();
      if (this.rotating && !this.dualPress) {
        const a = this.rotating.position.clone().sub(this.rotating.last);
        this.rotating.last.copy(this.rotating.position), i.set(a.x, a.y, 0), i.multiplyScalar(this.rotateSpeed * (this.reverseRotate ? -1 : 1)), this.rotateVelocity = i.clone().multiplyScalar(1 / A);
      } else
        this.rotateVelocity.multiplyScalar(
          Math.exp(-A / this.rotateInertia)
        ), i.addScaledVector(this.rotateVelocity, A);
      const n = new Q.Euler().setFromQuaternion(
        e.quaternion,
        "YXZ"
      );
      if (n.y -= i.x, n.x = Math.max(
        -Math.PI / 2,
        Math.min(Math.PI / 2, n.x - i.y)
      ), n.z *= Math.exp(-0 * A), e.quaternion.setFromEuler(n), this.sliding && !this.dualPress) {
        const a = this.sliding.position.clone().sub(this.sliding.last);
        this.sliding.last.copy(this.sliding.position);
        const r = this.sliding.button !== 2 ? new Q.Vector3(a.x, 0, a.y) : new Q.Vector3(a.x, -a.y, 0);
        r.multiplyScalar(this.slideSpeed * (this.reverseSlide ? -1 : 1)), r.applyQuaternion(e.quaternion), e.position.add(r), this.moveVelocity = r.clone().multiplyScalar(1 / A);
      } else
        this.moveVelocity.multiplyScalar(
          Math.exp(-A / this.moveInertia)
        ), e.position.addScaledVector(this.moveVelocity, A);
    }
    const s = this.scroll.multiplyScalar(this.scrollSpeed);
    s.set(s.x, s.z, s.y), this.reverseScroll && s.multiplyScalar(-1), s.applyQuaternion(e.quaternion), e.position.add(s), this.scroll.set(0, 0, 0);
  }
}
export {
  eE as FINGER_TIPS,
  YC as FpsMovement,
  Le as HANDS,
  Hr as Hand,
  iE as HandMovement,
  Tr as JOINT_IDS,
  AE as JOINT_INDEX,
  zt as JOINT_RADIUS,
  dC as JOINT_SEGMENTS,
  wC as JOINT_SEGMENT_STEPS,
  tE as JOINT_TIPS,
  Oe as JointEnum,
  $C as NUM_JOINTS,
  TA as PackedSplats,
  Ae as PlyReader,
  JC as PointerControls,
  Xt as Readback,
  Co as Sint8ToFloat,
  nE as SparkControls,
  se as SparkRenderer,
  ee as SparkViewpoint,
  De as SplatAccumulator,
  $t as SplatEdit,
  fQ as SplatEditRgbaBlendMode,
  MQ as SplatEditSdf,
  yQ as SplatEditSdfType,
  xQ as SplatEdits,
  xt as SplatFileType,
  ge as SplatGenerator,
  qC as SplatLoader,
  VA as SplatMesh,
  NQ as SplatModifier,
  _C as SplatSkinning,
  ct as SplatTransformer,
  iC as SpzReader,
  WA as SpzWriter,
  Qo as Uint8ToFloat,
  ve as VRButton,
  sE as XrHands,
  ZC as constructAxes,
  VC as constructGrid,
  OC as constructSpherePoints,
  KC as dyno,
  Ro as flipPixels,
  Vt as floatToSint8,
  qA as floatToUint8,
  MA as fromHalf,
  PC as generators,
  Nr as getSplatFileType,
  jC as imageSplats,
  ko as isAndroid,
  Fo as isMobile,
  Go as isOculus,
  XC as modifiers,
  Uo as pixelsToPngUrl,
  xe as setPackedSplat,
  WC as textSplats,
  rt as toHalf,
  zC as transcodeSpz,
  Se as unpackSplat,
  kr as unpackSplats,
  HC as utils
};
//# sourceMappingURL=spark.module.min.js.map
