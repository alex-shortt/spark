import * as Q from "three";
import { Loader as no, FileLoader as ro, Quaternion as ss, Vector3 as LA, Color as is, Matrix4 as De } from "three";
var cA = Uint8Array, yt = Uint16Array, ao = Int32Array, Cs = new cA([
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  1,
  1,
  1,
  1,
  2,
  2,
  2,
  2,
  3,
  3,
  3,
  3,
  4,
  4,
  4,
  4,
  5,
  5,
  5,
  5,
  0,
  /* unused */
  0,
  0,
  /* impossible */
  0
]), Es = new cA([
  0,
  0,
  0,
  0,
  1,
  1,
  2,
  2,
  3,
  3,
  4,
  4,
  5,
  5,
  6,
  6,
  7,
  7,
  8,
  8,
  9,
  9,
  10,
  10,
  11,
  11,
  12,
  12,
  13,
  13,
  /* unused */
  0,
  0
]), oo = new cA([16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15]), hs = function(t, A) {
  for (var e = new yt(31), s = 0; s < 31; ++s)
    e[s] = A += 1 << t[s - 1];
  for (var i = new ao(e[30]), s = 1; s < 30; ++s)
    for (var n = e[s]; n < e[s + 1]; ++n)
      i[n] = n - e[s] << 5 | s;
  return { b: e, r: i };
}, ls = hs(Cs, 2), us = ls.b, go = ls.r;
us[28] = 258, go[258] = 28;
var Io = hs(Es, 0), Bo = Io.b, ke = new yt(32768);
for (var iA = 0; iA < 32768; ++iA) {
  var $A = (iA & 43690) >> 1 | (iA & 21845) << 1;
  $A = ($A & 52428) >> 2 | ($A & 13107) << 2, $A = ($A & 61680) >> 4 | ($A & 3855) << 4, ke[iA] = (($A & 65280) >> 8 | ($A & 255) << 8) >> 1;
}
var Yt = function(t, A, e) {
  for (var s = t.length, i = 0, n = new yt(A); i < s; ++i)
    t[i] && ++n[t[i] - 1];
  var r = new yt(A);
  for (i = 1; i < A; ++i)
    r[i] = r[i - 1] + n[i - 1] << 1;
  var a;
  if (e) {
    a = new yt(1 << A);
    var o = 15 - A;
    for (i = 0; i < s; ++i)
      if (t[i])
        for (var I = i << 4 | t[i], B = A - t[i], g = r[t[i] - 1]++ << B, c = g | (1 << B) - 1; g <= c; ++g)
          a[ke[g] >> o] = I;
  } else
    for (a = new yt(s), i = 0; i < s; ++i)
      t[i] && (a[i] = ke[r[t[i] - 1]++] >> 15 - t[i]);
  return a;
}, zt = new cA(288);
for (var iA = 0; iA < 144; ++iA)
  zt[iA] = 8;
for (var iA = 144; iA < 256; ++iA)
  zt[iA] = 9;
for (var iA = 256; iA < 280; ++iA)
  zt[iA] = 7;
for (var iA = 280; iA < 288; ++iA)
  zt[iA] = 8;
var ds = new cA(32);
for (var iA = 0; iA < 32; ++iA)
  ds[iA] = 5;
var Qo = /* @__PURE__ */ Yt(zt, 9, 1), co = /* @__PURE__ */ Yt(ds, 5, 1), me = function(t) {
  for (var A = t[0], e = 1; e < t.length; ++e)
    t[e] > A && (A = t[e]);
  return A;
}, bA = function(t, A, e) {
  var s = A / 8 | 0;
  return (t[s] | t[s + 1] << 8) >> (A & 7) & e;
}, Me = function(t, A) {
  var e = A / 8 | 0;
  return (t[e] | t[e + 1] << 8 | t[e + 2] << 16) >> (A & 7);
}, ps = function(t) {
  return (t + 7) / 8 | 0;
}, Dt = function(t, A, e) {
  return (A == null || A < 0) && (A = 0), (e == null || e > t.length) && (e = t.length), new cA(t.subarray(A, e));
}, Co = [
  "unexpected EOF",
  "invalid block type",
  "invalid length/literal",
  "invalid distance",
  "stream finished",
  "no stream handler",
  ,
  "no callback",
  "invalid UTF-8 data",
  "extra field too long",
  "date not in range 1980-2099",
  "filename too long",
  "stream finishing",
  "invalid zip data"
  // determined by unknown compression method
], wA = function(t, A, e) {
  var s = new Error(A || Co[t]);
  if (s.code = t, Error.captureStackTrace && Error.captureStackTrace(s, wA), !e)
    throw s;
  return s;
}, ys = function(t, A, e, s) {
  var i = t.length, n = s ? s.length : 0;
  if (!i || A.f && !A.l)
    return e || new cA(0);
  var r = !e, a = r || A.i != 2, o = A.i;
  r && (e = new cA(i * 3));
  var I = function(yA) {
    var MA = e.length;
    if (yA > MA) {
      var EA = new cA(Math.max(MA * 2, yA));
      EA.set(e), e = EA;
    }
  }, B = A.f || 0, g = A.p || 0, c = A.b || 0, C = A.l, h = A.d, E = A.m, l = A.n, u = i * 8;
  do {
    if (!C) {
      B = bA(t, g, 1);
      var d = bA(t, g + 1, 3);
      if (g += 3, d)
        if (d == 1)
          C = Qo, h = co, E = 9, l = 5;
        else if (d == 2) {
          var x = bA(t, g, 31) + 257, M = bA(t, g + 10, 15) + 4, D = x + bA(t, g + 5, 31) + 1;
          g += 14;
          for (var y = new cA(D), R = new cA(19), S = 0; S < M; ++S)
            R[oo[S]] = bA(t, g + S * 3, 7);
          g += M * 3;
          for (var m = me(R), U = (1 << m) - 1, F = Yt(R, m, 1), S = 0; S < D; ) {
            var k = F[bA(t, g, U)];
            g += k & 15;
            var p = k >> 4;
            if (p < 16)
              y[S++] = p;
            else {
              var v = 0, L = 0;
              for (p == 16 ? (L = 3 + bA(t, g, 3), g += 2, v = y[S - 1]) : p == 17 ? (L = 3 + bA(t, g, 7), g += 3) : p == 18 && (L = 11 + bA(t, g, 127), g += 7); L--; )
                y[S++] = v;
            }
          }
          var AA = y.subarray(0, x), z = y.subarray(x);
          E = me(AA), l = me(z), C = Yt(AA, E, 1), h = Yt(z, l, 1);
        } else
          wA(1);
      else {
        var p = ps(g) + 4, w = t[p - 4] | t[p - 3] << 8, f = p + w;
        if (f > i) {
          o && wA(0);
          break;
        }
        a && I(c + w), e.set(t.subarray(p, f), c), A.b = c += w, A.p = g = f * 8, A.f = B;
        continue;
      }
      if (g > u) {
        o && wA(0);
        break;
      }
    }
    a && I(c + 131072);
    for (var sA = (1 << E) - 1, tA = (1 << l) - 1, O = g; ; O = g) {
      var v = C[Me(t, g) & sA], T = v >> 4;
      if (g += v & 15, g > u) {
        o && wA(0);
        break;
      }
      if (v || wA(2), T < 256)
        e[c++] = T;
      else if (T == 256) {
        O = g, C = null;
        break;
      } else {
        var Z = T - 254;
        if (T > 264) {
          var S = T - 257, j = Cs[S];
          Z = bA(t, g, (1 << j) - 1) + us[S], g += j;
        }
        var P = h[Me(t, g) & tA], b = P >> 4;
        P || wA(3), g += P & 15;
        var z = Bo[b];
        if (b > 3) {
          var j = Es[b];
          z += Me(t, g) & (1 << j) - 1, g += j;
        }
        if (g > u) {
          o && wA(0);
          break;
        }
        a && I(c + 131072);
        var dA = c + Z;
        if (c < z) {
          var gA = n - z, pA = Math.min(z, dA);
          for (gA + c < 0 && wA(3); c < pA; ++c)
            e[c] = s[gA + c];
        }
        for (; c < dA; ++c)
          e[c] = e[c - z];
      }
    }
    A.l = C, A.p = O, A.b = c, A.f = B, C && (B = 1, A.m = E, A.d = h, A.n = l);
  } while (!B);
  return c != e.length && r ? Dt(e, 0, c) : e.subarray(0, c);
}, Eo = /* @__PURE__ */ new cA(0), JA = function(t, A) {
  return t[A] | t[A + 1] << 8;
}, YA = function(t, A) {
  return (t[A] | t[A + 1] << 8 | t[A + 2] << 16 | t[A + 3] << 24) >>> 0;
}, xe = function(t, A) {
  return YA(t, A) + YA(t, A + 4) * 4294967296;
}, ho = function(t) {
  (t[0] != 31 || t[1] != 139 || t[2] != 8) && wA(6, "invalid gzip data");
  var A = t[3], e = 10;
  A & 4 && (e += (t[10] | t[11] << 8) + 2);
  for (var s = (A >> 3 & 1) + (A >> 4 & 1); s > 0; s -= !t[e++])
    ;
  return e + (A & 2);
}, Se = /* @__PURE__ */ function() {
  function t(A, e) {
    typeof A == "function" && (e = A, A = {}), this.ondata = e;
    var s = A && A.dictionary && A.dictionary.subarray(-32768);
    this.s = { i: 0, b: s ? s.length : 0 }, this.o = new cA(32768), this.p = new cA(0), s && this.o.set(s);
  }
  return t.prototype.e = function(A) {
    if (this.ondata || wA(5), this.d && wA(4), !this.p.length)
      this.p = A;
    else if (A.length) {
      var e = new cA(this.p.length + A.length);
      e.set(this.p), e.set(A, this.p.length), this.p = e;
    }
  }, t.prototype.c = function(A) {
    this.s.i = +(this.d = A || !1);
    var e = this.s.b, s = ys(this.p, this.s, this.o);
    this.ondata(Dt(s, e, this.s.b), this.d), this.o = Dt(s, this.s.b - 32768), this.s.b = this.o.length, this.p = Dt(this.p, this.s.p / 8 | 0), this.s.p &= 7;
  }, t.prototype.push = function(A, e) {
    this.e(A), this.c(e);
  }, t;
}();
function lo(t, A) {
  return ys(t, { i: 2 }, A && A.out, A && A.dictionary);
}
var ws = /* @__PURE__ */ function() {
  function t(A, e) {
    this.v = 1, this.r = 0, Se.call(this, A, e);
  }
  return t.prototype.push = function(A, e) {
    if (Se.prototype.e.call(this, A), this.r += A.length, this.v) {
      var s = this.p.subarray(this.v - 1), i = s.length > 3 ? ho(s) : 4;
      if (i > s.length) {
        if (!e)
          return;
      } else this.v > 1 && this.onmember && this.onmember(this.r - s.length);
      this.p = s.subarray(i), this.v = 0;
    }
    Se.prototype.c.call(this, e), this.s.f && !this.s.l && !e && (this.v = ps(this.s.p) + 9, this.s = { i: 0 }, this.o = new cA(0), this.push(new cA(0), e));
  }, t;
}(), Ge = typeof TextDecoder < "u" && /* @__PURE__ */ new TextDecoder(), uo = 0;
try {
  Ge.decode(Eo, { stream: !0 }), uo = 1;
} catch {
}
var po = function(t) {
  for (var A = "", e = 0; ; ) {
    var s = t[e++], i = (s > 127) + (s > 223) + (s > 239);
    if (e + i > t.length)
      return { s: A, r: Dt(t, e - 1) };
    i ? i == 3 ? (s = ((s & 15) << 18 | (t[e++] & 63) << 12 | (t[e++] & 63) << 6 | t[e++] & 63) - 65536, A += String.fromCharCode(55296 | s >> 10, 56320 | s & 1023)) : i & 1 ? A += String.fromCharCode((s & 31) << 6 | t[e++] & 63) : A += String.fromCharCode((s & 15) << 12 | (t[e++] & 63) << 6 | t[e++] & 63) : A += String.fromCharCode(s);
  }
};
function yo(t, A) {
  if (A) {
    for (var e = "", s = 0; s < t.length; s += 16384)
      e += String.fromCharCode.apply(null, t.subarray(s, s + 16384));
    return e;
  } else {
    if (Ge)
      return Ge.decode(t);
    var i = po(t), n = i.s, e = i.r;
    return e.length && wA(8), n;
  }
}
var wo = function(t, A) {
  return A + 30 + JA(t, A + 26) + JA(t, A + 28);
}, fo = function(t, A, e) {
  var s = JA(t, A + 28), i = yo(t.subarray(A + 46, A + 46 + s), !(JA(t, A + 8) & 2048)), n = A + 46 + s, r = YA(t, A + 20), a = e && r == 4294967295 ? Do(t, n) : [r, YA(t, A + 24), YA(t, A + 42)], o = a[0], I = a[1], B = a[2];
  return [JA(t, A + 10), o, I, i, n + JA(t, A + 30) + JA(t, A + 32), B];
}, Do = function(t, A) {
  for (; JA(t, A) != 1; A += 4 + JA(t, A + 2))
    ;
  return [xe(t, A + 12), xe(t, A + 4), xe(t, A + 20)];
};
function mo(t, A) {
  for (var e = {}, s = t.length - 22; YA(t, s) != 101010256; --s)
    (!s || t.length - s > 65558) && wA(13);
  var i = JA(t, s + 8);
  if (!i)
    return {};
  var n = YA(t, s + 16), r = n == 4294967295 || i == 65535;
  if (r) {
    var a = YA(t, s - 12);
    r = YA(t, a) == 101075792, r && (i = YA(t, a + 32), n = YA(t, a + 48));
  }
  for (var o = A && A.filter, I = 0; I < i; ++I) {
    var B = fo(t, n, r), g = B[0], c = B[1], C = B[2], h = B[3], E = B[4], l = B[5], u = wo(t, l);
    n = E, (!o || o({
      name: h,
      size: c,
      originalSize: C,
      compression: g
    })) && (g ? g == 8 ? e[h] = lo(t.subarray(u, u + c), { out: new cA(C) }) : wA(14, "unknown compression type " + g) : e[h] = Dt(t, u, u + c));
  }
  return e;
}
let jA;
const fs = typeof TextDecoder < "u" ? new TextDecoder("utf-8", { ignoreBOM: !0, fatal: !0 }) : { decode: () => {
  throw Error("TextDecoder not available");
} };
typeof TextDecoder < "u" && fs.decode();
let Ut = null;
function Mo() {
  return (Ut === null || Ut.byteLength === 0) && (Ut = new Uint8Array(jA.memory.buffer)), Ut;
}
function xo(t, A) {
  return t = t >>> 0, fs.decode(Mo().subarray(t, t + A));
}
function So(t, A, e, s, i, n, r, a, o, I, B) {
  return jA.raycast_splats(t, A, e, s, i, n, r, a, o, I, B);
}
async function No(t, A) {
  if (typeof Response == "function" && t instanceof Response) {
    if (typeof WebAssembly.instantiateStreaming == "function")
      try {
        return await WebAssembly.instantiateStreaming(t, A);
      } catch (s) {
        if (t.headers.get("Content-Type") != "application/wasm")
          console.warn("`WebAssembly.instantiateStreaming` failed because your server does not serve Wasm with `application/wasm` MIME type. Falling back to `WebAssembly.instantiate` which is slower. Original error:\n", s);
        else
          throw s;
      }
    const e = await t.arrayBuffer();
    return await WebAssembly.instantiate(e, A);
  } else {
    const e = await WebAssembly.instantiate(t, A);
    return e instanceof WebAssembly.Instance ? { instance: e, module: t } : e;
  }
}
function Fo() {
  const t = {};
  return t.wbg = {}, t.wbg.__wbg_buffer_609cc3eee51ed158 = function(A) {
    return A.buffer;
  }, t.wbg.__wbg_length_3b4f022188ae8db6 = function(A) {
    return A.length;
  }, t.wbg.__wbg_length_6ca527665d89694d = function(A) {
    return A.length;
  }, t.wbg.__wbg_length_8cfd2c6409af88ad = function(A) {
    return A.length;
  }, t.wbg.__wbg_new_9fee97a409b32b68 = function(A) {
    return new Uint16Array(A);
  }, t.wbg.__wbg_new_e3b321dcfef89fc7 = function(A) {
    return new Uint32Array(A);
  }, t.wbg.__wbg_newwithbyteoffsetandlength_e6b7e69acd4c7354 = function(A, e, s) {
    return new Float32Array(A, e >>> 0, s >>> 0);
  }, t.wbg.__wbg_newwithbyteoffsetandlength_f1dead44d1fc7212 = function(A, e, s) {
    return new Uint32Array(A, e >>> 0, s >>> 0);
  }, t.wbg.__wbg_newwithlength_5a5efe313cfd59f1 = function(A) {
    return new Float32Array(A >>> 0);
  }, t.wbg.__wbg_set_10bad9bee0e9c58b = function(A, e, s) {
    A.set(e, s >>> 0);
  }, t.wbg.__wbg_set_d23661d19148b229 = function(A, e, s) {
    A.set(e, s >>> 0);
  }, t.wbg.__wbg_set_f4f1f0daa30696fc = function(A, e, s) {
    A.set(e, s >>> 0);
  }, t.wbg.__wbg_subarray_3aaeec89bb2544f0 = function(A, e, s) {
    return A.subarray(e >>> 0, s >>> 0);
  }, t.wbg.__wbg_subarray_769e1e0f81bb259b = function(A, e, s) {
    return A.subarray(e >>> 0, s >>> 0);
  }, t.wbg.__wbindgen_init_externref_table = function() {
    const A = jA.__wbindgen_export_0, e = A.grow(4);
    A.set(0, void 0), A.set(e + 0, void 0), A.set(e + 1, null), A.set(e + 2, !0), A.set(e + 3, !1);
  }, t.wbg.__wbindgen_memory = function() {
    return jA.memory;
  }, t.wbg.__wbindgen_throw = function(A, e) {
    throw new Error(xo(A, e));
  }, t;
}
function ko(t, A) {
  return jA = t.exports, Ds.__wbindgen_wasm_module = A, Ut = null, jA.__wbindgen_start(), jA;
}
async function Ds(t) {
  if (jA !== void 0) return jA;
  typeof t < "u" && (Object.getPrototypeOf(t) === Object.prototype ? { module_or_path: t } = t : console.warn("using deprecated parameters for the initialization function; pass a single object instead")), typeof t > "u" && (t = new URL("data:application/wasm;base64,", import.meta.url));
  const A = Fo();
  (typeof t == "string" || typeof Request == "function" && t instanceof Request || typeof URL == "function" && t instanceof URL) && (t = fetch(t));
  const { instance: e, module: s } = await No(await t, A);
  return ko(e, s);
}
const HA = -12, Go = 9, OA = (Go - HA) / 254, Ro = -30, mt = Math.exp(Ro), vo = 11, Uo = 11, X = 1 << vo, it = 1 << Uo, ms = 1;
function ht(t) {
  return t === "bool" || t === "bvec2" || t === "bvec3" || t === "bvec4";
}
function lt(t) {
  return t === "int" || t === "uint" || t === "float";
}
function hA(t) {
  return t === "int" || t === "ivec2" || t === "ivec3" || t === "ivec4";
}
function lA(t) {
  return t === "uint" || t === "uvec2" || t === "uvec3" || t === "uvec4";
}
function _t(t) {
  return t === "float" || t === "vec2" || t === "vec3" || t === "vec4";
}
function Ms(t) {
  return t === "mat2" || t === "mat2x2" || t === "mat2x3" || t === "mat2x4" || t === "mat3" || t === "mat3x2" || t === "mat3x3" || t === "mat3x4" || t === "mat4" || t === "mat4x2" || t === "mat4x3" || t === "mat4x4";
}
function at(t) {
  return _t(t) || Ms(t);
}
function Ft(t) {
  return t === "vec2" || t === "ivec2" || t === "uvec2";
}
function kt(t) {
  return t === "vec3" || t === "ivec3" || t === "uvec3";
}
function Vt(t) {
  return t === "vec4" || t === "ivec4" || t === "uvec4";
}
function bo(t) {
  return Ft(t) || kt(t) || Vt(t);
}
function ot(t) {
  return t === "mat2" || t === "mat2x2";
}
function gt(t) {
  return t === "mat3" || t === "mat3x3";
}
function It(t) {
  return t === "mat4" || t === "mat4x4";
}
function xs(t) {
  switch (t) {
    case "vec2":
      return "float";
    case "vec3":
      return "float";
    case "vec4":
      return "float";
    case "ivec2":
      return "int";
    case "ivec3":
      return "int";
    case "ivec4":
      return "int";
    case "uvec2":
      return "uint";
    case "uvec3":
      return "uint";
    case "uvec4":
      return "uint";
    default:
      throw new Error(`Invalid vector type: ${t}`);
  }
}
function Ss(t) {
  switch (t) {
    case "vec2":
    case "ivec2":
    case "uvec2":
      return 2;
    case "vec3":
    case "ivec3":
    case "uvec3":
      return 3;
    case "vec4":
    case "ivec4":
    case "uvec4":
      return 4;
    default:
      throw new Error(`Invalid vector type: ${t}`);
  }
}
function Lo(t) {
  if (lt(t))
    return "float";
  if (Ft(t))
    return "vec2";
  if (kt(t))
    return "vec3";
  if (Vt(t))
    return "vec4";
  throw new Error(`Invalid vector type: ${t}`);
}
function Ns(t) {
  if (lt(t))
    return "uint";
  if (Ft(t))
    return "uvec2";
  if (kt(t))
    return "uvec3";
  if (Vt(t))
    return "uvec4";
  throw new Error(`Invalid vector type: ${t}`);
}
function Yo(t) {
  if (lt(t))
    return "int";
  if (Ft(t))
    return "ivec2";
  if (kt(t))
    return "ivec3";
  if (Vt(t))
    return "ivec4";
  throw new Error(`Invalid vector type: ${t}`);
}
function Fs(t) {
  if (typeof t == "string")
    return t;
  if (typeof t == "object" && t.type)
    return t.type;
  throw new Error(`Invalid DynoType: ${String(t)}`);
}
function nA(t) {
  return Math.trunc(t).toString();
}
function rA(t) {
  return `${Math.max(0, Math.trunc(t)).toString()}u`;
}
function H(t) {
  return t === Number.POSITIVE_INFINITY ? "INFINITY" : t === Number.NEGATIVE_INFINITY ? "-INFINITY" : Number.isInteger(t) ? t.toFixed(1) : t.toString();
}
function _(t) {
  return t instanceof nt ? t.type : t.dynoOut().type;
}
class nt {
  constructor(A) {
    this.__isDynoValue = !0, this.type = A;
  }
}
class K extends nt {
  constructor(A, e) {
    super(A.outTypes[e]), this.dyno = A, this.key = e;
  }
}
class Mt extends nt {
  constructor(A, e) {
    super(A), this.literal = e;
  }
  getLiteral() {
    return this.literal;
  }
}
function re(t, A) {
  return new Mt(t, A);
}
class ks extends Mt {
  constructor(A, e) {
    super(A, ""), this.value = e;
  }
  getLiteral() {
    const { type: A, value: e } = this;
    switch (A) {
      case "bool":
        return e ? "true" : "false";
      case "uint":
        return rA(e);
      case "int":
        return nA(e);
      case "float":
        return H(e);
      case "bvec2": {
        const s = e;
        return `bvec2(${s[0]}, ${s[1]})`;
      }
      case "uvec2": {
        if (e instanceof Q.Vector2)
          return `uvec2(${rA(e.x)}, ${rA(e.y)})`;
        const s = e;
        return `uvec2(${rA(s[0])}, ${rA(s[1])})`;
      }
      case "ivec2": {
        if (e instanceof Q.Vector2)
          return `ivec2(${nA(e.x)}, ${nA(e.y)})`;
        const s = e;
        return `ivec2(${nA(s[0])}, ${nA(s[1])})`;
      }
      case "vec2": {
        if (e instanceof Q.Vector2)
          return `vec2(${H(e.x)}, ${H(e.y)})`;
        const s = e;
        return `vec2(${H(s[0])}, ${H(s[1])})`;
      }
      case "bvec3": {
        const s = e;
        return `bvec3(${s[0]}, ${s[1]}, ${s[2]})`;
      }
      case "uvec3": {
        if (e instanceof Q.Vector3)
          return `uvec3(${rA(e.x)}, ${rA(e.y)}, ${rA(e.z)})`;
        const s = e;
        return `uvec3(${rA(s[0])}, ${rA(s[1])}, ${rA(s[2])})`;
      }
      case "ivec3": {
        if (e instanceof Q.Vector3)
          return `ivec3(${nA(e.x)}, ${nA(e.y)}, ${nA(e.z)})`;
        const s = e;
        return `ivec3(${nA(s[0])}, ${nA(s[1])}, ${nA(s[2])})`;
      }
      case "vec3": {
        if (e instanceof Q.Vector3)
          return `vec3(${H(e.x)}, ${H(e.y)}, ${H(e.z)})`;
        const s = e;
        return `vec3(${H(s[0])}, ${H(s[1])}, ${H(s[2])})`;
      }
      case "bvec4": {
        const s = e;
        return `bvec4(${s[0]}, ${s[1]}, ${s[2]}, ${s[3]})`;
      }
      case "uvec4": {
        if (e instanceof Q.Vector4)
          return `uvec4(${rA(e.x)}, ${rA(e.y)}, ${rA(e.z)}, ${rA(e.w)})`;
        const s = e;
        return `uvec4(${rA(s[0])}, ${rA(s[1])}, ${rA(s[2])}, ${rA(s[3])})`;
      }
      case "ivec4": {
        if (e instanceof Q.Vector4)
          return `ivec4(${nA(e.x)}, ${nA(e.y)}, ${nA(e.z)}, ${nA(e.w)})`;
        const s = e;
        return `ivec4(${nA(s[0])}, ${nA(s[1])}, ${nA(s[2])}, ${nA(s[3])})`;
      }
      case "vec4": {
        if (e instanceof Q.Vector4)
          return `vec4(${H(e.x)}, ${H(e.y)}, ${H(e.z)}, ${H(e.w)})`;
        if (e instanceof Q.Quaternion)
          return `vec4(${H(e.x)}, ${H(e.y)}, ${H(e.z)}, ${H(e.w)})`;
        const s = e;
        return `vec4(${H(s[0])}, ${H(s[1])}, ${H(s[2])}, ${H(s[3])})`;
      }
      case "mat2":
      case "mat2x2": {
        const s = e, i = s instanceof Q.Matrix2 ? s.elements : e, n = new Array(4).fill(0).map((r, a) => H(i[a]));
        return `${A}(${n.join(", ")})`;
      }
      case "mat2x3": {
        const s = e, i = new Array(6).fill(0).map((n, r) => H(s[r]));
        return `${A}(${i.join(", ")})`;
      }
      case "mat2x4": {
        const s = e, i = new Array(8).fill(0).map((n, r) => H(s[r]));
        return `${A}(${i.join(", ")})`;
      }
      case "mat3":
      case "mat3x3": {
        const s = e, i = s instanceof Q.Matrix3 ? s.elements : e, n = new Array(9).fill(0).map((r, a) => H(i[a]));
        return `${A}(${n.join(", ")})`;
      }
      case "mat3x2": {
        const s = e, i = new Array(6).fill(0).map((n, r) => H(s[r]));
        return `${A}(${i.join(", ")})`;
      }
      case "mat3x4": {
        const s = e, i = new Array(12).fill(0).map((n, r) => H(s[r]));
        return `${A}(${i.join(", ")})`;
      }
      case "mat4":
      case "mat4x4": {
        const s = e, i = s instanceof Q.Matrix4 ? s.elements : e, n = new Array(16).fill(0).map((r, a) => H(i[a]));
        return `${A}(${n.join(", ")})`;
      }
      case "mat4x2": {
        const s = e, i = new Array(8).fill(0).map((n, r) => H(s[r]));
        return `${A}(${i.join(", ")})`;
      }
      case "mat4x3": {
        const s = e, i = new Array(12).fill(0).map((n, r) => H(s[r]));
        return `${A}(${i.join(", ")})`;
      }
      default:
        throw new Error(`Type not implemented: ${String(A)}`);
    }
  }
}
function q(t, A) {
  return new ks(t, A);
}
function bt(t) {
  const A = String(t);
  if (ht(t))
    return `${A}(false)`;
  if (at(t))
    return `${A}(0.0)`;
  if (hA(t))
    return `${A}(0)`;
  if (lA(t))
    return `${A}(0u)`;
  throw new Error(`Type not implemented: ${A}`);
}
function To(t) {
  const A = String(t);
  if (ht(t))
    return `${A}(true)`;
  if (at(t))
    return `${A}(1.0)`;
  if (hA(t))
    return `${A}(1)`;
  if (lA(t))
    return `${A}(1u)`;
  throw new Error(`Type not implemented: ${A}`);
}
function Jo(t) {
  const A = String(t);
  if (ht(t))
    return `${A}(true)`;
  if (at(t))
    return `${A}(-1.0)`;
  if (hA(t))
    return `${A}(-1)`;
  if (lA(t))
    return `${A}(0xFFFFFFFFu)`;
  throw new Error(`Type not implemented: ${A}`);
}
const ns = "    ";
class Gs {
  constructor({ indent: A } = {}) {
    this.globals = /* @__PURE__ */ new Set(), this.statements = [], this.uniforms = {}, this.declares = /* @__PURE__ */ new Set(), this.updaters = [], this.sequence = 0, this.indent = ns, this.indent = A ?? ns;
  }
  nextSequence() {
    return this.sequence++;
  }
}
class V {
  constructor({
    inTypes: A,
    outTypes: e,
    inputs: s,
    update: i,
    globals: n,
    statements: r,
    generate: a
  }) {
    this.inTypes = A ?? {}, this.outTypes = e ?? {}, this.inputs = s ?? {}, this.update = i, this.globals = n, this.statements = r, this.generate = a ?? (({ inputs: o, outputs: I, compile: B }) => {
      var g, c;
      return {
        globals: (g = this.globals) == null ? void 0 : g.call(this, { inputs: o, outputs: I, compile: B }),
        statements: (c = this.statements) == null ? void 0 : c.call(this, { inputs: o, outputs: I, compile: B })
      };
    });
  }
  get outputs() {
    const A = {};
    for (const e in this.outTypes)
      A[e] = new K(this, e);
    return A;
  }
  apply(A) {
    return Object.assign(this.inputs, A), this.outputs;
  }
  compile({
    inputs: A,
    outputs: e,
    compile: s
  }) {
    const i = [
      `// ${this.constructor.name}(${Object.values(A).join(", ")}) => (${Object.values(e).join(", ")})`
    ], n = [];
    for (const I in e) {
      const B = e[I];
      B && !s.declares.has(B) && (s.declares.add(B), n.push(I));
    }
    const { globals: r, statements: a, uniforms: o } = this.generate({
      inputs: A,
      outputs: e,
      compile: s
    });
    for (const I of r ?? [])
      s.globals.add(I);
    for (const I in o)
      s.uniforms[I] = o[I];
    this.update && s.updaters.push(this.update);
    for (const I of n) {
      const B = e[I];
      B && (s.uniforms[B] || i.push(`${_e(B, this.outTypes[I])};`));
    }
    return a != null && a.length && (i.push("{"), i.push(...a.map((I) => s.indent + I)), i.push("}")), i;
  }
}
class zA extends V {
  constructor({
    inTypes: A,
    outTypes: e,
    inputs: s,
    update: i,
    globals: n,
    construct: r
  }) {
    super({
      inTypes: A,
      outTypes: e,
      inputs: s,
      update: i,
      globals: n,
      generate: (a) => this.generateBlock(a)
    }), this.construct = r;
  }
  generateBlock({
    inputs: A,
    outputs: e,
    compile: s
  }) {
    var h, E;
    const i = {}, n = {};
    for (const l in A)
      A[l] != null && (i[l] = new Mt(this.inTypes[l], A[l]));
    for (const l in e)
      e[l] != null && (n[l] = new nt(this.outTypes[l]));
    const r = { roots: [] }, a = this.construct(i, n, r);
    for (const l of ((h = this.globals) == null ? void 0 : h.call(this, { inputs: A, outputs: e, compile: s })) ?? [])
      s.globals.add(l);
    const o = [], I = /* @__PURE__ */ new Map();
    function B(l, u, d) {
      let p = I.get(l);
      if (!p) {
        p = {
          sequence: s.nextSequence(),
          outNames: /* @__PURE__ */ new Map(),
          newOuts: /* @__PURE__ */ new Set()
        }, I.set(l, p);
        for (const w in l.inputs) {
          let f = l.inputs[w];
          for (; f; ) {
            if (f instanceof nt) {
              f instanceof K && B(f.dyno, f.key);
              break;
            }
            f = f.dynoOut();
          }
        }
        o.push(l);
      }
      u && (d || p.newOuts.add(u), p.outNames.set(u, d ?? `${u}_${p.sequence}`));
    }
    for (const l of r.roots)
      B(l);
    for (const l in n) {
      let u = (a == null ? void 0 : a[l]) ?? n[l];
      for (; u; ) {
        if (u instanceof nt) {
          u instanceof K && B(u.dyno, u.key, e[l]);
          break;
        }
        u = u.dynoOut();
      }
      n[l] = u;
    }
    const g = [];
    for (const l of o) {
      const u = {}, d = {};
      for (const f in l.inputs) {
        let x = l.inputs[f];
        for (; x; ) {
          if (x instanceof nt) {
            if (x instanceof Mt)
              u[f] = x.getLiteral();
            else if (x instanceof K) {
              const M = (E = I.get(x.dyno)) == null ? void 0 : E.outNames.get(x.key);
              if (!M)
                throw new Error(
                  `Source not found for ${x.dyno.constructor.name}.${x.key}`
                );
              u[f] = M;
            }
            break;
          }
          x = x.dynoOut();
        }
      }
      const p = I.get(l) ?? { outNames: /* @__PURE__ */ new Map() };
      for (const [f, x] of p.outNames.entries())
        d[f] = x;
      const w = l.compile({ inputs: u, outputs: d, compile: s });
      g.push(w);
    }
    const c = [];
    for (const l in e)
      n[l] instanceof Mt && c.push(
        `${e[l]} = ${n[l].getLiteral()};`
      );
    return c.length > 0 && g.push(c), { statements: g.flatMap((l, u) => u === 0 ? l : ["", ...l]) };
  }
}
function kA(t, A, e, { update: s, globals: i } = {}) {
  return new zA({ inTypes: t, outTypes: A, construct: e, update: s, globals: i });
}
function jt({
  inTypes: t,
  outTypes: A,
  inputs: e,
  update: s,
  globals: i,
  statements: n,
  generate: r
}) {
  return new V({
    inTypes: t,
    outTypes: A,
    inputs: e,
    update: s,
    globals: i,
    statements: n,
    generate: r
  });
}
function _e(t, A, e) {
  const s = typeof A == "string" ? A : A.type;
  if (!s)
    throw new Error(`Invalid DynoType: ${String(A)}`);
  return `${s} ${t}${e != null ? `[${e}]` : ""}`;
}
function vA(t) {
  var n;
  let A = !1;
  const e = t.split(`
`).map((r) => {
    const a = r.trimEnd();
    return A ? a : a.length > 0 ? (A = !0, a) : null;
  }).filter((r) => r != null);
  for (; e.length > 0 && e[e.length - 1].length === 0; )
    e.pop();
  if (e.length === 0)
    return [];
  const s = (n = e[0].match(/^\s*/)) == null ? void 0 : n[0];
  if (!s)
    return e;
  const i = new RegExp(`^${s}`);
  return e.map((r) => r.replace(i, ""));
}
function CA(t) {
  return vA(t).join(`
`);
}
class N extends V {
  constructor({
    a: A,
    outKey: e,
    outTypeFunc: s
  }) {
    const i = { a: _(A) }, n = s(_(A)), r = { [e]: n };
    super({ inTypes: i, outTypes: r, inputs: { a: A } }), this.outKey = e;
  }
  dynoOut() {
    return new K(this, this.outKey);
  }
}
class $ extends V {
  constructor({
    a: A,
    b: e,
    outKey: s,
    outTypeFunc: i
  }) {
    const n = { a: _(A), b: _(e) }, r = i(_(A), _(e)), a = { [s]: r };
    super({ inTypes: n, outTypes: a, inputs: { a: A, b: e } }), this.outKey = s;
  }
  dynoOut() {
    return new K(this, this.outKey);
  }
}
class ut extends V {
  constructor({
    a: A,
    b: e,
    c: s,
    outKey: i,
    outTypeFunc: n
  }) {
    const r = { a: _(A), b: _(e), c: _(s) }, a = n(_(A), _(e), _(s)), o = { [i]: a };
    super({ inTypes: r, outTypes: o, inputs: { a: A, b: e, c: s } }), this.outKey = i;
  }
  dynoOut() {
    return new K(this, this.outKey);
  }
}
const W = { type: "Gsplat" }, Ot = { type: "PackedSplats" }, Ho = (t) => new vs({ packedSplats: t }), Ht = (t, A) => new bs({ packedSplats: t, index: A }), Rs = (t, A, e, s) => new Ls({ packedSplats: t, index: A, base: e, count: s }), Qt = (t) => new Ys({ gsplat: t }), rt = ({
  gsplat: t,
  flags: A,
  index: e,
  center: s,
  scales: i,
  quaternion: n,
  rgba: r,
  rgb: a,
  opacity: o,
  x: I,
  y: B,
  z: g,
  r: c,
  g: C,
  b: h
}) => new Ts({
  gsplat: t,
  flags: A,
  index: e,
  center: s,
  scales: i,
  quaternion: n,
  rgba: r,
  rgb: a,
  opacity: o,
  x: I,
  y: B,
  z: g,
  r: c,
  g: C,
  b: h
}), Re = (t) => new Hs({ gsplat: t }), Ve = (t, {
  scale: A,
  rotate: e,
  translate: s,
  recolor: i
}) => new qs({ gsplat: t, scale: A, rotate: e, translate: s, recolor: i }), NA = CA(`
  struct Gsplat {
    vec3 center;
    uint flags;
    vec3 scales;
    int index;
    vec4 quaternion;
    vec4 rgba;
  };
  const uint GSPLAT_FLAG_ACTIVE = 1u << 0u;

  bool isGsplatActive(uint flags) {
    return (flags & GSPLAT_FLAG_ACTIVE) != 0u;
  }
`), he = CA(`
  struct PackedSplats {
    usampler2DArray texture;
    int numSplats;
  };
`);
class vs extends N {
  constructor({
    packedSplats: A
  }) {
    super({ a: A, outKey: "numSplats", outTypeFunc: () => "int" }), this.statements = ({ inputs: e, outputs: s }) => [
      `${s.numSplats} = ${e.a}.numSplats;`
    ];
  }
}
const Us = CA(`
  bool readPackedSplat(usampler2DArray texture, int numSplats, int index, out Gsplat gsplat) {
    if ((index >= 0) && (index < numSplats)) {
      uvec4 packed = texelFetch(texture, splatTexCoord(index), 0);
      unpackSplat(packed, gsplat.center, gsplat.scales, gsplat.quaternion, gsplat.rgba);
      return true;
    } else {
      return false;
    }
  }
`);
class bs extends V {
  constructor({
    packedSplats: A,
    index: e
  }) {
    super({
      inTypes: { packedSplats: Ot, index: "int" },
      outTypes: { gsplat: W },
      inputs: { packedSplats: A, index: e },
      globals: () => [NA, he, Us],
      statements: ({ inputs: s, outputs: i }) => {
        const { gsplat: n } = i;
        if (!n)
          return [];
        const { packedSplats: r, index: a } = s;
        let o;
        return r && a ? o = vA(`
            if (readPackedSplat(${r}.texture, ${r}.numSplats, ${a}, ${n})) {
              bool zeroSize = all(equal(${n}.scales, vec3(0.0, 0.0, 0.0)));
              ${n}.flags = zeroSize ? 0u : GSPLAT_FLAG_ACTIVE;
            } else {
              ${n}.flags = 0u;
            }
          `) : o = [`${n}.flags = 0u;`], o.push(`${n}.index = ${a ?? "0"};`), o;
      }
    });
  }
  dynoOut() {
    return new K(this, "gsplat");
  }
}
class Ls extends V {
  constructor({
    packedSplats: A,
    index: e,
    base: s,
    count: i
  }) {
    super({
      inTypes: {
        packedSplats: Ot,
        index: "int",
        base: "int",
        count: "int"
      },
      outTypes: { gsplat: W },
      inputs: { packedSplats: A, index: e, base: s, count: i },
      globals: () => [NA, he, Us],
      statements: ({ inputs: n, outputs: r }) => {
        const { gsplat: a } = r;
        if (!a)
          return [];
        const { packedSplats: o, index: I, base: B, count: g } = n;
        let c;
        return o && I && B && g ? c = vA(`
            ${a}.flags = 0u;
            if ((${I} >= ${B}) && (${I} < (${B} + ${g}))) {
              if (readPackedSplat(${o}.texture, ${o}.numSplats, ${I}, ${a})) {
                bool zeroSize = all(equal(${a}.scales, vec3(0.0, 0.0, 0.0)));
                ${a}.flags = zeroSize ? 0u : GSPLAT_FLAG_ACTIVE;
              }
            }
          `) : c = [`${a}.flags = 0u;`], c.push(`${a}.index = ${I ?? "0"};`), c;
      }
    });
  }
  dynoOut() {
    return new K(this, "gsplat");
  }
}
class Ys extends V {
  constructor({ gsplat: A }) {
    super({
      inTypes: { gsplat: W },
      outTypes: {
        flags: "uint",
        active: "bool",
        index: "int",
        center: "vec3",
        scales: "vec3",
        quaternion: "vec4",
        rgba: "vec4",
        rgb: "vec3",
        opacity: "float",
        x: "float",
        y: "float",
        z: "float",
        r: "float",
        g: "float",
        b: "float"
      },
      inputs: { gsplat: A },
      globals: () => [NA],
      statements: ({ inputs: e, outputs: s }) => {
        const { gsplat: i } = e, {
          flags: n,
          active: r,
          index: a,
          center: o,
          scales: I,
          quaternion: B,
          rgba: g,
          rgb: c,
          opacity: C,
          x: h,
          y: E,
          z: l,
          r: u,
          g: d,
          b: p
        } = s;
        return [
          n ? `${n} = ${i ? `${i}.flags` : "0u"};` : null,
          r ? `${r} = isGsplatActive(${i ? `${i}.flags` : "0u"});` : null,
          a ? `${a} = ${i ? `${i}.index` : "0"};` : null,
          o ? `${o} = ${i ? `${i}.center` : "vec3(0.0, 0.0, 0.0)"};` : null,
          I ? `${I} = ${i ? `${i}.scales` : "vec3(0.0, 0.0, 0.0)"};` : null,
          B ? `${B} = ${i ? `${i}.quaternion` : "vec4(0.0, 0.0, 0.0, 1.0)"};` : null,
          g ? `${g} = ${i ? `${i}.rgba` : "vec4(0.0, 0.0, 0.0, 0.0)"};` : null,
          c ? `${c} = ${i ? `${i}.rgba.rgb` : "vec3(0.0, 0.0, 0.0)"};` : null,
          C ? `${C} = ${i ? `${i}.rgba.a` : "0.0"};` : null,
          h ? `${h} = ${i ? `${i}.center.x` : "0.0"};` : null,
          E ? `${E} = ${i ? `${i}.center.y` : "0.0"};` : null,
          l ? `${l} = ${i ? `${i}.center.z` : "0.0"};` : null,
          u ? `${u} = ${i ? `${i}.rgba.r` : "0.0"};` : null,
          d ? `${d} = ${i ? `${i}.rgba.g` : "0.0"};` : null,
          p ? `${p} = ${i ? `${i}.rgba.b` : "0.0"};` : null
        ].filter(Boolean);
      }
    });
  }
}
class Ts extends V {
  constructor({
    gsplat: A,
    flags: e,
    index: s,
    center: i,
    scales: n,
    quaternion: r,
    rgba: a,
    rgb: o,
    opacity: I,
    x: B,
    y: g,
    z: c,
    r: C,
    g: h,
    b: E
  }) {
    super({
      inTypes: {
        gsplat: W,
        flags: "uint",
        index: "int",
        center: "vec3",
        scales: "vec3",
        quaternion: "vec4",
        rgba: "vec4",
        rgb: "vec3",
        opacity: "float",
        x: "float",
        y: "float",
        z: "float",
        r: "float",
        g: "float",
        b: "float"
      },
      outTypes: { gsplat: W },
      inputs: {
        gsplat: A,
        flags: e,
        index: s,
        center: i,
        scales: n,
        quaternion: r,
        rgba: a,
        rgb: o,
        opacity: I,
        x: B,
        y: g,
        z: c,
        r: C,
        g: h,
        b: E
      },
      globals: () => [NA],
      statements: ({ inputs: l, outputs: u }) => {
        const { gsplat: d } = u;
        if (!d)
          return [];
        const {
          gsplat: p,
          flags: w,
          index: f,
          center: x,
          scales: M,
          quaternion: D,
          rgba: y,
          rgb: R,
          opacity: S,
          x: m,
          y: U,
          z: F,
          r: k,
          g: v,
          b: L
        } = l;
        return [
          `${d}.flags = ${w ?? (p ? `${p}.flags` : "0u")};`,
          `${d}.index = ${f ?? (p ? `${p}.index` : "0")};`,
          `${d}.center = ${x ?? (p ? `${p}.center` : "vec3(0.0, 0.0, 0.0)")};`,
          `${d}.scales = ${M ?? (p ? `${p}.scales` : "vec3(0.0, 0.0, 0.0)")};`,
          `${d}.quaternion = ${D ?? (p ? `${p}.quaternion` : "vec4(0.0, 0.0, 0.0, 1.0)")};`,
          `${d}.rgba = ${y ?? (p ? `${p}.rgba` : "vec4(0.0, 0.0, 0.0, 0.0)")};`,
          R ? `${d}.rgba.rgb = ${R};` : null,
          S ? `${d}.rgba.a = ${S};` : null,
          m ? `${d}.center.x = ${m};` : null,
          U ? `${d}.center.y = ${U};` : null,
          F ? `${d}.center.z = ${F};` : null,
          k ? `${d}.rgba.r = ${k};` : null,
          v ? `${d}.rgba.g = ${v};` : null,
          L ? `${d}.rgba.b = ${L};` : null
        ].filter(Boolean);
      }
    });
  }
  dynoOut() {
    return new K(this, "gsplat");
  }
}
const Js = CA(`
  vec3 gsplatNormal(vec3 scales, vec4 quaternion) {
    float minScale = min(scales.x, min(scales.y, scales.z));
    vec3 normal;
    if (scales.z == minScale) {
      normal = vec3(0.0, 0.0, 1.0);
    } else if (scales.y == minScale) {
      normal = vec3(0.0, 1.0, 0.0);
    } else {
      normal = vec3(1.0, 0.0, 0.0);
    }
    return quatVec(quaternion, normal);
  }
`);
class Hs extends N {
  constructor({ gsplat: A }) {
    super({ a: A, outKey: "normal", outTypeFunc: () => "vec3" }), this.globals = () => [NA, Js], this.statements = ({ inputs: e, outputs: s }) => [
      `${s.normal} = gsplatNormal(${e.a}.scales, ${e.a}.quaternion);`
    ];
  }
}
class qs extends V {
  constructor({
    gsplat: A,
    scale: e,
    rotate: s,
    translate: i,
    recolor: n
  }) {
    super({
      inTypes: {
        gsplat: W,
        scale: "float",
        rotate: "vec4",
        translate: "vec3",
        recolor: "vec4"
      },
      outTypes: { gsplat: W },
      inputs: { gsplat: A, scale: e, rotate: s, translate: i, recolor: n },
      globals: () => [NA],
      statements: ({ inputs: r, outputs: a, compile: o }) => {
        const { gsplat: I } = a;
        if (!I || !r.gsplat)
          return [];
        const { scale: B, rotate: g, translate: c, recolor: C } = r, h = o.indent;
        return [
          `${I} = ${r.gsplat};`,
          `if (isGsplatActive(${I}.flags)) {`,
          B ? `${h}${I}.center *= ${B};` : null,
          g ? `${h}${I}.center = quatVec(${g}, ${I}.center);` : null,
          c ? `${h}${I}.center += ${c};` : null,
          B ? `${h}${I}.scales *= ${B};` : null,
          g ? `${h}${I}.quaternion = quatQuat(${g}, ${I}.quaternion);` : null,
          C ? `${h}${I}.rgba *= ${C};` : null,
          "}"
        ].filter(Boolean);
      }
    });
  }
  dynoOut() {
    return new K(this, "gsplat");
  }
}
const Ks = (t) => new zs({ gsplat: t }), qo = (t) => new je({ rgba8: t });
class zs extends V {
  constructor({ gsplat: A }) {
    super({
      inTypes: { gsplat: W },
      inputs: { gsplat: A },
      globals: () => [NA],
      statements: ({ inputs: e, outputs: s }) => {
        const { output: i } = s;
        if (!i)
          return [];
        const { gsplat: n } = e;
        return n ? vA(`
            if (isGsplatActive(${n}.flags)) {
              ${i} = packSplat(${n}.center, ${n}.scales, ${n}.quaternion, ${n}.rgba);
            } else {
              ${i} = uvec4(0u, 0u, 0u, 0u);
            }
          `) : [`${i} = uvec4(0u, 0u, 0u, 0u);`];
      }
    });
  }
  dynoOut() {
    return new K(this, "output");
  }
}
class je extends V {
  constructor({ rgba8: A }) {
    super({
      inTypes: { rgba8: "vec4" },
      inputs: { rgba8: A },
      statements: ({ inputs: e, outputs: s }) => [
        `target = ${e.rgba8 ?? "vec4(0.0, 0.0, 0.0, 0.0)"};`
      ]
    });
  }
  dynoOut() {
    return new K(this, "rgba8");
  }
}
const Ko = (t, A, e) => new G({ key: t, type: A, value: e }), zo = (t = !1, A) => new ae({ key: A, value: t }), _o = (t = 0, A) => new _s({ key: A, value: t }), Vo = (t = 0, A) => new qt({ key: A, value: t }), TA = (t = 0, A) => new ct({ key: A, value: t }), jo = (t, A) => new Vs({ key: A, value: t }), Oo = (t, A) => new js({ key: A, value: t }), Zo = (t, A) => new Os({ key: A, value: t }), Po = (t, A) => new Zs({ key: A, value: t }), Xo = (t, A) => new Ps({ key: A, value: t }), Wo = (t, A) => new Xs({ key: A, value: t }), $o = (t, A) => new Ws({ key: A, value: t }), At = (t, A) => new St({ key: A, value: t }), Ag = (t, A) => new $s({ key: A, value: t }), tg = (t, A) => new Ai({ key: A, value: t }), eg = (t, A) => new ti({ key: A, value: t }), sg = (t, A) => new Zt({ key: A, value: t }), ig = (t, A) => new ei({ key: A, value: t }), ng = (t, A) => new si({ key: A, value: t }), rg = (t, A) => new ii({ key: A, value: t }), ag = (t, A) => new ni({ key: A, value: t }), og = (t, A) => new ri({ key: A, value: t }), gg = (t, A) => new ai({ key: A, value: t }), Ig = (t, A) => new oi({ key: A, value: t }), Bg = (t, A) => new gi({ key: A, value: t }), Qg = (t, A) => new Ii({ key: A, value: t }), cg = (t, A) => new Bi({ key: A, value: t }), Cg = (t, A) => new Qi({ key: A, value: t }), Eg = (t, A) => new ci({ key: A, value: t }), hg = (t, A) => new Ci({ key: A, value: t }), lg = (t, A) => new Ei({ key: A, value: t }), ug = (t, A) => new hi({ key: A, value: t }), dg = (t, A) => new Tt({ key: A, value: t }), pg = (t, A) => new li({ key: t, value: A }), yg = (t, A) => new ui({ key: A, value: t }), wg = (t, A) => new di({ key: A, value: t }), fg = (t, A) => new pi({ key: A, value: t }), Dg = (t, A) => new yi({ key: A, value: t }), mg = (t, A) => new wi({ key: A, value: t }), Mg = (t, A) => new fi({ key: A, value: t }), xg = (t, A) => new Di({ key: A, value: t }), Sg = (t, A) => new mi({ key: A, value: t }), Ng = (t, A) => new Mi({ key: A, value: t }), Fg = (t, A) => new xi({ key: A, value: t });
class G extends V {
  constructor({
    key: A,
    type: e,
    count: s,
    value: i,
    update: n,
    globals: r
  }) {
    A = A ?? "value", super({
      outTypes: { [A]: e },
      update: () => {
        if (n) {
          const a = n(this.value);
          a !== void 0 && (this.value = a);
        }
        this.uniform.value = this.value;
      },
      generate: ({ inputs: a, outputs: o }) => {
        const I = (r == null ? void 0 : r({ inputs: a, outputs: o })) ?? [], B = {}, g = o[A];
        return g && (I.push(`uniform ${_e(g, e, s)};`), B[g] = this.uniform), { globals: I, uniforms: B };
      }
    }), this.type = e, this.count = s, this.value = i, this.uniform = { value: i }, this.outKey = A;
  }
  dynoOut() {
    return new K(this, this.outKey);
  }
}
class ae extends G {
  constructor({
    key: A,
    value: e,
    update: s
  }) {
    super({ key: A, type: "bool", value: e, update: s });
  }
}
class _s extends G {
  constructor({
    key: A,
    value: e,
    update: s
  }) {
    super({ key: A, type: "uint", value: e, update: s });
  }
}
class qt extends G {
  constructor({
    key: A,
    value: e,
    update: s
  }) {
    super({ key: A, type: "int", value: e, update: s });
  }
}
class ct extends G {
  constructor({
    key: A,
    value: e,
    update: s
  }) {
    super({ key: A, type: "float", value: e, update: s });
  }
}
class Vs extends G {
  constructor({
    key: A,
    value: e,
    update: s
  }) {
    super({ key: A, type: "bvec2", value: e, update: s });
  }
}
class js extends G {
  constructor({
    key: A,
    value: e,
    update: s
  }) {
    super({ key: A, type: "uvec2", value: e, update: s });
  }
}
class Os extends G {
  constructor({
    key: A,
    value: e,
    update: s
  }) {
    super({ key: A, type: "ivec2", value: e, update: s });
  }
}
class Zs extends G {
  constructor({
    key: A,
    value: e,
    update: s
  }) {
    super({ key: A, type: "vec2", value: e, update: s });
  }
}
class Ps extends G {
  constructor({
    key: A,
    value: e,
    update: s
  }) {
    super({ key: A, type: "bvec3", value: e, update: s });
  }
}
class Xs extends G {
  constructor({
    key: A,
    value: e,
    update: s
  }) {
    super({ key: A, type: "uvec3", value: e, update: s });
  }
}
class Ws extends G {
  constructor({
    key: A,
    value: e,
    update: s
  }) {
    super({ key: A, type: "ivec3", value: e, update: s });
  }
}
class St extends G {
  constructor({
    key: A,
    value: e,
    update: s
  }) {
    super({ key: A, type: "vec3", value: e, update: s });
  }
}
class $s extends G {
  constructor({
    key: A,
    value: e,
    update: s
  }) {
    super({ key: A, type: "bvec4", value: e, update: s });
  }
}
class Ai extends G {
  constructor({
    key: A,
    value: e,
    update: s
  }) {
    super({ key: A, type: "uvec4", value: e, update: s });
  }
}
class ti extends G {
  constructor({
    key: A,
    value: e,
    update: s
  }) {
    super({ key: A, type: "ivec4", value: e, update: s });
  }
}
class Zt extends G {
  constructor({
    key: A,
    value: e,
    update: s
  }) {
    super({ key: A, type: "vec4", value: e, update: s });
  }
}
class ei extends G {
  constructor({
    key: A,
    value: e,
    update: s
  }) {
    super({ key: A, type: "mat2", value: e, update: s });
  }
}
class si extends G {
  constructor({
    key: A,
    value: e,
    update: s
  }) {
    super({ key: A, type: "mat2x2", value: e, update: s });
  }
}
class ii extends G {
  constructor({
    key: A,
    value: e,
    update: s
  }) {
    super({ key: A, type: "mat2x3", value: e, update: s });
  }
}
class ni extends G {
  constructor({
    key: A,
    value: e,
    update: s
  }) {
    super({ key: A, type: "mat2x4", value: e, update: s });
  }
}
class ri extends G {
  constructor({
    key: A,
    value: e,
    update: s
  }) {
    super({ key: A, type: "mat3", value: e, update: s });
  }
}
class ai extends G {
  constructor({
    key: A,
    value: e,
    update: s
  }) {
    super({ key: A, type: "mat3x2", value: e, update: s });
  }
}
class oi extends G {
  constructor({
    key: A,
    value: e,
    update: s
  }) {
    super({ key: A, type: "mat3x3", value: e, update: s });
  }
}
class gi extends G {
  constructor({
    key: A,
    value: e,
    update: s
  }) {
    super({ key: A, type: "mat3x4", value: e, update: s });
  }
}
class Ii extends G {
  constructor({
    key: A,
    value: e,
    update: s
  }) {
    super({ key: A, type: "mat4", value: e, update: s });
  }
}
class Bi extends G {
  constructor({
    key: A,
    value: e,
    update: s
  }) {
    super({ key: A, type: "mat4x2", value: e, update: s });
  }
}
class Qi extends G {
  constructor({
    key: A,
    value: e,
    update: s
  }) {
    super({ key: A, type: "mat4x3", value: e, update: s });
  }
}
class ci extends G {
  constructor({
    key: A,
    value: e,
    update: s
  }) {
    super({ key: A, type: "mat4x4", value: e, update: s });
  }
}
class Ci extends G {
  constructor({
    key: A,
    value: e,
    update: s
  }) {
    super({ key: A, type: "usampler2D", value: e, update: s });
  }
}
class Ei extends G {
  constructor({
    key: A,
    value: e,
    update: s
  }) {
    super({ key: A, type: "isampler2D", value: e, update: s });
  }
}
class hi extends G {
  constructor({
    key: A,
    value: e,
    update: s
  }) {
    super({ key: A, type: "sampler2D", value: e, update: s });
  }
}
class Tt extends G {
  constructor({
    key: A,
    value: e,
    update: s
  }) {
    super({ key: A, type: "usampler2DArray", value: e, update: s });
  }
}
class li extends G {
  constructor({
    key: A,
    value: e,
    update: s
  }) {
    super({ key: A, type: "isampler2DArray", value: e, update: s });
  }
}
class ui extends G {
  constructor({
    key: A,
    value: e,
    update: s
  }) {
    super({ key: A, type: "sampler2DArray", value: e, update: s });
  }
}
class di extends G {
  constructor({
    key: A,
    value: e,
    update: s
  }) {
    super({ key: A, type: "usampler3D", value: e, update: s });
  }
}
class pi extends G {
  constructor({
    key: A,
    value: e,
    update: s
  }) {
    super({ key: A, type: "isampler3D", value: e, update: s });
  }
}
class yi extends G {
  constructor({
    key: A,
    value: e,
    update: s
  }) {
    super({ key: A, type: "sampler3D", value: e, update: s });
  }
}
class wi extends G {
  constructor({
    key: A,
    value: e,
    update: s
  }) {
    super({ key: A, type: "usamplerCube", value: e, update: s });
  }
}
class fi extends G {
  constructor({
    key: A,
    value: e,
    update: s
  }) {
    super({ key: A, type: "isamplerCube", value: e, update: s });
  }
}
class Di extends G {
  constructor({
    key: A,
    value: e,
    update: s
  }) {
    super({ key: A, type: "samplerCube", value: e, update: s });
  }
}
class mi extends G {
  constructor({
    key: A,
    value: e,
    update: s
  }) {
    super({ key: A, type: "sampler2DShadow", value: e, update: s });
  }
}
class Mi extends G {
  constructor({
    key: A,
    value: e,
    update: s
  }) {
    super({ key: A, type: "sampler2DArrayShadow", value: e, update: s });
  }
}
class xi extends G {
  constructor({
    key: A,
    value: e,
    update: s
  }) {
    super({ key: A, type: "samplerCubeShadow", value: e, update: s });
  }
}
const Pt = new Float32Array(1), le = new Uint32Array(Pt.buffer);
function kg(t) {
  return Pt[0] = t, le[0];
}
function Gg(t) {
  return le[0] = t, Pt[0];
}
function Ct(t) {
  Pt[0] = t;
  const A = le[0], e = A >> 31 & 1, s = A >> 23 & 255, i = A & 8388607, n = e << 15;
  if (s === 255)
    return i !== 0 ? n | 32767 : n | 31744;
  const r = s - 127 + 15;
  if (r >= 31)
    return n | 31744;
  if (r <= 0) {
    if (r < -10)
      return n;
    const o = (i | 8388608) >> 1 - r + 13;
    return n | o;
  }
  const a = i >> 13;
  return n | r << 10 | a;
}
function fA(t) {
  const A = t >> 15 & 1, e = t >> 10 & 31, s = t & 1023;
  let i;
  if (e === 0)
    if (s === 0)
      i = A << 31;
    else {
      let n = s, r = -14;
      for (; (n & 1024) === 0; )
        n <<= 1, r--;
      n &= 1023;
      const a = r + 127, o = n << 13;
      i = A << 31 | a << 23 | o;
    }
  else if (e === 31)
    s === 0 ? i = A << 31 | 2139095040 : i = A << 31 | 2143289344;
  else {
    const n = e - 15 + 127, r = s << 13;
    i = A << 31 | n << 23 | r;
  }
  return le[0] = i, Pt[0];
}
function FA(t) {
  return Math.max(0, Math.min(255, Math.round(t * 255)));
}
function se(t) {
  return Math.max(-127, Math.min(127, Math.round(t * 127)));
}
function Rg(t) {
  return t / 255;
}
function vg(t) {
  return t / 127;
}
class Ug {
  // Create a DataCache with a given function that fetches data not in the cache.
  constructor({
    asyncFetch: A,
    maxItems: e = 5
  }) {
    this.asyncFetch = A, this.maxItems = e, this.items = [];
  }
  // Fetch data for the key, returning cached data if available.
  async getFetch(A) {
    const e = this.items.findIndex((i) => i.key === A);
    if (e >= 0) {
      const i = this.items.splice(e, 1)[0];
      return this.items.push(i), i.data;
    }
    const s = await this.asyncFetch(A);
    for (this.items.push({ key: A, data: s }); this.items.length > this.maxItems; )
      this.items.shift();
    return s;
  }
}
function bg(t, A) {
  const e = Object.entries(t).map(([s, i]) => [
    s,
    A(i, s)
  ]);
  return Object.fromEntries(e);
}
function Lg(t, A) {
  const e = Object.entries(t).map(([s, i]) => [s, A(i, s)]).filter(([s, i]) => i !== void 0);
  return Object.fromEntries(e);
}
function Si(t) {
  const A = [], e = /* @__PURE__ */ new Set();
  function s(i) {
    i && typeof i == "object" && !e.has(i) && (e.add(i), i instanceof ArrayBuffer ? A.push(i) : ArrayBuffer.isView(i) ? A.push(i.buffer) : Array.isArray(i) ? i.forEach(s) : Object.values(i).forEach(s));
  }
  return s(t), A;
}
function Yg(t, A) {
  return new Array(t).fill(null).map((e, s) => A(s));
}
class Ni {
  constructor({
    // Allocate a new item with the given args
    allocate: A,
    // Dispose of an item (optional, if GC is enough)
    dispose: e,
    // Check if an existing item in the list is valid for the given args,
    // allowing you to store heterogeneous items in the list.
    valid: s
  }) {
    this.items = [], this.allocate = A, this.dispose = e, this.valid = s;
  }
  // Allocate a new item from the free list, first checking if a existing item
  // on the freelist is valid for the given args.
  alloc(A) {
    for (; ; ) {
      const e = this.items.pop();
      if (!e)
        break;
      if (this.valid(e, A))
        return e;
      this.dispose && this.dispose(e);
    }
    return this.allocate(A);
  }
  free(A) {
    this.items.push(A);
  }
  disposeAll() {
    let A;
    for (A = this.items.pop(); A; )
      this.dispose && this.dispose(A), A = this.items.pop();
  }
}
function ve(t, A, e, s, i, n, r, a, o, I, B, g, c, C, h, E) {
  const l = FA(C), u = FA(h), d = FA(E), p = FA(c), w = Oe(
    new Q.Quaternion(o, I, B, g)
  ), f = w & 255, x = w >>> 8 & 255, M = w >>> 16 & 255, D = n < mt ? 0 : Math.min(
    255,
    Math.max(
      1,
      Math.round((Math.log(n) - HA) / OA) + 1
    )
  ), y = r < mt ? 0 : Math.min(
    255,
    Math.max(
      1,
      Math.round((Math.log(r) - HA) / OA) + 1
    )
  ), R = a < mt ? 0 : Math.min(
    255,
    Math.max(
      1,
      Math.round((Math.log(a) - HA) / OA) + 1
    )
  ), S = Ct(e), m = Ct(s), U = Ct(i), F = A * 4;
  t[F] = l | u << 8 | d << 16 | p << 24, t[F + 1] = S | m << 16, t[F + 2] = U | f << 16 | x << 24, t[F + 3] = D | y << 8 | R << 16 | M << 24;
}
function Tg(t, A, e, s, i) {
  const n = Ct(e), r = Ct(s), a = Ct(i), o = A * 4;
  t[o + 1] = n | r << 16, t[o + 2] = a | t[o + 2] & 4294901760;
}
function Jg(t, A, e, s, i) {
  const n = e < mt ? 0 : Math.min(
    255,
    Math.max(
      1,
      Math.round((Math.log(e) - HA) / OA) + 1
    )
  ), r = s < mt ? 0 : Math.min(
    255,
    Math.max(
      1,
      Math.round((Math.log(s) - HA) / OA) + 1
    )
  ), a = i < mt ? 0 : Math.min(
    255,
    Math.max(
      1,
      Math.round((Math.log(i) - HA) / OA) + 1
    )
  ), o = A * 4;
  t[o + 3] = n | r << 8 | a << 16 | t[o + 3] & 4278190080;
}
function Hg(t, A, e, s, i, n) {
  const r = Oe(
    new Q.Quaternion(e, s, i, n)
  ), a = r & 255, o = r >>> 8 & 255, I = r >>> 16 & 255, B = A * 4;
  t[B + 2] = t[B + 2] & 65535 | a << 16 | o << 24, t[B + 3] = t[B + 3] & 16777215 | I << 24;
}
function qg(t, A, e, s, i, n) {
  const r = FA(e), a = FA(s), o = FA(i), I = FA(n), B = A * 4;
  t[B] = r | a << 8 | o << 16 | I << 24;
}
function Kg(t, A, e, s, i) {
  const n = FA(e), r = FA(s), a = FA(i), o = A * 4;
  t[o] = n | r << 8 | a << 16 | t[o] & 4278190080;
}
function zg(t, A, e) {
  const s = FA(e), i = A * 4;
  t[i] = t[i] & 16777215 | s << 24;
}
const _g = new Q.Vector3(), Vg = new Q.Vector3(), jg = new Q.Quaternion(), Og = new Q.Color(), Zg = {
  center: _g,
  scales: Vg,
  quaternion: jg,
  color: Og,
  opacity: 0
};
function Ue(t, A) {
  const e = Zg, s = A * 4, i = t[s], n = t[s + 1], r = t[s + 2], a = t[s + 3];
  e.color.set(
    (i & 255) / 255,
    (i >>> 8 & 255) / 255,
    (i >>> 16 & 255) / 255
  ), e.opacity = (i >>> 24 & 255) / 255, e.center.set(
    fA(n & 65535),
    fA(n >>> 16 & 65535),
    fA(r & 65535)
  );
  const o = a & 255;
  e.scales.x = o === 0 ? 0 : Math.exp(HA + (o - 1) * OA);
  const I = a >>> 8 & 255;
  e.scales.y = I === 0 ? 0 : Math.exp(HA + (I - 1) * OA);
  const B = a >>> 16 & 255;
  e.scales.z = B === 0 ? 0 : Math.exp(HA + (B - 1) * OA);
  const g = r >>> 16 & 65535 | a >>> 8 & 16711680;
  return bi(g, e.quaternion), e;
}
function mA(t) {
  const A = X, e = Math.max(
    ms,
    Math.min(it, Math.ceil(t / A))
  ), s = Math.ceil(t / (A * e)), i = A * e * s;
  return { width: A, height: e, depth: s, maxSplats: i };
}
function Pg(t) {
  const A = X, e = Math.max(
    ms,
    Math.min(it, Math.ceil(t / A))
  ), s = Math.ceil(t / (A * e));
  return A * e * s;
}
function Xg() {
  return navigator.maxTouchPoints > 0 ? !0 : /Mobi|Android|iPhone|iPad|iPod|Opera Mini|IEMobile/.test(
    navigator.userAgent
  );
}
function Wg() {
  return /Android/.test(navigator.userAgent);
}
function $g() {
  return /Oculus/.test(navigator.userAgent);
}
function AI(t, A, e) {
  const s = new Uint8Array(A * 4);
  for (let i = 0; i < e / 2; i++) {
    const n = i * A * 4, r = (e - 1 - i) * A * 4;
    s.set(t.subarray(n, n + A * 4)), t.set(
      t.subarray(r, r + A * 4),
      n
    ), t.set(s, r);
  }
  return t;
}
function tI(t, A, e) {
  const s = document.createElement("canvas");
  s.width = A, s.height = e;
  const i = s.getContext("2d");
  if (!i)
    throw new Error("Can't get 2d context");
  const n = i.createImageData(A, e);
  return n.data.set(t), i.putImageData(n, 0, 0), s.toDataURL("image/png");
}
function Fi(t) {
  const A = new Q.Clock(t.autoStart);
  return A.startTime = t.startTime, A.oldTime = t.oldTime, A.elapsedTime = t.elapsedTime, A.running = t.running, A;
}
function eI(t) {
  return Object.fromEntries(
    Object.entries(t).filter(([A, e]) => e !== void 0)
  );
}
const ki = CA(`
  precision highp float;

  in vec3 position;

  void main() {
    gl_Position = vec4(position.xy, 0.0, 1.0);
  }
`);
function Gi(t) {
  const A = new Q.Vector3();
  for (const e of t)
    A.add(e);
  return A.divideScalar(t.length);
}
function Ri(t) {
  if (t.length === 0)
    return new Q.Quaternion();
  const A = t[0].clone();
  for (let e = 1; e < t.length; e++)
    t[e].dot(t[0]) < 0 ? (A.x -= t[e].x, A.y -= t[e].y, A.z -= t[e].z, A.w -= t[e].w) : (A.x += t[e].x, A.y += t[e].y, A.z += t[e].z, A.w += t[e].w);
  return A.normalize();
}
function vi(t, A) {
  const e = new Q.Vector3(0, 0, 0).applyMatrix4(t), s = new Q.Vector3(0, 0, 0).applyMatrix4(A), i = new Q.Vector3(0, 0, -1).applyMatrix4(t).sub(e).normalize(), n = new Q.Vector3(0, 0, -1).applyMatrix4(A).sub(s).normalize(), r = e.distanceTo(s), a = i.dot(n);
  return { distance: r, coincidence: a };
}
function sI({
  matrix1: t,
  matrix2: A,
  maxDistance: e
}) {
  const s = new Q.Vector3(0, 0, 0).applyMatrix4(t), i = new Q.Vector3(0, 0, 0).applyMatrix4(A);
  return s.distanceTo(i) <= e;
}
function iI({
  matrix1: t,
  matrix2: A,
  maxDistance: e,
  minCoincidence: s
}) {
  const { distance: i, coincidence: n } = vi(t, A);
  return i <= e && (s == null || n >= s);
}
function Ui(t, A) {
  const [e, s] = [new Q.Vector3(), new Q.Quaternion()], [i, n] = [new Q.Vector3(), new Q.Quaternion()];
  t.decompose(e, s, new Q.Vector3()), A.decompose(i, n, new Q.Vector3());
  const r = e.distanceTo(i), a = Math.abs(s.dot(n));
  return { distance: r, coorient: a };
}
function oe({
  matrix1: t,
  matrix2: A,
  maxDistance: e,
  minCoorient: s
}) {
  const { distance: i, coorient: n } = Ui(t, A);
  return i <= e && (s == null || n >= s);
}
function nI(t, A = 1e-3) {
  return Math.abs(t) < A ? 0 : Math.sign(t);
}
function rI(t) {
  const A = t.w < 0, e = se(A ? -t.x : t.x), s = se(A ? -t.y : t.y), i = se(A ? -t.z : t.z), n = e & 255, r = s & 255, a = i & 255;
  return n | r << 8 | a << 16;
}
function aI(t, A) {
  const e = t << 24 >> 24, s = t << 16 >> 24, i = t << 8 >> 24;
  A.set(e / 127, s / 127, i / 127, 0);
  const n = A.x * A.x + A.y * A.y + A.z * A.z;
  return A.w = Math.sqrt(Math.max(0, 1 - n)), A;
}
function Oe(t) {
  const A = t.clone().normalize();
  A.w < 0 && A.set(-A.x, -A.y, -A.z, -A.w);
  const e = 2 * Math.acos(A.w), s = Math.sqrt(
    A.x * A.x + A.y * A.y + A.z * A.z
  ), i = s < 1e-6 ? new Q.Vector3(1, 0, 0) : new Q.Vector3(A.x, A.y, A.z).divideScalar(s), n = Math.abs(i.x) + Math.abs(i.y) + Math.abs(i.z);
  let r = i.x / n, a = i.y / n;
  if (i.z < 0) {
    const C = r;
    r = (1 - Math.abs(a)) * (r >= 0 ? 1 : -1), a = (1 - Math.abs(C)) * (a >= 0 ? 1 : -1);
  }
  const o = r * 0.5 + 0.5, I = a * 0.5 + 0.5, B = Math.round(o * 255), g = Math.round(I * 255);
  return Math.round(e * (255 / Math.PI)) << 16 | g << 8 | B;
}
function bi(t, A) {
  const e = t & 255, s = t >>> 8 & 255, i = t >>> 16 & 255, n = e / 255, r = s / 255;
  let a = (n - 0.5) * 2, o = (r - 0.5) * 2;
  const I = 1 - (Math.abs(a) + Math.abs(o)), B = Math.max(-I, 0);
  a += a >= 0 ? -B : B, o += o >= 0 ? -B : B;
  const g = new Q.Vector3(a, o, I).normalize(), C = i / 255 * Math.PI * 0.5, h = Math.sin(C), E = Math.cos(C);
  return A.set(g.x * h, g.y * h, g.z * h, E), A;
}
function oI(t) {
  const A = t.clone().normalize(), e = 2 * (A.w * A.x + A.y * A.z), s = 1 - 2 * (A.x * A.x + A.y * A.y), i = Math.atan2(e, s), n = 2 * (A.w * A.y - A.z * A.x), r = Math.abs(n) >= 1 ? Math.sign(n) * (Math.PI / 2) : Math.asin(n), a = 2 * (A.w * A.z + A.x * A.y), o = 1 - 2 * (A.y * A.y + A.z * A.z), I = Math.atan2(a, o), B = (i + Math.PI) / (2 * Math.PI), g = (r + Math.PI) / (2 * Math.PI), c = (I + Math.PI) / (2 * Math.PI), C = Math.round(B * 255), h = Math.round(g * 255);
  return Math.round(c * 255) << 16 | h << 8 | C;
}
function gI(t, A) {
  const e = t & 255, s = t >>> 8 & 255, i = t >>> 16 & 255, n = e / 255, r = s / 255, a = i / 255, o = n * (2 * Math.PI) - Math.PI, I = r * (2 * Math.PI) - Math.PI, B = a * (2 * Math.PI) - Math.PI, g = Math.cos(o * 0.5), c = Math.sin(o * 0.5), C = Math.cos(I * 0.5), h = Math.sin(I * 0.5), E = Math.cos(B * 0.5), l = Math.sin(B * 0.5);
  return A.w = g * C * E + c * h * l, A.x = c * C * E - g * h * l, A.y = g * h * E + c * C * l, A.z = g * C * l - c * h * E, A.normalize(), A;
}
function Wt(t, A, e, s) {
  const i = Math.max(-127, Math.min(127, t * 127)), n = Math.max(-127, Math.min(127, A * 127)), r = Math.max(-127, Math.min(127, e * 127)), a = Math.max(-127, Math.min(127, s * 127));
  return i & 255 | (n & 255) << 8 | (r & 255) << 16 | (a & 255) << 24;
}
function II(t, A, e) {
  const s = A * 2;
  for (let i = 0; i < 9; ++i) {
    const n = Math.max(-63, Math.min(63, e[i] * 63)) & 127, r = i * 7, a = r + 7, o = Math.floor(r / 32), I = r - o * 32, B = n << I & 4294967295;
    if (t[s + o] |= B, a > o * 32 + 32) {
      const g = n >>> 32 - I & 4294967295;
      t[s + o + 1] |= g;
    }
  }
}
function BI(t, A, e) {
  t[A * 4 + 0] = Wt(
    e[0],
    e[1],
    e[2],
    e[3]
  ), t[A * 4 + 1] = Wt(
    e[4],
    e[5],
    e[6],
    e[7]
  ), t[A * 4 + 2] = Wt(
    e[8],
    e[9],
    e[10],
    e[11]
  ), t[A * 4 + 3] = Wt(
    e[12],
    e[13],
    e[14],
    0
  );
}
function QI(t, A, e) {
  const s = A * 4;
  for (let i = 0; i < 21; ++i) {
    const n = Math.max(-31, Math.min(31, e[i] * 31)) & 63, r = i * 6, a = r + 6, o = Math.floor(r / 32), I = r - o * 32, B = n << I & 4294967295;
    if (t[s + o] |= B, a > o * 32 + 32) {
      const g = n >>> 32 - I & 4294967295;
      t[s + o + 1] |= g;
    }
  }
}
function Li(t, A) {
  const e = [];
  let s = 0, i = null;
  const n = new ws((o, I) => {
    if (e.push(o), s += o.length, I || s >= A) {
      const B = new Uint8Array(s);
      let g = 0;
      for (const c of e)
        B.set(c, g), g += c.length;
      i = B.slice(0, A);
    }
  }), r = 1024;
  let a = 0;
  for (; i == null && a < t.length; ) {
    const o = t.slice(a, a + r);
    n.push(o, !1), a += r;
  }
  if (i == null && (n.push(new Uint8Array(), !0), i == null))
    throw new Error("Failed to decompress partial gzip");
  return i;
}
class Yi {
  constructor({
    fileBytes: A,
    chunkBytes: e = 64 * 1024
  }) {
    this.fileBytes = A, this.chunkBytes = e, this.offset = 0, this.chunks = [], this.totalBytes = 0, this.gunzip = new ws((s, i) => {
      this.chunks.push(s), this.totalBytes += s.length;
    });
  }
  read(A) {
    for (; this.totalBytes < A && this.offset < this.fileBytes.length; ) {
      const n = Math.min(
        this.offset + this.chunkBytes,
        this.fileBytes.length
      );
      this.gunzip.push(this.fileBytes.subarray(this.offset, n), !1), this.offset = n;
    }
    if (this.totalBytes < A && this.offset >= this.fileBytes.length && this.gunzip.push(new Uint8Array(0), !0), this.totalBytes < A)
      throw new Error(
        `Unexpected EOF: needed ${A}, got ${this.totalBytes}`
      );
    const e = new Uint8Array(this.totalBytes);
    let s = 0;
    for (const n of this.chunks)
      e.set(n, s), s += n.length;
    const i = e.subarray(0, A);
    return this.chunks = [e.subarray(A)], this.totalBytes -= A, i;
  }
}
const IC = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  DataCache: Ug,
  FreeList: Ni,
  GunzipReader: Yi,
  IDENT_VERTEX_SHADER: ki,
  Sint8ToFloat: vg,
  Uint8ToFloat: Rg,
  averagePositions: Gi,
  averageQuaternions: Ri,
  cloneClock: Fi,
  coinciDist: vi,
  computeMaxSplats: Pg,
  coorientDist: Ui,
  decodeQuatEulerXyz888: gI,
  decodeQuatOctXy88R8: bi,
  decodeQuatXyz888: aI,
  decompressPartialGzip: Li,
  encodeQuatEulerXyz888: oI,
  encodeQuatOctXy88R8: Oe,
  encodeQuatXyz888: rI,
  encodeSh1Rgb: II,
  encodeSh2Rgb: BI,
  encodeSh3Rgb: QI,
  epsilonSign: nI,
  flipPixels: AI,
  floatBitsToUint: kg,
  floatToSint8: se,
  floatToUint8: FA,
  fromHalf: fA,
  getArrayBuffers: Si,
  getTextureSize: mA,
  isAndroid: Wg,
  isMobile: Xg,
  isOculus: $g,
  mapFilterObject: Lg,
  mapObject: bg,
  newArray: Yg,
  omitUndefined: eI,
  pixelsToPngUrl: tI,
  setPackedSplat: ve,
  setPackedSplatCenter: Tg,
  setPackedSplatOpacity: zg,
  setPackedSplatQuat: Hg,
  setPackedSplatRgb: Kg,
  setPackedSplatRgba: qg,
  setPackedSplatScales: Jg,
  toHalf: Ct,
  uintBitsToFloat: Gg,
  unpackSplat: Ue,
  withinCoinciDist: iI,
  withinCoorientDist: oe,
  withinDist: sI
}, Symbol.toStringTag, { value: "Module" }));
class Ze {
  constructor({
    graph: A,
    inputs: e,
    outputs: s,
    template: i
  }) {
    this.graph = A, this.template = i, this.inputs = e ?? {}, this.outputs = s ?? {};
    const n = new Gs({ indent: this.template.indent });
    for (const a in this.outputs)
      this.outputs[a] && n.declares.add(this.outputs[a]);
    const r = A.compile({
      inputs: this.inputs,
      outputs: this.outputs,
      compile: n
    });
    this.shader = i.generate({ globals: n.globals, statements: r }), this.uniforms = n.uniforms, this.updaters = n.updaters;
  }
  prepareMaterial() {
    return cI(this);
  }
  update() {
    for (const A of this.updaters)
      A();
  }
}
class Pe {
  constructor(A) {
    const e = A.match(/^([ \t]*)\{\{\s*GLOBALS\s*\}\}/m), s = A.match(/^([ \t]*)\{\{\s*STATEMENTS\s*\}\}/m);
    if (!e || !s)
      throw new Error(
        "Template must contain {{ GLOBALS }} and {{ STATEMENTS }}"
      );
    this.before = A.substring(0, e.index), this.between = A.substring(
      e.index + e[0].length,
      s.index
    ), this.after = A.substring(
      s.index + s[0].length
    ), this.indent = s[1];
  }
  generate({
    globals: A,
    statements: e
  }) {
    return this.before + Array.from(A).join(`

`) + this.between + e.map((s) => this.indent + s).join(`
`) + this.after;
  }
}
const rs = /* @__PURE__ */ new Map();
function cI(t) {
  let A = rs.get(t);
  return A || (A = new Q.RawShaderMaterial({
    glslVersion: Q.GLSL3,
    vertexShader: ki,
    fragmentShader: t.shader,
    uniforms: t.uniforms
  }), rs.set(t, A), A);
}
function Xe(t, A, e = "add") {
  const s = () => {
    throw new Error(`Invalid ${e} types: ${t}, ${A}`);
  };
  if (t === A) return t;
  if (t === "int") {
    if (hA(A)) return A;
    s();
  }
  if (A === "int") {
    if (hA(t)) return t;
    s();
  }
  if (t === "uint") {
    if (lA(A)) return A;
    s();
  }
  if (A === "uint") {
    if (lA(t)) return t;
    s();
  }
  if (t === "float") {
    if (at(A)) return A;
    s();
  }
  if (A === "float") {
    if (at(t)) return t;
    s();
  }
  throw new Error(`Invalid ${e} types: ${t}, ${A}`);
}
function CI(t, A) {
  return Xe(t, A, "sub");
}
function EI(t, A) {
  const e = () => {
    throw new Error(`Invalid mul types: ${t}, ${A}`);
  }, s = (i) => i;
  if (t === "int") {
    if (hA(A)) return s(A);
    e();
  }
  if (A === "int") {
    if (hA(t)) return s(t);
    e();
  }
  if (t === "uint") {
    if (lA(A)) return s(A);
    e();
  }
  if (A === "uint") {
    if (lA(t)) return s(t);
    e();
  }
  if (t === "float") {
    if (at(A)) return s(A);
    e();
  }
  if (A === "float") {
    if (at(t)) return s(t);
    e();
  }
  if (hA(t) || lA(t) || hA(A) || lA(A)) {
    if (t === A) return s(t);
    e();
  }
  if (t === "vec2") {
    if (A === "vec2" || ot(A)) return s("vec2");
    if (A === "mat3x2") return s("vec3");
    if (A === "mat4x2") return s("vec4");
    e();
  }
  if (t === "vec3") {
    if (A === "mat2x3") return s("vec2");
    if (A === "vec3" || gt(A)) return s("vec3");
    if (A === "mat4x3") return s("vec4");
    e();
  }
  if (t === "vec4") {
    if (A === "mat2x4") return s("vec2");
    if (A === "mat3x4") return s("vec3");
    if (A === "vec4" || It(A)) return s("vec4");
    e();
  }
  if (A === "vec2") {
    if (ot(t)) return s("vec2");
    if (t === "mat2x3") return s("vec3");
    if (t === "mat2x4") return s("vec4");
    e();
  }
  if (A === "vec3") {
    if (t === "mat3x2") return s("vec2");
    if (gt(t)) return s("vec3");
    if (t === "mat3x4") return s("vec4");
    e();
  }
  if (A === "vec4") {
    if (t === "mat4x2") return s("vec2");
    if (t === "mat4x3") return s("vec3");
    if (It(t)) return s("vec4");
    e();
  }
  if (ot(t)) {
    if (ot(A)) return s("mat2");
    if (A === "mat3x2") return s("mat3x2");
    if (A === "mat4x2") return s("mat4x2");
    e();
  }
  if (t === "mat2x3") {
    if (ot(A)) return s("mat2x3");
    if (A === "mat3x2") return s("mat3");
    if (A === "mat4x2") return s("mat4x3");
    e();
  }
  if (t === "mat2x4") {
    if (ot(A)) return s("mat2x4");
    if (A === "mat3x2") return s("mat3x4");
    if (A === "mat4x2") return s("mat4");
    e();
  }
  if (t === "mat3x2") {
    if (A === "mat2x3") return s("mat2");
    if (gt(A)) return s("mat3x2");
    if (A === "mat4x3") return s("mat4x2");
    e();
  }
  if (gt(t)) {
    if (A === "mat2x3") return s("mat2x3");
    if (gt(A)) return s("mat3");
    if (A === "mat4x3") return s("mat4x3");
    e();
  }
  if (t === "mat3x4") {
    if (A === "mat2x3") return s("mat2x4");
    if (gt(A)) return s("mat3x4");
    if (A === "mat4x3") return s("mat4");
    e();
  }
  if (t === "mat4x2") {
    if (A === "mat2x4") return s("mat2");
    if (A === "mat3x4") return s("mat3x2");
    if (It(A)) return s("mat4x2");
    e();
  }
  if (t === "mat4x3") {
    if (A === "mat2x4") return s("mat2x3");
    if (A === "mat3x4") return s("mat3");
    if (It(A)) return s("mat4x3");
    e();
  }
  if (It(t)) {
    if (A === "mat2x4") return s("mat2x4");
    if (A === "mat3x4") return s("mat3x4");
    if (It(A)) return s("mat4");
    e();
  }
  throw new Error(`Invalid mul types: ${t}, ${A}`);
}
function hI(t, A) {
  return Xe(t, A, "div");
}
function lI(t, A) {
  if (t === A) return t;
  if (t === "int") {
    if (hA(A)) return A;
  } else if (A === "int") {
    if (hA(t)) return t;
  } else if (t === "uint") {
    if (lA(A)) return A;
  } else if (A === "uint" && lA(t))
    return t;
  throw new Error(`Invalid imod types: ${t}, ${A}`);
}
function uI(t, A) {
  if (t === A || A === "float") return t;
  throw new Error(`Invalid mod types: ${t}, ${A}`);
}
function dI(t) {
  return t;
}
function pI(t) {
  return t;
}
function yI(t) {
  return t;
}
function wI(t) {
  return t;
}
function fI(t) {
  return t;
}
function DI(t) {
  return t;
}
function mI(t) {
  return t;
}
function MI(t) {
  return t;
}
function xI(t) {
  return t;
}
function SI(t) {
  return t;
}
function NI(t) {
  return t;
}
function FI(t) {
  return t;
}
function kI(t) {
  return t;
}
function GI(t) {
  return t;
}
function RI(t) {
  return t;
}
function vI(t) {
  return t;
}
function Ti(t, A, e = "min") {
  if (t === A) return t;
  if (A === "float") {
    if (_t(t)) return t;
  } else if (A === "int") {
    if (hA(t)) return t;
  } else if (A === "uint" && lA(t))
    return t;
  throw new Error(`Invalid ${e} types: ${t}, ${A}`);
}
function UI(t, A) {
  return Ti(t, A, "max");
}
function bI(t, A, e) {
  if (A === "float") {
    if (_t(t)) return t;
  } else if (A === "int") {
    if (hA(t)) return t;
  } else if (A === "uint" && lA(t))
    return t;
  throw new Error(`Invalid clamp types: ${t}, ${A}`);
}
function LI(t, A, e) {
  if (e === t || e === "float" || e === "bool" && t === "float" || e === "bvec2" && t === "vec2" || e === "bvec3" && t === "vec3" || e === "bvec4" && t === "vec4") return t;
  throw new Error(`Invalid mix types: ${t}, ${A}, ${e}`);
}
function YI(t, A) {
  if (t === A || A === "float") return A;
  throw new Error(`Invalid step types: ${t}, ${A}`);
}
function TI(t, A, e) {
  if (t === A && (t === e || t === "float"))
    return e;
  throw new Error(`Invalid smoothstep types: ${t}, ${A}, ${e}`);
}
function Ji(t, A = "isNan") {
  if (t === "float") return "bool";
  if (t === "vec2") return "bvec2";
  if (t === "vec3") return "bvec3";
  if (t === "vec4") return "bvec4";
  throw new Error(`Invalid ${A} types: ${t}`);
}
function JI(t) {
  return Ji(t, "isInf");
}
const DA = (t, A) => new zi({ a: t, b: A }), Nt = (t, A) => new _i({ a: t, b: A }), QA = (t, A) => new Vi({ a: t, b: A }), ie = (t, A) => new ji({ a: t, b: A }), be = (t, A) => new Oi({ a: t, b: A }), Hi = (t, A) => new Zi({ a: t, b: A }), HI = (t) => new Pi({ a: t }).outputs, We = (t) => new Xi({ a: t }), qI = (t) => new Wi({ a: t }), KI = (t) => new $i({ a: t }), zI = (t) => new An({ a: t }), _I = (t) => new tn({ a: t }), VI = (t) => new en({ a: t }), jI = (t) => new sn({ a: t }), ne = (t) => new nn({ a: t }), OI = (t, A) => new rn({ a: t, b: A }), ZI = (t) => new an({ a: t }), PI = (t) => new on({ a: t }), XI = (t) => new gn({ a: t }), WI = (t) => new In({ a: t }), $I = (t) => new Bn({ a: t }), AB = (t) => new Qn({ a: t }), tB = (t) => new cn({ a: t }), eB = (t, A) => new Cn({ a: t, b: A }), qi = (t, A) => new En({ a: t, b: A }), sB = (t, A, e) => new hn({ a: t, min: A, max: e }), Ki = (t, A, e) => new ln({ a: t, b: A, t: e }), iB = (t, A) => new un({ edge: t, x: A }), nB = (t, A, e) => new dn({ edge0: t, edge1: A, x: e }), rB = (t) => new pn({ a: t }), aB = (t) => new yn({ a: t });
class zi extends $ {
  constructor({ a: A, b: e }) {
    super({ a: A, b: e, outKey: "sum", outTypeFunc: Xe }), this.statements = ({ inputs: s, outputs: i }) => [`${i.sum} = ${s.a} + ${s.b};`];
  }
}
class _i extends $ {
  constructor({ a: A, b: e }) {
    super({ a: A, b: e, outKey: "difference", outTypeFunc: CI }), this.statements = ({ inputs: s, outputs: i }) => [`${i.difference} = ${s.a} - ${s.b};`];
  }
}
class Vi extends $ {
  constructor({ a: A, b: e }) {
    super({ a: A, b: e, outKey: "product", outTypeFunc: EI }), this.statements = ({ inputs: s, outputs: i }) => [`${i.product} = ${s.a} * ${s.b};`];
  }
}
class ji extends $ {
  constructor({ a: A, b: e }) {
    super({ a: A, b: e, outKey: "quotient", outTypeFunc: hI }), this.statements = ({ inputs: s, outputs: i }) => [`${i.quotient} = ${s.a} / ${s.b};`];
  }
}
class Oi extends $ {
  constructor({ a: A, b: e }) {
    super({ a: A, b: e, outKey: "remainder", outTypeFunc: lI }), this.statements = ({ inputs: s, outputs: i }) => [`${i.remainder} = ${s.a} % ${s.b};`];
  }
}
class Zi extends $ {
  constructor({ a: A, b: e }) {
    super({ a: A, b: e, outKey: "remainder", outTypeFunc: uI }), this.statements = ({ inputs: s, outputs: i }) => [`${i.remainder} = mod(${s.a}, ${s.b});`];
  }
}
class Pi extends V {
  constructor({ a: A }) {
    const e = { a: _(A) }, s = e.a, i = {
      fract: s,
      integer: s
    };
    super({ inTypes: e, outTypes: i, inputs: { a: A } }), this.statements = ({ inputs: n, outputs: r }) => [`${r.fract} = modf(${n.a}, ${r.integer});`];
  }
}
class Xi extends N {
  constructor({ a: A }) {
    super({ a: A, outKey: "neg", outTypeFunc: dI }), this.statements = ({ inputs: e, outputs: s }) => [`${s.neg} = -${e.a};`];
  }
}
class Wi extends N {
  constructor({ a: A }) {
    super({ a: A, outKey: "abs", outTypeFunc: pI }), this.statements = ({ inputs: e, outputs: s }) => [`${s.abs} = abs(${e.a});`];
  }
}
class $i extends N {
  constructor({ a: A }) {
    super({ a: A, outKey: "sign", outTypeFunc: yI }), this.statements = ({ inputs: e, outputs: s }) => [`${s.sign} = sign(${e.a});`];
  }
}
class An extends N {
  constructor({ a: A }) {
    super({ a: A, outKey: "floor", outTypeFunc: wI }), this.statements = ({ inputs: e, outputs: s }) => [`${s.floor} = floor(${e.a});`];
  }
}
class tn extends N {
  constructor({ a: A }) {
    super({ a: A, outKey: "ceil", outTypeFunc: fI }), this.statements = ({ inputs: e, outputs: s }) => [`${s.ceil} = ceil(${e.a});`];
  }
}
class en extends N {
  constructor({ a: A }) {
    super({ a: A, outKey: "trunc", outTypeFunc: DI }), this.statements = ({ inputs: e, outputs: s }) => [`${s.trunc} = trunc(${e.a});`];
  }
}
class sn extends N {
  constructor({ a: A }) {
    super({ a: A, outKey: "round", outTypeFunc: mI }), this.statements = ({ inputs: e, outputs: s }) => [`${s.round} = round(${e.a});`];
  }
}
class nn extends N {
  constructor({ a: A }) {
    super({ a: A, outKey: "fract", outTypeFunc: MI }), this.statements = ({ inputs: e, outputs: s }) => [`${s.fract} = fract(${e.a});`];
  }
}
class rn extends $ {
  constructor({ a: A, b: e }) {
    super({ a: A, b: e, outKey: "power", outTypeFunc: xI }), this.statements = ({ inputs: s, outputs: i }) => [`${i.power} = pow(${s.a}, ${s.b});`];
  }
}
class an extends N {
  constructor({ a: A }) {
    super({ a: A, outKey: "exp", outTypeFunc: SI }), this.statements = ({ inputs: e, outputs: s }) => [`${s.exp} = exp(${e.a});`];
  }
}
class on extends N {
  constructor({ a: A }) {
    super({ a: A, outKey: "exp2", outTypeFunc: NI }), this.statements = ({ inputs: e, outputs: s }) => [`${s.exp2} = exp2(${e.a});`];
  }
}
class gn extends N {
  constructor({ a: A }) {
    super({ a: A, outKey: "log", outTypeFunc: FI }), this.statements = ({ inputs: e, outputs: s }) => [`${s.log} = log(${e.a});`];
  }
}
class In extends N {
  constructor({ a: A }) {
    super({ a: A, outKey: "log2", outTypeFunc: kI }), this.statements = ({ inputs: e, outputs: s }) => [`${s.log2} = log2(${e.a});`];
  }
}
class Bn extends N {
  constructor({ a: A }) {
    super({ a: A, outKey: "sqr", outTypeFunc: GI }), this.statements = ({ inputs: e, outputs: s }) => [`${s.sqr} = ${e.a} * ${e.a};`];
  }
}
class Qn extends N {
  constructor({ a: A }) {
    super({ a: A, outKey: "sqrt", outTypeFunc: RI }), this.statements = ({ inputs: e, outputs: s }) => [`${s.sqrt} = sqrt(${e.a});`];
  }
}
class cn extends N {
  constructor({ a: A }) {
    super({ a: A, outKey: "inversesqrt", outTypeFunc: vI }), this.statements = ({ inputs: e, outputs: s }) => [`${s.inversesqrt} = inversesqrt(${e.a});`];
  }
}
class Cn extends $ {
  constructor({ a: A, b: e }) {
    super({ a: A, b: e, outKey: "min", outTypeFunc: Ti }), this.statements = ({ inputs: s, outputs: i }) => [`${i.min} = min(${s.a}, ${s.b});`];
  }
}
class En extends $ {
  constructor({ a: A, b: e }) {
    super({ a: A, b: e, outKey: "max", outTypeFunc: UI }), this.statements = ({ inputs: s, outputs: i }) => [`${i.max} = max(${s.a}, ${s.b});`];
  }
}
class hn extends ut {
  constructor({
    a: A,
    min: e,
    max: s
  }) {
    super({
      a: A,
      b: e,
      c: s,
      outKey: "clamp",
      outTypeFunc: bI
    }), this.statements = ({ inputs: i, outputs: n }) => {
      const { a: r, b: a, c: o } = i;
      return [`${n.clamp} = clamp(${r}, ${a}, ${o});`];
    };
  }
}
class ln extends ut {
  constructor({ a: A, b: e, t: s }) {
    super({ a: A, b: e, c: s, outKey: "mix", outTypeFunc: LI }), this.statements = ({ inputs: i, outputs: n }) => {
      const { a: r, b: a, c: o } = i;
      return [`${n.mix} = mix(${r}, ${a}, ${o});`];
    };
  }
}
class un extends $ {
  constructor({ edge: A, x: e }) {
    super({
      a: A,
      b: e,
      outKey: "step",
      outTypeFunc: YI
    }), this.statements = ({ inputs: s, outputs: i }) => {
      const { a: n, b: r } = s;
      return [`${i.step} = step(${n}, ${r});`];
    };
  }
}
class dn extends ut {
  constructor({
    edge0: A,
    edge1: e,
    x: s
  }) {
    super({
      a: A,
      b: e,
      c: s,
      outKey: "smoothstep",
      outTypeFunc: TI
    }), this.statements = ({ inputs: i, outputs: n }) => {
      const { a: r, b: a, c: o } = i;
      return [`${n.smoothstep} = smoothstep(${r}, ${a}, ${o});`];
    };
  }
}
class pn extends N {
  constructor({ a: A }) {
    super({ a: A, outKey: "isNan", outTypeFunc: Ji }), this.statements = ({ inputs: e, outputs: s }) => [`${s.isNan} = isNan(${e.a});`];
  }
}
class yn extends N {
  constructor({ a: A }) {
    super({ a: A, outKey: "isInf", outTypeFunc: JI }), this.statements = ({ inputs: e, outputs: s }) => [`${s.isInf} = isInf(${e.a});`];
  }
}
const oB = (t, A) => new fn({ a: t, b: A }), gB = (t, A) => new Dn({ a: t, b: A }), IB = (t, A) => new mn({ a: t, b: A }), BB = (t) => new Mn({ a: t }), QB = (t, A) => new xn({ a: t, b: A }), cB = (t, A) => new Sn({ a: t, b: A }), CB = (t, A) => new Nn({ a: t, b: A }), wn = (t, A) => new Fn({ a: t, b: A }), EB = (t, A) => new kn({ a: t, b: A }), hB = (t, A) => new Gn({ a: t, b: A }), lB = (t) => new Rn({ a: t }), uB = (t) => new vn({ a: t }), $e = (t, A, e) => new Un({ cond: t, t: A, f: e }), dB = (t) => new Ln({ a: t });
class fn extends $ {
  constructor({ a: A, b: e }) {
    super({ a: A, b: e, outTypeFunc: (s, i) => s, outKey: "and" }), this.statements = ({ inputs: s, outputs: i }) => this.outTypes.and === "bool" ? [`${i.and} = ${s.a} && ${s.b};`] : [`${i.and} = ${s.a} & ${s.b};`];
  }
}
class Dn extends $ {
  constructor({ a: A, b: e }) {
    super({ a: A, b: e, outTypeFunc: (s, i) => s, outKey: "or" }), this.statements = ({ inputs: s, outputs: i }) => this.outTypes.or === "bool" ? [`${i.or} = ${s.a} || ${s.b};`] : [`${i.or} = ${s.a} | ${s.b};`];
  }
}
class mn extends $ {
  constructor({ a: A, b: e }) {
    super({ a: A, b: e, outTypeFunc: (s, i) => s, outKey: "xor" }), this.statements = ({ inputs: s, outputs: i }) => this.outTypes.xor === "bool" ? [`${i.xor} = ${s.a} ^^ ${s.b};`] : [`${i.xor} = ${s.a} ^ ${s.b};`];
  }
}
class Mn extends N {
  constructor({ a: A }) {
    super({ a: A, outTypeFunc: (e) => e, outKey: "not" }), this.statements = ({ inputs: e, outputs: s }) => this.outTypes.not === "bool" ? [`${s.not} = !${e.a};`] : [`${s.not} = not(${e.a});`];
  }
}
class xn extends $ {
  constructor({ a: A, b: e }) {
    super({
      a: A,
      b: e,
      outTypeFunc: (s, i) => ue(s, "lessThan"),
      outKey: "lessThan"
    }), this.statements = ({ inputs: s, outputs: i }) => this.outTypes.lessThan === "bool" ? [`${i.lessThan} = ${s.a} < ${s.b};`] : [`${i.lessThan} = lessThan(${s.a}, ${s.b});`];
  }
}
class Sn extends $ {
  constructor({ a: A, b: e }) {
    super({
      a: A,
      b: e,
      outTypeFunc: (s, i) => ue(s, "lessThanEqual"),
      outKey: "lessThanEqual"
    }), this.statements = ({ inputs: s, outputs: i }) => this.outTypes.lessThanEqual === "bool" ? [`${i.lessThanEqual} = ${s.a} <= ${s.b};`] : [
      `${i.lessThanEqual} = lessThanEqual(${s.a}, ${s.b});`
    ];
  }
}
class Nn extends $ {
  constructor({ a: A, b: e }) {
    super({
      a: A,
      b: e,
      outTypeFunc: (s, i) => ue(s, "greaterThan"),
      outKey: "greaterThan"
    }), this.statements = ({ inputs: s, outputs: i }) => this.outTypes.greaterThan === "bool" ? [`${i.greaterThan} = ${s.a} > ${s.b};`] : [
      `${i.greaterThan} = greaterThan(${s.a}, ${s.b});`
    ];
  }
}
class Fn extends $ {
  constructor({ a: A, b: e }) {
    super({
      a: A,
      b: e,
      outTypeFunc: (s, i) => ue(s, "greaterThanEqual"),
      outKey: "greaterThanEqual"
    }), this.statements = ({ inputs: s, outputs: i }) => this.outTypes.greaterThanEqual === "bool" ? [`${i.greaterThanEqual} = ${s.a} >= ${s.b};`] : [
      `${i.greaterThanEqual} = greaterThanEqual(${s.a}, ${s.b});`
    ];
  }
}
class kn extends $ {
  constructor({ a: A, b: e }) {
    super({ a: A, b: e, outTypeFunc: bn, outKey: "equal" }), this.statements = ({ inputs: s, outputs: i }) => this.outTypes.equal === "bool" ? [`${i.equal} = ${s.a} == ${s.b};`] : [`${i.equal} = equal(${s.a}, ${s.b});`];
  }
}
class Gn extends $ {
  constructor({ a: A, b: e }) {
    super({ a: A, b: e, outTypeFunc: pB, outKey: "notEqual" }), this.statements = ({ inputs: s, outputs: i }) => this.outTypes.notEqual === "bool" ? [`${i.notEqual} = ${s.a} != ${s.b};`] : [`${i.notEqual} = notEqual(${s.a}, ${s.b});`];
  }
}
class Rn extends N {
  constructor({ a: A }) {
    super({ a: A, outTypeFunc: (e) => "bool", outKey: "any" }), this.statements = ({ inputs: e, outputs: s }) => [`${s.any} = any(${e.a});`];
  }
}
class vn extends N {
  constructor({ a: A }) {
    super({ a: A, outTypeFunc: (e) => "bool", outKey: "all" }), this.statements = ({ inputs: e, outputs: s }) => [`${s.all} = all(${e.a});`];
  }
}
class Un extends ut {
  constructor({
    cond: A,
    t: e,
    f: s
  }) {
    super({
      a: A,
      b: e,
      c: s,
      outKey: "select",
      outTypeFunc: (i, n, r) => n
    }), this.statements = ({ inputs: i, outputs: n }) => {
      const { a: r, b: a, c: o } = i;
      return [`${n.select} = (${r}) ? (${a}) : (${o});`];
    };
  }
}
function ue(t, A) {
  if (lt(t))
    return "bool";
  if (t === "ivec2" || t === "uvec2" || t === "vec2")
    return "bvec2";
  if (t === "ivec3" || t === "uvec3" || t === "vec3")
    return "bvec3";
  if (t === "ivec4" || t === "uvec4" || t === "vec4")
    return "bvec4";
  throw new Error(`Invalid ${A} type: ${t}`);
}
function bn(t, A = "equal") {
  if (lt(t))
    return "bool";
  if (ht(t))
    return t;
  if (t === "ivec2" || t === "uvec2" || t === "vec2")
    return "bvec2";
  if (t === "ivec3" || t === "uvec3" || t === "vec3")
    return "bvec3";
  if (t === "ivec4" || t === "uvec4" || t === "vec4")
    return "bvec4";
  throw new Error(`Invalid ${A} type: ${t}`);
}
function pB(t) {
  return bn(t, "notEqual");
}
function yB(t) {
  if (ht(t))
    return "bool";
  if (hA(t))
    return "int";
  if (lA(t))
    return "uint";
  throw new Error(`Invalid compXor type: ${t}`);
}
class Ln extends N {
  constructor({ a: A }) {
    const e = yB(_(A));
    super({ a: A, outTypeFunc: (s) => e, outKey: "compXor" }), this.statements = ({ inputs: s, outputs: i }) => {
      if (lt(this.outTypes.compXor))
        return [`${i.compXor} = ${s.a};`];
      const r = (Ft(e) ? ["x", "y"] : kt(e) ? ["x", "y", "z"] : ["x", "y", "z", "w"]).map((o) => `${s.a}.${o}`), a = ht(e) ? "^^" : "^";
      return [`${i.compXor} = ${r.join(` ${a} `)};`];
    };
  }
}
const wB = (t) => new zn({ value: t }), fB = (t) => new _n({ value: t }), DB = (t) => new Vn({ value: t }), Yn = (t) => new jn({ value: t }), mB = (t) => new On({ value: t }), MB = (t) => new Zn({ value: t }), xB = (t) => new Pn({ value: t }), SB = (t) => new Xn({ value: t }), NB = (t) => new Wn({ value: t }), FB = (t) => new $n({ value: t }), kB = (t) => new Ar({ value: t }), GB = (t) => new tr({ value: t }), RB = (t) => new er({ value: t }), Tn = (t) => new sr({ value: t }), Et = (t) => new ir({ value: t }), Jn = (t) => new nr({ value: t }), vB = (t) => new rr({ value: t }), UB = (t) => new ar({ value: t }), bB = (t) => new or({ value: t }), Hn = (t) => new gr({ value: t }), LB = (t) => new Ir({ value: t }), YB = (t) => new Br({ value: t }), TB = (t) => new Qr({ value: t }), JB = (t) => new cr({ value: t }), HB = (t) => new Cr({ value: t }), qB = (t) => new Er({ value: t }), KB = (t) => new hr({ value: t }), qn = (t) => new lr({ value: t }), zB = (t) => new ur({ value: t }), Kn = (t) => new dr({ value: t });
class oA extends N {
  constructor({
    value: A,
    outType: e,
    outKey: s
  }) {
    super({ a: A, outTypeFunc: () => e, outKey: s }), this.statements = ({ inputs: i, outputs: n }) => [
      `${n[s]} = ${Fs(e)}(${i.a});`
    ];
  }
}
class zn extends oA {
  constructor({
    value: A
  }) {
    super({ value: A, outType: "bool", outKey: "bool" });
  }
}
class _n extends oA {
  constructor({
    value: A
  }) {
    super({ value: A, outType: "int", outKey: "int" });
  }
}
class Vn extends oA {
  constructor({
    value: A
  }) {
    super({ value: A, outType: "uint", outKey: "uint" });
  }
}
class jn extends oA {
  constructor({
    value: A
  }) {
    super({ value: A, outType: "float", outKey: "float" });
  }
}
class On extends oA {
  constructor({
    value: A
  }) {
    super({ value: A, outType: "bvec2", outKey: "bvec2" });
  }
}
class Zn extends oA {
  constructor({
    value: A
  }) {
    super({ value: A, outType: "bvec3", outKey: "bvec3" });
  }
}
class Pn extends oA {
  constructor({
    value: A
  }) {
    super({ value: A, outType: "bvec4", outKey: "bvec4" });
  }
}
class Xn extends oA {
  constructor({
    value: A
  }) {
    super({ value: A, outType: "ivec2", outKey: "ivec2" });
  }
}
class Wn extends oA {
  constructor({
    value: A
  }) {
    super({ value: A, outType: "ivec3", outKey: "ivec3" });
  }
}
class $n extends oA {
  constructor({
    value: A
  }) {
    super({ value: A, outType: "ivec4", outKey: "ivec4" });
  }
}
class Ar extends oA {
  constructor({
    value: A
  }) {
    super({ value: A, outType: "uvec2", outKey: "uvec2" });
  }
}
class tr extends oA {
  constructor({
    value: A
  }) {
    super({ value: A, outType: "uvec3", outKey: "uvec3" });
  }
}
class er extends oA {
  constructor({
    value: A
  }) {
    super({ value: A, outType: "uvec4", outKey: "uvec4" });
  }
}
class sr extends oA {
  constructor({
    value: A
  }) {
    super({ value: A, outType: "vec2", outKey: "vec2" });
  }
}
class ir extends oA {
  constructor({
    value: A
  }) {
    super({ value: A, outType: "vec3", outKey: "vec3" });
  }
}
class nr extends oA {
  constructor({
    value: A
  }) {
    super({ value: A, outType: "vec4", outKey: "vec4" });
  }
}
class rr extends oA {
  constructor({
    value: A
  }) {
    super({ value: A, outType: "mat2", outKey: "mat2" });
  }
}
class ar extends oA {
  constructor({
    value: A
  }) {
    super({ value: A, outType: "mat3", outKey: "mat3" });
  }
}
class or extends oA {
  constructor({
    value: A
  }) {
    super({ value: A, outType: "mat4", outKey: "mat4" });
  }
}
class gr extends N {
  constructor({ value: A }) {
    super({ a: A, outKey: "int", outTypeFunc: () => "int" }), this.statements = ({ inputs: e, outputs: s }) => [`${s.int} = floatBitsToInt(${e.a});`];
  }
}
class Ir extends N {
  constructor({ value: A }) {
    super({ a: A, outKey: "uint", outTypeFunc: () => "uint" }), this.statements = ({ inputs: e, outputs: s }) => [`${s.uint} = floatBitsToUint(${e.a});`];
  }
}
class Br extends N {
  constructor({ value: A }) {
    super({ a: A, outKey: "float", outTypeFunc: () => "float" }), this.statements = ({ inputs: e, outputs: s }) => [`${s.float} = intBitsToFloat(${e.a});`];
  }
}
class Qr extends N {
  constructor({ value: A }) {
    super({ a: A, outKey: "float", outTypeFunc: () => "float" }), this.statements = ({ inputs: e, outputs: s }) => [`${s.float} = uintBitsToFloat(${e.a});`];
  }
}
class cr extends N {
  constructor({ value: A }) {
    super({ a: A, outKey: "uint", outTypeFunc: () => "uint" }), this.statements = ({ inputs: e, outputs: s }) => [`${s.uint} = packSnorm2x16(${e.a});`];
  }
}
class Cr extends N {
  constructor({ value: A }) {
    super({ a: A, outKey: "vec2", outTypeFunc: () => "vec2" }), this.statements = ({ inputs: e, outputs: s }) => [`${s.vec2} = unpackSnorm2x16(${e.a});`];
  }
}
class Er extends N {
  constructor({ value: A }) {
    super({ a: A, outKey: "uint", outTypeFunc: () => "uint" }), this.statements = ({ inputs: e, outputs: s }) => [`${s.uint} = packUnorm2x16(${e.a});`];
  }
}
class hr extends N {
  constructor({ value: A }) {
    super({ a: A, outKey: "vec2", outTypeFunc: () => "vec2" }), this.statements = ({ inputs: e, outputs: s }) => [`${s.vec2} = unpackUnorm2x16(${e.a});`];
  }
}
class lr extends N {
  constructor({ value: A }) {
    super({ a: A, outKey: "uint", outTypeFunc: () => "uint" }), this.statements = ({ inputs: e, outputs: s }) => [`${s.uint} = packHalf2x16(${e.a});`];
  }
}
class ur extends N {
  constructor({ value: A }) {
    super({ a: A, outKey: "vec2", outTypeFunc: () => "vec2" }), this.statements = ({ inputs: e, outputs: s }) => [`${s.vec2} = unpackHalf2x16(${e.a});`];
  }
}
class dr extends N {
  constructor({ value: A }) {
    super({ a: A, outKey: "rgba8", outTypeFunc: () => "vec4" }), this.statements = ({ inputs: e, outputs: s }) => [
      `uvec4 uRgba = uvec4(${e.a} & 0xffu, (${e.a} >> 8u) & 0xffu, (${e.a} >> 16u) & 0xffu, (${e.a} >> 24u) & 0xffu);`,
      `${s.rgba8} = vec4(uRgba) / 255.0;`
    ];
  }
}
const _B = (t) => new fr({ a: t }), VB = (t, A) => new Dr({ a: t, b: A }), pr = (t, A) => new mr({ a: t, b: A }), jB = (t, A) => new Mr({ a: t, b: A }), yr = (t) => new xr({ a: t }), OB = (t, A, e) => new Fr({ a: t, b: A, c: e }), ZB = (t, A) => new kr({ incident: t, normal: A }), PB = (t, A, e) => new Gr({ incident: t, normal: A, eta: e }), xt = (t) => new Yr({ vector: t }), qA = ({
  vector: t,
  vectorType: A,
  x: e,
  y: s,
  z: i,
  w: n,
  r,
  g: a,
  b: o,
  a: I
}) => new Tr({ vector: t, vectorType: A, x: e, y: s, z: i, w: n, r, g: a, b: o, a: I }), XB = (t) => new Sr({ a: t }), wr = (t, A) => new Nr({ a: t, b: A }), WB = (t, A) => new Jr({ vector: t, select: A }), $B = (t, A) => new Rr({ a: t, b: A }), AQ = (t, A) => new vr({ a: t, b: A }), tQ = (t) => new Ur({ a: t }), eQ = (t) => new br({ a: t }), sQ = (t) => new Lr({ a: t });
class fr extends N {
  constructor({ a: A }) {
    super({ a: A, outTypeFunc: (e) => "float", outKey: "length" }), this.statements = ({ inputs: e, outputs: s }) => [
      `${s.length} = length(${e.a});`
    ];
  }
}
class Dr extends $ {
  constructor({ a: A, b: e }) {
    super({ a: A, b: e, outKey: "distance", outTypeFunc: (s, i) => "float" }), this.statements = ({ inputs: s, outputs: i }) => [
      `${i.distance} = distance(${s.a}, ${s.b});`
    ];
  }
}
class mr extends $ {
  constructor({ a: A, b: e }) {
    super({ a: A, b: e, outKey: "dot", outTypeFunc: (s, i) => "float" }), this.statements = ({ inputs: s, outputs: i }) => [
      `${i.dot} = dot(${s.a}, ${s.b});`
    ];
  }
}
class Mr extends $ {
  constructor({ a: A, b: e }) {
    super({ a: A, b: e, outKey: "cross", outTypeFunc: (s, i) => "vec3" }), this.statements = ({ inputs: s, outputs: i }) => [
      `${i.cross} = cross(${s.a}, ${s.b});`
    ];
  }
}
class xr extends N {
  constructor({ a: A }) {
    super({ a: A, outTypeFunc: (e) => e, outKey: "normalize" }), this.statements = ({ inputs: e, outputs: s }) => [
      `${s.normalize} = normalize(${e.a});`
    ];
  }
}
function iQ(t) {
  if (t === "vec3")
    return "vec2";
  if (t === "vec4")
    return "vec3";
  throw new Error("Invalid type");
}
class Sr extends N {
  constructor({ a: A }) {
    super({
      a: A,
      outTypeFunc: (e) => iQ(e),
      outKey: "projected"
    }), this.statements = ({ inputs: e, outputs: s }) => {
      if (this.inTypes.a === "vec3")
        return [`${s.projected} = ${e.a}.xy / ${e.a}.z;`];
      if (this.inTypes.a === "vec4")
        return [`${s.projected} = ${e.a}.xyz / ${e.a}.w;`];
      throw new Error("Invalid type");
    };
  }
}
function nQ(t) {
  if (t === "float") return "vec2";
  if (t === "vec2") return "vec3";
  if (t === "vec3") return "vec4";
  throw new Error("Invalid type");
}
class Nr extends $ {
  constructor({ a: A, b: e }) {
    const s = _(A), i = nQ(s);
    super({ a: A, b: e, outKey: "extend", outTypeFunc: () => i }), this.statements = ({ inputs: n, outputs: r }) => [
      `${r.extend} = ${i}(${n.a}, ${n.b});`
    ];
  }
}
class Fr extends ut {
  constructor({ a: A, b: e, c: s }) {
    super({
      a: A,
      b: e,
      c: s,
      outKey: "forward",
      outTypeFunc: (i, n, r) => i
    }), this.statements = ({ inputs: i, outputs: n }) => [
      `${n.forward} = faceforward(${i.a}, ${i.b}, ${i.c});`
    ];
  }
}
class kr extends $ {
  constructor({
    incident: A,
    normal: e
  }) {
    super({
      a: A,
      b: e,
      outKey: "reflection",
      outTypeFunc: (s, i) => s
    }), this.statements = ({ inputs: s, outputs: i }) => [
      `${i.reflection} = reflect(${s.a}, ${s.b});`
    ];
  }
}
class Gr extends ut {
  constructor({
    incident: A,
    normal: e,
    eta: s
  }) {
    super({
      a: A,
      b: e,
      c: s,
      outKey: "refraction",
      outTypeFunc: (i, n, r) => i
    }), this.statements = ({ inputs: i, outputs: n }) => [
      `${n.refraction} = refract(${i.a}, ${i.b}, ${i.c});`
    ];
  }
}
class Rr extends $ {
  constructor({ a: A, b: e }) {
    super({ a: A, b: e, outKey: "product", outTypeFunc: (s, i) => s }), this.statements = ({ inputs: s, outputs: i }) => [
      `${i.product} = matrixCompMult(${A}, ${e});`
    ];
  }
}
function rQ(t, A) {
  if (t === "vec2") {
    if (A === "vec2") return "mat2";
    if (A === "vec3") return "mat3x2";
    if (A === "vec4") return "mat4x2";
  }
  if (t === "vec3") {
    if (A === "vec2") return "mat2x3";
    if (A === "vec3") return "mat3";
    if (A === "vec4") return "mat4x3";
  }
  if (t === "vec4") {
    if (A === "vec2") return "mat2x4";
    if (A === "vec3") return "mat3x4";
    if (A === "vec4") return "mat4";
  }
  throw new Error(`Invalid outer type: ${t}, ${A}`);
}
class vr extends $ {
  constructor({ a: A, b: e }) {
    super({ a: A, b: e, outKey: "outer", outTypeFunc: rQ }), this.statements = ({ inputs: s, outputs: i }) => [
      `${i.outer} = outerProduct(${s.a}, ${s.b});`
    ];
  }
}
function aQ(t) {
  if (t === "mat2") return "mat2";
  if (t === "mat3") return "mat3";
  if (t === "mat4") return "mat4";
  if (t === "mat2x2") return "mat2x2";
  if (t === "mat2x3") return "mat3x2";
  if (t === "mat2x4") return "mat4x2";
  if (t === "mat3x2") return "mat2x3";
  if (t === "mat3x3") return "mat3x3";
  if (t === "mat3x4") return "mat4x3";
  if (t === "mat4x2") return "mat2x4";
  if (t === "mat4x3") return "mat3x4";
  if (t === "mat4x4") return "mat4x4";
  throw new Error(`Invalid transpose type: ${t}`);
}
class Ur extends N {
  constructor({ a: A }) {
    super({ a: A, outKey: "transpose", outTypeFunc: aQ }), this.statements = ({ inputs: e, outputs: s }) => [
      `${s.transpose} = transpose(${e.a});`
    ];
  }
}
class br extends N {
  constructor({ a: A }) {
    super({ a: A, outKey: "det", outTypeFunc: (e) => "float" }), this.statements = ({ inputs: e, outputs: s }) => [
      `${s.det} = determinant(${e.a});`
    ];
  }
}
class Lr extends N {
  constructor({ a: A }) {
    super({ a: A, outKey: "inverse", outTypeFunc: (e) => e }), this.statements = ({ inputs: e, outputs: s }) => [
      `${s.inverse} = inverse(${A});`
    ];
  }
}
function oQ(t) {
  const A = (e) => e;
  switch (t) {
    case "vec2":
      return A({ x: "float", y: "float", r: "float", g: "float" });
    case "vec3":
      return A({
        x: "float",
        y: "float",
        z: "float",
        r: "float",
        g: "float",
        b: "float"
      });
    case "vec4":
      return A({
        x: "float",
        y: "float",
        z: "float",
        w: "float",
        r: "float",
        g: "float",
        b: "float",
        a: "float"
      });
    case "ivec2":
      return A({ x: "int", y: "int", r: "int", g: "int" });
    case "ivec3":
      return A({
        x: "int",
        y: "int",
        z: "int",
        r: "int",
        g: "int",
        b: "int"
      });
    case "ivec4":
      return A({
        x: "int",
        y: "int",
        z: "int",
        w: "int",
        r: "int",
        g: "int",
        b: "int",
        a: "int"
      });
    case "uvec2":
      return A({ x: "uint", y: "uint", r: "uint", g: "uint" });
    case "uvec3":
      return A({
        x: "uint",
        y: "uint",
        z: "uint",
        r: "uint",
        g: "uint",
        b: "uint"
      });
    case "uvec4":
      return A({
        x: "uint",
        y: "uint",
        z: "uint",
        w: "uint",
        r: "uint",
        g: "uint",
        b: "uint",
        a: "uint"
      });
    default:
      throw new Error(`Invalid vector type: ${t}`);
  }
}
class Yr extends V {
  constructor({ vector: A }) {
    const s = { vector: _(A) }, i = oQ(s.vector);
    super({ inTypes: s, outTypes: i, inputs: { vector: A } }), this.statements = ({ inputs: n, outputs: r }) => {
      const { x: a, y: o, z: I, w: B, r: g, g: c, b: C, a: h } = r, { vector: E } = n;
      return [
        a ? `${a} = ${E}.x;` : null,
        o ? `${o} = ${E}.y;` : null,
        I ? `${I} = ${E}.z;` : null,
        B ? `${B} = ${E}.w;` : null,
        g ? `${g} = ${E}.r;` : null,
        c ? `${c} = ${E}.g;` : null,
        C ? `${C} = ${E}.b;` : null,
        h ? `${h} = ${E}.a;` : null
      ].filter(Boolean);
    };
  }
}
class Tr extends V {
  constructor({
    vector: A,
    vectorType: e,
    x: s,
    y: i,
    z: n,
    w: r,
    r: a,
    g: o,
    b: I,
    a: B
  }) {
    if (!A && !e)
      throw new Error("Either vector or vectorType must be provided");
    const g = e ?? _(A), c = xs(g), C = Ss(g), h = {
      vector: g,
      x: c,
      y: c,
      r: c,
      g: c
    }, E = { vector: A, x: s, y: i, r: a, g: o };
    C >= 3 && (Object.assign(h, { z: c, b: c }), Object.assign(E, { z: n, b: I })), C >= 4 && (Object.assign(h, { w: c, a: c }), Object.assign(E, { w: r, a: B })), super({ inTypes: h, outTypes: { vector: g }, inputs: E }), this.statements = ({ inputs: l, outputs: u }) => {
      const { vector: d } = u, {
        vector: p,
        x: w,
        y: f,
        z: x,
        w: M,
        r: D,
        g: y,
        b: R,
        a: S
      } = l, m = [
        `${d}.x = ${w ?? D ?? (p ? `${p}.x` : bt(c))};`,
        `${d}.y = ${f ?? y ?? (p ? `${p}.y` : bt(c))};`
      ];
      return C >= 3 && m.push(
        `${d}.z = ${x ?? R ?? (p ? `${p}.z` : bt(c))};`
      ), C >= 4 && m.push(
        `${d}.w = ${M ?? S ?? (p ? `${p}.w` : bt(c))};`
      ), m;
    };
  }
  dynoOut() {
    return new K(
      this,
      "vector"
    );
  }
}
function gQ(t, A) {
  let e = null;
  if (_t(t) ? e = A.length === 1 ? "float" : A.length === 2 ? "vec2" : A.length === 3 ? "vec3" : A.length === 4 ? "vec4" : null : hA(t) ? e = A.length === 1 ? "int" : A.length === 2 ? "ivec2" : A.length === 3 ? "ivec3" : A.length === 4 ? "ivec4" : null : lA(t) && (e = A.length === 1 ? "uint" : A.length === 2 ? "uvec2" : A.length === 3 ? "uvec3" : A.length === 4 ? "uvec4" : null), e == null)
    throw new Error(`Invalid swizzle: ${A}`);
  return e;
}
class Jr extends N {
  constructor({ vector: A, select: e }) {
    super({
      a: A,
      outKey: "swizzle",
      outTypeFunc: (s) => gQ(s, e)
    }), this.statements = ({ inputs: s, outputs: i }) => [
      `${i.swizzle} = ${s.a}.${e};`
    ];
  }
}
const IQ = (t, A, e) => new jr({ index: t, from: A, to: e }), BQ = (t) => new Gt({ value: t }), QQ = (t) => new GA({ state: t }), cQ = (t) => new RA({ state: t }), Hr = (t) => new Or({ value: t }), qr = (t) => new Zr({ value: t }), Kr = (t) => new Pr({ value: t }), zr = (t) => new Xr({ value: t }), CQ = (t) => new Wr({ value: t }), EQ = (t) => new $r({ value: t }), _r = (t) => new Aa({ value: t }), Le = (t) => new ta({ value: t }), Vr = (t, A, e) => new ea({ z: t, zNear: A, zFar: e }).outputs.depth;
class jr extends V {
  constructor({
    from: A,
    to: e,
    index: s
  }) {
    super({
      inTypes: { from: "int", to: "int", index: "int" },
      outTypes: { index: "int" },
      inputs: { from: A, to: e, index: s },
      statements: ({ inputs: i, outputs: n }) => [
        `${n.index} = ${i.index} - ${i.from} + ${i.to};`
      ]
    });
  }
  dynoOut() {
    return new K(this, "index");
  }
}
class GA extends V {
  constructor({ state: A }) {
    const e = _(A);
    super({
      inTypes: { state: e },
      outTypes: { state: "uint" },
      inputs: { state: A },
      globals: () => [
        CA(`
          uint pcg_next(uint state) {
            return state * 747796405u + 2891336453u;
          }
        `)
      ],
      statements: ({ inputs: s, outputs: i }) => {
        const n = e === "uint" ? `${s.state}` : e === "int" ? `uint(${s.state})` : `floatBitsToUint(${s.state})`;
        return [`${i.state} = pcg_next(${n});`];
      }
    });
  }
  dynoOut() {
    return new K(this, "state");
  }
}
class RA extends V {
  constructor({ state: A }) {
    super({
      inTypes: { state: "uint" },
      outTypes: { hash: "uint" },
      inputs: { state: A },
      globals: () => [
        CA(`
          uint pcg_hash(uint state) {
            uint hash = ((state >> ((state >> 28u) + 4u)) ^ state) * 277803737u;
            return (hash >> 22u) ^ hash;
          }
        `)
      ],
      statements: ({ inputs: e, outputs: s }) => [
        `${s.hash} = pcg_hash(${e.state});`
      ]
    });
  }
  dynoOut() {
    return new K(this, "hash");
  }
}
class Gt extends V {
  constructor({ value: A }) {
    const e = _(A), s = Ns(e);
    super({
      inTypes: { value: e },
      outTypes: { state: "uint" },
      inputs: { value: A },
      globals: () => [
        CA(`
          uint pcg_mix(uint value) {
            return value;
          }
          uint pcg_mix(uvec2 value) {
            return value.x + 0x9e3779b9u * value.y;
          }
          uint pcg_mix(uvec3 value) {
            return value.x + 0x9e3779b9u * value.y + 0x85ebca6bu * value.z;
          }
          uint pcg_mix(uvec4 value) {
            return value.x + 0x9e3779b9u * value.y + 0x85ebca6bu * value.z + 0xc2b2ae35u * value.w;
          }
        `)
      ],
      statements: ({ inputs: i, outputs: n }) => {
        const r = lA(e) ? `${i.value}` : hA(e) ? `${s}(${i.value})` : `floatBitsToUint(${i.value})`;
        return [
          `${s} bits = ${r};`,
          `${n.state} = pcg_mix(bits);`
        ];
      }
    });
  }
  dynoOut() {
    return new K(this, "state");
  }
}
class Or extends zA {
  constructor({ value: A }) {
    super({
      inTypes: { value: _(A) },
      outTypes: { hash: "uint" },
      inputs: { value: A },
      construct: ({ value: e }) => {
        if (!e)
          throw new Error("value is required");
        let s = new Gt({ value: e }).outputs.state;
        return s = new GA({ state: s }).outputs.state, new RA({ state: s }).outputs;
      }
    });
  }
  dynoOut() {
    return new K(this, "hash");
  }
}
class Zr extends zA {
  constructor({ value: A }) {
    super({
      inTypes: { value: _(A) },
      outTypes: { hash: "uvec2" },
      inputs: { value: A },
      construct: ({ value: e }) => {
        if (!e)
          throw new Error("value is required");
        let s = new Gt({ value: e }).outputs.state;
        s = new GA({ state: s }).outputs.state;
        const i = new RA({ state: s }).outputs.hash;
        s = new GA({ state: s }).outputs.state;
        const n = new RA({ state: s }).outputs.hash;
        return { hash: qA({ vectorType: "uvec2", x: i, y: n }) };
      }
    });
  }
  dynoOut() {
    return new K(this, "hash");
  }
}
class Pr extends zA {
  constructor({ value: A }) {
    super({
      inTypes: { value: _(A) },
      outTypes: { hash: "uvec3" },
      inputs: { value: A },
      construct: ({ value: e }) => {
        if (!e)
          throw new Error("value is required");
        let s = new Gt({ value: e }).outputs.state;
        s = new GA({ state: s }).outputs.state;
        const i = new RA({ state: s }).outputs.hash;
        s = new GA({ state: s }).outputs.state;
        const n = new RA({ state: s }).outputs.hash;
        s = new GA({ state: s }).outputs.state;
        const r = new RA({ state: s }).outputs.hash;
        return { hash: qA({ vectorType: "uvec3", x: i, y: n, z: r }) };
      }
    });
  }
  dynoOut() {
    return new K(this, "hash");
  }
}
class Xr extends zA {
  constructor({ value: A }) {
    super({
      inTypes: { value: _(A) },
      outTypes: { hash: "uvec4" },
      inputs: { value: A },
      construct: ({ value: e }) => {
        if (!e)
          throw new Error("value is required");
        let s = new Gt({ value: e }).outputs.state;
        s = new GA({ state: s }).outputs.state;
        const i = new RA({ state: s }).outputs.hash;
        s = new GA({ state: s }).outputs.state;
        const n = new RA({ state: s }).outputs.hash;
        s = new GA({ state: s }).outputs.state;
        const r = new RA({ state: s }).outputs.hash;
        s = new GA({ state: s }).outputs.state;
        const a = new RA({ state: s }).outputs.hash;
        return { hash: qA({ vectorType: "uvec4", x: i, y: n, z: r, w: a }) };
      }
    });
  }
  dynoOut() {
    return new K(this, "hash");
  }
}
class Wr extends zA {
  constructor({ value: A }) {
    super({
      inTypes: { value: _(A) },
      outTypes: { hash: "float" },
      inputs: { value: A },
      construct: ({ value: e }) => {
        if (!e)
          throw new Error("value is required");
        const s = Hr(e);
        return { hash: QA(Yn(s), q("float", 1 / 2 ** 32)) };
      }
    });
  }
  dynoOut() {
    return new K(this, "hash");
  }
}
class $r extends zA {
  constructor({ value: A }) {
    super({
      inTypes: { value: _(A) },
      outTypes: { hash: "vec2" },
      inputs: { value: A },
      construct: ({ value: e }) => {
        if (!e)
          throw new Error("value is required");
        const s = qr(e);
        return { hash: QA(Tn(s), q("float", 1 / 2 ** 32)) };
      }
    });
  }
  dynoOut() {
    return new K(this, "hash");
  }
}
class Aa extends zA {
  constructor({ value: A }) {
    super({
      inTypes: { value: _(A) },
      outTypes: { hash: "vec3" },
      inputs: { value: A },
      construct: ({ value: e }) => {
        if (!e)
          throw new Error("value is required");
        const s = Kr(e);
        return { hash: QA(Et(s), q("float", 1 / 2 ** 32)) };
      }
    });
  }
  dynoOut() {
    return new K(this, "hash");
  }
}
class ta extends zA {
  constructor({ value: A }) {
    super({
      inTypes: { value: _(A) },
      outTypes: { hash: "vec4" },
      inputs: { value: A },
      construct: ({ value: e }) => {
        if (!e)
          throw new Error("value is required");
        const s = zr(e);
        return { hash: QA(Jn(s), q("float", 1 / 2 ** 32)) };
      }
    });
  }
  dynoOut() {
    return new K(this, "hash");
  }
}
class ea extends V {
  constructor({
    z: A,
    zNear: e,
    zFar: s
  }) {
    super({
      inTypes: { z: "float", zNear: "float", zFar: "float" },
      outTypes: { depth: "float" },
      inputs: { z: A, zNear: e, zFar: s },
      statements: ({ inputs: i, outputs: n }) => [
        `float clamped = clamp(${i.z}, ${i.zNear}, ${i.zFar});`,
        `${n.depth} = (log2(clamped + 1.0) - log2(${i.zNear} + 1.0)) / (log2(${i.zFar} + 1.0) - log2(${i.zNear} + 1.0));`
      ]
    });
  }
  dynoOut() {
    return new K(this, "depth");
  }
}
const sa = (t, {
  scale: A,
  scales: e,
  rotate: s,
  translate: i
}) => new na({ position: t, scale: A, scales: e, rotate: s, translate: i }).outputs.position, ia = (t, {
  scale: A,
  scales: e,
  rotate: s
}) => new ra({ dir: t, scale: A, scales: e, rotate: s }).outputs.dir, hQ = (t, { rotate: A }) => new aa({ quaternion: t, rotate: A }).outputs.quaternion;
class na extends V {
  constructor({
    position: A,
    scale: e,
    scales: s,
    rotate: i,
    translate: n
  }) {
    super({
      inTypes: {
        position: "vec3",
        scale: "float",
        scales: "vec3",
        rotate: "vec4",
        translate: "vec3"
      },
      outTypes: { position: "vec3" },
      inputs: { position: A, scale: e, scales: s, rotate: i, translate: n },
      statements: ({ inputs: r, outputs: a }) => {
        const { position: o } = a;
        if (!o)
          return [];
        const { scale: I, scales: B, rotate: g, translate: c } = r;
        return [
          `${o} = ${r.position ?? "vec3(0.0, 0.0, 0.0)"};`,
          I ? `${o} *= ${I};` : null,
          B ? `${o} *= ${B};` : null,
          g ? `${o} = quatVec(${g}, ${o});` : null,
          c ? `${o} += ${c};` : null
        ].filter(Boolean);
      }
    });
  }
}
class ra extends V {
  constructor({
    dir: A,
    scale: e,
    scales: s,
    rotate: i
  }) {
    super({
      inTypes: { dir: "vec3", scale: "float", scales: "vec3", rotate: "vec4" },
      outTypes: { dir: "vec3" },
      inputs: { dir: A, scale: e, scales: s, rotate: i },
      statements: ({ inputs: n, outputs: r }) => {
        const { dir: a } = r;
        if (!a)
          return [];
        const { scale: o, scales: I, rotate: B } = n;
        return [
          `${a} = ${n.dir ?? "vec3(0.0, 0.0, 0.0)"};`,
          o ? `${a} *= ${o};` : null,
          I ? `${a} *= ${I};` : null,
          B ? `${a} = quatVec(${B}, ${a});` : null
        ].filter(Boolean);
      }
    });
  }
}
class aa extends V {
  constructor({
    quaternion: A,
    rotate: e
  }) {
    super({
      inTypes: { quaternion: "vec4", rotate: "vec4" },
      outTypes: { quaternion: "vec4" },
      inputs: { quaternion: A, rotate: e },
      statements: ({ inputs: s, outputs: i }) => {
        const { quaternion: n } = i;
        return n ? [
          `${n} = ${s.quaternion ?? "vec4(0.0, 0.0, 0.0, 1.0)"};`,
          e ? `${n} = quatQuat(${s.rotate}, ${n});` : null
        ].filter(Boolean) : [];
      }
    });
  }
}
const lQ = () => {
  throw new Error("Not implemented");
}, uQ = () => {
  throw new Error("Not implemented");
}, dQ = () => {
  throw new Error("Not implemented");
}, pQ = () => {
  throw new Error("Not implemented");
}, yQ = () => {
  throw new Error("Not implemented");
}, wQ = () => {
  throw new Error("Not implemented");
}, fQ = (t, A) => new oa({ texture: t, lod: A }), DQ = (t, A, e) => new ga({ texture: t, coord: A, bias: e }), mQ = (t, A, e) => new Ia({ texture: t, coord: A, lod: e });
class oa extends V {
  constructor({ texture: A, lod: e }) {
    const s = _(A);
    super({
      inTypes: { texture: s, lod: "int" },
      outTypes: { size: Ba(s) },
      inputs: { texture: A, lod: e },
      statements: ({ inputs: i, outputs: n }) => [
        `${n.size} = textureSize(${i.texture}, ${i.lod ?? "0"});`
      ]
    });
  }
  dynoOut() {
    return new K(this, "size");
  }
}
class ga extends V {
  constructor({
    texture: A,
    coord: e,
    bias: s
  }) {
    const i = _(A);
    super({
      inTypes: {
        texture: i,
        coord: MQ(i),
        bias: "float"
      },
      outTypes: { sample: Qa(i) },
      inputs: { texture: A, coord: e, bias: s },
      statements: ({ inputs: n, outputs: r }) => [
        `${r.sample} = texture(${n.texture}, ${n.coord}${n.bias ? `, ${n.bias}` : ""});`
      ]
    });
  }
  dynoOut() {
    return new K(this, "sample");
  }
}
class Ia extends V {
  constructor({
    texture: A,
    coord: e,
    lod: s
  }) {
    const i = _(A);
    super({
      inTypes: {
        texture: i,
        coord: Ba(i),
        lod: "int"
      },
      outTypes: { texel: Qa(i) },
      inputs: { texture: A, coord: e, lod: s },
      statements: ({ inputs: n, outputs: r }) => [
        `${r.texel} = texelFetch(${n.texture}, ${n.coord}, ${n.lod ?? "0"});`
      ]
    });
  }
  dynoOut() {
    return new K(this, "texel");
  }
}
function Ba(t) {
  switch (t) {
    case "sampler2D":
    case "usampler2D":
    case "isampler2D":
    case "samplerCube":
    case "usamplerCube":
    case "isamplerCube":
    case "sampler2DShadow":
    case "samplerCubeShadow":
      return "ivec2";
    case "sampler3D":
    case "usampler3D":
    case "isampler3D":
    case "sampler2DArray":
    case "usampler2DArray":
    case "isampler2DArray":
    case "sampler2DArrayShadow":
      return "ivec3";
    default:
      throw new Error(`Invalid texture type: ${t}`);
  }
}
function MQ(t) {
  switch (t) {
    case "sampler2D":
    case "usampler2D":
    case "isampler2D":
      return "vec2";
    case "sampler3D":
    case "usampler3D":
    case "isampler3D":
    case "samplerCube":
    case "usamplerCube":
    case "isamplerCube":
    case "sampler2DArray":
    case "usampler2DArray":
    case "isampler2DArray":
    case "sampler2DShadow":
      return "vec3";
    case "samplerCubeShadow":
    case "sampler2DArrayShadow":
      return "vec4";
    default:
      throw new Error(`Invalid texture type: ${t}`);
  }
}
function Qa(t) {
  switch (t) {
    case "sampler2D":
    case "sampler2DArray":
    case "sampler3D":
    case "samplerCube":
    case "sampler2DShadow":
      return "vec4";
    case "usampler2D":
    case "usampler2DArray":
    case "usampler3D":
    case "usamplerCube":
      return "uvec4";
    case "isampler2D":
    case "isampler2DArray":
    case "isampler3D":
    case "isamplerCube":
      return "ivec4";
    case "samplerCubeShadow":
    case "sampler2DArrayShadow":
      return "float";
    default:
      throw new Error(`Invalid texture type: ${t}`);
  }
}
const xQ = (t) => new ca({ degrees: t }), SQ = (t) => new Ca({ radians: t }), Ye = (t) => new Ea({ radians: t }), NQ = (t) => new ha({ radians: t }), FQ = (t) => new la({ radians: t }), kQ = (t) => new ua({ sin: t }), GQ = (t) => new da({ cos: t }), RQ = (t) => new pa({ tan: t }), vQ = (t, A) => new ya({ y: t, x: A }), UQ = (t) => new wa({ x: t }), bQ = (t) => new fa({ x: t }), LQ = (t) => new Da({ x: t }), YQ = (t) => new ma({ x: t }), TQ = (t) => new Ma({ x: t }), JQ = (t) => new xa({ x: t });
class ca extends N {
  constructor({ degrees: A }) {
    super({ a: A, outTypeFunc: (e) => e, outKey: "radians" }), this.statements = ({ inputs: e, outputs: s }) => [
      `${s.radians} = radians(${e.a});`
    ];
  }
}
class Ca extends N {
  constructor({ radians: A }) {
    super({ a: A, outTypeFunc: (e) => e, outKey: "degrees" }), this.statements = ({ inputs: e, outputs: s }) => [
      `${s.degrees} = degrees(${e.a});`
    ];
  }
}
class Ea extends N {
  constructor({ radians: A }) {
    super({ a: A, outTypeFunc: (e) => e, outKey: "sin" }), this.statements = ({ inputs: e, outputs: s }) => [
      `${s.sin} = sin(${e.a});`
    ];
  }
}
class ha extends N {
  constructor({ radians: A }) {
    super({ a: A, outTypeFunc: (e) => e, outKey: "cos" }), this.statements = ({ inputs: e, outputs: s }) => [
      `${s.cos} = cos(${e.a});`
    ];
  }
}
class la extends N {
  constructor({ radians: A }) {
    super({ a: A, outTypeFunc: (e) => e, outKey: "tan" }), this.statements = ({ inputs: e, outputs: s }) => [
      `${s.tan} = tan(${e.a});`
    ];
  }
}
class ua extends N {
  constructor({ sin: A }) {
    super({ a: A, outTypeFunc: (e) => e, outKey: "asin" }), this.statements = ({ inputs: e, outputs: s }) => [
      `${s.asin} = asin(${e.a});`
    ];
  }
}
class da extends N {
  constructor({ cos: A }) {
    super({ a: A, outTypeFunc: (e) => e, outKey: "acos" }), this.statements = ({ inputs: e, outputs: s }) => [
      `${s.acos} = acos(${e.a});`
    ];
  }
}
class pa extends N {
  constructor({ tan: A }) {
    super({ a: A, outTypeFunc: (e) => e, outKey: "atan" }), this.statements = ({ inputs: e, outputs: s }) => [
      `${s.atan} = atan(${e.a});`
    ];
  }
}
class ya extends $ {
  constructor({ y: A, x: e }) {
    super({
      a: A,
      b: e,
      outTypeFunc: (s, i) => s,
      outKey: "atan2"
    }), this.statements = ({ inputs: s, outputs: i }) => [
      `${i.atan2} = atan2(${s.a}, ${s.b});`
    ];
  }
}
class wa extends N {
  constructor({ x: A }) {
    super({ a: A, outTypeFunc: (e) => e, outKey: "sinh" }), this.statements = ({ inputs: e, outputs: s }) => [
      `${s.sinh} = sinh(${e.a});`
    ];
  }
}
class fa extends N {
  constructor({ x: A }) {
    super({ a: A, outTypeFunc: (e) => e, outKey: "cosh" }), this.statements = ({ inputs: e, outputs: s }) => [
      `${s.cosh} = cosh(${e.a});`
    ];
  }
}
class Da extends N {
  constructor({ x: A }) {
    super({ a: A, outTypeFunc: (e) => e, outKey: "tanh" }), this.statements = ({ inputs: e, outputs: s }) => [
      `${s.tanh} = tanh(${e.a});`
    ];
  }
}
class ma extends N {
  constructor({ x: A }) {
    super({ a: A, outTypeFunc: (e) => e, outKey: "asinh" }), this.statements = ({ inputs: e, outputs: s }) => [
      `${s.asinh} = asinh(${e.a});`
    ];
  }
}
class Ma extends N {
  constructor({ x: A }) {
    super({ a: A, outTypeFunc: (e) => e, outKey: "acosh" }), this.statements = ({ inputs: e, outputs: s }) => [
      `${s.acosh} = acosh(${e.a});`
    ];
  }
}
class xa extends N {
  constructor({ x: A }) {
    super({ a: A, outTypeFunc: (e) => e, outKey: "atanh" }), this.statements = ({ inputs: e, outputs: s }) => [
      `${s.atanh} = atanh(${e.a});`
    ];
  }
}
const BC = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  Abs: Wi,
  Acos: da,
  Acosh: Ma,
  Add: zi,
  All: vn,
  And: fn,
  Any: Rn,
  Asin: ua,
  Asinh: ma,
  Atan: pa,
  Atan2: ya,
  Atanh: xa,
  BVec2: On,
  BVec3: Zn,
  BVec4: Pn,
  BinaryOp: $,
  Bool: zn,
  Ceil: tn,
  Clamp: hn,
  Combine: Tr,
  CombineGsplat: Ts,
  CompMult: Rr,
  CompXor: Ln,
  Compilation: Gs,
  Cos: ha,
  Cosh: fa,
  Cross: Mr,
  Degrees: Ca,
  Determinant: br,
  Distance: Dr,
  Div: ji,
  Dot: mr,
  Dyno: V,
  DynoBlock: zA,
  DynoBool: ae,
  DynoBvec2: Vs,
  DynoBvec3: Ps,
  DynoBvec4: $s,
  DynoConst: ks,
  DynoFloat: ct,
  DynoInt: qt,
  DynoIsampler2D: Ei,
  DynoIsampler2DArray: li,
  DynoIsampler3D: pi,
  DynoIsamplerCube: fi,
  DynoIvec2: Os,
  DynoIvec3: Ws,
  DynoIvec4: ti,
  DynoLiteral: Mt,
  DynoMat2: ei,
  DynoMat2x2: si,
  DynoMat2x3: ii,
  DynoMat2x4: ni,
  DynoMat3: ri,
  DynoMat3x2: ai,
  DynoMat3x3: oi,
  DynoMat3x4: gi,
  DynoMat4: Ii,
  DynoMat4x2: Bi,
  DynoMat4x3: Qi,
  DynoMat4x4: ci,
  DynoOutput: K,
  DynoProgram: Ze,
  DynoProgramTemplate: Pe,
  DynoRemapIndex: jr,
  DynoSampler2D: hi,
  DynoSampler2DArray: ui,
  DynoSampler2DArrayShadow: Mi,
  DynoSampler2DShadow: mi,
  DynoSampler3D: yi,
  DynoSamplerCube: Di,
  DynoSamplerCubeShadow: xi,
  DynoUint: _s,
  DynoUniform: G,
  DynoUsampler2D: Ci,
  DynoUsampler2DArray: Tt,
  DynoUsampler3D: di,
  DynoUsamplerCube: wi,
  DynoUvec2: js,
  DynoUvec3: Xs,
  DynoUvec4: Ai,
  DynoValue: nt,
  DynoVec2: Zs,
  DynoVec3: St,
  DynoVec4: Zt,
  Equal: kn,
  Exp: an,
  Exp2: on,
  ExtendVec: Nr,
  FaceForward: Fr,
  Float: jn,
  FloatBitsToInt: gr,
  FloatBitsToUint: Ir,
  Floor: An,
  Fract: nn,
  GreaterThan: Nn,
  GreaterThanEqual: Fn,
  Gsplat: W,
  GsplatNormal: Hs,
  Hash: Or,
  Hash2: Zr,
  Hash3: Pr,
  Hash4: Xr,
  HashFloat: Wr,
  HashVec2: $r,
  HashVec3: Aa,
  HashVec4: ta,
  IMod: Oi,
  IVec2: Xn,
  IVec3: Wn,
  IVec4: $n,
  Int: _n,
  IntBitsToFloat: Br,
  Inverse: Lr,
  InverseSqrt: cn,
  IsInf: yn,
  IsNan: pn,
  Length: fr,
  LessThan: xn,
  LessThanEqual: Sn,
  Log: gn,
  Log2: In,
  Mat2: rr,
  Mat3: ar,
  Mat4: or,
  Max: En,
  Min: Cn,
  Mix: ln,
  Mod: Zi,
  Modf: Pi,
  Mul: Vi,
  Neg: Xi,
  Normalize: xr,
  NormalizedDepth: ea,
  Not: Mn,
  NotEqual: Gn,
  NumPackedSplats: vs,
  Or: Dn,
  Outer: vr,
  OutputPackedSplat: zs,
  OutputRgba8: je,
  PackHalf2x16: lr,
  PackSnorm2x16: cr,
  PackUnorm2x16: Er,
  PcgHash: RA,
  PcgMix: Gt,
  PcgNext: GA,
  Pow: rn,
  ProjectH: Sr,
  Radians: ca,
  ReadPackedSplat: bs,
  ReadPackedSplatRange: Ls,
  ReflectVec: kr,
  RefractVec: Gr,
  Round: sn,
  Select: Un,
  Sign: $i,
  SimpleCast: oA,
  Sin: Ea,
  Sinh: wa,
  Smoothstep: dn,
  Split: Yr,
  SplitGsplat: Ys,
  Sqr: Bn,
  Sqrt: Qn,
  Step: un,
  Sub: _i,
  Swizzle: Jr,
  TPackedSplats: Ot,
  Tan: la,
  Tanh: Da,
  TexelFetch: Ia,
  Texture: ga,
  TextureSize: oa,
  TransformDir: ra,
  TransformGsplat: qs,
  TransformPosition: na,
  TransformQuaternion: aa,
  Transpose: Ur,
  TrinaryOp: ut,
  Trunc: en,
  UVec2: Ar,
  UVec3: tr,
  UVec4: er,
  Uint: Vn,
  UintBitsToFloat: Qr,
  UintToRgba8: dr,
  UnaryOp: N,
  UnpackHalf2x16: ur,
  UnpackSnorm2x16: Cr,
  UnpackUnorm2x16: hr,
  Vec2: sr,
  Vec3: ir,
  Vec4: nr,
  Xor: mn,
  abs: qI,
  acos: GQ,
  acosh: TQ,
  add: DA,
  all: uB,
  and: oB,
  any: lB,
  arrayIndex: yQ,
  arrayLength: wQ,
  asin: kQ,
  asinh: YQ,
  atan: RQ,
  atan2: vQ,
  atanh: JQ,
  bool: wB,
  bvec2: mB,
  bvec3: MB,
  bvec4: xB,
  ceil: _I,
  clamp: sB,
  combine: qA,
  combineGsplat: rt,
  comment: pQ,
  compMult: $B,
  compXor: dB,
  cos: NQ,
  cosh: bQ,
  cross: jB,
  defineGsplat: NA,
  defineGsplatNormal: Js,
  definePackedSplats: he,
  degrees: SQ,
  determinant: eQ,
  distance: VB,
  div: ie,
  dot: pr,
  dyno: jt,
  dynoBlock: kA,
  dynoBool: zo,
  dynoBvec2: jo,
  dynoBvec3: Xo,
  dynoBvec4: Ag,
  dynoConst: q,
  dynoDeclare: _e,
  dynoFloat: TA,
  dynoFor: dQ,
  dynoIf: lQ,
  dynoInt: Vo,
  dynoIsampler2D: lg,
  dynoIsampler2DArray: pg,
  dynoIsampler3D: fg,
  dynoIsamplerCube: Mg,
  dynoIvec2: Zo,
  dynoIvec3: $o,
  dynoIvec4: eg,
  dynoLiteral: re,
  dynoMat2: ig,
  dynoMat2x2: ng,
  dynoMat2x3: rg,
  dynoMat2x4: ag,
  dynoMat3: og,
  dynoMat3x2: gg,
  dynoMat3x3: Ig,
  dynoMat3x4: Bg,
  dynoMat4: Qg,
  dynoMat4x2: cg,
  dynoMat4x3: Cg,
  dynoMat4x4: Eg,
  dynoSampler2D: ug,
  dynoSampler2DArray: yg,
  dynoSampler2DArrayShadow: Ng,
  dynoSampler2DShadow: Sg,
  dynoSampler3D: Dg,
  dynoSamplerCube: xg,
  dynoSamplerCubeShadow: Fg,
  dynoSwitch: uQ,
  dynoUint: _o,
  dynoUsampler2D: hg,
  dynoUsampler2DArray: dg,
  dynoUsampler3D: wg,
  dynoUsamplerCube: mg,
  dynoUvec2: Oo,
  dynoUvec3: Wo,
  dynoUvec4: tg,
  dynoVec2: Po,
  dynoVec3: At,
  dynoVec4: sg,
  equal: EB,
  exp: ZI,
  exp2: PI,
  extendVec: wr,
  faceforward: OB,
  float: Yn,
  floatBitsToInt: Hn,
  floatBitsToUint: LB,
  floor: zI,
  fract: ne,
  greaterThan: CB,
  greaterThanEqual: wn,
  gsplatNormal: Re,
  hash: Hr,
  hash2: qr,
  hash3: Kr,
  hash4: zr,
  hashFloat: CQ,
  hashVec2: EQ,
  hashVec3: _r,
  hashVec4: Le,
  imod: be,
  int: fB,
  intBitsToFloat: YB,
  inverse: sQ,
  inversesqrt: tB,
  isAllFloatType: at,
  isBoolType: ht,
  isFloatType: _t,
  isInf: aB,
  isIntType: hA,
  isMat2: ot,
  isMat3: gt,
  isMat4: It,
  isMatFloatType: Ms,
  isNan: rB,
  isScalarType: lt,
  isUintType: lA,
  isVector2Type: Ft,
  isVector3Type: kt,
  isVector4Type: Vt,
  isVectorType: bo,
  ivec2: SB,
  ivec3: NB,
  ivec4: FB,
  length: _B,
  lessThan: QB,
  lessThanEqual: cB,
  literalNegOne: Jo,
  literalOne: To,
  literalZero: bt,
  log: XI,
  log2: WI,
  mat2: vB,
  mat3: UB,
  mat4: bB,
  max: qi,
  min: eB,
  mix: Ki,
  mod: Hi,
  modf: HI,
  mul: QA,
  neg: We,
  normalize: yr,
  normalizedDepth: Vr,
  not: BB,
  notEqual: hB,
  numPackedSplats: Ho,
  numberAsFloat: H,
  numberAsInt: nA,
  numberAsUint: rA,
  or: gB,
  outer: AQ,
  outputPackedSplat: Ks,
  outputRgba8: qo,
  packHalf2x16: qn,
  packSnorm2x16: JB,
  packUnorm2x16: qB,
  pcgHash: cQ,
  pcgMix: BQ,
  pcgNext: QQ,
  pow: OI,
  projectH: XB,
  radians: xQ,
  readPackedSplat: Ht,
  readPackedSplatRange: Rs,
  reflectVec: ZB,
  refractVec: PB,
  remapIndex: IQ,
  round: jI,
  sameSizeIvec: Yo,
  sameSizeUvec: Ns,
  sameSizeVec: Lo,
  select: $e,
  sign: KI,
  sin: Ye,
  sinh: UQ,
  smoothstep: nB,
  split: xt,
  splitGsplat: Qt,
  sqr: $I,
  sqrt: AB,
  step: iB,
  sub: Nt,
  swizzle: WB,
  tan: FQ,
  tanh: LQ,
  texelFetch: mQ,
  texture: DQ,
  textureSize: fQ,
  transformDir: ia,
  transformGsplat: Ve,
  transformPos: sa,
  transformQuat: hQ,
  transpose: tQ,
  trunc: VI,
  typeLiteral: Fs,
  uint: DB,
  uintBitsToFloat: TB,
  uintToRgba8: Kn,
  uniform: Ko,
  unindent: CA,
  unindentLines: vA,
  unpackHalf2x16: zB,
  unpackSnorm2x16: HB,
  unpackUnorm2x16: KB,
  uvec2: kB,
  uvec3: GB,
  uvec4: RB,
  valType: _,
  vec2: Tn,
  vec3: Et,
  vec4: Jn,
  vectorDim: Ss,
  vectorElementType: xs,
  xor: IB
}, Symbol.toStringTag, { value: "Module" }));
var HQ = `precision highp float;
precision highp int;
precision highp sampler2D;
precision highp usampler2D;
precision highp isampler2D;
precision highp sampler2DArray;
precision highp usampler2DArray;
precision highp isampler2DArray;
precision highp sampler3D;
precision highp usampler3D;
precision highp isampler3D;

#include <splatDefines>

uniform uint targetLayer;
uniform int targetBase;
uniform int targetCount;

out vec4 target;

{{ GLOBALS }}

void computeReadback(int index) {
    {{ STATEMENTS }}
}

void main() {
    int targetIndex = int(targetLayer << SPLAT_TEX_LAYER_BITS) + int(uint(gl_FragCoord.y) << SPLAT_TEX_WIDTH_BITS) + int(gl_FragCoord.x);
    int index = targetIndex - targetBase;

    if ((index >= 0) && (index < targetCount)) {
        computeReadback(index);
    } else {
        target = vec4(0.0, 0.0, 0.0, 0.0);
    }
}`;
const IA = class IA {
  constructor({ renderer: A } = {}) {
    this.renderer = A, this.capacity = 0, this.count = 0;
  }
  dispose() {
    this.target && (this.target.dispose(), this.target = void 0);
  }
  // Ensure we have a buffer large enough for the readback of count indices.
  // Pass in previous bufer of the desired type.
  ensureBuffer(A, e) {
    const i = Math.ceil(Math.max(1, A) / X) * X * 4;
    if (e.byteLength >= i)
      return e;
    const n = new ArrayBuffer(i);
    if (e instanceof ArrayBuffer)
      return n;
    const r = e.constructor;
    return new r(n);
  }
  // Ensure our render target is large enough for the readback of capacity indices.
  ensureCapacity(A) {
    const { width: e, height: s, depth: i, maxSplats: n } = mA(A);
    (!this.target || n > this.capacity) && (this.dispose(), this.capacity = n, this.target = new Q.WebGLArrayRenderTarget(e, s, i, {
      depthBuffer: !1,
      stencilBuffer: !1,
      generateMipmaps: !1,
      magFilter: Q.NearestFilter,
      minFilter: Q.NearestFilter
    }), this.target.texture.format = Q.RGBAFormat, this.target.texture.type = Q.UnsignedByteType, this.target.texture.internalFormat = "RGBA8", this.target.scissorTest = !0);
  }
  // Get a program and THREE.RawShaderMaterial for a given Rgba8Readback,
  // generating it if necessary and caching the result.
  prepareProgramMaterial(A) {
    let e = IA.readbackProgram.get(A);
    if (!e) {
      const i = kA(
        { index: "int" },
        { rgba8: "vec4" },
        ({ index: n }) => (A.inputs.index = n, { rgba8: new je({ rgba8: A.outputs.rgba8 }) })
      );
      IA.programTemplate || (IA.programTemplate = new Pe(HQ)), e = new Ze({
        graph: i,
        inputs: { index: "index" },
        outputs: { rgba8: "target" },
        template: IA.programTemplate
      }), Object.assign(e.uniforms, {
        targetLayer: { value: 0 },
        targetBase: { value: 0 },
        targetCount: { value: 0 }
      }), IA.readbackProgram.set(A, e);
    }
    const s = e.prepareMaterial();
    return IA.mesh.material = s, { program: e, material: s };
  }
  saveRenderState(A) {
    return {
      xrEnabled: A.xr.enabled,
      autoClear: A.autoClear
    };
  }
  resetRenderState(A, e) {
    A.setRenderTarget(null), A.xr.enabled = e.xrEnabled, A.autoClear = e.autoClear;
  }
  process({
    count: A,
    material: e
  }) {
    const s = this.renderer;
    if (!s)
      throw new Error("No renderer");
    if (!this.target)
      throw new Error("No target");
    const i = X * it;
    e.uniforms.targetBase.value = 0, e.uniforms.targetCount.value = A;
    let n = 0;
    for (; n < A; ) {
      const r = Math.floor(n / i), a = r * i, o = Math.min(
        it,
        Math.ceil((A - a) / X)
      );
      e.uniforms.targetLayer.value = r, this.target.scissor.set(0, 0, X, o), s.setRenderTarget(this.target, r), s.xr.enabled = !1, s.autoClear = !1, s.render(IA.scene, IA.camera), n += X * o;
    }
    this.count = A;
  }
  async read({
    readback: A
  }) {
    const e = this.renderer;
    if (!e)
      throw new Error("No renderer");
    if (!this.target)
      throw new Error("No target");
    const s = Math.ceil(this.count / X) * X;
    if (A.byteLength < s * 4)
      throw new Error(
        `Readback buffer too small: ${A.byteLength} < ${s * 4}`
      );
    const i = new Uint8Array(
      A instanceof ArrayBuffer ? A : A.buffer
    ), n = X * it;
    let r = 0;
    const a = [];
    for (; r < this.count; ) {
      const o = Math.floor(r / n), I = o * n, B = Math.min(
        it,
        Math.ceil((this.count - I) / X)
      );
      e.setRenderTarget(this.target, o);
      const g = X * B * 4, c = i.subarray(
        I * 4,
        I * 4 + g
      ), C = e == null ? void 0 : e.readRenderTargetPixelsAsync(
        this.target,
        0,
        0,
        X,
        B,
        c
      );
      a.push(C), r += X * B;
    }
    return Promise.all(a).then(() => A);
  }
  // Perform render operation to run the Rgba8Readback program
  // but don't perform the readback yet.
  render({
    reader: A,
    count: e,
    renderer: s
  }) {
    if (this.renderer = s || this.renderer, !this.renderer)
      throw new Error("No renderer");
    this.ensureCapacity(e);
    const { program: i, material: n } = this.prepareProgramMaterial(A);
    i.update();
    const r = this.saveRenderState(this.renderer);
    this.process({ count: e, material: n }), this.resetRenderState(this.renderer, r);
  }
  // Perform a readback of the render target, returning a buffer of the
  // given type.
  async readback({
    readback: A
  }) {
    if (!this.renderer)
      throw new Error("No renderer");
    const e = this.saveRenderState(this.renderer), s = this.read({ readback: A });
    return this.resetRenderState(this.renderer, e), s;
  }
  // Perform a render and readback operation for the given Rgba8Readback,
  // and readback buffer (call ensureBuffer first).
  async renderReadback({
    reader: A,
    count: e,
    renderer: s,
    readback: i
  }) {
    if (this.renderer = s || this.renderer, !this.renderer)
      throw new Error("No renderer");
    this.ensureCapacity(e);
    const { program: n, material: r } = this.prepareProgramMaterial(A);
    n.update();
    const a = this.saveRenderState(this.renderer);
    this.process({ count: e, material: r });
    const o = this.read({ readback: i });
    return this.resetRenderState(this.renderer, a), o;
  }
  getTexture() {
    var A;
    return (A = this.target) == null ? void 0 : A.texture;
  }
};
IA.programTemplate = null, IA.readbackProgram = /* @__PURE__ */ new Map(), IA.geometry = new Q.PlaneGeometry(2, 2), IA.mesh = new Q.Mesh(
  IA.geometry,
  new Q.RawShaderMaterial({ visible: !1 })
), IA.scene = new Q.Scene().add(IA.mesh), IA.camera = new Q.Camera();
let ge = IA;
const BA = class BA {
  constructor(A = {}) {
    this.capacity = 0, this.count = 0, this.array = null, this.readback = null, this.source = null, this.needsUpdate = !0, this.dyno = new G({
      key: "rgbaArray",
      type: Sa,
      globals: () => [Na],
      value: {
        texture: BA.getEmpty(),
        count: 0
      },
      update: (e) => {
        var s;
        return e.texture = ((s = this.readback) == null ? void 0 : s.getTexture()) ?? this.source ?? BA.getEmpty(), e.count = this.count, e;
      }
    }), A.array ? (this.array = A.array, this.capacity = Math.floor(this.array.length / 4), this.capacity = Math.floor(this.capacity / X) * X, this.count = Math.min(
      this.capacity,
      A.count ?? Number.POSITIVE_INFINITY
    )) : (this.capacity = A.capacity ?? 0, this.count = 0);
  }
  // Free up resources
  dispose() {
    this.readback && (this.readback.dispose(), this.readback = null), this.source && (this.source.dispose(), this.source = null);
  }
  // Ensure that our array is large enough to hold capacity RGBA8 values.
  ensureCapacity(A) {
    var e;
    if (!this.array || A > (((e = this.array) == null ? void 0 : e.length) ?? 0) / 4) {
      this.capacity = mA(A).maxSplats;
      const s = new Uint8Array(this.capacity * 4);
      this.array && s.set(this.array), this.array = s;
    }
    return this.array;
  }
  // Get the THREE.DataArrayTexture from either the readback or the source.
  getTexture() {
    var e;
    let A = (e = this.readback) == null ? void 0 : e.getTexture();
    return (this.source || this.array) && (A = this.maybeUpdateSource()), A ?? BA.getEmpty();
  }
  // Create or get a THREE.DataArrayTexture from the data array.
  maybeUpdateSource() {
    if (!this.array)
      throw new Error("No array");
    if (this.needsUpdate || !this.source) {
      if (this.needsUpdate = !1, this.source) {
        const { width: A, height: e, depth: s } = this.source.image;
        this.capacity !== A * e * s && (this.source.dispose(), this.source = null);
      }
      if (this.source)
        this.array.buffer !== this.source.image.data.buffer && (this.source.image.data = new Uint8Array(this.array.buffer));
      else {
        const { width: A, height: e, depth: s } = mA(this.capacity);
        this.source = new Q.DataArrayTexture(
          this.array,
          A,
          e,
          s
        ), this.source.format = Q.RGBAFormat, this.source.type = Q.UnsignedByteType, this.source.internalFormat = "RGBA8", this.source.needsUpdate = !0;
      }
      this.source.needsUpdate = !0;
    }
    return this.source;
  }
  // Generate the RGBA8 values from a Rgba8Readback dyno program.
  render({
    reader: A,
    count: e,
    renderer: s
  }) {
    this.readback || (this.readback = new ge({ renderer: s })), this.readback.render({ reader: A, count: e, renderer: s }), this.capacity = this.readback.capacity, this.count = this.readback.count;
  }
  // Extract the RGBA8 values from a PackedSplats collection.
  fromPackedSplats({
    packedSplats: A,
    base: e,
    count: s,
    renderer: i
  }) {
    const { dynoSplats: n, dynoBase: r, dynoCount: a, reader: o } = BA.makeDynos();
    return n.packedSplats = A, r.value = e, a.value = s, this.render({ reader: o, count: s, renderer: i }), this;
  }
  // Read back the RGBA8 values from the readback buffer.
  async read() {
    if (!this.readback)
      throw new Error("No readback");
    return (!this.array || this.array.length < this.count * 4) && (this.array = new Uint8Array(this.capacity * 4)), (await this.readback.readback({ readback: this.array })).subarray(0, this.count * 4);
  }
  // Can be used where you need an uninitialized THREE.DataArrayTexture like
  // a uniform you will update with the result of this.getTexture() later.
  static getEmpty() {
    if (!BA.emptySource) {
      const A = new Uint8Array(4);
      BA.emptySource = new Q.DataArrayTexture(A, 1, 1, 1), BA.emptySource.format = Q.RGBAFormat, BA.emptySource.type = Q.UnsignedByteType, BA.emptySource.internalFormat = "RGBA8", BA.emptySource.needsUpdate = !0;
    }
    return BA.emptySource;
  }
  // Create a dyno program that can extract RGBA8 values from a PackedSplats
  static makeDynos() {
    if (!BA.dynos) {
      const A = new ts(), e = new qt({ value: 0 }), s = new qt({ value: 0 }), i = kA(
        { index: "int" },
        { rgba8: "vec4" },
        ({ index: n }) => {
          if (!n)
            throw new Error("index is undefined");
          n = DA(n, e);
          const r = Rs(
            A,
            n,
            e,
            s
          );
          return { rgba8: Qt(r).outputs.rgba };
        }
      );
      BA.dynos = { dynoSplats: A, dynoBase: e, dynoCount: s, reader: i };
    }
    return BA.dynos;
  }
};
BA.emptySource = null, BA.dynos = null;
let Te = BA;
const Sa = { type: "RgbaArray" }, Na = CA(`
  struct RgbaArray {
    sampler2DArray texture;
    int count;
  };
`);
function qQ(t, A) {
  return new V({
    inTypes: { rgba: Sa, index: "int" },
    outTypes: { rgba: "vec4" },
    inputs: { rgba: t, index: A },
    globals: () => [Na],
    statements: ({ inputs: s, outputs: i }) => vA(`
        if ((index >= 0) && (index < ${s.rgba}.count)) {
          ${i.rgba} = texelFetch(${s.rgba}.texture, splatTexCoord(index), 0);
        } else {
          ${i.rgba} = vec4(0.0, 0.0, 0.0, 0.0);
        }
      `)
  }).outputs.rgba;
}
var KQ = /* @__PURE__ */ ((t) => (t.ALL = "all", t.PLANE = "plane", t.SPHERE = "sphere", t.BOX = "box", t.ELLIPSOID = "ellipsoid", t.CYLINDER = "cylinder", t.CAPSULE = "capsule", t.INFINITE_CONE = "infinite_cone", t))(KQ || {});
function zQ(t) {
  switch (t) {
    case "all":
      return 0;
    case "plane":
      return 1;
    case "sphere":
      return 2;
    case "box":
      return 3;
    case "ellipsoid":
      return 4;
    case "cylinder":
      return 5;
    case "capsule":
      return 6;
    case "infinite_cone":
      return 7;
    default:
      throw new Error(`Unknown SDF type: ${t}`);
  }
}
var _Q = /* @__PURE__ */ ((t) => (t.MULTIPLY = "multiply", t.SET_RGB = "set_rgb", t.ADD_RGBA = "add_rgba", t))(_Q || {});
function VQ(t) {
  switch (t) {
    case "multiply":
      return 0;
    case "set_rgb":
      return 1;
    case "add_rgba":
      return 2;
    default:
      throw new Error(`Unknown blend mode: ${t}`);
  }
}
class jQ extends Q.Object3D {
  constructor(A = {}) {
    super();
    const { type: e, invert: s, opacity: i, color: n, displace: r, radius: a } = A;
    this.type = e ?? "sphere", this.invert = s ?? !1, this.opacity = i ?? 1, this.color = n ?? new Q.Color(1, 1, 1), this.displace = r ?? new Q.Vector3(0, 0, 0), this.radius = a ?? 0;
  }
}
const Ee = class Ee extends Q.Object3D {
  constructor(A = {}) {
    const {
      name: e,
      rgbaBlendMode: s = "multiply",
      sdfSmooth: i = 0,
      softEdge: n = 0,
      invert: r = !1,
      sdfs: a = null
    } = A;
    super(), this.rgbaBlendMode = s, this.sdfSmooth = i, this.softEdge = n, this.invert = r, this.sdfs = a, this.ordering = Ee.nextOrdering++, this.name = e ?? `Edit ${this.ordering}`;
  }
  addSdf(A) {
    this.sdfs == null && (this.sdfs = []), this.sdfs.includes(A) || this.sdfs.push(A);
  }
  removeSdf(A) {
    this.sdfs != null && (this.sdfs = this.sdfs.filter((e) => e !== A));
  }
};
Ee.nextOrdering = 1;
let Ie = Ee;
class OQ {
  constructor({ maxSdfs: A, maxEdits: e }) {
    this.maxSdfs = Math.max(16, A ?? 0), this.numSdfs = 0, this.sdfData = new Uint32Array(this.maxSdfs * 8 * 4), this.sdfFloatData = new Float32Array(this.sdfData.buffer), this.sdfTexture = this.newSdfTexture(this.sdfData, this.maxSdfs), this.dynoSdfArray = new G({
      key: "sdfArray",
      type: Fa,
      globals: () => [ka],
      value: {
        numSdfs: 0,
        sdfTexture: this.sdfTexture
      },
      update: (s) => (s.numSdfs = this.numSdfs, s.sdfTexture = this.sdfTexture, s)
    }), this.maxEdits = Math.max(16, e ?? 0), this.numEdits = 0, this.editData = new Uint32Array(this.maxEdits * 4), this.editFloatData = new Float32Array(this.editData.buffer), this.dynoNumEdits = new qt({ value: 0 }), this.dynoEdits = this.newEdits(this.editData, this.maxEdits);
  }
  newSdfTexture(A, e) {
    const s = new Q.DataTexture(
      A,
      8,
      e,
      Q.RGBAIntegerFormat,
      Q.UnsignedIntType
    );
    return s.internalFormat = "RGBA32UI", s.needsUpdate = !0, s;
  }
  newEdits(A, e) {
    return new G({
      key: "edits",
      type: "uvec4",
      count: e,
      globals: () => [Ga],
      value: A
    });
  }
  // Ensure our SDF texture and edits uniform array have enough capacity.
  // Reallocate if not.
  ensureCapacity({
    maxSdfs: A,
    maxEdits: e
  }) {
    let s = !1;
    return A > this.sdfTexture.image.height && (this.sdfTexture.dispose(), this.maxSdfs = Math.max(this.maxSdfs * 2, A), this.sdfData = new Uint32Array(this.maxSdfs * 8 * 4), this.sdfFloatData = new Float32Array(this.sdfData.buffer), this.sdfTexture = this.newSdfTexture(this.sdfData, this.maxSdfs)), e > (this.dynoEdits.count ?? 0) && (this.maxEdits = Math.max(this.maxEdits * 2, e), this.editData = new Uint32Array(this.maxEdits * 4), this.editFloatData = new Float32Array(this.editData.buffer), this.dynoEdits = this.newEdits(this.editData, this.maxEdits), s = !0), s;
  }
  updateEditData(A, e) {
    const s = this.editData[A] !== e;
    return this.editData[A] = e, s;
  }
  updateEditFloatData(A, e) {
    dt[0] = e;
    const s = this.editFloatData[A] !== dt[0];
    return s && (this.editFloatData[A] = dt[0]), s;
  }
  encodeEdit(A, {
    sdfFirst: e,
    sdfCount: s,
    invert: i,
    rgbaBlendMode: n,
    softEdge: r,
    sdfSmooth: a
  }) {
    const o = A * 4;
    let I = !1;
    return I = this.updateEditData(o + 0, n | (i ? 256 : 0)) || I, I = this.updateEditData(o + 1, e | s << 16) || I, I = this.updateEditFloatData(o + 2, r) || I, I = this.updateEditFloatData(o + 3, a) || I, I;
  }
  updateSdfData(A, e) {
    const s = this.sdfData[A] !== e;
    return this.sdfData[A] = e, s;
  }
  updateSdfFloatData(A, e) {
    dt[0] = e;
    const s = this.sdfFloatData[A] !== dt[0];
    return s && (this.sdfFloatData[A] = dt[0]), s;
  }
  encodeSdf(A, {
    sdfType: e,
    invert: s,
    center: i,
    quaternion: n,
    scale: r,
    sizes: a
  }, o) {
    const I = A * 32, B = e | (s ? 256 : 0);
    let g = !1;
    g = this.updateSdfFloatData(I + 0, (i == null ? void 0 : i.x) ?? 0) || g, g = this.updateSdfFloatData(I + 1, (i == null ? void 0 : i.y) ?? 0) || g, g = this.updateSdfFloatData(I + 2, (i == null ? void 0 : i.z) ?? 0) || g, g = this.updateSdfData(I + 3, B) || g, g = this.updateSdfFloatData(I + 4, (n == null ? void 0 : n.x) ?? 0) || g, g = this.updateSdfFloatData(I + 5, (n == null ? void 0 : n.y) ?? 0) || g, g = this.updateSdfFloatData(I + 6, (n == null ? void 0 : n.z) ?? 0) || g, g = this.updateSdfFloatData(I + 7, (n == null ? void 0 : n.w) ?? 0) || g, g = this.updateSdfFloatData(I + 8, (r == null ? void 0 : r.x) ?? 0) || g, g = this.updateSdfFloatData(I + 9, (r == null ? void 0 : r.y) ?? 0) || g, g = this.updateSdfFloatData(I + 10, (r == null ? void 0 : r.z) ?? 0) || g, g = this.updateSdfData(I + 11, 0) || g, g = this.updateSdfFloatData(I + 12, (a == null ? void 0 : a.x) ?? 0) || g, g = this.updateSdfFloatData(I + 13, (a == null ? void 0 : a.y) ?? 0) || g, g = this.updateSdfFloatData(I + 14, (a == null ? void 0 : a.z) ?? 0) || g, g = this.updateSdfFloatData(I + 15, (a == null ? void 0 : a.w) ?? 0) || g;
    const c = Math.min(4, o.length);
    for (let C = 0; C < c; ++C) {
      const h = I + 16 + C * 4;
      g = this.updateSdfFloatData(h + 0, o[C].x) || g, g = this.updateSdfFloatData(h + 1, o[C].y) || g, g = this.updateSdfFloatData(h + 2, o[C].z) || g, g = this.updateSdfFloatData(h + 3, o[C].w) || g;
    }
    return g;
  }
  // Update the SDFs and edits from an array of SplatEdits and their
  // associated SplatEditSdfs, updating it for the dyno shader program.
  update(A) {
    const e = A.reduce((g, { sdfs: c }) => g + c.length, 0), s = this.ensureCapacity({
      maxEdits: A.length,
      maxSdfs: e
    }), i = [new Q.Vector4(), new Q.Vector4()], n = new Q.Vector3(), r = new Q.Quaternion(), a = new Q.Vector3(), o = new Q.Vector4();
    let I = 0, B = s;
    A.length !== this.dynoNumEdits.value && (this.dynoNumEdits.value = A.length, this.numEdits = A.length, B = !0);
    for (const [g, { edit: c, sdfs: C }] of A.entries()) {
      B = this.encodeEdit(g, {
        sdfFirst: I,
        sdfCount: C.length,
        invert: c.invert,
        rgbaBlendMode: VQ(c.rgbaBlendMode),
        softEdge: c.softEdge,
        sdfSmooth: c.sdfSmooth
      }) || B;
      let h = !1;
      for (const E of C)
        o.set(E.scale.x, E.scale.y, E.scale.z, E.radius), E.scale.setScalar(1), E.updateMatrixWorld(), E.matrixWorld.clone().invert().decompose(n, r, a), E.scale.set(o.x, o.y, o.z), E.updateMatrixWorld(), i[0].set(E.color.r, E.color.g, E.color.b, E.opacity), i[1].set(E.displace.x, E.displace.y, E.displace.z, 1), h = this.encodeSdf(
          I,
          {
            sdfType: zQ(E.type),
            invert: E.invert,
            center: n,
            quaternion: r,
            scale: a,
            sizes: o
          },
          i
        ) || h, I += 1;
      this.numSdfs = I, h && (this.sdfTexture.needsUpdate = !0), B || (B = h);
    }
    return { updated: B, dynoUpdated: s };
  }
  // Modify a Gsplat in a dyno shader program using the current edits and SDFs.
  modify(A) {
    return ZQ(
      A,
      this.dynoSdfArray,
      this.dynoNumEdits,
      this.dynoEdits
    );
  }
}
const Fa = { type: "SdfArray" }, ka = CA(`
  struct SdfArray {
    int numSdfs;
    usampler2D sdfTexture;
  };

  void unpackSdfArray(
    usampler2D sdfTexture, int sdfIndex, out uint flags,
    out vec3 center, out vec4 quaternion, out vec3 scale, out vec4 sizes,
    int numValues, out vec4 values[4]
  ) {
    uvec4 temp = texelFetch(sdfTexture, ivec2(0, sdfIndex), 0);
    flags = temp.w;
    center = vec3(uintBitsToFloat(temp.x), uintBitsToFloat(temp.y), uintBitsToFloat(temp.z));

    temp = texelFetch(sdfTexture, ivec2(1, sdfIndex), 0);
    quaternion = vec4(uintBitsToFloat(temp.x), uintBitsToFloat(temp.y), uintBitsToFloat(temp.z), uintBitsToFloat(temp.w));

    temp = texelFetch(sdfTexture, ivec2(2, sdfIndex), 0);
    scale = vec3(uintBitsToFloat(temp.x), uintBitsToFloat(temp.y), uintBitsToFloat(temp.z));

    temp = texelFetch(sdfTexture, ivec2(3, sdfIndex), 0);
    sizes = vec4(uintBitsToFloat(temp.x), uintBitsToFloat(temp.y), uintBitsToFloat(temp.z), uintBitsToFloat(temp.w));

    for (int i = 0; i < numValues; ++i) {
      temp = texelFetch(sdfTexture, ivec2(4 + i, sdfIndex), 0);
      values[i] = vec4(uintBitsToFloat(temp.x), uintBitsToFloat(temp.y), uintBitsToFloat(temp.z), uintBitsToFloat(temp.w));
    }
  }

  const uint SDF_FLAG_TYPE = 0xFFu;
  const uint SDF_FLAG_INVERT = 1u << 8u;

  const uint SDF_TYPE_ALL = 0u;
  const uint SDF_TYPE_PLANE = 1u;
  const uint SDF_TYPE_SPHERE = 2u;
  const uint SDF_TYPE_BOX = 3u;
  const uint SDF_TYPE_ELLIPSOID = 4u;
  const uint SDF_TYPE_CYLINDER = 5u;
  const uint SDF_TYPE_CAPSULE = 6u;
  const uint SDF_TYPE_INFINITE_CONE = 7u;

  float evaluateSdfArray(
    usampler2D sdfTexture, int numSdfs, int sdfFirst, int sdfCount, vec3 pos,
    float smoothK, int numValues, out vec4 outValues[4]
  ) {
    float distanceAccum = (smoothK == 0.0) ? 1.0 / 0.0 : 0.0;
    float maxExp = -1.0 / 0.0;
    for (int i = 0; i < numValues; ++i) {
        outValues[i] = vec4(0.0);
    }

    uint flags;
    vec3 center, scale;
    vec4 quaternion, sizes;
    vec4 values[4];

    int sdfLast = min(sdfFirst + sdfCount, numSdfs);
    for (int index = sdfFirst; index < sdfLast; ++index) {
      unpackSdfArray(sdfTexture, index, flags, center, quaternion, scale, sizes, numValues, values);
      uint sdfType = flags & SDF_FLAG_TYPE;
      vec3 sdfPos = quatVec(quaternion, pos * scale) + center;

      float distance;
      switch (sdfType) {
        case SDF_TYPE_ALL:
          distance = -1.0 / 0.0;
          break;
        case SDF_TYPE_PLANE: {
          distance = sdfPos.z;
          break;
        }
        case SDF_TYPE_SPHERE: {
          distance = length(sdfPos) - sizes.w;
          break;
        }
        case SDF_TYPE_BOX: {
          vec3 q = abs(sdfPos) - sizes.xyz + sizes.w;
          distance = length(max(q, 0.0)) + min(max(q.x, max(q.y, q.z)), 0.0) - sizes.w;
          break;
        }
        case SDF_TYPE_ELLIPSOID: {
          vec3 sizes = sizes.xyz;
          float k0 = length(sdfPos / sizes);
          float k1 = length(sdfPos / dot(sizes, sizes));
          distance = k0 * (k0 - 1.0) / k1;
          break;
        }
        case SDF_TYPE_CYLINDER: {
          vec2 d = abs(vec2(length(sdfPos.xz), sdfPos.y)) - sizes.wy;
          distance = min(max(d.x, d.y), 0.0) + length(max(d, 0.0));
          break;
        }
        case SDF_TYPE_CAPSULE: {
          sdfPos.y -= clamp(sdfPos.y, -0.5 * sizes.y, 0.5 * sizes.y);
          distance = length(sdfPos) - sizes.w;
          break;
        }
        case SDF_TYPE_INFINITE_CONE: {
          float angle = 0.25 * PI * sizes.w;
          vec2 c = vec2(sin(angle), cos(angle));
          vec2 q = vec2(length(sdfPos.xy), -sdfPos.z);
          float d = length(q - c * max(dot(q, c), 0.0));
          distance = d * (((q.x * c.y - q.y * c.x) < 0.0) ? -1.0 : 1.0);
          break;
        }
      }

      if ((flags & SDF_FLAG_INVERT) != 0u) {
        distance = -distance;
      }

      if (smoothK == 0.0) {
        if (distance < distanceAccum) {
          distanceAccum = distance;
          for (int i = 0; i < numValues; ++i) {
            outValues[i] = values[i];
          }
        }
      } else {
        float scaledDistance = -distance / smoothK;
        if (scaledDistance > maxExp) {
          float scale = exp(maxExp - scaledDistance);
          distanceAccum *= scale;
          for (int i = 0; i < numValues; ++i) {
            outValues[i] *= scale;
          }
          maxExp = scaledDistance;
        }

        float weight = exp(scaledDistance - maxExp);
        distanceAccum += weight;
        for (int i = 0; i < numValues; ++i) {
          outValues[i] += weight * values[i];
        }
      }
    }

    if (smoothK == 0.0) {
      return distanceAccum;
    } else {
      // Very distant SDFs may result in 0 accumulation
      if (distanceAccum == 0.0) {
        return 1.0 / 0.0;
      }
      for (int i = 0; i < numValues; ++i) {
        outValues[i] /= distanceAccum;
      }
      return (-log(distanceAccum) - maxExp) * smoothK;
    }
  }

  float modulateSdfArray(
    usampler2D sdfTexture, int numSdfs, int sdfFirst, int sdfCount, vec3 pos,
    float smoothK, int numValues, out vec4 values[4],
    float softEdge, bool invert
  ) {
    float distance = evaluateSdfArray(sdfTexture, numSdfs, sdfFirst, sdfCount, pos, smoothK, numValues, values);
    if (invert) {
      distance = -distance;
    }

    return (softEdge == 0.0) ? ((distance < 0.0) ? 1.0 : 0.0)
      : clamp(-distance / softEdge + 0.5, 0.0, 1.0);
  }
`), Ga = CA(`
  const uint EDIT_FLAG_BLEND = 0xFFu;
  const uint EDIT_BLEND_MULTIPLY = 0u;
  const uint EDIT_BLEND_SET_RGB = 1u;
  const uint EDIT_BLEND_ADD_RGBA = 2u;
  const uint EDIT_FLAG_INVERT = 0x100u;

  void decodeEdit(
    uvec4 packedEdit, out int sdfFirst, out int sdfCount,
    out bool invert, out uint rgbaBlendMode, out float softEdge, out float sdfSmooth
  ) {
    rgbaBlendMode = packedEdit.x & EDIT_FLAG_BLEND;
    invert = (packedEdit.x & EDIT_FLAG_INVERT) != 0u;

    sdfFirst = int(packedEdit.y & 0xFFFFu);
    sdfCount = int(packedEdit.y >> 16u);

    softEdge = uintBitsToFloat(packedEdit.z);
    sdfSmooth = uintBitsToFloat(packedEdit.w);
  }

  void applyRgbaDisplaceEdit(
    usampler2D sdfTexture, int numSdfs, int sdfFirst, int sdfCount, inout vec3 pos,
    float smoothK, float softEdge, bool invert, uint rgbaBlendMode, inout vec4 rgba
  ) {
    vec4 values[4];
    float modulate = modulateSdfArray(sdfTexture, numSdfs, sdfFirst, sdfCount, pos, smoothK, 2, values, softEdge, invert);
    // On Android, moving values[0] is necessary to work around a compiler bug.
    vec4 sdfRgba = values[0];
    vec4 sdfDisplaceScale = values[1];

    vec4 target;
    switch (rgbaBlendMode) {
      case EDIT_BLEND_MULTIPLY:
        target = rgba * sdfRgba;
        break;
      case EDIT_BLEND_SET_RGB:
        target = vec4(sdfRgba.rgb, rgba.a * sdfRgba.a);
        break;
      case EDIT_BLEND_ADD_RGBA:
        target = rgba + sdfRgba;
        break;
      default:
        // Debug output if blend mode not set
        target = vec4(fract(pos), 1.0);
    }
    rgba = mix(rgba, target, modulate);
    pos += sdfDisplaceScale.xyz * modulate;
  }

  void applyPackedRgbaDisplaceEdit(uvec4 packedEdit, usampler2D sdfTexture, int numSdfs, inout vec3 pos, inout vec4 rgba) {
    int sdfFirst, sdfCount;
    bool invert;
    uint rgbaBlendMode;
    float softEdge, sdfSmooth;
    decodeEdit(packedEdit, sdfFirst, sdfCount, invert, rgbaBlendMode, softEdge, sdfSmooth);
    applyRgbaDisplaceEdit(sdfTexture, numSdfs, sdfFirst, sdfCount, pos, sdfSmooth, softEdge, invert, rgbaBlendMode, rgba);
  }
`);
function ZQ(t, A, e, s) {
  return new V({
    inTypes: {
      gsplat: W,
      sdfArray: Fa,
      numEdits: "int",
      rgbaDisplaceEdits: "uvec4"
    },
    outTypes: { gsplat: W },
    globals: () => [ka, Ga],
    inputs: { gsplat: t, sdfArray: A, numEdits: e, rgbaDisplaceEdits: s },
    statements: ({ inputs: n, outputs: r }) => {
      const { sdfArray: a, numEdits: o, rgbaDisplaceEdits: I } = n, { gsplat: B } = r;
      return vA(`
        ${B} = ${n.gsplat};
        if (isGsplatActive(${B}.flags)) {
          for (int editIndex = 0; editIndex < ${o}; ++editIndex) {
            applyPackedRgbaDisplaceEdit(
              ${I}[editIndex], ${a}.sdfTexture, ${a}.numSdfs,
              ${B}.center, ${B}.rgba
            );
          }
        }
      `);
    }
  }).outputs.gsplat;
}
const dt = new Float32Array(1);
class PQ {
  constructor(A) {
    this.modifier = A, this.cache = /* @__PURE__ */ new Map();
  }
  apply(A) {
    let e = this.cache.get(A);
    return e || (e = kA(
      { index: "int" },
      { gsplat: W },
      ({ index: s }) => {
        const { gsplat: i } = A.apply({ index: s });
        return this.modifier.apply({ gsplat: i });
      }
    ), this.cache.set(A, e)), e;
  }
}
class wt {
  // Create the dyno uniforms that parameterize the transform, setting them
  // to initial values that are different from any valid transform.
  constructor() {
    this.scale = new ct({ value: Number.NEGATIVE_INFINITY }), this.rotate = new Zt({
      value: new Q.Quaternion(
        Number.POSITIVE_INFINITY,
        Number.POSITIVE_INFINITY,
        Number.POSITIVE_INFINITY,
        Number.POSITIVE_INFINITY
      )
    }), this.translate = new St({
      value: new Q.Vector3(
        Number.POSITIVE_INFINITY,
        Number.POSITIVE_INFINITY,
        Number.POSITIVE_INFINITY
      )
    });
  }
  // Apply the transform to a Vec3 position in a dyno program.
  apply(A) {
    return sa(A, {
      scale: this.scale,
      rotate: this.rotate,
      translate: this.translate
    });
  }
  applyDir(A) {
    return ia(A, {
      rotate: this.rotate
    });
  }
  // Apply the transform to a Gsplat in a dyno program.
  applyGsplat(A) {
    return Ve(A, {
      scale: this.scale,
      rotate: this.rotate,
      translate: this.translate
    });
  }
  // Update the uniforms to match the given transform matrix.
  updateFromMatrix(A) {
    const e = new Q.Vector3(), s = new Q.Quaternion(), i = new Q.Vector3();
    A.decompose(i, s, e);
    const n = (e.x + e.y + e.z) / 3;
    let r = !1;
    return n !== this.scale.value && (this.scale.value = n, r = !0), i.equals(this.translate.value) || (this.translate.value.copy(i), r = !0), s.equals(this.rotate.value) || (this.rotate.value.copy(s), r = !0), r;
  }
  // Update this transform to match the object's to-world transform.
  update(A) {
    return A.updateMatrixWorld(), this.updateFromMatrix(A.matrixWorld);
  }
}
class Kt extends Q.Object3D {
  constructor({
    numSplats: A,
    generator: e,
    construct: s,
    update: i
  }) {
    if (super(), this.numSplats = A ?? 0, this.generator = e, this.frameUpdate = i, this.version = 0, s) {
      const n = s(this);
      Object.assign(this, n);
    }
  }
  updateVersion() {
    this.version += 1;
  }
  set needsUpdate(A) {
    A && this.updateVersion();
  }
}
const et = class et extends Kt {
  constructor(A = {}) {
    const e = new wt(), s = new wt(), i = new wt(), n = new wt(), r = new Zt({
      value: new Q.Vector4(
        Number.NEGATIVE_INFINITY,
        Number.NEGATIVE_INFINITY,
        Number.NEGATIVE_INFINITY,
        Number.NEGATIVE_INFINITY
      )
    }), a = new ct({ value: 0 }), o = new ct({ value: 0 }), I = {
      transform: e,
      viewToWorld: s,
      worldToView: i,
      viewToObject: n,
      recolor: r,
      time: a,
      deltaTime: o
    };
    if (super({
      update: ({ time: B, deltaTime: g, viewToWorld: c, globalEdits: C }) => this.update({ time: B, deltaTime: g, viewToWorld: c, globalEdits: C })
    }), this.isInitialized = !1, this.recolor = new Q.Color(1, 1, 1), this.opacity = 1, this.enableViewToObject = !1, this.enableViewToWorld = !1, this.enableWorldToView = !1, this.skinning = null, this.edits = null, this.rgbaDisplaceEdits = null, this.splatRgba = null, this.maxSh = 3, this.packedSplats = A.packedSplats ?? new KA(), this.numSplats = this.packedSplats.numSplats, this.editable = A.editable ?? !0, this.onFrame = A.onFrame, this.context = I, this.objectModifier = A.objectModifier, this.worldModifier = A.worldModifier, this.updateGenerator(), A.url || A.fileBytes || A.constructSplats || A.packedSplats && !A.packedSplats.isInitialized)
      this.initialized = this.asyncInitialize(A).then(async () => {
        if (this.updateGenerator(), this.isInitialized = !0, A.onLoad) {
          const B = A.onLoad(this);
          B instanceof Promise && await B;
        }
        return this;
      });
    else if (this.isInitialized = !0, this.initialized = Promise.resolve(this), A.onLoad) {
      const B = A.onLoad(this);
      B instanceof Promise && (this.initialized = B.then(() => this));
    }
  }
  async asyncInitialize(A) {
    const { url: e, fileBytes: s, fileType: i, fileName: n, maxSplats: r, constructSplats: a } = A;
    if (e || s || a) {
      const o = {
        url: e,
        fileBytes: s,
        fileType: i,
        fileName: n,
        maxSplats: r,
        construct: a
      };
      this.packedSplats.reinitialize(o);
    }
    this.packedSplats && (await this.packedSplats.initialized, this.numSplats = this.packedSplats.numSplats, this.updateGenerator());
  }
  static async staticInitialize() {
    await Ds(), et.isStaticInitialized = !0;
  }
  // Creates a new Gsplat with the provided parameters (all values in "float" space,
  // i.e. 0-1 for opacity and color) and adds it to the end of the packedSplats,
  // increasing numSplats by 1. If necessary, reallocates the buffer with an exponential
  // doubling strategy to fit the new data, so it's fairly efficient to just
  // pushSplat(...) each Gsplat you want to create in a loop.
  pushSplat(A, e, s, i, n) {
    this.packedSplats.pushSplat(A, e, s, i, n);
  }
  // This method iterates over all Gsplats in this instance's packedSplats,
  // invoking the provided callback with index: number in 0..=(this.numSplats-1) and
  // center: THREE.Vector3, scales: THREE.Vector3, quaternion: THREE.Quaternion,
  // opacity: number (0..1), and color: THREE.Color (rgb values in 0..1).
  // Note that the objects passed in as center etc. are the same for every callback
  // invocation: these objects are reused for efficiency. Changing these values has
  // no effect as they are decoded/unpacked copies of the underlying data. To update
  // the packedSplats, call .packedSplats.setSplat(index, center, scales,
  // quaternion, opacity, color).
  forEachSplat(A) {
    this.packedSplats.forEachSplat(A);
  }
  // Call this when you are finished with the SplatMesh and want to free
  // any buffers it holds (via packedSplats).
  dispose() {
    this.packedSplats.dispose();
  }
  constructGenerator(A) {
    const { transform: e, viewToObject: s, recolor: i } = A, n = kA(
      { index: "int" },
      { gsplat: W },
      ({ index: r }) => {
        if (!r)
          throw new Error("index is undefined");
        let a = Ht(this.packedSplats.dyno, r);
        if (this.maxSh >= 1) {
          const { sh1Texture: I, sh2Texture: B, sh3Texture: g } = this.ensureShTextures();
          if (I) {
            const c = s.translate, { center: C } = Qt(a).outputs, h = yr(Nt(C, c));
            let E = Ac(a, I, h);
            this.maxSh >= 2 && B && (E = DA(E, tc(a, B, h))), this.maxSh >= 3 && g && (E = DA(E, ec(a, g, h)));
            let { rgba: l } = Qt(a).outputs;
            l = DA(l, wr(E, q("float", 0))), a = rt({ gsplat: a, rgba: l });
          }
        }
        if (this.splatRgba) {
          const I = qQ(this.splatRgba.dyno, r);
          a = rt({ gsplat: a, rgba: I });
        }
        this.skinning && (a = this.skinning.modify(a)), this.objectModifier && (a = this.objectModifier.apply({ gsplat: a }).gsplat), a = e.applyGsplat(a);
        const o = QA(i, Qt(a).outputs.rgba);
        return a = rt({ gsplat: a, rgba: o }), this.rgbaDisplaceEdits && (a = this.rgbaDisplaceEdits.modify(a)), this.worldModifier && (a = this.worldModifier.apply({ gsplat: a }).gsplat), { gsplat: a };
      }
    );
    this.generator = n;
  }
  // Call this whenever something changes in the Gsplat processing pipeline,
  // for example changing maxSh or updating objectModifier or worldModifier.
  // Compiled generators are cached for efficiency and re-use when the same
  // pipeline structure emerges after successive changes.
  updateGenerator() {
    this.constructGenerator(this.context);
  }
  // This is called automatically by SparkRenderer and you should not have to
  // call it. It updates parameters for the generated pipeline and calls
  // updateGenerator() if the pipeline needs to change.
  update({
    time: A,
    viewToWorld: e,
    deltaTime: s,
    globalEdits: i
  }) {
    var l;
    this.numSplats = this.packedSplats.numSplats, this.context.time.value = A, this.context.deltaTime.value = s, et.dynoTime.value = A;
    const { transform: n, viewToObject: r, recolor: a } = this.context;
    let o = n.update(this);
    this.context.viewToWorld.updateFromMatrix(e) && this.enableViewToWorld && (o = !0);
    const I = e.clone().invert();
    this.context.worldToView.updateFromMatrix(I) && this.enableWorldToView && (o = !0);
    const c = new Q.Matrix4().compose(
      n.translate.value,
      n.rotate.value,
      new Q.Vector3().setScalar(n.scale.value)
    ).invert().multiply(e);
    r.updateFromMatrix(c) && (this.enableViewToObject || this.packedSplats.extra.sh1) && (o = !0);
    const C = new Q.Vector4(
      this.recolor.r,
      this.recolor.g,
      this.recolor.b,
      this.opacity
    );
    C.equals(a.value) || (a.value.copy(C), o = !0);
    const h = this.editable ? (this.edits ?? []).concat(i) : [];
    this.editable && !this.edits && this.traverseVisible((u) => {
      u instanceof Ie && h.push(u);
    }), h.sort((u, d) => u.ordering - d.ordering);
    const E = h.map((u) => {
      if (u.sdfs != null)
        return { edit: u, sdfs: u.sdfs };
      const d = [];
      return u.traverseVisible((p) => {
        p instanceof jQ && d.push(p);
      }), { edit: u, sdfs: d };
    });
    if (E.length > 0 && !this.rgbaDisplaceEdits) {
      const u = E.length, d = E.reduce(
        (p, w) => p + w.sdfs.length,
        0
      );
      this.rgbaDisplaceEdits = new OQ({
        maxEdits: u,
        maxSdfs: d
      }), this.updateGenerator();
    }
    if (this.rgbaDisplaceEdits) {
      const u = this.rgbaDisplaceEdits.update(E);
      o || (o = u.updated), u.dynoUpdated && this.updateGenerator();
    }
    o && this.updateVersion(), (l = this.onFrame) == null || l.call(this, { mesh: this, time: A, deltaTime: s });
  }
  // This method conforms to the standard THREE.Raycaster API, performing object-ray
  // intersections using this method to populate the provided intersects[] array
  // with each intersection point.
  raycast(A, e) {
    if (!this.packedSplats.packedArray || !this.packedSplats.numSplats)
      return;
    const { near: s, far: i, ray: n } = A, r = this.matrixWorld.clone().invert(), a = new Q.Matrix3().setFromMatrix4(r), o = n.origin.clone().applyMatrix4(r), I = n.direction.clone().applyMatrix3(a), B = new Q.Vector3();
    r.decompose(new Q.Vector3(), new Q.Quaternion(), B), (B.x * B.y * B.z) ** (1 / 3);
    const c = So(
      o.x,
      o.y,
      o.z,
      I.x,
      I.y,
      I.z,
      s,
      i,
      this.packedSplats.numSplats,
      this.packedSplats.packedArray,
      !0
    );
    for (const C of c) {
      const h = n.direction.clone().multiplyScalar(C).add(n.origin);
      e.push({
        distance: C,
        point: h,
        object: this
      });
    }
  }
  ensureShTextures() {
    if (!this.packedSplats.extra.sh1)
      return {};
    let A = this.packedSplats.extra.sh1Texture;
    if (!A) {
      let i = this.packedSplats.extra.sh1;
      const { width: n, height: r, depth: a, maxSplats: o } = mA(
        i.length / 2
      );
      if (i.length < o * 2) {
        const B = new Uint32Array(o * 2);
        B.set(i), this.packedSplats.extra.sh1 = B, i = B;
      }
      const I = new Q.DataArrayTexture(i, n, r, a);
      I.format = Q.RGIntegerFormat, I.type = Q.UnsignedIntType, I.internalFormat = "RG32UI", I.needsUpdate = !0, A = new Tt({
        value: I,
        key: "sh1"
      }), this.packedSplats.extra.sh1Texture = A;
    }
    if (!this.packedSplats.extra.sh2)
      return { sh1Texture: A };
    let e = this.packedSplats.extra.sh2Texture;
    if (!e) {
      let i = this.packedSplats.extra.sh2;
      const { width: n, height: r, depth: a, maxSplats: o } = mA(
        i.length / 4
      );
      if (i.length < o * 4) {
        const B = new Uint32Array(o * 4);
        B.set(i), this.packedSplats.extra.sh2 = B, i = B;
      }
      const I = new Q.DataArrayTexture(i, n, r, a);
      I.format = Q.RGBAIntegerFormat, I.type = Q.UnsignedIntType, I.internalFormat = "RGBA32UI", I.needsUpdate = !0, e = new Tt({
        value: I,
        key: "sh2"
      }), this.packedSplats.extra.sh2Texture = e;
    }
    if (!this.packedSplats.extra.sh3)
      return { sh1Texture: A, sh2Texture: e };
    let s = this.packedSplats.extra.sh3Texture;
    if (!s) {
      let i = this.packedSplats.extra.sh3;
      const { width: n, height: r, depth: a, maxSplats: o } = mA(
        i.length / 4
      );
      if (i.length < o * 4) {
        const B = new Uint32Array(o * 4);
        B.set(i), this.packedSplats.extra.sh3 = B, i = B;
      }
      const I = new Q.DataArrayTexture(i, n, r, a);
      I.format = Q.RGBAIntegerFormat, I.type = Q.UnsignedIntType, I.internalFormat = "RGBA32UI", I.needsUpdate = !0, s = new Tt({
        value: I,
        key: "sh3"
      }), this.packedSplats.extra.sh3Texture = s;
    }
    return { sh1Texture: A, sh2Texture: e, sh3Texture: s };
  }
};
et.staticInitialized = et.staticInitialize(), et.isStaticInitialized = !1, et.dynoTime = new ct({ value: 0 });
let ZA = et;
const XQ = CA(`
  vec3 evaluateSH1(Gsplat gsplat, usampler2DArray sh1, vec3 viewDir) {
    // Extract sint7 values packed into 2 x uint32
    uvec2 packed = texelFetch(sh1, splatTexCoord(gsplat.index), 0).rg;
    vec3 sh1_0 = vec3(ivec3(
      int(packed.x << 25u) >> 25,
      int(packed.x << 18u) >> 25,
      int(packed.x << 11u) >> 25
    )) / 63.0;
    vec3 sh1_1 = vec3(ivec3(
      int(packed.x << 4u) >> 25,
      int((packed.x >> 3u) | (packed.y << 29u)) >> 25,
      int(packed.y << 22u) >> 25
    )) / 63.0;
    vec3 sh1_2 = vec3(ivec3(
      int(packed.y << 15u) >> 25,
      int(packed.y << 8u) >> 25,
      int(packed.y << 1u) >> 25
    )) / 63.0;

    return sh1_0 * (-0.4886025 * viewDir.y)
      + sh1_1 * (0.4886025 * viewDir.z)
      + sh1_2 * (-0.4886025 * viewDir.x);
  }
`), WQ = CA(`
  vec3 evaluateSH2(Gsplat gsplat, usampler2DArray sh2, vec3 viewDir) {
    // Extract sint8 values packed into 4 x uint32
    uvec4 packed = texelFetch(sh2, splatTexCoord(gsplat.index), 0);
    vec3 sh2_0 = vec3(ivec3(
      int(packed.x << 24u) >> 24,
      int(packed.x << 16u) >> 24,
      int(packed.x << 8u) >> 24
    )) / 127.0;
    vec3 sh2_1 = vec3(ivec3(
      int(packed.x) >> 24,
      int(packed.y << 24u) >> 24,
      int(packed.y << 16u) >> 24
    )) / 127.0;
    vec3 sh2_2 = vec3(ivec3(
      int(packed.y << 8u) >> 24,
      int(packed.y) >> 24,
      int(packed.z << 24u) >> 24
    )) / 127.0;
    vec3 sh2_3 = vec3(ivec3(
      int(packed.z << 16u) >> 24,
      int(packed.z << 8u) >> 24,
      int(packed.z) >> 24
    )) / 127.0;
    vec3 sh2_4 = vec3(ivec3(
      int(packed.w << 24u) >> 24,
      int(packed.w << 16u) >> 24,
      int(packed.w << 8u) >> 24
    )) / 127.0;

    return sh2_0 * (1.0925484 * viewDir.x * viewDir.y)
      + sh2_1 * (-1.0925484 * viewDir.y * viewDir.z)
      + sh2_2 * (0.3153915 * (2.0 * viewDir.z * viewDir.z - viewDir.x * viewDir.x - viewDir.y * viewDir.y))
      + sh2_3 * (-1.0925484 * viewDir.x * viewDir.z)
      + sh2_4 * (0.5462742 * (viewDir.x * viewDir.x - viewDir.y * viewDir.y));
  }
`), $Q = CA(`
  vec3 evaluateSH3(Gsplat gsplat, usampler2DArray sh3, vec3 viewDir) {
    // Extract sint6 values packed into 4 x uint32
    uvec4 packed = texelFetch(sh3, splatTexCoord(gsplat.index), 0);
    vec3 sh3_0 = vec3(ivec3(
      int(packed.x << 26u) >> 26,
      int(packed.x << 20u) >> 26,
      int(packed.x << 14u) >> 26
    )) / 31.0;
    vec3 sh3_1 = vec3(ivec3(
      int(packed.x << 8u) >> 26,
      int(packed.x << 2u) >> 26,
      int((packed.x >> 4u) | (packed.y << 28u)) >> 26
    )) / 31.0;
    vec3 sh3_2 = vec3(ivec3(
      int(packed.y << 22u) >> 26,
      int(packed.y << 16u) >> 26,
      int(packed.y << 10u) >> 26
    )) / 31.0;
    vec3 sh3_3 = vec3(ivec3(
      int(packed.y << 4u) >> 26,
      int((packed.y >> 2u) | (packed.z << 30u)) >> 26,
      int(packed.z << 24u) >> 26
    )) / 31.0;
    vec3 sh3_4 = vec3(ivec3(
      int(packed.z << 18u) >> 26,
      int(packed.z << 12u) >> 26,
      int(packed.z << 6u) >> 26
    )) / 31.0;
    vec3 sh3_5 = vec3(ivec3(
      int(packed.z) >> 26,
      int(packed.w << 26u) >> 26,
      int(packed.w << 20u) >> 26
    )) / 31.0;
    vec3 sh3_6 = vec3(ivec3(
      int(packed.w << 14u) >> 26,
      int(packed.w << 8u) >> 26,
      int(packed.w << 2u) >> 26
    )) / 31.0;

    float xx = viewDir.x * viewDir.x;
    float yy = viewDir.y * viewDir.y;
    float zz = viewDir.z * viewDir.z;
    float xy = viewDir.x * viewDir.y;
    float yz = viewDir.y * viewDir.z;
    float zx = viewDir.z * viewDir.x;

    return sh3_0 * (-0.5900436 * viewDir.y * (3.0 * xx - yy))
      + sh3_1 * (2.8906114 * xy * viewDir.z) +
      + sh3_2 * (-0.4570458 * viewDir.y * (4.0 * zz - xx - yy))
      + sh3_3 * (0.3731763 * viewDir.z * (2.0 * zz - 3.0 * xx - 3.0 * yy))
      + sh3_4 * (-0.4570458 * viewDir.x * (4.0 * zz - xx - yy))
      + sh3_5 * (1.4453057 * viewDir.z * (xx - yy))
      + sh3_6 * (-0.5900436 * viewDir.x * (xx - 3.0 * yy));
  }
`);
function Ac(t, A, e) {
  return jt({
    inTypes: { gsplat: W, sh1: "usampler2DArray", viewDir: "vec3" },
    outTypes: { rgb: "vec3" },
    inputs: { gsplat: t, sh1: A, viewDir: e },
    globals: () => [NA, XQ],
    statements: ({ inputs: s, outputs: i }) => vA(`
        if (isGsplatActive(${s.gsplat}.flags)) {
          ${i.rgb} = evaluateSH1(${s.gsplat}, ${s.sh1}, ${s.viewDir});
        } else {
          ${i.rgb} = vec3(0.0);
        }
      `)
  }).outputs.rgb;
}
function tc(t, A, e) {
  return jt({
    inTypes: { gsplat: W, sh2: "usampler2DArray", viewDir: "vec3" },
    outTypes: { rgb: "vec3" },
    inputs: { gsplat: t, sh2: A, viewDir: e },
    globals: () => [NA, WQ],
    statements: ({ inputs: s, outputs: i }) => vA(`
        if (isGsplatActive(${s.gsplat}.flags)) {
          ${i.rgb} = evaluateSH2(${s.gsplat}, ${s.sh2}, ${s.viewDir});
        } else {
          ${i.rgb} = vec3(0.0);
        }
      `)
  }).outputs.rgb;
}
function ec(t, A, e) {
  return jt({
    inTypes: { gsplat: W, sh3: "usampler2DArray", viewDir: "vec3" },
    outTypes: { rgb: "vec3" },
    inputs: { gsplat: t, sh3: A, viewDir: e },
    globals: () => [NA, $Q],
    statements: ({ inputs: s, outputs: i }) => vA(`
        if (isGsplatActive(${s.gsplat}.flags)) {
          ${i.rgb} = evaluateSH3(${s.gsplat}, ${s.sh3}, ${s.viewDir});
        } else {
          ${i.rgb} = vec3(0.0);
        }
      `)
  }).outputs.rgb;
}
const ft = class ft {
  // Create a PlyReader from a Uint8Array/ArrayBuffer, no parsing done yet
  constructor({ fileBytes: A }) {
    this.header = "", this.littleEndian = !0, this.elements = {}, this.comments = [], this.data = null, this.numSplats = 0, this.fileBytes = A instanceof ArrayBuffer ? new Uint8Array(A) : A;
  }
  // Identify and parse the PLY text header (assumed to be <64KB in size).
  // this.elements will contain all the elements in the file, typically
  // "vertex" contains the Gsplat data.
  async parseHeader() {
    const e = new ReadableStream({
      start: (r) => {
        r.enqueue(this.fileBytes.slice(0, 65536)), r.close();
      }
    }).pipeThrough(new TextDecoderStream()).getReader();
    this.header = "";
    const s = `end_header
`;
    for (; ; ) {
      const { value: r, done: a } = await e.read();
      if (a)
        throw new Error("Failed to read header");
      this.header += r;
      const o = this.header.indexOf(s);
      if (o >= 0) {
        this.header = this.header.slice(0, o + s.length);
        break;
      }
    }
    const i = new TextEncoder().encode(this.header).length;
    this.data = new DataView(this.fileBytes.buffer, i), this.elements = {};
    let n = null;
    this.comments = [], this.header.trim().split(`
`).forEach((r, a) => {
      const o = r.trim();
      if (a === 0) {
        if (o !== "ply")
          throw new Error("Invalid PLY header");
        return;
      }
      if (o.length === 0)
        return;
      const I = o.split(" ");
      switch (I[0]) {
        case "format":
          if (I[1] === "binary_little_endian")
            this.littleEndian = !0;
          else if (I[1] === "binary_big_endian")
            this.littleEndian = !1;
          else
            throw new Error(`Unsupported PLY format: ${I[1]}`);
          if (I[2] !== "1.0")
            throw new Error(`Unsupported PLY version: ${I[2]}`);
          break;
        case "end_header":
          break;
        case "comment":
          this.comments.push(o.slice(8));
          break;
        case "element": {
          const B = I[1];
          n = {
            name: B,
            count: Number.parseInt(I[2]),
            properties: {}
          }, this.elements[B] = n;
          break;
        }
        case "property":
          if (n == null)
            throw new Error("Property must be inside an element");
          I[1] === "list" ? n.properties[I[4]] = {
            isList: !0,
            type: I[3],
            countType: I[2]
          } : n.properties[I[2]] = {
            isList: !1,
            type: I[1]
          };
          break;
      }
    }), this.elements.vertex && (this.numSplats = this.elements.vertex.count);
  }
  parseData(A) {
    let e = 0;
    const s = this.data;
    if (s == null)
      throw new Error("No data to parse");
    for (const i in this.elements) {
      const n = this.elements[i], { count: r, properties: a } = n, o = {}, I = [];
      for (const [g, c] of Object.entries(a))
        c.isList ? (o[g] = [], I.push(() => {
          const C = o[g];
          C.length = Ae[c.countType](
            s,
            e,
            this.littleEndian
          ), e += pt[c.countType];
          for (let h = 0; h < C.length; h++)
            C[h] = Ae[c.type](
              s,
              e,
              this.littleEndian
            ), e += pt[c.type];
        })) : (o[g] = 0, I.push(() => {
          o[g] = Ae[c.type](
            s,
            e,
            this.littleEndian
          ), e += pt[c.type];
        }));
      const B = A(n) ?? (() => {
      });
      for (let g = 0; g < r; g++) {
        for (const c of I)
          c();
        B(g, o);
      }
    }
  }
  // Parse all the Gsplat data in the PLY file in go, invoking the given
  // callbacks for each Gsplat.
  parseSplats(A, e) {
    if (this.elements.vertex == null)
      throw new Error("No vertex element found");
    let s = !1;
    const i = [];
    let n = 0, r = [], a = [], o = [], I, B, g;
    function c() {
      const u = ic[n];
      r = new Array(3).fill(null).flatMap(
        (d, p) => [0, 1, 2].map((w, f) => `f_rest_${p + f * u / 3}`)
      ), a = new Array(5).fill(null).flatMap(
        (d, p) => [0, 1, 2].map((w, f) => `f_rest_${3 + p + f * u / 3}`)
      ), o = new Array(7).fill(null).flatMap(
        (d, p) => [0, 1, 2].map((w, f) => `f_rest_${8 + p + f * u / 3}`)
      ), I = n >= 1 ? new Float32Array(3 * 3) : void 0, B = n >= 2 ? new Float32Array(5 * 3) : void 0, g = n >= 3 ? new Float32Array(7 * 3) : void 0;
    }
    function C(u, d) {
      if (!I)
        throw new Error("Missing sh1");
      for (const [p, w] of r.entries())
        I[p] = d[w] * 8 / 255 - 4;
      if (B)
        for (const [p, w] of a.entries())
          B[p] = d[w] * 8 / 255 - 4;
      if (g)
        for (const [p, w] of o.entries())
          g[p] = d[w] * 8 / 255 - 4;
      e == null || e(u, I, B, g);
    }
    function h(u) {
      const {
        min_x: d,
        min_y: p,
        min_z: w,
        max_x: f,
        max_y: x,
        max_z: M,
        min_scale_x: D,
        min_scale_y: y,
        min_scale_z: R,
        max_scale_x: S,
        max_scale_y: m,
        max_scale_z: U
      } = u.properties;
      if (!d || !p || !w || !f || !x || !M || !D || !y || !R || !S || !m || !U)
        throw new Error("Missing PLY chunk properties");
      return s = !0, (F, k) => {
        const {
          min_x: v,
          min_y: L,
          min_z: AA,
          max_x: z,
          max_y: sA,
          max_z: tA,
          min_scale_x: O,
          min_scale_y: T,
          min_scale_z: Z,
          max_scale_x: j,
          max_scale_y: P,
          max_scale_z: b,
          min_r: dA,
          min_g: gA,
          min_b: pA,
          max_r: yA,
          max_g: MA,
          max_b: EA
        } = k;
        i.push({
          min_x: v,
          min_y: L,
          min_z: AA,
          max_x: z,
          max_y: sA,
          max_z: tA,
          min_scale_x: O,
          min_scale_y: T,
          min_scale_z: Z,
          max_scale_x: j,
          max_scale_y: P,
          max_scale_z: b,
          min_r: dA,
          min_g: gA,
          min_b: pA,
          max_r: yA,
          max_g: MA,
          max_b: EA
        });
      };
    }
    function E(u) {
      if (e && u.name === "sh")
        return n = os(u.properties), c(), C;
      if (u.name !== "vertex")
        return null;
      const { packed_position: d, packed_rotation: p, packed_scale: w, packed_color: f } = u.properties;
      if (!d || !p || !w || !f)
        throw new Error(
          "Missing PLY properties: packed_position, packed_rotation, packed_scale, packed_color"
        );
      const x = Math.sqrt(2);
      return (M, D) => {
        const y = i[M >>> 8];
        if (y == null)
          throw new Error("Missing PLY chunk");
        const {
          min_x: R,
          min_y: S,
          min_z: m,
          max_x: U,
          max_y: F,
          max_z: k,
          min_scale_x: v,
          min_scale_y: L,
          min_scale_z: AA,
          max_scale_x: z,
          max_scale_y: sA,
          max_scale_z: tA,
          min_r: O,
          min_g: T,
          min_b: Z,
          max_r: j,
          max_g: P,
          max_b: b
        } = y, { packed_position: dA, packed_rotation: gA, packed_scale: pA, packed_color: yA } = D, MA = (dA >>> 21 & 2047) / 2047 * (U - R) + R, EA = (dA >>> 11 & 1023) / 1023 * (F - S) + S, UA = (dA & 2047) / 2047 * (k - m) + m, xA = ((gA >>> 20 & 1023) / 1023 - 0.5) * x, PA = ((gA >>> 10 & 1023) / 1023 - 0.5) * x, XA = ((gA & 1023) / 1023 - 0.5) * x, Y = Math.sqrt(Math.max(0, 1 - xA * xA - PA * PA - XA * XA)), uA = gA >>> 30, _A = uA === 0 ? xA : uA === 1 ? Y : PA, Rt = uA <= 1 ? PA : uA === 2 ? Y : XA, Xt = uA <= 2 ? XA : Y, SA = uA === 0 ? Y : xA, J = Math.exp(
          (pA >>> 21 & 2047) / 2047 * (z - v) + v
        ), VA = Math.exp(
          (pA >>> 11 & 1023) / 1023 * (sA - L) + L
        ), de = Math.exp(
          (pA & 2047) / 2047 * (tA - AA) + AA
        ), pe = (yA >>> 24 & 255) / 255 * ((j ?? 1) - (O ?? 0)) + (O ?? 0), ye = (yA >>> 16 & 255) / 255 * ((P ?? 1) - (T ?? 0)) + (T ?? 0), we = (yA >>> 8 & 255) / 255 * ((b ?? 1) - (Z ?? 0)) + (Z ?? 0), fe = (yA & 255) / 255;
        A(
          M,
          MA,
          EA,
          UA,
          J,
          VA,
          de,
          _A,
          Rt,
          Xt,
          SA,
          fe,
          pe,
          ye,
          we
        );
      };
    }
    const l = (u) => {
      if (u.name === "chunk")
        return h(u);
      if (s)
        return E(u);
      if (u.name !== "vertex")
        return null;
      const {
        x: d,
        y: p,
        z: w,
        scale_0: f,
        scale_1: x,
        scale_2: M,
        rot_0: D,
        rot_1: y,
        rot_2: R,
        rot_3: S,
        opacity: m,
        f_dc_0: U,
        f_dc_1: F,
        f_dc_2: k,
        red: v,
        green: L,
        blue: AA,
        alpha: z
      } = u.properties;
      if (!d || !p || !w)
        throw new Error("Missing PLY properties: x, y, z");
      const sA = f && x && M, tA = D && y && R && S, O = z != null ? te[z.type] : 1, T = v != null ? te[v.type] : 1, Z = L != null ? te[L.type] : 1, j = AA != null ? te[AA.type] : 1;
      return n = os(u.properties), c(), (P, b) => {
        const dA = sA ? Math.exp(b.scale_0) : ft.defaultPointScale, gA = sA ? Math.exp(b.scale_1) : ft.defaultPointScale, pA = sA ? Math.exp(b.scale_2) : ft.defaultPointScale, yA = tA ? b.rot_1 : 0, MA = tA ? b.rot_2 : 0, EA = tA ? b.rot_3 : 0, UA = tA ? b.rot_0 : 1, xA = m != null ? 1 / (1 + Math.exp(-b.opacity)) : z != null ? b.alpha / O : 1, PA = U != null ? b.f_dc_0 * $t + 0.5 : v != null ? b.red / T : 1, XA = F != null ? b.f_dc_1 * $t + 0.5 : L != null ? b.green / Z : 1, Y = k != null ? b.f_dc_2 * $t + 0.5 : AA != null ? b.blue / j : 1;
        if (A(
          P,
          b.x,
          b.y,
          b.z,
          dA,
          gA,
          pA,
          yA,
          MA,
          EA,
          UA,
          xA,
          PA,
          XA,
          Y
        ), e && I) {
          if (I)
            for (const [uA, _A] of r.entries())
              I[uA] = b[_A];
          if (B)
            for (const [uA, _A] of a.entries())
              B[uA] = b[_A];
          if (g)
            for (const [uA, _A] of o.entries())
              g[uA] = b[_A];
          e(P, I, B, g);
        }
      };
    };
    this.parseData(l);
  }
  // Inject RGBA values into original PLY file, which can be used to modify
  // the color/opacity of the Gsplats and write out the modified PLY file.
  injectRgba(A) {
    let e = 0;
    const s = this.data;
    if (s == null)
      throw new Error("No parsed data");
    if (A.length !== this.numSplats * 4)
      throw new Error("Invalid RGBA array length");
    for (const i in this.elements) {
      const n = this.elements[i], { count: r, properties: a } = n, o = [];
      let I = 0;
      const B = i === "vertex";
      if (B) {
        for (const g of ["opacity", "f_dc_0", "f_dc_1", "f_dc_2"])
          if (!a[g] || a[g].type !== "float")
            throw new Error(`Can't injectRgba due to property: ${g}`);
      }
      for (const [g, c] of Object.entries(a))
        if (c.isList)
          o.push(() => {
            const C = Ae[c.countType](
              s,
              e,
              this.littleEndian
            );
            e += pt[c.countType], e += C * pt[c.type];
          });
        else {
          if (B)
            if (g === "f_dc_0" || g === "f_dc_1" || g === "f_dc_2") {
              const C = Number.parseInt(
                g.slice(5)
              );
              o.push(() => {
                const h = (A[I + C] / 255 - 0.5) / $t;
                as[c.type](
                  s,
                  e,
                  this.littleEndian,
                  h
                );
              });
            } else g === "opacity" && o.push(() => {
              const C = Math.max(
                -100,
                Math.min(
                  100,
                  -Math.log(1 / (A[I + 3] / 255) - 1)
                )
              );
              as[c.type](
                s,
                e,
                this.littleEndian,
                C
              );
            });
          o.push(() => {
            e += pt[c.type];
          });
        }
      for (let g = 0; g < r; g++) {
        for (const c of o)
          c();
        B && (I += 4);
      }
    }
  }
};
ft.defaultPointScale = 1e-3;
let Be = ft;
const $t = 0.28209479177387814, Ae = {
  char: (t, A, e) => t.getInt8(A),
  uchar: (t, A, e) => t.getUint8(A),
  short: (t, A, e) => t.getInt16(A, e),
  ushort: (t, A, e) => t.getUint16(A, e),
  int: (t, A, e) => t.getInt32(A, e),
  uint: (t, A, e) => t.getUint32(A, e),
  float: (t, A, e) => t.getFloat32(A, e),
  double: (t, A, e) => t.getFloat64(A, e)
}, as = {
  char: (t, A, e, s) => {
    t.setInt8(A, s);
  },
  uchar: (t, A, e, s) => {
    t.setUint8(A, s);
  },
  short: (t, A, e, s) => {
    t.setInt16(A, s, e);
  },
  ushort: (t, A, e, s) => {
    t.setUint16(A, s, e);
  },
  int: (t, A, e, s) => {
    t.setInt32(A, s, e);
  },
  uint: (t, A, e, s) => {
    t.setUint32(A, s, e);
  },
  float: (t, A, e, s) => {
    t.setFloat32(A, s, e);
  },
  double: (t, A, e, s) => {
    t.setFloat64(A, s, e);
  }
}, pt = {
  char: 1,
  uchar: 1,
  short: 2,
  ushort: 2,
  int: 4,
  uint: 4,
  float: 4,
  double: 8
}, te = {
  char: 127,
  uchar: 255,
  short: 32767,
  ushort: 65535,
  int: 2147483647,
  uint: 4294967295,
  float: 1,
  double: 1
}, sc = {
  0: 0,
  9: 1,
  24: 2,
  45: 3
}, ic = {
  0: 0,
  1: 9,
  2: 24,
  3: 45
};
function os(t) {
  let A = 0;
  for (; t[`f_rest_${A}`]; )
    A += 1;
  const e = sc[A];
  if (e == null)
    throw new Error(`Unsupported number of SH coefficients: ${A}`);
  return e;
}
const Ra = '(function(){"use strict";let WA;const Ds=typeof TextDecoder<"u"?new TextDecoder("utf-8",{ignoreBOM:!0,fatal:!0}):{decode:()=>{throw Error("TextDecoder not available")}};typeof TextDecoder<"u"&&Ds.decode();let Be=null;function lr(){return(Be===null||Be.byteLength===0)&&(Be=new Uint8Array(WA.memory.buffer)),Be}function ur(n,A){return n=n>>>0,Ds.decode(lr().subarray(n,n+A))}function dr(n,A,t){return WA.sort_splats(n,A,t)>>>0}function fr(n,A,t,e,i,s,r,a,o,g,I){return WA.raycast_splats(n,A,t,e,i,s,r,a,o,g,I)}async function yr(n,A){if(typeof Response=="function"&&n instanceof Response){if(typeof WebAssembly.instantiateStreaming=="function")try{return await WebAssembly.instantiateStreaming(n,A)}catch(e){if(n.headers.get("Content-Type")!="application/wasm")console.warn("`WebAssembly.instantiateStreaming` failed because your server does not serve Wasm with `application/wasm` MIME type. Falling back to `WebAssembly.instantiate` which is slower. Original error:\\n",e);else throw e}const t=await n.arrayBuffer();return await WebAssembly.instantiate(t,A)}else{const t=await WebAssembly.instantiate(n,A);return t instanceof WebAssembly.Instance?{instance:t,module:n}:t}}function pr(){const n={};return n.wbg={},n.wbg.__wbg_buffer_609cc3eee51ed158=function(A){return A.buffer},n.wbg.__wbg_length_3b4f022188ae8db6=function(A){return A.length},n.wbg.__wbg_length_6ca527665d89694d=function(A){return A.length},n.wbg.__wbg_length_8cfd2c6409af88ad=function(A){return A.length},n.wbg.__wbg_new_9fee97a409b32b68=function(A){return new Uint16Array(A)},n.wbg.__wbg_new_e3b321dcfef89fc7=function(A){return new Uint32Array(A)},n.wbg.__wbg_newwithbyteoffsetandlength_e6b7e69acd4c7354=function(A,t,e){return new Float32Array(A,t>>>0,e>>>0)},n.wbg.__wbg_newwithbyteoffsetandlength_f1dead44d1fc7212=function(A,t,e){return new Uint32Array(A,t>>>0,e>>>0)},n.wbg.__wbg_newwithlength_5a5efe313cfd59f1=function(A){return new Float32Array(A>>>0)},n.wbg.__wbg_set_10bad9bee0e9c58b=function(A,t,e){A.set(t,e>>>0)},n.wbg.__wbg_set_d23661d19148b229=function(A,t,e){A.set(t,e>>>0)},n.wbg.__wbg_set_f4f1f0daa30696fc=function(A,t,e){A.set(t,e>>>0)},n.wbg.__wbg_subarray_3aaeec89bb2544f0=function(A,t,e){return A.subarray(t>>>0,e>>>0)},n.wbg.__wbg_subarray_769e1e0f81bb259b=function(A,t,e){return A.subarray(t>>>0,e>>>0)},n.wbg.__wbindgen_init_externref_table=function(){const A=WA.__wbindgen_export_0,t=A.grow(4);A.set(0,void 0),A.set(t+0,void 0),A.set(t+1,null),A.set(t+2,!0),A.set(t+3,!1)},n.wbg.__wbindgen_memory=function(){return WA.memory},n.wbg.__wbindgen_throw=function(A,t){throw new Error(ur(A,t))},n}function wr(n,A){return WA=n.exports,mi.__wbindgen_wasm_module=A,Be=null,WA.__wbindgen_start(),WA}async function mi(n){if(WA!==void 0)return WA;typeof n<"u"&&(Object.getPrototypeOf(n)===Object.prototype?{module_or_path:n}=n:console.warn("using deprecated parameters for the initialization function; pass a single object instead")),typeof n>"u"&&(n=new URL("data:application/wasm;base64,",self.location.href));const A=pr();(typeof n=="string"||typeof Request=="function"&&n instanceof Request||typeof URL=="function"&&n instanceof URL)&&(n=fetch(n));const{instance:t,module:e}=await yr(await n,A);return wr(t,e)}var xs={},mr=function(n,A,t,e,i){var s=new Worker(xs[A]||(xs[A]=URL.createObjectURL(new Blob([n+\';addEventListener("error",function(e){e=e.error;postMessage({$e$:[e.message,e.code,e.stack]})})\'],{type:"text/javascript"}))));return s.onmessage=function(r){var a=r.data,o=a.$e$;if(o){var g=new Error(o[0]);g.code=o[1],g.stack=o[2],i(g,null)}else i(null,a)},s.postMessage(t,e),s},eA=Uint8Array,xt=Uint16Array,Ms=Int32Array,Di=new eA([0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0,0,0,0]),xi=new eA([0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13,0,0]),Ss=new eA([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]),Fs=function(n,A){for(var t=new xt(31),e=0;e<31;++e)t[e]=A+=1<<n[e-1];for(var i=new Ms(t[30]),e=1;e<30;++e)for(var s=t[e];s<t[e+1];++s)i[s]=s-t[e]<<5|e;return{b:t,r:i}},Ns=Fs(Di,2),Mi=Ns.b,Dr=Ns.r;Mi[28]=258,Dr[258]=28;for(var xr=Fs(xi,0),ks=xr.b,Re=new xt(32768),X=0;X<32768;++X){var Qt=(X&43690)>>1|(X&21845)<<1;Qt=(Qt&52428)>>2|(Qt&13107)<<2,Qt=(Qt&61680)>>4|(Qt&3855)<<4,Re[X]=((Qt&65280)>>8|(Qt&255)<<8)>>1}for(var Lt=function(n,A,t){for(var e=n.length,i=0,s=new xt(A);i<e;++i)n[i]&&++s[n[i]-1];var r=new xt(A);for(i=1;i<A;++i)r[i]=r[i-1]+s[i-1]<<1;var a;if(t){a=new xt(1<<A);var o=15-A;for(i=0;i<e;++i)if(n[i])for(var g=i<<4|n[i],I=A-n[i],h=r[n[i]-1]++<<I,B=h|(1<<I)-1;h<=B;++h)a[Re[h]>>o]=g}else for(a=new xt(e),i=0;i<e;++i)n[i]&&(a[i]=Re[r[n[i]-1]++]>>15-n[i]);return a},Qe=new eA(288),X=0;X<144;++X)Qe[X]=8;for(var X=144;X<256;++X)Qe[X]=9;for(var X=256;X<280;++X)Qe[X]=7;for(var X=280;X<288;++X)Qe[X]=8;for(var Rs=new eA(32),X=0;X<32;++X)Rs[X]=5;var Gs=Lt(Qe,9,1),bs=Lt(Rs,5,1),Ge=function(n){for(var A=n[0],t=1;t<n.length;++t)n[t]>A&&(A=n[t]);return A},UA=function(n,A,t){var e=A/8|0;return(n[e]|n[e+1]<<8)>>(A&7)&t},be=function(n,A){var t=A/8|0;return(n[t]|n[t+1]<<8|n[t+2]<<16)>>(A&7)},Si=function(n){return(n+7)/8|0},ct=function(n,A,t){return(A==null||A<0)&&(A=0),(t==null||t>n.length)&&(t=n.length),new eA(n.subarray(A,t))},Us=["unexpected EOF","invalid block type","invalid length/literal","invalid distance","stream finished","no stream handler",,"no callback","invalid UTF-8 data","extra field too long","date not in range 1980-2099","filename too long","stream finishing","invalid zip data"],iA=function(n,A,t){var e=new Error(A||Us[n]);if(e.code=n,Error.captureStackTrace&&Error.captureStackTrace(e,iA),!t)throw e;return e},Fi=function(n,A,t,e){var i=n.length,s=e?e.length:0;if(!i||A.f&&!A.l)return t||new eA(0);var r=!t,a=r||A.i!=2,o=A.i;r&&(t=new eA(i*3));var g=function(pA){var MA=t.length;if(pA>MA){var SA=new eA(Math.max(MA*2,pA));SA.set(t),t=SA}},I=A.f||0,h=A.p||0,B=A.b||0,Q=A.l,c=A.d,C=A.m,l=A.n,E=i*8;do{if(!Q){I=UA(n,h,1);var u=UA(n,h+1,3);if(h+=3,u)if(u==1)Q=Gs,c=bs,C=9,l=5;else if(u==2){var x=UA(n,h,31)+257,M=UA(n,h+10,15)+4,p=x+UA(n,h+5,31)+1;h+=14;for(var m=new eA(p),F=new eA(19),D=0;D<M;++D)F[Ss[D]]=UA(n,h+D*3,7);h+=M*3;for(var S=Ge(F),N=(1<<S)-1,k=Lt(F,S,1),D=0;D<p;){var G=k[UA(n,h,N)];h+=G&15;var d=G>>4;if(d<16)m[D++]=d;else{var R=0,U=0;for(d==16?(U=3+UA(n,h,3),h+=2,R=m[D-1]):d==17?(U=3+UA(n,h,7),h+=3):d==18&&(U=11+UA(n,h,127),h+=7);U--;)m[D++]=R}}var P=m.subarray(0,x),K=m.subarray(x);C=Ge(P),l=Ge(K),Q=Lt(P,C,1),c=Lt(K,l,1)}else iA(1);else{var d=Si(h)+4,y=n[d-4]|n[d-3]<<8,w=d+y;if(w>i){o&&iA(0);break}a&&g(B+y),t.set(n.subarray(d,w),B),A.b=B+=y,A.p=h=w*8,A.f=I;continue}if(h>E){o&&iA(0);break}}a&&g(B+131072);for(var j=(1<<C)-1,W=(1<<l)-1,$=h;;$=h){var R=Q[be(n,h)&j],q=R>>4;if(h+=R&15,h>E){o&&iA(0);break}if(R||iA(2),q<256)t[B++]=q;else if(q==256){$=h,Q=null;break}else{var H=q-254;if(q>264){var D=q-257,L=Di[D];H=UA(n,h,(1<<L)-1)+Mi[D],h+=L}var Z=c[be(n,h)&W],b=Z>>4;Z||iA(3),h+=Z&15;var K=ks[b];if(b>3){var L=xi[b];K+=be(n,h)&(1<<L)-1,h+=L}if(h>E){o&&iA(0);break}a&&g(B+131072);var yA=B+H;if(B<K){var dA=s-K,bA=Math.min(K,yA);for(dA+B<0&&iA(3);B<bA;++B)t[B]=e[dA+B]}for(;B<yA;++B)t[B]=t[B-K]}}A.l=Q,A.p=$,A.b=B,A.f=I,Q&&(I=1,A.m=C,A.d=c,A.n=l)}while(!I);return B!=t.length&&r?ct(t,0,B):t.subarray(0,B)},Mr=new eA(0),Sr=function(n,A){var t={};for(var e in n)t[e]=n[e];for(var e in A)t[e]=A[e];return t},Ls=function(n,A,t){for(var e=n(),i=n.toString(),s=i.slice(i.indexOf("[")+1,i.lastIndexOf("]")).replace(/\\s+/g,"").split(","),r=0;r<e.length;++r){var a=e[r],o=s[r];if(typeof a=="function"){A+=";"+o+"=";var g=a.toString();if(a.prototype)if(g.indexOf("[native code]")!=-1){var I=g.indexOf(" ",8)+1;A+=g.slice(I,g.indexOf("(",I))}else{A+=g;for(var h in a.prototype)A+=";"+o+".prototype."+h+"="+a.prototype[h].toString()}else A+=g}else t[o]=a}return A},Ue=[],Fr=function(n){var A=[];for(var t in n)n[t].buffer&&A.push((n[t]=new n[t].constructor(n[t])).buffer);return A},Nr=function(n,A,t,e){if(!Ue[t]){for(var i="",s={},r=n.length-1,a=0;a<r;++a)i=Ls(n[a],i,s);Ue[t]={c:Ls(n[r],i,s),e:s}}var o=Sr({},Ue[t].e);return mr(Ue[t].c+";onmessage=function(e){for(var k in e.data)self[k]=e.data[k];onmessage="+A.toString()+"}",t,o,Fr(o),e)},kr=function(){return[eA,xt,Ms,Di,xi,Ss,Mi,ks,Gs,bs,Re,Us,Lt,Ge,UA,be,Si,ct,iA,Fi,Le,Ys,Js]},Ys=function(n){return postMessage(n,[n.buffer])},Js=function(n){return n&&{out:n.size&&new eA(n.size),dictionary:n.dictionary}},Rr=function(n,A,t,e,i,s){var r=Nr(t,e,i,function(a,o){r.terminate(),s(a,o)});return r.postMessage([n,A],A.consume?[n.buffer]:[]),function(){r.terminate()}},vA=function(n,A){return n[A]|n[A+1]<<8},cA=function(n,A){return(n[A]|n[A+1]<<8|n[A+2]<<16|n[A+3]<<24)>>>0},Ni=function(n,A){return cA(n,A)+cA(n,A+4)*4294967296},Gr=function(n){(n[0]!=31||n[1]!=139||n[2]!=8)&&iA(6,"invalid gzip data");var A=n[3],t=10;A&4&&(t+=(n[10]|n[11]<<8)+2);for(var e=(A>>3&1)+(A>>4&1);e>0;e-=!n[t++]);return t+(A&2)},ki=function(){function n(A,t){typeof A=="function"&&(t=A,A={}),this.ondata=t;var e=A&&A.dictionary&&A.dictionary.subarray(-32768);this.s={i:0,b:e?e.length:0},this.o=new eA(32768),this.p=new eA(0),e&&this.o.set(e)}return n.prototype.e=function(A){if(this.ondata||iA(5),this.d&&iA(4),!this.p.length)this.p=A;else if(A.length){var t=new eA(this.p.length+A.length);t.set(this.p),t.set(A,this.p.length),this.p=t}},n.prototype.c=function(A){this.s.i=+(this.d=A||!1);var t=this.s.b,e=Fi(this.p,this.s,this.o);this.ondata(ct(e,t,this.s.b),this.d),this.o=ct(e,this.s.b-32768),this.s.b=this.o.length,this.p=ct(this.p,this.s.p/8|0),this.s.p&=7},n.prototype.push=function(A,t){this.e(A),this.c(t)},n}();function br(n,A,t){return t||(t=A,A={}),typeof t!="function"&&iA(7),Rr(n,A,[kr],function(e){return Ys(Le(e.data[0],Js(e.data[1])))},1,t)}function Le(n,A){return Fi(n,{i:2},A&&A.out,A&&A.dictionary)}var Ts=function(){function n(A,t){this.v=1,this.r=0,ki.call(this,A,t)}return n.prototype.push=function(A,t){if(ki.prototype.e.call(this,A),this.r+=A.length,this.v){var e=this.p.subarray(this.v-1),i=e.length>3?Gr(e):4;if(i>e.length){if(!t)return}else this.v>1&&this.onmember&&this.onmember(this.r-e.length);this.p=e.subarray(i),this.v=0}ki.prototype.c.call(this,t),this.s.f&&!this.s.l&&!t&&(this.v=Si(this.s.p)+9,this.s={i:0},this.o=new eA(0),this.push(new eA(0),t))},n}(),Ri=typeof TextDecoder<"u"&&new TextDecoder,Ur=0;try{Ri.decode(Mr,{stream:!0}),Ur=1}catch{}var Lr=function(n){for(var A="",t=0;;){var e=n[t++],i=(e>127)+(e>223)+(e>239);if(t+i>n.length)return{s:A,r:ct(n,t-1)};i?i==3?(e=((e&15)<<18|(n[t++]&63)<<12|(n[t++]&63)<<6|n[t++]&63)-65536,A+=String.fromCharCode(55296|e>>10,56320|e&1023)):i&1?A+=String.fromCharCode((e&31)<<6|n[t++]&63):A+=String.fromCharCode((e&15)<<12|(n[t++]&63)<<6|n[t++]&63):A+=String.fromCharCode(e)}};function Yr(n,A){if(A){for(var t="",e=0;e<n.length;e+=16384)t+=String.fromCharCode.apply(null,n.subarray(e,e+16384));return t}else{if(Ri)return Ri.decode(n);var i=Lr(n),s=i.s,t=i.r;return t.length&&iA(8),s}}var vs=function(n,A){return A+30+vA(n,A+26)+vA(n,A+28)},zs=function(n,A,t){var e=vA(n,A+28),i=Yr(n.subarray(A+46,A+46+e),!(vA(n,A+8)&2048)),s=A+46+e,r=cA(n,A+20),a=t&&r==4294967295?Jr(n,s):[r,cA(n,A+24),cA(n,A+42)],o=a[0],g=a[1],I=a[2];return[vA(n,A+10),o,g,i,s+vA(n,A+30)+vA(n,A+32),I]},Jr=function(n,A){for(;vA(n,A)!=1;A+=4+vA(n,A+2));return[Ni(n,A+12),Ni(n,A+4),Ni(n,A+20)]},Hs=typeof queueMicrotask=="function"?queueMicrotask:typeof setTimeout=="function"?setTimeout:function(n){n()};function Tr(n,A,t){t||(t=A,A={}),typeof t!="function"&&iA(7);var e=[],i=function(){for(var l=0;l<e.length;++l)e[l]()},s={},r=function(l,E){Hs(function(){t(l,E)})};Hs(function(){r=t});for(var a=n.length-22;cA(n,a)!=101010256;--a)if(!a||n.length-a>65558)return r(iA(13,0,1),null),i;var o=vA(n,a+8);if(o){var g=o,I=cA(n,a+16),h=I==4294967295||g==65535;if(h){var B=cA(n,a-12);h=cA(n,B)==101075792,h&&(g=o=cA(n,B+32),I=cA(n,B+48))}for(var Q=A&&A.filter,c=function(l){var E=zs(n,I,h),u=E[0],d=E[1],y=E[2],w=E[3],x=E[4],M=E[5],p=vs(n,M);I=x;var m=function(D,S){D?(i(),r(D,null)):(S&&(s[w]=S),--o||r(null,s))};if(!Q||Q({name:w,size:d,originalSize:y,compression:u}))if(!u)m(null,ct(n,p,p+d));else if(u==8){var F=n.subarray(p,p+d);if(y<524288||d>.8*y)try{m(null,Le(F,{out:new eA(y)}))}catch(D){m(D,null)}else e.push(br(F,{size:y},m))}else m(iA(14,"unknown compression type "+u,1),null);else m(null,null)},C=0;C<g;++C)c(C)}else r(null,{});return i}function vr(n,A){for(var t={},e=n.length-22;cA(n,e)!=101010256;--e)(!e||n.length-e>65558)&&iA(13);var i=vA(n,e+8);if(!i)return{};var s=cA(n,e+16),r=s==4294967295||i==65535;if(r){var a=cA(n,e-12);r=cA(n,a)==101075792,r&&(i=cA(n,a+32),s=cA(n,a+48))}for(var o=A&&A.filter,g=0;g<i;++g){var I=zs(n,s,r),h=I[0],B=I[1],Q=I[2],c=I[3],C=I[4],l=I[5],E=vs(n,l);s=C,(!o||o({name:c,size:B,originalSize:Q,compression:h}))&&(h?h==8?t[c]=Le(n.subarray(E,E+B),{out:new eA(Q)}):iA(14,"unknown compression type "+h):t[c]=ct(n,E,E+B))}return t}/**\n * @license\n * Copyright 2010-2024 Three.js Authors\n * SPDX-License-Identifier: MIT\n */const qs="172",Gi=0,zr=1,_s=1,Ks=100,Zs=204,Os=205,Vs=3,Hr=0,Ps=300,Ws=1e3,ce=1001,Xs=1002,Ct=1003,js=1006,qr=1008,Ye=1009,Mt=1014,_r=1015,Je=1023,Kr=1031,Yt=1033,$s="",zA="srgb",An="srgb-linear",tn="linear",bi="srgb",Jt=7680,en=519,sn=35044,Zr="300 es",Ce=2e3,nn=2001;class Ee{addEventListener(A,t){this._listeners===void 0&&(this._listeners={});const e=this._listeners;e[A]===void 0&&(e[A]=[]),e[A].indexOf(t)===-1&&e[A].push(t)}hasEventListener(A,t){if(this._listeners===void 0)return!1;const e=this._listeners;return e[A]!==void 0&&e[A].indexOf(t)!==-1}removeEventListener(A,t){if(this._listeners===void 0)return;const i=this._listeners[A];if(i!==void 0){const s=i.indexOf(t);s!==-1&&i.splice(s,1)}}dispatchEvent(A){if(this._listeners===void 0)return;const e=this._listeners[A.type];if(e!==void 0){A.target=this;const i=e.slice(0);for(let s=0,r=i.length;s<r;s++)i[s].call(this,A);A.target=null}}}const CA=["00","01","02","03","04","05","06","07","08","09","0a","0b","0c","0d","0e","0f","10","11","12","13","14","15","16","17","18","19","1a","1b","1c","1d","1e","1f","20","21","22","23","24","25","26","27","28","29","2a","2b","2c","2d","2e","2f","30","31","32","33","34","35","36","37","38","39","3a","3b","3c","3d","3e","3f","40","41","42","43","44","45","46","47","48","49","4a","4b","4c","4d","4e","4f","50","51","52","53","54","55","56","57","58","59","5a","5b","5c","5d","5e","5f","60","61","62","63","64","65","66","67","68","69","6a","6b","6c","6d","6e","6f","70","71","72","73","74","75","76","77","78","79","7a","7b","7c","7d","7e","7f","80","81","82","83","84","85","86","87","88","89","8a","8b","8c","8d","8e","8f","90","91","92","93","94","95","96","97","98","99","9a","9b","9c","9d","9e","9f","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","aa","ab","ac","ad","ae","af","b0","b1","b2","b3","b4","b5","b6","b7","b8","b9","ba","bb","bc","bd","be","bf","c0","c1","c2","c3","c4","c5","c6","c7","c8","c9","ca","cb","cc","cd","ce","cf","d0","d1","d2","d3","d4","d5","d6","d7","d8","d9","da","db","dc","dd","de","df","e0","e1","e2","e3","e4","e5","e6","e7","e8","e9","ea","eb","ec","ed","ee","ef","f0","f1","f2","f3","f4","f5","f6","f7","f8","f9","fa","fb","fc","fd","fe","ff"];function le(){const n=Math.random()*4294967295|0,A=Math.random()*4294967295|0,t=Math.random()*4294967295|0,e=Math.random()*4294967295|0;return(CA[n&255]+CA[n>>8&255]+CA[n>>16&255]+CA[n>>24&255]+"-"+CA[A&255]+CA[A>>8&255]+"-"+CA[A>>16&15|64]+CA[A>>24&255]+"-"+CA[t&63|128]+CA[t>>8&255]+"-"+CA[t>>16&255]+CA[t>>24&255]+CA[e&255]+CA[e>>8&255]+CA[e>>16&255]+CA[e>>24&255]).toLowerCase()}function v(n,A,t){return Math.max(A,Math.min(t,n))}function Or(n,A){return(n%A+A)%A}function Ui(n,A,t){return(1-t)*n+t*A}function ue(n,A){switch(A.constructor){case Float32Array:return n;case Uint32Array:return n/4294967295;case Uint16Array:return n/65535;case Uint8Array:return n/255;case Int32Array:return Math.max(n/2147483647,-1);case Int16Array:return Math.max(n/32767,-1);case Int8Array:return Math.max(n/127,-1);default:throw new Error("Invalid component type.")}}function wA(n,A){switch(A.constructor){case Float32Array:return n;case Uint32Array:return Math.round(n*4294967295);case Uint16Array:return Math.round(n*65535);case Uint8Array:return Math.round(n*255);case Int32Array:return Math.round(n*2147483647);case Int16Array:return Math.round(n*32767);case Int8Array:return Math.round(n*127);default:throw new Error("Invalid component type.")}}class mA{constructor(A=0,t=0){mA.prototype.isVector2=!0,this.x=A,this.y=t}get width(){return this.x}set width(A){this.x=A}get height(){return this.y}set height(A){this.y=A}set(A,t){return this.x=A,this.y=t,this}setScalar(A){return this.x=A,this.y=A,this}setX(A){return this.x=A,this}setY(A){return this.y=A,this}setComponent(A,t){switch(A){case 0:this.x=t;break;case 1:this.y=t;break;default:throw new Error("index is out of range: "+A)}return this}getComponent(A){switch(A){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+A)}}clone(){return new this.constructor(this.x,this.y)}copy(A){return this.x=A.x,this.y=A.y,this}add(A){return this.x+=A.x,this.y+=A.y,this}addScalar(A){return this.x+=A,this.y+=A,this}addVectors(A,t){return this.x=A.x+t.x,this.y=A.y+t.y,this}addScaledVector(A,t){return this.x+=A.x*t,this.y+=A.y*t,this}sub(A){return this.x-=A.x,this.y-=A.y,this}subScalar(A){return this.x-=A,this.y-=A,this}subVectors(A,t){return this.x=A.x-t.x,this.y=A.y-t.y,this}multiply(A){return this.x*=A.x,this.y*=A.y,this}multiplyScalar(A){return this.x*=A,this.y*=A,this}divide(A){return this.x/=A.x,this.y/=A.y,this}divideScalar(A){return this.multiplyScalar(1/A)}applyMatrix3(A){const t=this.x,e=this.y,i=A.elements;return this.x=i[0]*t+i[3]*e+i[6],this.y=i[1]*t+i[4]*e+i[7],this}min(A){return this.x=Math.min(this.x,A.x),this.y=Math.min(this.y,A.y),this}max(A){return this.x=Math.max(this.x,A.x),this.y=Math.max(this.y,A.y),this}clamp(A,t){return this.x=v(this.x,A.x,t.x),this.y=v(this.y,A.y,t.y),this}clampScalar(A,t){return this.x=v(this.x,A,t),this.y=v(this.y,A,t),this}clampLength(A,t){const e=this.length();return this.divideScalar(e||1).multiplyScalar(v(e,A,t))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(A){return this.x*A.x+this.y*A.y}cross(A){return this.x*A.y-this.y*A.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}angleTo(A){const t=Math.sqrt(this.lengthSq()*A.lengthSq());if(t===0)return Math.PI/2;const e=this.dot(A)/t;return Math.acos(v(e,-1,1))}distanceTo(A){return Math.sqrt(this.distanceToSquared(A))}distanceToSquared(A){const t=this.x-A.x,e=this.y-A.y;return t*t+e*e}manhattanDistanceTo(A){return Math.abs(this.x-A.x)+Math.abs(this.y-A.y)}setLength(A){return this.normalize().multiplyScalar(A)}lerp(A,t){return this.x+=(A.x-this.x)*t,this.y+=(A.y-this.y)*t,this}lerpVectors(A,t,e){return this.x=A.x+(t.x-A.x)*e,this.y=A.y+(t.y-A.y)*e,this}equals(A){return A.x===this.x&&A.y===this.y}fromArray(A,t=0){return this.x=A[t],this.y=A[t+1],this}toArray(A=[],t=0){return A[t]=this.x,A[t+1]=this.y,A}fromBufferAttribute(A,t){return this.x=A.getX(t),this.y=A.getY(t),this}rotateAround(A,t){const e=Math.cos(t),i=Math.sin(t),s=this.x-A.x,r=this.y-A.y;return this.x=s*e-r*i+A.x,this.y=s*i+r*e+A.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y}}class XA{constructor(A,t,e,i,s,r,a,o,g){XA.prototype.isMatrix3=!0,this.elements=[1,0,0,0,1,0,0,0,1],A!==void 0&&this.set(A,t,e,i,s,r,a,o,g)}set(A,t,e,i,s,r,a,o,g){const I=this.elements;return I[0]=A,I[1]=i,I[2]=a,I[3]=t,I[4]=s,I[5]=o,I[6]=e,I[7]=r,I[8]=g,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(A){const t=this.elements,e=A.elements;return t[0]=e[0],t[1]=e[1],t[2]=e[2],t[3]=e[3],t[4]=e[4],t[5]=e[5],t[6]=e[6],t[7]=e[7],t[8]=e[8],this}extractBasis(A,t,e){return A.setFromMatrix3Column(this,0),t.setFromMatrix3Column(this,1),e.setFromMatrix3Column(this,2),this}setFromMatrix4(A){const t=A.elements;return this.set(t[0],t[4],t[8],t[1],t[5],t[9],t[2],t[6],t[10]),this}multiply(A){return this.multiplyMatrices(this,A)}premultiply(A){return this.multiplyMatrices(A,this)}multiplyMatrices(A,t){const e=A.elements,i=t.elements,s=this.elements,r=e[0],a=e[3],o=e[6],g=e[1],I=e[4],h=e[7],B=e[2],Q=e[5],c=e[8],C=i[0],l=i[3],E=i[6],u=i[1],d=i[4],y=i[7],w=i[2],x=i[5],M=i[8];return s[0]=r*C+a*u+o*w,s[3]=r*l+a*d+o*x,s[6]=r*E+a*y+o*M,s[1]=g*C+I*u+h*w,s[4]=g*l+I*d+h*x,s[7]=g*E+I*y+h*M,s[2]=B*C+Q*u+c*w,s[5]=B*l+Q*d+c*x,s[8]=B*E+Q*y+c*M,this}multiplyScalar(A){const t=this.elements;return t[0]*=A,t[3]*=A,t[6]*=A,t[1]*=A,t[4]*=A,t[7]*=A,t[2]*=A,t[5]*=A,t[8]*=A,this}determinant(){const A=this.elements,t=A[0],e=A[1],i=A[2],s=A[3],r=A[4],a=A[5],o=A[6],g=A[7],I=A[8];return t*r*I-t*a*g-e*s*I+e*a*o+i*s*g-i*r*o}invert(){const A=this.elements,t=A[0],e=A[1],i=A[2],s=A[3],r=A[4],a=A[5],o=A[6],g=A[7],I=A[8],h=I*r-a*g,B=a*o-I*s,Q=g*s-r*o,c=t*h+e*B+i*Q;if(c===0)return this.set(0,0,0,0,0,0,0,0,0);const C=1/c;return A[0]=h*C,A[1]=(i*g-I*e)*C,A[2]=(a*e-i*r)*C,A[3]=B*C,A[4]=(I*t-i*o)*C,A[5]=(i*s-a*t)*C,A[6]=Q*C,A[7]=(e*o-g*t)*C,A[8]=(r*t-e*s)*C,this}transpose(){let A;const t=this.elements;return A=t[1],t[1]=t[3],t[3]=A,A=t[2],t[2]=t[6],t[6]=A,A=t[5],t[5]=t[7],t[7]=A,this}getNormalMatrix(A){return this.setFromMatrix4(A).invert().transpose()}transposeIntoArray(A){const t=this.elements;return A[0]=t[0],A[1]=t[3],A[2]=t[6],A[3]=t[1],A[4]=t[4],A[5]=t[7],A[6]=t[2],A[7]=t[5],A[8]=t[8],this}setUvTransform(A,t,e,i,s,r,a){const o=Math.cos(s),g=Math.sin(s);return this.set(e*o,e*g,-e*(o*r+g*a)+r+A,-i*g,i*o,-i*(-g*r+o*a)+a+t,0,0,1),this}scale(A,t){return this.premultiply(Li.makeScale(A,t)),this}rotate(A){return this.premultiply(Li.makeRotation(-A)),this}translate(A,t){return this.premultiply(Li.makeTranslation(A,t)),this}makeTranslation(A,t){return A.isVector2?this.set(1,0,A.x,0,1,A.y,0,0,1):this.set(1,0,A,0,1,t,0,0,1),this}makeRotation(A){const t=Math.cos(A),e=Math.sin(A);return this.set(t,-e,0,e,t,0,0,0,1),this}makeScale(A,t){return this.set(A,0,0,0,t,0,0,0,1),this}equals(A){const t=this.elements,e=A.elements;for(let i=0;i<9;i++)if(t[i]!==e[i])return!1;return!0}fromArray(A,t=0){for(let e=0;e<9;e++)this.elements[e]=A[e+t];return this}toArray(A=[],t=0){const e=this.elements;return A[t]=e[0],A[t+1]=e[1],A[t+2]=e[2],A[t+3]=e[3],A[t+4]=e[4],A[t+5]=e[5],A[t+6]=e[6],A[t+7]=e[7],A[t+8]=e[8],A}clone(){return new this.constructor().fromArray(this.elements)}}const Li=new XA;function Vr(n){for(let A=n.length-1;A>=0;--A)if(n[A]>=65535)return!0;return!1}function rn(n){return document.createElementNS("http://www.w3.org/1999/xhtml",n)}const an=new XA().set(.4123908,.3575843,.1804808,.212639,.7151687,.0721923,.0193308,.1191948,.9505322),on=new XA().set(3.2409699,-1.5373832,-.4986108,-.9692436,1.8759675,.0415551,.0556301,-.203977,1.0569715);function Pr(){const n={enabled:!0,workingColorSpace:An,spaces:{},convert:function(i,s,r){return this.enabled===!1||s===r||!s||!r||(this.spaces[s].transfer===bi&&(i.r=tt(i.r),i.g=tt(i.g),i.b=tt(i.b)),this.spaces[s].primaries!==this.spaces[r].primaries&&(i.applyMatrix3(this.spaces[s].toXYZ),i.applyMatrix3(this.spaces[r].fromXYZ)),this.spaces[r].transfer===bi&&(i.r=Tt(i.r),i.g=Tt(i.g),i.b=Tt(i.b))),i},fromWorkingColorSpace:function(i,s){return this.convert(i,this.workingColorSpace,s)},toWorkingColorSpace:function(i,s){return this.convert(i,s,this.workingColorSpace)},getPrimaries:function(i){return this.spaces[i].primaries},getTransfer:function(i){return i===$s?tn:this.spaces[i].transfer},getLuminanceCoefficients:function(i,s=this.workingColorSpace){return i.fromArray(this.spaces[s].luminanceCoefficients)},define:function(i){Object.assign(this.spaces,i)},_getMatrix:function(i,s,r){return i.copy(this.spaces[s].toXYZ).multiply(this.spaces[r].fromXYZ)},_getDrawingBufferColorSpace:function(i){return this.spaces[i].outputColorSpaceConfig.drawingBufferColorSpace},_getUnpackColorSpace:function(i=this.workingColorSpace){return this.spaces[i].workingColorSpaceConfig.unpackColorSpace}},A=[.64,.33,.3,.6,.15,.06],t=[.2126,.7152,.0722],e=[.3127,.329];return n.define({[An]:{primaries:A,whitePoint:e,transfer:tn,toXYZ:an,fromXYZ:on,luminanceCoefficients:t,workingColorSpaceConfig:{unpackColorSpace:zA},outputColorSpaceConfig:{drawingBufferColorSpace:zA}},[zA]:{primaries:A,whitePoint:e,transfer:bi,toXYZ:an,fromXYZ:on,luminanceCoefficients:t,outputColorSpaceConfig:{drawingBufferColorSpace:zA}}}),n}const HA=Pr();function tt(n){return n<.04045?n*.0773993808:Math.pow(n*.9478672986+.0521327014,2.4)}function Tt(n){return n<.0031308?n*12.92:1.055*Math.pow(n,.41666)-.055}let vt;class Wr{static getDataURL(A){if(/^data:/i.test(A.src)||typeof HTMLCanvasElement>"u")return A.src;let t;if(A instanceof HTMLCanvasElement)t=A;else{vt===void 0&&(vt=rn("canvas")),vt.width=A.width,vt.height=A.height;const e=vt.getContext("2d");A instanceof ImageData?e.putImageData(A,0,0):e.drawImage(A,0,0,A.width,A.height),t=vt}return t.width>2048||t.height>2048?(console.warn("THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons",A),t.toDataURL("image/jpeg",.6)):t.toDataURL("image/png")}static sRGBToLinear(A){if(typeof HTMLImageElement<"u"&&A instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&A instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&A instanceof ImageBitmap){const t=rn("canvas");t.width=A.width,t.height=A.height;const e=t.getContext("2d");e.drawImage(A,0,0,A.width,A.height);const i=e.getImageData(0,0,A.width,A.height),s=i.data;for(let r=0;r<s.length;r++)s[r]=tt(s[r]/255)*255;return e.putImageData(i,0,0),t}else if(A.data){const t=A.data.slice(0);for(let e=0;e<t.length;e++)t instanceof Uint8Array||t instanceof Uint8ClampedArray?t[e]=Math.floor(tt(t[e]/255)*255):t[e]=tt(t[e]);return{data:t,width:A.width,height:A.height}}else return console.warn("THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied."),A}}let Xr=0;class gn{constructor(A=null){this.isSource=!0,Object.defineProperty(this,"id",{value:Xr++}),this.uuid=le(),this.data=A,this.dataReady=!0,this.version=0}set needsUpdate(A){A===!0&&this.version++}toJSON(A){const t=A===void 0||typeof A=="string";if(!t&&A.images[this.uuid]!==void 0)return A.images[this.uuid];const e={uuid:this.uuid,url:""},i=this.data;if(i!==null){let s;if(Array.isArray(i)){s=[];for(let r=0,a=i.length;r<a;r++)i[r].isDataTexture?s.push(Yi(i[r].image)):s.push(Yi(i[r]))}else s=Yi(i);e.url=s}return t||(A.images[this.uuid]=e),e}}function Yi(n){return typeof HTMLImageElement<"u"&&n instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&n instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&n instanceof ImageBitmap?Wr.getDataURL(n):n.data?{data:Array.from(n.data),width:n.width,height:n.height,type:n.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}let jr=0;class jA extends Ee{constructor(A=jA.DEFAULT_IMAGE,t=jA.DEFAULT_MAPPING,e=ce,i=ce,s=js,r=qr,a=Je,o=Ye,g=jA.DEFAULT_ANISOTROPY,I=$s){super(),this.isTexture=!0,Object.defineProperty(this,"id",{value:jr++}),this.uuid=le(),this.name="",this.source=new gn(A),this.mipmaps=[],this.mapping=t,this.channel=0,this.wrapS=e,this.wrapT=i,this.magFilter=s,this.minFilter=r,this.anisotropy=g,this.format=a,this.internalFormat=null,this.type=o,this.offset=new mA(0,0),this.repeat=new mA(1,1),this.center=new mA(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new XA,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.colorSpace=I,this.userData={},this.version=0,this.onUpdate=null,this.renderTarget=null,this.isRenderTargetTexture=!1,this.pmremVersion=0}get image(){return this.source.data}set image(A=null){this.source.data=A}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}clone(){return new this.constructor().copy(this)}copy(A){return this.name=A.name,this.source=A.source,this.mipmaps=A.mipmaps.slice(0),this.mapping=A.mapping,this.channel=A.channel,this.wrapS=A.wrapS,this.wrapT=A.wrapT,this.magFilter=A.magFilter,this.minFilter=A.minFilter,this.anisotropy=A.anisotropy,this.format=A.format,this.internalFormat=A.internalFormat,this.type=A.type,this.offset.copy(A.offset),this.repeat.copy(A.repeat),this.center.copy(A.center),this.rotation=A.rotation,this.matrixAutoUpdate=A.matrixAutoUpdate,this.matrix.copy(A.matrix),this.generateMipmaps=A.generateMipmaps,this.premultiplyAlpha=A.premultiplyAlpha,this.flipY=A.flipY,this.unpackAlignment=A.unpackAlignment,this.colorSpace=A.colorSpace,this.renderTarget=A.renderTarget,this.isRenderTargetTexture=A.isRenderTargetTexture,this.userData=JSON.parse(JSON.stringify(A.userData)),this.needsUpdate=!0,this}toJSON(A){const t=A===void 0||typeof A=="string";if(!t&&A.textures[this.uuid]!==void 0)return A.textures[this.uuid];const e={metadata:{version:4.6,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,image:this.source.toJSON(A).uuid,mapping:this.mapping,channel:this.channel,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,internalFormat:this.internalFormat,type:this.type,colorSpace:this.colorSpace,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,generateMipmaps:this.generateMipmaps,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};return Object.keys(this.userData).length>0&&(e.userData=this.userData),t||(A.textures[this.uuid]=e),e}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(A){if(this.mapping!==Ps)return A;if(A.applyMatrix3(this.matrix),A.x<0||A.x>1)switch(this.wrapS){case Ws:A.x=A.x-Math.floor(A.x);break;case ce:A.x=A.x<0?0:1;break;case Xs:Math.abs(Math.floor(A.x)%2)===1?A.x=Math.ceil(A.x)-A.x:A.x=A.x-Math.floor(A.x);break}if(A.y<0||A.y>1)switch(this.wrapT){case Ws:A.y=A.y-Math.floor(A.y);break;case ce:A.y=A.y<0?0:1;break;case Xs:Math.abs(Math.floor(A.y)%2)===1?A.y=Math.ceil(A.y)-A.y:A.y=A.y-Math.floor(A.y);break}return this.flipY&&(A.y=1-A.y),A}set needsUpdate(A){A===!0&&(this.version++,this.source.needsUpdate=!0)}set needsPMREMUpdate(A){A===!0&&this.pmremVersion++}}jA.DEFAULT_IMAGE=null,jA.DEFAULT_MAPPING=Ps,jA.DEFAULT_ANISOTROPY=1;class fA{constructor(A=0,t=0,e=0,i=1){fA.prototype.isVector4=!0,this.x=A,this.y=t,this.z=e,this.w=i}get width(){return this.z}set width(A){this.z=A}get height(){return this.w}set height(A){this.w=A}set(A,t,e,i){return this.x=A,this.y=t,this.z=e,this.w=i,this}setScalar(A){return this.x=A,this.y=A,this.z=A,this.w=A,this}setX(A){return this.x=A,this}setY(A){return this.y=A,this}setZ(A){return this.z=A,this}setW(A){return this.w=A,this}setComponent(A,t){switch(A){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;case 3:this.w=t;break;default:throw new Error("index is out of range: "+A)}return this}getComponent(A){switch(A){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+A)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(A){return this.x=A.x,this.y=A.y,this.z=A.z,this.w=A.w!==void 0?A.w:1,this}add(A){return this.x+=A.x,this.y+=A.y,this.z+=A.z,this.w+=A.w,this}addScalar(A){return this.x+=A,this.y+=A,this.z+=A,this.w+=A,this}addVectors(A,t){return this.x=A.x+t.x,this.y=A.y+t.y,this.z=A.z+t.z,this.w=A.w+t.w,this}addScaledVector(A,t){return this.x+=A.x*t,this.y+=A.y*t,this.z+=A.z*t,this.w+=A.w*t,this}sub(A){return this.x-=A.x,this.y-=A.y,this.z-=A.z,this.w-=A.w,this}subScalar(A){return this.x-=A,this.y-=A,this.z-=A,this.w-=A,this}subVectors(A,t){return this.x=A.x-t.x,this.y=A.y-t.y,this.z=A.z-t.z,this.w=A.w-t.w,this}multiply(A){return this.x*=A.x,this.y*=A.y,this.z*=A.z,this.w*=A.w,this}multiplyScalar(A){return this.x*=A,this.y*=A,this.z*=A,this.w*=A,this}applyMatrix4(A){const t=this.x,e=this.y,i=this.z,s=this.w,r=A.elements;return this.x=r[0]*t+r[4]*e+r[8]*i+r[12]*s,this.y=r[1]*t+r[5]*e+r[9]*i+r[13]*s,this.z=r[2]*t+r[6]*e+r[10]*i+r[14]*s,this.w=r[3]*t+r[7]*e+r[11]*i+r[15]*s,this}divide(A){return this.x/=A.x,this.y/=A.y,this.z/=A.z,this.w/=A.w,this}divideScalar(A){return this.multiplyScalar(1/A)}setAxisAngleFromQuaternion(A){this.w=2*Math.acos(A.w);const t=Math.sqrt(1-A.w*A.w);return t<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=A.x/t,this.y=A.y/t,this.z=A.z/t),this}setAxisAngleFromRotationMatrix(A){let t,e,i,s;const o=A.elements,g=o[0],I=o[4],h=o[8],B=o[1],Q=o[5],c=o[9],C=o[2],l=o[6],E=o[10];if(Math.abs(I-B)<.01&&Math.abs(h-C)<.01&&Math.abs(c-l)<.01){if(Math.abs(I+B)<.1&&Math.abs(h+C)<.1&&Math.abs(c+l)<.1&&Math.abs(g+Q+E-3)<.1)return this.set(1,0,0,0),this;t=Math.PI;const d=(g+1)/2,y=(Q+1)/2,w=(E+1)/2,x=(I+B)/4,M=(h+C)/4,p=(c+l)/4;return d>y&&d>w?d<.01?(e=0,i=.707106781,s=.707106781):(e=Math.sqrt(d),i=x/e,s=M/e):y>w?y<.01?(e=.707106781,i=0,s=.707106781):(i=Math.sqrt(y),e=x/i,s=p/i):w<.01?(e=.707106781,i=.707106781,s=0):(s=Math.sqrt(w),e=M/s,i=p/s),this.set(e,i,s,t),this}let u=Math.sqrt((l-c)*(l-c)+(h-C)*(h-C)+(B-I)*(B-I));return Math.abs(u)<.001&&(u=1),this.x=(l-c)/u,this.y=(h-C)/u,this.z=(B-I)/u,this.w=Math.acos((g+Q+E-1)/2),this}setFromMatrixPosition(A){const t=A.elements;return this.x=t[12],this.y=t[13],this.z=t[14],this.w=t[15],this}min(A){return this.x=Math.min(this.x,A.x),this.y=Math.min(this.y,A.y),this.z=Math.min(this.z,A.z),this.w=Math.min(this.w,A.w),this}max(A){return this.x=Math.max(this.x,A.x),this.y=Math.max(this.y,A.y),this.z=Math.max(this.z,A.z),this.w=Math.max(this.w,A.w),this}clamp(A,t){return this.x=v(this.x,A.x,t.x),this.y=v(this.y,A.y,t.y),this.z=v(this.z,A.z,t.z),this.w=v(this.w,A.w,t.w),this}clampScalar(A,t){return this.x=v(this.x,A,t),this.y=v(this.y,A,t),this.z=v(this.z,A,t),this.w=v(this.w,A,t),this}clampLength(A,t){const e=this.length();return this.divideScalar(e||1).multiplyScalar(v(e,A,t))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this.w=Math.trunc(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(A){return this.x*A.x+this.y*A.y+this.z*A.z+this.w*A.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(A){return this.normalize().multiplyScalar(A)}lerp(A,t){return this.x+=(A.x-this.x)*t,this.y+=(A.y-this.y)*t,this.z+=(A.z-this.z)*t,this.w+=(A.w-this.w)*t,this}lerpVectors(A,t,e){return this.x=A.x+(t.x-A.x)*e,this.y=A.y+(t.y-A.y)*e,this.z=A.z+(t.z-A.z)*e,this.w=A.w+(t.w-A.w)*e,this}equals(A){return A.x===this.x&&A.y===this.y&&A.z===this.z&&A.w===this.w}fromArray(A,t=0){return this.x=A[t],this.y=A[t+1],this.z=A[t+2],this.w=A[t+3],this}toArray(A=[],t=0){return A[t]=this.x,A[t+1]=this.y,A[t+2]=this.z,A[t+3]=this.w,A}fromBufferAttribute(A,t){return this.x=A.getX(t),this.y=A.getY(t),this.z=A.getZ(t),this.w=A.getW(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z,yield this.w}}class $r extends Ee{constructor(A=1,t=1,e={}){super(),this.isRenderTarget=!0,this.width=A,this.height=t,this.depth=1,this.scissor=new fA(0,0,A,t),this.scissorTest=!1,this.viewport=new fA(0,0,A,t);const i={width:A,height:t,depth:1};e=Object.assign({generateMipmaps:!1,internalFormat:null,minFilter:js,depthBuffer:!0,stencilBuffer:!1,resolveDepthBuffer:!0,resolveStencilBuffer:!0,depthTexture:null,samples:0,count:1},e);const s=new jA(i,e.mapping,e.wrapS,e.wrapT,e.magFilter,e.minFilter,e.format,e.type,e.anisotropy,e.colorSpace);s.flipY=!1,s.generateMipmaps=e.generateMipmaps,s.internalFormat=e.internalFormat,this.textures=[];const r=e.count;for(let a=0;a<r;a++)this.textures[a]=s.clone(),this.textures[a].isRenderTargetTexture=!0,this.textures[a].renderTarget=this;this.depthBuffer=e.depthBuffer,this.stencilBuffer=e.stencilBuffer,this.resolveDepthBuffer=e.resolveDepthBuffer,this.resolveStencilBuffer=e.resolveStencilBuffer,this._depthTexture=null,this.depthTexture=e.depthTexture,this.samples=e.samples}get texture(){return this.textures[0]}set texture(A){this.textures[0]=A}set depthTexture(A){this._depthTexture!==null&&(this._depthTexture.renderTarget=null),A!==null&&(A.renderTarget=this),this._depthTexture=A}get depthTexture(){return this._depthTexture}setSize(A,t,e=1){if(this.width!==A||this.height!==t||this.depth!==e){this.width=A,this.height=t,this.depth=e;for(let i=0,s=this.textures.length;i<s;i++)this.textures[i].image.width=A,this.textures[i].image.height=t,this.textures[i].image.depth=e;this.dispose()}this.viewport.set(0,0,A,t),this.scissor.set(0,0,A,t)}clone(){return new this.constructor().copy(this)}copy(A){this.width=A.width,this.height=A.height,this.depth=A.depth,this.scissor.copy(A.scissor),this.scissorTest=A.scissorTest,this.viewport.copy(A.viewport),this.textures.length=0;for(let e=0,i=A.textures.length;e<i;e++)this.textures[e]=A.textures[e].clone(),this.textures[e].isRenderTargetTexture=!0,this.textures[e].renderTarget=this;const t=Object.assign({},A.texture.image);return this.texture.source=new gn(t),this.depthBuffer=A.depthBuffer,this.stencilBuffer=A.stencilBuffer,this.resolveDepthBuffer=A.resolveDepthBuffer,this.resolveStencilBuffer=A.resolveStencilBuffer,A.depthTexture!==null&&(this.depthTexture=A.depthTexture.clone()),this.samples=A.samples,this}dispose(){this.dispatchEvent({type:"dispose"})}}class Aa extends $r{constructor(A=1,t=1,e={}){super(A,t,e),this.isWebGLRenderTarget=!0}}class Et extends jA{constructor(A=null,t=1,e=1,i=1){super(null),this.isDataArrayTexture=!0,this.image={data:A,width:t,height:e,depth:i},this.magFilter=Ct,this.minFilter=Ct,this.wrapR=ce,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1,this.layerUpdates=new Set}addLayerUpdate(A){this.layerUpdates.add(A)}clearLayerUpdates(){this.layerUpdates.clear()}}class In extends Aa{constructor(A=1,t=1,e=1,i={}){super(A,t,i),this.isWebGLArrayRenderTarget=!0,this.depth=e,this.texture=new Et(null,A,t,e),this.texture.isRenderTargetTexture=!0}}class oA{constructor(A=0,t=0,e=0,i=1){this.isQuaternion=!0,this._x=A,this._y=t,this._z=e,this._w=i}static slerpFlat(A,t,e,i,s,r,a){let o=e[i+0],g=e[i+1],I=e[i+2],h=e[i+3];const B=s[r+0],Q=s[r+1],c=s[r+2],C=s[r+3];if(a===0){A[t+0]=o,A[t+1]=g,A[t+2]=I,A[t+3]=h;return}if(a===1){A[t+0]=B,A[t+1]=Q,A[t+2]=c,A[t+3]=C;return}if(h!==C||o!==B||g!==Q||I!==c){let l=1-a;const E=o*B+g*Q+I*c+h*C,u=E>=0?1:-1,d=1-E*E;if(d>Number.EPSILON){const w=Math.sqrt(d),x=Math.atan2(w,E*u);l=Math.sin(l*x)/w,a=Math.sin(a*x)/w}const y=a*u;if(o=o*l+B*y,g=g*l+Q*y,I=I*l+c*y,h=h*l+C*y,l===1-a){const w=1/Math.sqrt(o*o+g*g+I*I+h*h);o*=w,g*=w,I*=w,h*=w}}A[t]=o,A[t+1]=g,A[t+2]=I,A[t+3]=h}static multiplyQuaternionsFlat(A,t,e,i,s,r){const a=e[i],o=e[i+1],g=e[i+2],I=e[i+3],h=s[r],B=s[r+1],Q=s[r+2],c=s[r+3];return A[t]=a*c+I*h+o*Q-g*B,A[t+1]=o*c+I*B+g*h-a*Q,A[t+2]=g*c+I*Q+a*B-o*h,A[t+3]=I*c-a*h-o*B-g*Q,A}get x(){return this._x}set x(A){this._x=A,this._onChangeCallback()}get y(){return this._y}set y(A){this._y=A,this._onChangeCallback()}get z(){return this._z}set z(A){this._z=A,this._onChangeCallback()}get w(){return this._w}set w(A){this._w=A,this._onChangeCallback()}set(A,t,e,i){return this._x=A,this._y=t,this._z=e,this._w=i,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(A){return this._x=A.x,this._y=A.y,this._z=A.z,this._w=A.w,this._onChangeCallback(),this}setFromEuler(A,t=!0){const e=A._x,i=A._y,s=A._z,r=A._order,a=Math.cos,o=Math.sin,g=a(e/2),I=a(i/2),h=a(s/2),B=o(e/2),Q=o(i/2),c=o(s/2);switch(r){case"XYZ":this._x=B*I*h+g*Q*c,this._y=g*Q*h-B*I*c,this._z=g*I*c+B*Q*h,this._w=g*I*h-B*Q*c;break;case"YXZ":this._x=B*I*h+g*Q*c,this._y=g*Q*h-B*I*c,this._z=g*I*c-B*Q*h,this._w=g*I*h+B*Q*c;break;case"ZXY":this._x=B*I*h-g*Q*c,this._y=g*Q*h+B*I*c,this._z=g*I*c+B*Q*h,this._w=g*I*h-B*Q*c;break;case"ZYX":this._x=B*I*h-g*Q*c,this._y=g*Q*h+B*I*c,this._z=g*I*c-B*Q*h,this._w=g*I*h+B*Q*c;break;case"YZX":this._x=B*I*h+g*Q*c,this._y=g*Q*h+B*I*c,this._z=g*I*c-B*Q*h,this._w=g*I*h-B*Q*c;break;case"XZY":this._x=B*I*h-g*Q*c,this._y=g*Q*h-B*I*c,this._z=g*I*c+B*Q*h,this._w=g*I*h+B*Q*c;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+r)}return t===!0&&this._onChangeCallback(),this}setFromAxisAngle(A,t){const e=t/2,i=Math.sin(e);return this._x=A.x*i,this._y=A.y*i,this._z=A.z*i,this._w=Math.cos(e),this._onChangeCallback(),this}setFromRotationMatrix(A){const t=A.elements,e=t[0],i=t[4],s=t[8],r=t[1],a=t[5],o=t[9],g=t[2],I=t[6],h=t[10],B=e+a+h;if(B>0){const Q=.5/Math.sqrt(B+1);this._w=.25/Q,this._x=(I-o)*Q,this._y=(s-g)*Q,this._z=(r-i)*Q}else if(e>a&&e>h){const Q=2*Math.sqrt(1+e-a-h);this._w=(I-o)/Q,this._x=.25*Q,this._y=(i+r)/Q,this._z=(s+g)/Q}else if(a>h){const Q=2*Math.sqrt(1+a-e-h);this._w=(s-g)/Q,this._x=(i+r)/Q,this._y=.25*Q,this._z=(o+I)/Q}else{const Q=2*Math.sqrt(1+h-e-a);this._w=(r-i)/Q,this._x=(s+g)/Q,this._y=(o+I)/Q,this._z=.25*Q}return this._onChangeCallback(),this}setFromUnitVectors(A,t){let e=A.dot(t)+1;return e<Number.EPSILON?(e=0,Math.abs(A.x)>Math.abs(A.z)?(this._x=-A.y,this._y=A.x,this._z=0,this._w=e):(this._x=0,this._y=-A.z,this._z=A.y,this._w=e)):(this._x=A.y*t.z-A.z*t.y,this._y=A.z*t.x-A.x*t.z,this._z=A.x*t.y-A.y*t.x,this._w=e),this.normalize()}angleTo(A){return 2*Math.acos(Math.abs(v(this.dot(A),-1,1)))}rotateTowards(A,t){const e=this.angleTo(A);if(e===0)return this;const i=Math.min(1,t/e);return this.slerp(A,i),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(A){return this._x*A._x+this._y*A._y+this._z*A._z+this._w*A._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let A=this.length();return A===0?(this._x=0,this._y=0,this._z=0,this._w=1):(A=1/A,this._x=this._x*A,this._y=this._y*A,this._z=this._z*A,this._w=this._w*A),this._onChangeCallback(),this}multiply(A){return this.multiplyQuaternions(this,A)}premultiply(A){return this.multiplyQuaternions(A,this)}multiplyQuaternions(A,t){const e=A._x,i=A._y,s=A._z,r=A._w,a=t._x,o=t._y,g=t._z,I=t._w;return this._x=e*I+r*a+i*g-s*o,this._y=i*I+r*o+s*a-e*g,this._z=s*I+r*g+e*o-i*a,this._w=r*I-e*a-i*o-s*g,this._onChangeCallback(),this}slerp(A,t){if(t===0)return this;if(t===1)return this.copy(A);const e=this._x,i=this._y,s=this._z,r=this._w;let a=r*A._w+e*A._x+i*A._y+s*A._z;if(a<0?(this._w=-A._w,this._x=-A._x,this._y=-A._y,this._z=-A._z,a=-a):this.copy(A),a>=1)return this._w=r,this._x=e,this._y=i,this._z=s,this;const o=1-a*a;if(o<=Number.EPSILON){const Q=1-t;return this._w=Q*r+t*this._w,this._x=Q*e+t*this._x,this._y=Q*i+t*this._y,this._z=Q*s+t*this._z,this.normalize(),this}const g=Math.sqrt(o),I=Math.atan2(g,a),h=Math.sin((1-t)*I)/g,B=Math.sin(t*I)/g;return this._w=r*h+this._w*B,this._x=e*h+this._x*B,this._y=i*h+this._y*B,this._z=s*h+this._z*B,this._onChangeCallback(),this}slerpQuaternions(A,t,e){return this.copy(A).slerp(t,e)}random(){const A=2*Math.PI*Math.random(),t=2*Math.PI*Math.random(),e=Math.random(),i=Math.sqrt(1-e),s=Math.sqrt(e);return this.set(i*Math.sin(A),i*Math.cos(A),s*Math.sin(t),s*Math.cos(t))}equals(A){return A._x===this._x&&A._y===this._y&&A._z===this._z&&A._w===this._w}fromArray(A,t=0){return this._x=A[t],this._y=A[t+1],this._z=A[t+2],this._w=A[t+3],this._onChangeCallback(),this}toArray(A=[],t=0){return A[t]=this._x,A[t+1]=this._y,A[t+2]=this._z,A[t+3]=this._w,A}fromBufferAttribute(A,t){return this._x=A.getX(t),this._y=A.getY(t),this._z=A.getZ(t),this._w=A.getW(t),this._onChangeCallback(),this}toJSON(){return this.toArray()}_onChange(A){return this._onChangeCallback=A,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._w}}class f{constructor(A=0,t=0,e=0){f.prototype.isVector3=!0,this.x=A,this.y=t,this.z=e}set(A,t,e){return e===void 0&&(e=this.z),this.x=A,this.y=t,this.z=e,this}setScalar(A){return this.x=A,this.y=A,this.z=A,this}setX(A){return this.x=A,this}setY(A){return this.y=A,this}setZ(A){return this.z=A,this}setComponent(A,t){switch(A){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;default:throw new Error("index is out of range: "+A)}return this}getComponent(A){switch(A){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+A)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(A){return this.x=A.x,this.y=A.y,this.z=A.z,this}add(A){return this.x+=A.x,this.y+=A.y,this.z+=A.z,this}addScalar(A){return this.x+=A,this.y+=A,this.z+=A,this}addVectors(A,t){return this.x=A.x+t.x,this.y=A.y+t.y,this.z=A.z+t.z,this}addScaledVector(A,t){return this.x+=A.x*t,this.y+=A.y*t,this.z+=A.z*t,this}sub(A){return this.x-=A.x,this.y-=A.y,this.z-=A.z,this}subScalar(A){return this.x-=A,this.y-=A,this.z-=A,this}subVectors(A,t){return this.x=A.x-t.x,this.y=A.y-t.y,this.z=A.z-t.z,this}multiply(A){return this.x*=A.x,this.y*=A.y,this.z*=A.z,this}multiplyScalar(A){return this.x*=A,this.y*=A,this.z*=A,this}multiplyVectors(A,t){return this.x=A.x*t.x,this.y=A.y*t.y,this.z=A.z*t.z,this}applyEuler(A){return this.applyQuaternion(hn.setFromEuler(A))}applyAxisAngle(A,t){return this.applyQuaternion(hn.setFromAxisAngle(A,t))}applyMatrix3(A){const t=this.x,e=this.y,i=this.z,s=A.elements;return this.x=s[0]*t+s[3]*e+s[6]*i,this.y=s[1]*t+s[4]*e+s[7]*i,this.z=s[2]*t+s[5]*e+s[8]*i,this}applyNormalMatrix(A){return this.applyMatrix3(A).normalize()}applyMatrix4(A){const t=this.x,e=this.y,i=this.z,s=A.elements,r=1/(s[3]*t+s[7]*e+s[11]*i+s[15]);return this.x=(s[0]*t+s[4]*e+s[8]*i+s[12])*r,this.y=(s[1]*t+s[5]*e+s[9]*i+s[13])*r,this.z=(s[2]*t+s[6]*e+s[10]*i+s[14])*r,this}applyQuaternion(A){const t=this.x,e=this.y,i=this.z,s=A.x,r=A.y,a=A.z,o=A.w,g=2*(r*i-a*e),I=2*(a*t-s*i),h=2*(s*e-r*t);return this.x=t+o*g+r*h-a*I,this.y=e+o*I+a*g-s*h,this.z=i+o*h+s*I-r*g,this}project(A){return this.applyMatrix4(A.matrixWorldInverse).applyMatrix4(A.projectionMatrix)}unproject(A){return this.applyMatrix4(A.projectionMatrixInverse).applyMatrix4(A.matrixWorld)}transformDirection(A){const t=this.x,e=this.y,i=this.z,s=A.elements;return this.x=s[0]*t+s[4]*e+s[8]*i,this.y=s[1]*t+s[5]*e+s[9]*i,this.z=s[2]*t+s[6]*e+s[10]*i,this.normalize()}divide(A){return this.x/=A.x,this.y/=A.y,this.z/=A.z,this}divideScalar(A){return this.multiplyScalar(1/A)}min(A){return this.x=Math.min(this.x,A.x),this.y=Math.min(this.y,A.y),this.z=Math.min(this.z,A.z),this}max(A){return this.x=Math.max(this.x,A.x),this.y=Math.max(this.y,A.y),this.z=Math.max(this.z,A.z),this}clamp(A,t){return this.x=v(this.x,A.x,t.x),this.y=v(this.y,A.y,t.y),this.z=v(this.z,A.z,t.z),this}clampScalar(A,t){return this.x=v(this.x,A,t),this.y=v(this.y,A,t),this.z=v(this.z,A,t),this}clampLength(A,t){const e=this.length();return this.divideScalar(e||1).multiplyScalar(v(e,A,t))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(A){return this.x*A.x+this.y*A.y+this.z*A.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(A){return this.normalize().multiplyScalar(A)}lerp(A,t){return this.x+=(A.x-this.x)*t,this.y+=(A.y-this.y)*t,this.z+=(A.z-this.z)*t,this}lerpVectors(A,t,e){return this.x=A.x+(t.x-A.x)*e,this.y=A.y+(t.y-A.y)*e,this.z=A.z+(t.z-A.z)*e,this}cross(A){return this.crossVectors(this,A)}crossVectors(A,t){const e=A.x,i=A.y,s=A.z,r=t.x,a=t.y,o=t.z;return this.x=i*o-s*a,this.y=s*r-e*o,this.z=e*a-i*r,this}projectOnVector(A){const t=A.lengthSq();if(t===0)return this.set(0,0,0);const e=A.dot(this)/t;return this.copy(A).multiplyScalar(e)}projectOnPlane(A){return Ji.copy(this).projectOnVector(A),this.sub(Ji)}reflect(A){return this.sub(Ji.copy(A).multiplyScalar(2*this.dot(A)))}angleTo(A){const t=Math.sqrt(this.lengthSq()*A.lengthSq());if(t===0)return Math.PI/2;const e=this.dot(A)/t;return Math.acos(v(e,-1,1))}distanceTo(A){return Math.sqrt(this.distanceToSquared(A))}distanceToSquared(A){const t=this.x-A.x,e=this.y-A.y,i=this.z-A.z;return t*t+e*e+i*i}manhattanDistanceTo(A){return Math.abs(this.x-A.x)+Math.abs(this.y-A.y)+Math.abs(this.z-A.z)}setFromSpherical(A){return this.setFromSphericalCoords(A.radius,A.phi,A.theta)}setFromSphericalCoords(A,t,e){const i=Math.sin(t)*A;return this.x=i*Math.sin(e),this.y=Math.cos(t)*A,this.z=i*Math.cos(e),this}setFromCylindrical(A){return this.setFromCylindricalCoords(A.radius,A.theta,A.y)}setFromCylindricalCoords(A,t,e){return this.x=A*Math.sin(t),this.y=e,this.z=A*Math.cos(t),this}setFromMatrixPosition(A){const t=A.elements;return this.x=t[12],this.y=t[13],this.z=t[14],this}setFromMatrixScale(A){const t=this.setFromMatrixColumn(A,0).length(),e=this.setFromMatrixColumn(A,1).length(),i=this.setFromMatrixColumn(A,2).length();return this.x=t,this.y=e,this.z=i,this}setFromMatrixColumn(A,t){return this.fromArray(A.elements,t*4)}setFromMatrix3Column(A,t){return this.fromArray(A.elements,t*3)}setFromEuler(A){return this.x=A._x,this.y=A._y,this.z=A._z,this}setFromColor(A){return this.x=A.r,this.y=A.g,this.z=A.b,this}equals(A){return A.x===this.x&&A.y===this.y&&A.z===this.z}fromArray(A,t=0){return this.x=A[t],this.y=A[t+1],this.z=A[t+2],this}toArray(A=[],t=0){return A[t]=this.x,A[t+1]=this.y,A[t+2]=this.z,A}fromBufferAttribute(A,t){return this.x=A.getX(t),this.y=A.getY(t),this.z=A.getZ(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}randomDirection(){const A=Math.random()*Math.PI*2,t=Math.random()*2-1,e=Math.sqrt(1-t*t);return this.x=e*Math.cos(A),this.y=t,this.z=e*Math.sin(A),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z}}const Ji=new f,hn=new oA;class zt{constructor(A=new f(1/0,1/0,1/0),t=new f(-1/0,-1/0,-1/0)){this.isBox3=!0,this.min=A,this.max=t}set(A,t){return this.min.copy(A),this.max.copy(t),this}setFromArray(A){this.makeEmpty();for(let t=0,e=A.length;t<e;t+=3)this.expandByPoint(qA.fromArray(A,t));return this}setFromBufferAttribute(A){this.makeEmpty();for(let t=0,e=A.count;t<e;t++)this.expandByPoint(qA.fromBufferAttribute(A,t));return this}setFromPoints(A){this.makeEmpty();for(let t=0,e=A.length;t<e;t++)this.expandByPoint(A[t]);return this}setFromCenterAndSize(A,t){const e=qA.copy(t).multiplyScalar(.5);return this.min.copy(A).sub(e),this.max.copy(A).add(e),this}setFromObject(A,t=!1){return this.makeEmpty(),this.expandByObject(A,t)}clone(){return new this.constructor().copy(this)}copy(A){return this.min.copy(A.min),this.max.copy(A.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(A){return this.isEmpty()?A.set(0,0,0):A.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(A){return this.isEmpty()?A.set(0,0,0):A.subVectors(this.max,this.min)}expandByPoint(A){return this.min.min(A),this.max.max(A),this}expandByVector(A){return this.min.sub(A),this.max.add(A),this}expandByScalar(A){return this.min.addScalar(-A),this.max.addScalar(A),this}expandByObject(A,t=!1){A.updateWorldMatrix(!1,!1);const e=A.geometry;if(e!==void 0){const s=e.getAttribute("position");if(t===!0&&s!==void 0&&A.isInstancedMesh!==!0)for(let r=0,a=s.count;r<a;r++)A.isMesh===!0?A.getVertexPosition(r,qA):qA.fromBufferAttribute(s,r),qA.applyMatrix4(A.matrixWorld),this.expandByPoint(qA);else A.boundingBox!==void 0?(A.boundingBox===null&&A.computeBoundingBox(),Te.copy(A.boundingBox)):(e.boundingBox===null&&e.computeBoundingBox(),Te.copy(e.boundingBox)),Te.applyMatrix4(A.matrixWorld),this.union(Te)}const i=A.children;for(let s=0,r=i.length;s<r;s++)this.expandByObject(i[s],t);return this}containsPoint(A){return A.x>=this.min.x&&A.x<=this.max.x&&A.y>=this.min.y&&A.y<=this.max.y&&A.z>=this.min.z&&A.z<=this.max.z}containsBox(A){return this.min.x<=A.min.x&&A.max.x<=this.max.x&&this.min.y<=A.min.y&&A.max.y<=this.max.y&&this.min.z<=A.min.z&&A.max.z<=this.max.z}getParameter(A,t){return t.set((A.x-this.min.x)/(this.max.x-this.min.x),(A.y-this.min.y)/(this.max.y-this.min.y),(A.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(A){return A.max.x>=this.min.x&&A.min.x<=this.max.x&&A.max.y>=this.min.y&&A.min.y<=this.max.y&&A.max.z>=this.min.z&&A.min.z<=this.max.z}intersectsSphere(A){return this.clampPoint(A.center,qA),qA.distanceToSquared(A.center)<=A.radius*A.radius}intersectsPlane(A){let t,e;return A.normal.x>0?(t=A.normal.x*this.min.x,e=A.normal.x*this.max.x):(t=A.normal.x*this.max.x,e=A.normal.x*this.min.x),A.normal.y>0?(t+=A.normal.y*this.min.y,e+=A.normal.y*this.max.y):(t+=A.normal.y*this.max.y,e+=A.normal.y*this.min.y),A.normal.z>0?(t+=A.normal.z*this.min.z,e+=A.normal.z*this.max.z):(t+=A.normal.z*this.max.z,e+=A.normal.z*this.min.z),t<=-A.constant&&e>=-A.constant}intersectsTriangle(A){if(this.isEmpty())return!1;this.getCenter(de),ve.subVectors(this.max,de),Ht.subVectors(A.a,de),qt.subVectors(A.b,de),_t.subVectors(A.c,de),lt.subVectors(qt,Ht),ut.subVectors(_t,qt),St.subVectors(Ht,_t);let t=[0,-lt.z,lt.y,0,-ut.z,ut.y,0,-St.z,St.y,lt.z,0,-lt.x,ut.z,0,-ut.x,St.z,0,-St.x,-lt.y,lt.x,0,-ut.y,ut.x,0,-St.y,St.x,0];return!Ti(t,Ht,qt,_t,ve)||(t=[1,0,0,0,1,0,0,0,1],!Ti(t,Ht,qt,_t,ve))?!1:(ze.crossVectors(lt,ut),t=[ze.x,ze.y,ze.z],Ti(t,Ht,qt,_t,ve))}clampPoint(A,t){return t.copy(A).clamp(this.min,this.max)}distanceToPoint(A){return this.clampPoint(A,qA).distanceTo(A)}getBoundingSphere(A){return this.isEmpty()?A.makeEmpty():(this.getCenter(A.center),A.radius=this.getSize(qA).length()*.5),A}intersect(A){return this.min.max(A.min),this.max.min(A.max),this.isEmpty()&&this.makeEmpty(),this}union(A){return this.min.min(A.min),this.max.max(A.max),this}applyMatrix4(A){return this.isEmpty()?this:(et[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(A),et[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(A),et[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(A),et[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(A),et[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(A),et[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(A),et[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(A),et[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(A),this.setFromPoints(et),this)}translate(A){return this.min.add(A),this.max.add(A),this}equals(A){return A.min.equals(this.min)&&A.max.equals(this.max)}}const et=[new f,new f,new f,new f,new f,new f,new f,new f],qA=new f,Te=new zt,Ht=new f,qt=new f,_t=new f,lt=new f,ut=new f,St=new f,de=new f,ve=new f,ze=new f,Ft=new f;function Ti(n,A,t,e,i){for(let s=0,r=n.length-3;s<=r;s+=3){Ft.fromArray(n,s);const a=i.x*Math.abs(Ft.x)+i.y*Math.abs(Ft.y)+i.z*Math.abs(Ft.z),o=A.dot(Ft),g=t.dot(Ft),I=e.dot(Ft);if(Math.max(-Math.max(o,g,I),Math.min(o,g,I))>a)return!1}return!0}const ta=new zt,fe=new f,vi=new f;class Bn{constructor(A=new f,t=-1){this.isSphere=!0,this.center=A,this.radius=t}set(A,t){return this.center.copy(A),this.radius=t,this}setFromPoints(A,t){const e=this.center;t!==void 0?e.copy(t):ta.setFromPoints(A).getCenter(e);let i=0;for(let s=0,r=A.length;s<r;s++)i=Math.max(i,e.distanceToSquared(A[s]));return this.radius=Math.sqrt(i),this}copy(A){return this.center.copy(A.center),this.radius=A.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(A){return A.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(A){return A.distanceTo(this.center)-this.radius}intersectsSphere(A){const t=this.radius+A.radius;return A.center.distanceToSquared(this.center)<=t*t}intersectsBox(A){return A.intersectsSphere(this)}intersectsPlane(A){return Math.abs(A.distanceToPoint(this.center))<=this.radius}clampPoint(A,t){const e=this.center.distanceToSquared(A);return t.copy(A),e>this.radius*this.radius&&(t.sub(this.center).normalize(),t.multiplyScalar(this.radius).add(this.center)),t}getBoundingBox(A){return this.isEmpty()?(A.makeEmpty(),A):(A.set(this.center,this.center),A.expandByScalar(this.radius),A)}applyMatrix4(A){return this.center.applyMatrix4(A),this.radius=this.radius*A.getMaxScaleOnAxis(),this}translate(A){return this.center.add(A),this}expandByPoint(A){if(this.isEmpty())return this.center.copy(A),this.radius=0,this;fe.subVectors(A,this.center);const t=fe.lengthSq();if(t>this.radius*this.radius){const e=Math.sqrt(t),i=(e-this.radius)*.5;this.center.addScaledVector(fe,i/e),this.radius+=i}return this}union(A){return A.isEmpty()?this:this.isEmpty()?(this.copy(A),this):(this.center.equals(A.center)===!0?this.radius=Math.max(this.radius,A.radius):(vi.subVectors(A.center,this.center).setLength(A.radius),this.expandByPoint(fe.copy(A.center).add(vi)),this.expandByPoint(fe.copy(A.center).sub(vi))),this)}equals(A){return A.center.equals(this.center)&&A.radius===this.radius}clone(){return new this.constructor().copy(this)}}const it=new f,zi=new f,He=new f,dt=new f,Hi=new f,qe=new f,qi=new f;class ea{constructor(A=new f,t=new f(0,0,-1)){this.origin=A,this.direction=t}set(A,t){return this.origin.copy(A),this.direction.copy(t),this}copy(A){return this.origin.copy(A.origin),this.direction.copy(A.direction),this}at(A,t){return t.copy(this.origin).addScaledVector(this.direction,A)}lookAt(A){return this.direction.copy(A).sub(this.origin).normalize(),this}recast(A){return this.origin.copy(this.at(A,it)),this}closestPointToPoint(A,t){t.subVectors(A,this.origin);const e=t.dot(this.direction);return e<0?t.copy(this.origin):t.copy(this.origin).addScaledVector(this.direction,e)}distanceToPoint(A){return Math.sqrt(this.distanceSqToPoint(A))}distanceSqToPoint(A){const t=it.subVectors(A,this.origin).dot(this.direction);return t<0?this.origin.distanceToSquared(A):(it.copy(this.origin).addScaledVector(this.direction,t),it.distanceToSquared(A))}distanceSqToSegment(A,t,e,i){zi.copy(A).add(t).multiplyScalar(.5),He.copy(t).sub(A).normalize(),dt.copy(this.origin).sub(zi);const s=A.distanceTo(t)*.5,r=-this.direction.dot(He),a=dt.dot(this.direction),o=-dt.dot(He),g=dt.lengthSq(),I=Math.abs(1-r*r);let h,B,Q,c;if(I>0)if(h=r*o-a,B=r*a-o,c=s*I,h>=0)if(B>=-c)if(B<=c){const C=1/I;h*=C,B*=C,Q=h*(h+r*B+2*a)+B*(r*h+B+2*o)+g}else B=s,h=Math.max(0,-(r*B+a)),Q=-h*h+B*(B+2*o)+g;else B=-s,h=Math.max(0,-(r*B+a)),Q=-h*h+B*(B+2*o)+g;else B<=-c?(h=Math.max(0,-(-r*s+a)),B=h>0?-s:Math.min(Math.max(-s,-o),s),Q=-h*h+B*(B+2*o)+g):B<=c?(h=0,B=Math.min(Math.max(-s,-o),s),Q=B*(B+2*o)+g):(h=Math.max(0,-(r*s+a)),B=h>0?s:Math.min(Math.max(-s,-o),s),Q=-h*h+B*(B+2*o)+g);else B=r>0?-s:s,h=Math.max(0,-(r*B+a)),Q=-h*h+B*(B+2*o)+g;return e&&e.copy(this.origin).addScaledVector(this.direction,h),i&&i.copy(zi).addScaledVector(He,B),Q}intersectSphere(A,t){it.subVectors(A.center,this.origin);const e=it.dot(this.direction),i=it.dot(it)-e*e,s=A.radius*A.radius;if(i>s)return null;const r=Math.sqrt(s-i),a=e-r,o=e+r;return o<0?null:a<0?this.at(o,t):this.at(a,t)}intersectsSphere(A){return this.distanceSqToPoint(A.center)<=A.radius*A.radius}distanceToPlane(A){const t=A.normal.dot(this.direction);if(t===0)return A.distanceToPoint(this.origin)===0?0:null;const e=-(this.origin.dot(A.normal)+A.constant)/t;return e>=0?e:null}intersectPlane(A,t){const e=this.distanceToPlane(A);return e===null?null:this.at(e,t)}intersectsPlane(A){const t=A.distanceToPoint(this.origin);return t===0||A.normal.dot(this.direction)*t<0}intersectBox(A,t){let e,i,s,r,a,o;const g=1/this.direction.x,I=1/this.direction.y,h=1/this.direction.z,B=this.origin;return g>=0?(e=(A.min.x-B.x)*g,i=(A.max.x-B.x)*g):(e=(A.max.x-B.x)*g,i=(A.min.x-B.x)*g),I>=0?(s=(A.min.y-B.y)*I,r=(A.max.y-B.y)*I):(s=(A.max.y-B.y)*I,r=(A.min.y-B.y)*I),e>r||s>i||((s>e||isNaN(e))&&(e=s),(r<i||isNaN(i))&&(i=r),h>=0?(a=(A.min.z-B.z)*h,o=(A.max.z-B.z)*h):(a=(A.max.z-B.z)*h,o=(A.min.z-B.z)*h),e>o||a>i)||((a>e||e!==e)&&(e=a),(o<i||i!==i)&&(i=o),i<0)?null:this.at(e>=0?e:i,t)}intersectsBox(A){return this.intersectBox(A,it)!==null}intersectTriangle(A,t,e,i,s){Hi.subVectors(t,A),qe.subVectors(e,A),qi.crossVectors(Hi,qe);let r=this.direction.dot(qi),a;if(r>0){if(i)return null;a=1}else if(r<0)a=-1,r=-r;else return null;dt.subVectors(this.origin,A);const o=a*this.direction.dot(qe.crossVectors(dt,qe));if(o<0)return null;const g=a*this.direction.dot(Hi.cross(dt));if(g<0||o+g>r)return null;const I=-a*dt.dot(qi);return I<0?null:this.at(I/r,s)}applyMatrix4(A){return this.origin.applyMatrix4(A),this.direction.transformDirection(A),this}equals(A){return A.origin.equals(this.origin)&&A.direction.equals(this.direction)}clone(){return new this.constructor().copy(this)}}class EA{constructor(A,t,e,i,s,r,a,o,g,I,h,B,Q,c,C,l){EA.prototype.isMatrix4=!0,this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],A!==void 0&&this.set(A,t,e,i,s,r,a,o,g,I,h,B,Q,c,C,l)}set(A,t,e,i,s,r,a,o,g,I,h,B,Q,c,C,l){const E=this.elements;return E[0]=A,E[4]=t,E[8]=e,E[12]=i,E[1]=s,E[5]=r,E[9]=a,E[13]=o,E[2]=g,E[6]=I,E[10]=h,E[14]=B,E[3]=Q,E[7]=c,E[11]=C,E[15]=l,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return new EA().fromArray(this.elements)}copy(A){const t=this.elements,e=A.elements;return t[0]=e[0],t[1]=e[1],t[2]=e[2],t[3]=e[3],t[4]=e[4],t[5]=e[5],t[6]=e[6],t[7]=e[7],t[8]=e[8],t[9]=e[9],t[10]=e[10],t[11]=e[11],t[12]=e[12],t[13]=e[13],t[14]=e[14],t[15]=e[15],this}copyPosition(A){const t=this.elements,e=A.elements;return t[12]=e[12],t[13]=e[13],t[14]=e[14],this}setFromMatrix3(A){const t=A.elements;return this.set(t[0],t[3],t[6],0,t[1],t[4],t[7],0,t[2],t[5],t[8],0,0,0,0,1),this}extractBasis(A,t,e){return A.setFromMatrixColumn(this,0),t.setFromMatrixColumn(this,1),e.setFromMatrixColumn(this,2),this}makeBasis(A,t,e){return this.set(A.x,t.x,e.x,0,A.y,t.y,e.y,0,A.z,t.z,e.z,0,0,0,0,1),this}extractRotation(A){const t=this.elements,e=A.elements,i=1/Kt.setFromMatrixColumn(A,0).length(),s=1/Kt.setFromMatrixColumn(A,1).length(),r=1/Kt.setFromMatrixColumn(A,2).length();return t[0]=e[0]*i,t[1]=e[1]*i,t[2]=e[2]*i,t[3]=0,t[4]=e[4]*s,t[5]=e[5]*s,t[6]=e[6]*s,t[7]=0,t[8]=e[8]*r,t[9]=e[9]*r,t[10]=e[10]*r,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromEuler(A){const t=this.elements,e=A.x,i=A.y,s=A.z,r=Math.cos(e),a=Math.sin(e),o=Math.cos(i),g=Math.sin(i),I=Math.cos(s),h=Math.sin(s);if(A.order==="XYZ"){const B=r*I,Q=r*h,c=a*I,C=a*h;t[0]=o*I,t[4]=-o*h,t[8]=g,t[1]=Q+c*g,t[5]=B-C*g,t[9]=-a*o,t[2]=C-B*g,t[6]=c+Q*g,t[10]=r*o}else if(A.order==="YXZ"){const B=o*I,Q=o*h,c=g*I,C=g*h;t[0]=B+C*a,t[4]=c*a-Q,t[8]=r*g,t[1]=r*h,t[5]=r*I,t[9]=-a,t[2]=Q*a-c,t[6]=C+B*a,t[10]=r*o}else if(A.order==="ZXY"){const B=o*I,Q=o*h,c=g*I,C=g*h;t[0]=B-C*a,t[4]=-r*h,t[8]=c+Q*a,t[1]=Q+c*a,t[5]=r*I,t[9]=C-B*a,t[2]=-r*g,t[6]=a,t[10]=r*o}else if(A.order==="ZYX"){const B=r*I,Q=r*h,c=a*I,C=a*h;t[0]=o*I,t[4]=c*g-Q,t[8]=B*g+C,t[1]=o*h,t[5]=C*g+B,t[9]=Q*g-c,t[2]=-g,t[6]=a*o,t[10]=r*o}else if(A.order==="YZX"){const B=r*o,Q=r*g,c=a*o,C=a*g;t[0]=o*I,t[4]=C-B*h,t[8]=c*h+Q,t[1]=h,t[5]=r*I,t[9]=-a*I,t[2]=-g*I,t[6]=Q*h+c,t[10]=B-C*h}else if(A.order==="XZY"){const B=r*o,Q=r*g,c=a*o,C=a*g;t[0]=o*I,t[4]=-h,t[8]=g*I,t[1]=B*h+C,t[5]=r*I,t[9]=Q*h-c,t[2]=c*h-Q,t[6]=a*I,t[10]=C*h+B}return t[3]=0,t[7]=0,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromQuaternion(A){return this.compose(ia,A,sa)}lookAt(A,t,e){const i=this.elements;return NA.subVectors(A,t),NA.lengthSq()===0&&(NA.z=1),NA.normalize(),ft.crossVectors(e,NA),ft.lengthSq()===0&&(Math.abs(e.z)===1?NA.x+=1e-4:NA.z+=1e-4,NA.normalize(),ft.crossVectors(e,NA)),ft.normalize(),_e.crossVectors(NA,ft),i[0]=ft.x,i[4]=_e.x,i[8]=NA.x,i[1]=ft.y,i[5]=_e.y,i[9]=NA.y,i[2]=ft.z,i[6]=_e.z,i[10]=NA.z,this}multiply(A){return this.multiplyMatrices(this,A)}premultiply(A){return this.multiplyMatrices(A,this)}multiplyMatrices(A,t){const e=A.elements,i=t.elements,s=this.elements,r=e[0],a=e[4],o=e[8],g=e[12],I=e[1],h=e[5],B=e[9],Q=e[13],c=e[2],C=e[6],l=e[10],E=e[14],u=e[3],d=e[7],y=e[11],w=e[15],x=i[0],M=i[4],p=i[8],m=i[12],F=i[1],D=i[5],S=i[9],N=i[13],k=i[2],G=i[6],R=i[10],U=i[14],P=i[3],K=i[7],j=i[11],W=i[15];return s[0]=r*x+a*F+o*k+g*P,s[4]=r*M+a*D+o*G+g*K,s[8]=r*p+a*S+o*R+g*j,s[12]=r*m+a*N+o*U+g*W,s[1]=I*x+h*F+B*k+Q*P,s[5]=I*M+h*D+B*G+Q*K,s[9]=I*p+h*S+B*R+Q*j,s[13]=I*m+h*N+B*U+Q*W,s[2]=c*x+C*F+l*k+E*P,s[6]=c*M+C*D+l*G+E*K,s[10]=c*p+C*S+l*R+E*j,s[14]=c*m+C*N+l*U+E*W,s[3]=u*x+d*F+y*k+w*P,s[7]=u*M+d*D+y*G+w*K,s[11]=u*p+d*S+y*R+w*j,s[15]=u*m+d*N+y*U+w*W,this}multiplyScalar(A){const t=this.elements;return t[0]*=A,t[4]*=A,t[8]*=A,t[12]*=A,t[1]*=A,t[5]*=A,t[9]*=A,t[13]*=A,t[2]*=A,t[6]*=A,t[10]*=A,t[14]*=A,t[3]*=A,t[7]*=A,t[11]*=A,t[15]*=A,this}determinant(){const A=this.elements,t=A[0],e=A[4],i=A[8],s=A[12],r=A[1],a=A[5],o=A[9],g=A[13],I=A[2],h=A[6],B=A[10],Q=A[14],c=A[3],C=A[7],l=A[11],E=A[15];return c*(+s*o*h-i*g*h-s*a*B+e*g*B+i*a*Q-e*o*Q)+C*(+t*o*Q-t*g*B+s*r*B-i*r*Q+i*g*I-s*o*I)+l*(+t*g*h-t*a*Q-s*r*h+e*r*Q+s*a*I-e*g*I)+E*(-i*a*I-t*o*h+t*a*B+i*r*h-e*r*B+e*o*I)}transpose(){const A=this.elements;let t;return t=A[1],A[1]=A[4],A[4]=t,t=A[2],A[2]=A[8],A[8]=t,t=A[6],A[6]=A[9],A[9]=t,t=A[3],A[3]=A[12],A[12]=t,t=A[7],A[7]=A[13],A[13]=t,t=A[11],A[11]=A[14],A[14]=t,this}setPosition(A,t,e){const i=this.elements;return A.isVector3?(i[12]=A.x,i[13]=A.y,i[14]=A.z):(i[12]=A,i[13]=t,i[14]=e),this}invert(){const A=this.elements,t=A[0],e=A[1],i=A[2],s=A[3],r=A[4],a=A[5],o=A[6],g=A[7],I=A[8],h=A[9],B=A[10],Q=A[11],c=A[12],C=A[13],l=A[14],E=A[15],u=h*l*g-C*B*g+C*o*Q-a*l*Q-h*o*E+a*B*E,d=c*B*g-I*l*g-c*o*Q+r*l*Q+I*o*E-r*B*E,y=I*C*g-c*h*g+c*a*Q-r*C*Q-I*a*E+r*h*E,w=c*h*o-I*C*o-c*a*B+r*C*B+I*a*l-r*h*l,x=t*u+e*d+i*y+s*w;if(x===0)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const M=1/x;return A[0]=u*M,A[1]=(C*B*s-h*l*s-C*i*Q+e*l*Q+h*i*E-e*B*E)*M,A[2]=(a*l*s-C*o*s+C*i*g-e*l*g-a*i*E+e*o*E)*M,A[3]=(h*o*s-a*B*s-h*i*g+e*B*g+a*i*Q-e*o*Q)*M,A[4]=d*M,A[5]=(I*l*s-c*B*s+c*i*Q-t*l*Q-I*i*E+t*B*E)*M,A[6]=(c*o*s-r*l*s-c*i*g+t*l*g+r*i*E-t*o*E)*M,A[7]=(r*B*s-I*o*s+I*i*g-t*B*g-r*i*Q+t*o*Q)*M,A[8]=y*M,A[9]=(c*h*s-I*C*s-c*e*Q+t*C*Q+I*e*E-t*h*E)*M,A[10]=(r*C*s-c*a*s+c*e*g-t*C*g-r*e*E+t*a*E)*M,A[11]=(I*a*s-r*h*s-I*e*g+t*h*g+r*e*Q-t*a*Q)*M,A[12]=w*M,A[13]=(I*C*i-c*h*i+c*e*B-t*C*B-I*e*l+t*h*l)*M,A[14]=(c*a*i-r*C*i-c*e*o+t*C*o+r*e*l-t*a*l)*M,A[15]=(r*h*i-I*a*i+I*e*o-t*h*o-r*e*B+t*a*B)*M,this}scale(A){const t=this.elements,e=A.x,i=A.y,s=A.z;return t[0]*=e,t[4]*=i,t[8]*=s,t[1]*=e,t[5]*=i,t[9]*=s,t[2]*=e,t[6]*=i,t[10]*=s,t[3]*=e,t[7]*=i,t[11]*=s,this}getMaxScaleOnAxis(){const A=this.elements,t=A[0]*A[0]+A[1]*A[1]+A[2]*A[2],e=A[4]*A[4]+A[5]*A[5]+A[6]*A[6],i=A[8]*A[8]+A[9]*A[9]+A[10]*A[10];return Math.sqrt(Math.max(t,e,i))}makeTranslation(A,t,e){return A.isVector3?this.set(1,0,0,A.x,0,1,0,A.y,0,0,1,A.z,0,0,0,1):this.set(1,0,0,A,0,1,0,t,0,0,1,e,0,0,0,1),this}makeRotationX(A){const t=Math.cos(A),e=Math.sin(A);return this.set(1,0,0,0,0,t,-e,0,0,e,t,0,0,0,0,1),this}makeRotationY(A){const t=Math.cos(A),e=Math.sin(A);return this.set(t,0,e,0,0,1,0,0,-e,0,t,0,0,0,0,1),this}makeRotationZ(A){const t=Math.cos(A),e=Math.sin(A);return this.set(t,-e,0,0,e,t,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(A,t){const e=Math.cos(t),i=Math.sin(t),s=1-e,r=A.x,a=A.y,o=A.z,g=s*r,I=s*a;return this.set(g*r+e,g*a-i*o,g*o+i*a,0,g*a+i*o,I*a+e,I*o-i*r,0,g*o-i*a,I*o+i*r,s*o*o+e,0,0,0,0,1),this}makeScale(A,t,e){return this.set(A,0,0,0,0,t,0,0,0,0,e,0,0,0,0,1),this}makeShear(A,t,e,i,s,r){return this.set(1,e,s,0,A,1,r,0,t,i,1,0,0,0,0,1),this}compose(A,t,e){const i=this.elements,s=t._x,r=t._y,a=t._z,o=t._w,g=s+s,I=r+r,h=a+a,B=s*g,Q=s*I,c=s*h,C=r*I,l=r*h,E=a*h,u=o*g,d=o*I,y=o*h,w=e.x,x=e.y,M=e.z;return i[0]=(1-(C+E))*w,i[1]=(Q+y)*w,i[2]=(c-d)*w,i[3]=0,i[4]=(Q-y)*x,i[5]=(1-(B+E))*x,i[6]=(l+u)*x,i[7]=0,i[8]=(c+d)*M,i[9]=(l-u)*M,i[10]=(1-(B+C))*M,i[11]=0,i[12]=A.x,i[13]=A.y,i[14]=A.z,i[15]=1,this}decompose(A,t,e){const i=this.elements;let s=Kt.set(i[0],i[1],i[2]).length();const r=Kt.set(i[4],i[5],i[6]).length(),a=Kt.set(i[8],i[9],i[10]).length();this.determinant()<0&&(s=-s),A.x=i[12],A.y=i[13],A.z=i[14],_A.copy(this);const g=1/s,I=1/r,h=1/a;return _A.elements[0]*=g,_A.elements[1]*=g,_A.elements[2]*=g,_A.elements[4]*=I,_A.elements[5]*=I,_A.elements[6]*=I,_A.elements[8]*=h,_A.elements[9]*=h,_A.elements[10]*=h,t.setFromRotationMatrix(_A),e.x=s,e.y=r,e.z=a,this}makePerspective(A,t,e,i,s,r,a=Ce){const o=this.elements,g=2*s/(t-A),I=2*s/(e-i),h=(t+A)/(t-A),B=(e+i)/(e-i);let Q,c;if(a===Ce)Q=-(r+s)/(r-s),c=-2*r*s/(r-s);else if(a===nn)Q=-r/(r-s),c=-r*s/(r-s);else throw new Error("THREE.Matrix4.makePerspective(): Invalid coordinate system: "+a);return o[0]=g,o[4]=0,o[8]=h,o[12]=0,o[1]=0,o[5]=I,o[9]=B,o[13]=0,o[2]=0,o[6]=0,o[10]=Q,o[14]=c,o[3]=0,o[7]=0,o[11]=-1,o[15]=0,this}makeOrthographic(A,t,e,i,s,r,a=Ce){const o=this.elements,g=1/(t-A),I=1/(e-i),h=1/(r-s),B=(t+A)*g,Q=(e+i)*I;let c,C;if(a===Ce)c=(r+s)*h,C=-2*h;else if(a===nn)c=s*h,C=-1*h;else throw new Error("THREE.Matrix4.makeOrthographic(): Invalid coordinate system: "+a);return o[0]=2*g,o[4]=0,o[8]=0,o[12]=-B,o[1]=0,o[5]=2*I,o[9]=0,o[13]=-Q,o[2]=0,o[6]=0,o[10]=C,o[14]=-c,o[3]=0,o[7]=0,o[11]=0,o[15]=1,this}equals(A){const t=this.elements,e=A.elements;for(let i=0;i<16;i++)if(t[i]!==e[i])return!1;return!0}fromArray(A,t=0){for(let e=0;e<16;e++)this.elements[e]=A[e+t];return this}toArray(A=[],t=0){const e=this.elements;return A[t]=e[0],A[t+1]=e[1],A[t+2]=e[2],A[t+3]=e[3],A[t+4]=e[4],A[t+5]=e[5],A[t+6]=e[6],A[t+7]=e[7],A[t+8]=e[8],A[t+9]=e[9],A[t+10]=e[10],A[t+11]=e[11],A[t+12]=e[12],A[t+13]=e[13],A[t+14]=e[14],A[t+15]=e[15],A}}const Kt=new f,_A=new EA,ia=new f(0,0,0),sa=new f(1,1,1),ft=new f,_e=new f,NA=new f,Qn=new EA,cn=new oA;class Nt{constructor(A=0,t=0,e=0,i=Nt.DEFAULT_ORDER){this.isEuler=!0,this._x=A,this._y=t,this._z=e,this._order=i}get x(){return this._x}set x(A){this._x=A,this._onChangeCallback()}get y(){return this._y}set y(A){this._y=A,this._onChangeCallback()}get z(){return this._z}set z(A){this._z=A,this._onChangeCallback()}get order(){return this._order}set order(A){this._order=A,this._onChangeCallback()}set(A,t,e,i=this._order){return this._x=A,this._y=t,this._z=e,this._order=i,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(A){return this._x=A._x,this._y=A._y,this._z=A._z,this._order=A._order,this._onChangeCallback(),this}setFromRotationMatrix(A,t=this._order,e=!0){const i=A.elements,s=i[0],r=i[4],a=i[8],o=i[1],g=i[5],I=i[9],h=i[2],B=i[6],Q=i[10];switch(t){case"XYZ":this._y=Math.asin(v(a,-1,1)),Math.abs(a)<.9999999?(this._x=Math.atan2(-I,Q),this._z=Math.atan2(-r,s)):(this._x=Math.atan2(B,g),this._z=0);break;case"YXZ":this._x=Math.asin(-v(I,-1,1)),Math.abs(I)<.9999999?(this._y=Math.atan2(a,Q),this._z=Math.atan2(o,g)):(this._y=Math.atan2(-h,s),this._z=0);break;case"ZXY":this._x=Math.asin(v(B,-1,1)),Math.abs(B)<.9999999?(this._y=Math.atan2(-h,Q),this._z=Math.atan2(-r,g)):(this._y=0,this._z=Math.atan2(o,s));break;case"ZYX":this._y=Math.asin(-v(h,-1,1)),Math.abs(h)<.9999999?(this._x=Math.atan2(B,Q),this._z=Math.atan2(o,s)):(this._x=0,this._z=Math.atan2(-r,g));break;case"YZX":this._z=Math.asin(v(o,-1,1)),Math.abs(o)<.9999999?(this._x=Math.atan2(-I,g),this._y=Math.atan2(-h,s)):(this._x=0,this._y=Math.atan2(a,Q));break;case"XZY":this._z=Math.asin(-v(r,-1,1)),Math.abs(r)<.9999999?(this._x=Math.atan2(B,g),this._y=Math.atan2(a,s)):(this._x=Math.atan2(-I,Q),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+t)}return this._order=t,e===!0&&this._onChangeCallback(),this}setFromQuaternion(A,t,e){return Qn.makeRotationFromQuaternion(A),this.setFromRotationMatrix(Qn,t,e)}setFromVector3(A,t=this._order){return this.set(A.x,A.y,A.z,t)}reorder(A){return cn.setFromEuler(this),this.setFromQuaternion(cn,A)}equals(A){return A._x===this._x&&A._y===this._y&&A._z===this._z&&A._order===this._order}fromArray(A){return this._x=A[0],this._y=A[1],this._z=A[2],A[3]!==void 0&&(this._order=A[3]),this._onChangeCallback(),this}toArray(A=[],t=0){return A[t]=this._x,A[t+1]=this._y,A[t+2]=this._z,A[t+3]=this._order,A}_onChange(A){return this._onChangeCallback=A,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._order}}Nt.DEFAULT_ORDER="XYZ";class na{constructor(){this.mask=1}set(A){this.mask=(1<<A|0)>>>0}enable(A){this.mask|=1<<A|0}enableAll(){this.mask=-1}toggle(A){this.mask^=1<<A|0}disable(A){this.mask&=~(1<<A|0)}disableAll(){this.mask=0}test(A){return(this.mask&A.mask)!==0}isEnabled(A){return(this.mask&(1<<A|0))!==0}}let ra=0;const Cn=new f,Zt=new oA,st=new EA,Ke=new f,ye=new f,aa=new f,oa=new oA,En=new f(1,0,0),ln=new f(0,1,0),un=new f(0,0,1),dn={type:"added"},ga={type:"removed"},Ot={type:"childadded",child:null},_i={type:"childremoved",child:null};class DA extends Ee{constructor(){super(),this.isObject3D=!0,Object.defineProperty(this,"id",{value:ra++}),this.uuid=le(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=DA.DEFAULT_UP.clone();const A=new f,t=new Nt,e=new oA,i=new f(1,1,1);function s(){e.setFromEuler(t,!1)}function r(){t.setFromQuaternion(e,void 0,!1)}t._onChange(s),e._onChange(r),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:A},rotation:{configurable:!0,enumerable:!0,value:t},quaternion:{configurable:!0,enumerable:!0,value:e},scale:{configurable:!0,enumerable:!0,value:i},modelViewMatrix:{value:new EA},normalMatrix:{value:new XA}}),this.matrix=new EA,this.matrixWorld=new EA,this.matrixAutoUpdate=DA.DEFAULT_MATRIX_AUTO_UPDATE,this.matrixWorldAutoUpdate=DA.DEFAULT_MATRIX_WORLD_AUTO_UPDATE,this.matrixWorldNeedsUpdate=!1,this.layers=new na,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.userData={}}onBeforeShadow(){}onAfterShadow(){}onBeforeRender(){}onAfterRender(){}applyMatrix4(A){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(A),this.matrix.decompose(this.position,this.quaternion,this.scale)}applyQuaternion(A){return this.quaternion.premultiply(A),this}setRotationFromAxisAngle(A,t){this.quaternion.setFromAxisAngle(A,t)}setRotationFromEuler(A){this.quaternion.setFromEuler(A,!0)}setRotationFromMatrix(A){this.quaternion.setFromRotationMatrix(A)}setRotationFromQuaternion(A){this.quaternion.copy(A)}rotateOnAxis(A,t){return Zt.setFromAxisAngle(A,t),this.quaternion.multiply(Zt),this}rotateOnWorldAxis(A,t){return Zt.setFromAxisAngle(A,t),this.quaternion.premultiply(Zt),this}rotateX(A){return this.rotateOnAxis(En,A)}rotateY(A){return this.rotateOnAxis(ln,A)}rotateZ(A){return this.rotateOnAxis(un,A)}translateOnAxis(A,t){return Cn.copy(A).applyQuaternion(this.quaternion),this.position.add(Cn.multiplyScalar(t)),this}translateX(A){return this.translateOnAxis(En,A)}translateY(A){return this.translateOnAxis(ln,A)}translateZ(A){return this.translateOnAxis(un,A)}localToWorld(A){return this.updateWorldMatrix(!0,!1),A.applyMatrix4(this.matrixWorld)}worldToLocal(A){return this.updateWorldMatrix(!0,!1),A.applyMatrix4(st.copy(this.matrixWorld).invert())}lookAt(A,t,e){A.isVector3?Ke.copy(A):Ke.set(A,t,e);const i=this.parent;this.updateWorldMatrix(!0,!1),ye.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?st.lookAt(ye,Ke,this.up):st.lookAt(Ke,ye,this.up),this.quaternion.setFromRotationMatrix(st),i&&(st.extractRotation(i.matrixWorld),Zt.setFromRotationMatrix(st),this.quaternion.premultiply(Zt.invert()))}add(A){if(arguments.length>1){for(let t=0;t<arguments.length;t++)this.add(arguments[t]);return this}return A===this?(console.error("THREE.Object3D.add: object can\'t be added as a child of itself.",A),this):(A&&A.isObject3D?(A.removeFromParent(),A.parent=this,this.children.push(A),A.dispatchEvent(dn),Ot.child=A,this.dispatchEvent(Ot),Ot.child=null):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",A),this)}remove(A){if(arguments.length>1){for(let e=0;e<arguments.length;e++)this.remove(arguments[e]);return this}const t=this.children.indexOf(A);return t!==-1&&(A.parent=null,this.children.splice(t,1),A.dispatchEvent(ga),_i.child=A,this.dispatchEvent(_i),_i.child=null),this}removeFromParent(){const A=this.parent;return A!==null&&A.remove(this),this}clear(){return this.remove(...this.children)}attach(A){return this.updateWorldMatrix(!0,!1),st.copy(this.matrixWorld).invert(),A.parent!==null&&(A.parent.updateWorldMatrix(!0,!1),st.multiply(A.parent.matrixWorld)),A.applyMatrix4(st),A.removeFromParent(),A.parent=this,this.children.push(A),A.updateWorldMatrix(!1,!0),A.dispatchEvent(dn),Ot.child=A,this.dispatchEvent(Ot),Ot.child=null,this}getObjectById(A){return this.getObjectByProperty("id",A)}getObjectByName(A){return this.getObjectByProperty("name",A)}getObjectByProperty(A,t){if(this[A]===t)return this;for(let e=0,i=this.children.length;e<i;e++){const r=this.children[e].getObjectByProperty(A,t);if(r!==void 0)return r}}getObjectsByProperty(A,t,e=[]){this[A]===t&&e.push(this);const i=this.children;for(let s=0,r=i.length;s<r;s++)i[s].getObjectsByProperty(A,t,e);return e}getWorldPosition(A){return this.updateWorldMatrix(!0,!1),A.setFromMatrixPosition(this.matrixWorld)}getWorldQuaternion(A){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(ye,A,aa),A}getWorldScale(A){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(ye,oa,A),A}getWorldDirection(A){this.updateWorldMatrix(!0,!1);const t=this.matrixWorld.elements;return A.set(t[8],t[9],t[10]).normalize()}raycast(){}traverse(A){A(this);const t=this.children;for(let e=0,i=t.length;e<i;e++)t[e].traverse(A)}traverseVisible(A){if(this.visible===!1)return;A(this);const t=this.children;for(let e=0,i=t.length;e<i;e++)t[e].traverseVisible(A)}traverseAncestors(A){const t=this.parent;t!==null&&(A(t),t.traverseAncestors(A))}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}updateMatrixWorld(A){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||A)&&(this.matrixWorldAutoUpdate===!0&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix)),this.matrixWorldNeedsUpdate=!1,A=!0);const t=this.children;for(let e=0,i=t.length;e<i;e++)t[e].updateMatrixWorld(A)}updateWorldMatrix(A,t){const e=this.parent;if(A===!0&&e!==null&&e.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),this.matrixWorldAutoUpdate===!0&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix)),t===!0){const i=this.children;for(let s=0,r=i.length;s<r;s++)i[s].updateWorldMatrix(!1,!0)}}toJSON(A){const t=A===void 0||typeof A=="string",e={};t&&(A={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{},nodes:{}},e.metadata={version:4.6,type:"Object",generator:"Object3D.toJSON"});const i={};i.uuid=this.uuid,i.type=this.type,this.name!==""&&(i.name=this.name),this.castShadow===!0&&(i.castShadow=!0),this.receiveShadow===!0&&(i.receiveShadow=!0),this.visible===!1&&(i.visible=!1),this.frustumCulled===!1&&(i.frustumCulled=!1),this.renderOrder!==0&&(i.renderOrder=this.renderOrder),Object.keys(this.userData).length>0&&(i.userData=this.userData),i.layers=this.layers.mask,i.matrix=this.matrix.toArray(),i.up=this.up.toArray(),this.matrixAutoUpdate===!1&&(i.matrixAutoUpdate=!1),this.isInstancedMesh&&(i.type="InstancedMesh",i.count=this.count,i.instanceMatrix=this.instanceMatrix.toJSON(),this.instanceColor!==null&&(i.instanceColor=this.instanceColor.toJSON())),this.isBatchedMesh&&(i.type="BatchedMesh",i.perObjectFrustumCulled=this.perObjectFrustumCulled,i.sortObjects=this.sortObjects,i.drawRanges=this._drawRanges,i.reservedRanges=this._reservedRanges,i.visibility=this._visibility,i.active=this._active,i.bounds=this._bounds.map(a=>({boxInitialized:a.boxInitialized,boxMin:a.box.min.toArray(),boxMax:a.box.max.toArray(),sphereInitialized:a.sphereInitialized,sphereRadius:a.sphere.radius,sphereCenter:a.sphere.center.toArray()})),i.maxInstanceCount=this._maxInstanceCount,i.maxVertexCount=this._maxVertexCount,i.maxIndexCount=this._maxIndexCount,i.geometryInitialized=this._geometryInitialized,i.geometryCount=this._geometryCount,i.matricesTexture=this._matricesTexture.toJSON(A),this._colorsTexture!==null&&(i.colorsTexture=this._colorsTexture.toJSON(A)),this.boundingSphere!==null&&(i.boundingSphere={center:i.boundingSphere.center.toArray(),radius:i.boundingSphere.radius}),this.boundingBox!==null&&(i.boundingBox={min:i.boundingBox.min.toArray(),max:i.boundingBox.max.toArray()}));function s(a,o){return a[o.uuid]===void 0&&(a[o.uuid]=o.toJSON(A)),o.uuid}if(this.isScene)this.background&&(this.background.isColor?i.background=this.background.toJSON():this.background.isTexture&&(i.background=this.background.toJSON(A).uuid)),this.environment&&this.environment.isTexture&&this.environment.isRenderTargetTexture!==!0&&(i.environment=this.environment.toJSON(A).uuid);else if(this.isMesh||this.isLine||this.isPoints){i.geometry=s(A.geometries,this.geometry);const a=this.geometry.parameters;if(a!==void 0&&a.shapes!==void 0){const o=a.shapes;if(Array.isArray(o))for(let g=0,I=o.length;g<I;g++){const h=o[g];s(A.shapes,h)}else s(A.shapes,o)}}if(this.isSkinnedMesh&&(i.bindMode=this.bindMode,i.bindMatrix=this.bindMatrix.toArray(),this.skeleton!==void 0&&(s(A.skeletons,this.skeleton),i.skeleton=this.skeleton.uuid)),this.material!==void 0)if(Array.isArray(this.material)){const a=[];for(let o=0,g=this.material.length;o<g;o++)a.push(s(A.materials,this.material[o]));i.material=a}else i.material=s(A.materials,this.material);if(this.children.length>0){i.children=[];for(let a=0;a<this.children.length;a++)i.children.push(this.children[a].toJSON(A).object)}if(this.animations.length>0){i.animations=[];for(let a=0;a<this.animations.length;a++){const o=this.animations[a];i.animations.push(s(A.animations,o))}}if(t){const a=r(A.geometries),o=r(A.materials),g=r(A.textures),I=r(A.images),h=r(A.shapes),B=r(A.skeletons),Q=r(A.animations),c=r(A.nodes);a.length>0&&(e.geometries=a),o.length>0&&(e.materials=o),g.length>0&&(e.textures=g),I.length>0&&(e.images=I),h.length>0&&(e.shapes=h),B.length>0&&(e.skeletons=B),Q.length>0&&(e.animations=Q),c.length>0&&(e.nodes=c)}return e.object=i,e;function r(a){const o=[];for(const g in a){const I=a[g];delete I.metadata,o.push(I)}return o}}clone(A){return new this.constructor().copy(this,A)}copy(A,t=!0){if(this.name=A.name,this.up.copy(A.up),this.position.copy(A.position),this.rotation.order=A.rotation.order,this.quaternion.copy(A.quaternion),this.scale.copy(A.scale),this.matrix.copy(A.matrix),this.matrixWorld.copy(A.matrixWorld),this.matrixAutoUpdate=A.matrixAutoUpdate,this.matrixWorldAutoUpdate=A.matrixWorldAutoUpdate,this.matrixWorldNeedsUpdate=A.matrixWorldNeedsUpdate,this.layers.mask=A.layers.mask,this.visible=A.visible,this.castShadow=A.castShadow,this.receiveShadow=A.receiveShadow,this.frustumCulled=A.frustumCulled,this.renderOrder=A.renderOrder,this.animations=A.animations.slice(),this.userData=JSON.parse(JSON.stringify(A.userData)),t===!0)for(let e=0;e<A.children.length;e++){const i=A.children[e];this.add(i.clone())}return this}}DA.DEFAULT_UP=new f(0,1,0),DA.DEFAULT_MATRIX_AUTO_UPDATE=!0,DA.DEFAULT_MATRIX_WORLD_AUTO_UPDATE=!0;const KA=new f,nt=new f,Ki=new f,rt=new f,Vt=new f,Pt=new f,fn=new f,Zi=new f,Oi=new f,Vi=new f,Pi=new fA,Wi=new fA,Xi=new fA;class ZA{constructor(A=new f,t=new f,e=new f){this.a=A,this.b=t,this.c=e}static getNormal(A,t,e,i){i.subVectors(e,t),KA.subVectors(A,t),i.cross(KA);const s=i.lengthSq();return s>0?i.multiplyScalar(1/Math.sqrt(s)):i.set(0,0,0)}static getBarycoord(A,t,e,i,s){KA.subVectors(i,t),nt.subVectors(e,t),Ki.subVectors(A,t);const r=KA.dot(KA),a=KA.dot(nt),o=KA.dot(Ki),g=nt.dot(nt),I=nt.dot(Ki),h=r*g-a*a;if(h===0)return s.set(0,0,0),null;const B=1/h,Q=(g*o-a*I)*B,c=(r*I-a*o)*B;return s.set(1-Q-c,c,Q)}static containsPoint(A,t,e,i){return this.getBarycoord(A,t,e,i,rt)===null?!1:rt.x>=0&&rt.y>=0&&rt.x+rt.y<=1}static getInterpolation(A,t,e,i,s,r,a,o){return this.getBarycoord(A,t,e,i,rt)===null?(o.x=0,o.y=0,"z"in o&&(o.z=0),"w"in o&&(o.w=0),null):(o.setScalar(0),o.addScaledVector(s,rt.x),o.addScaledVector(r,rt.y),o.addScaledVector(a,rt.z),o)}static getInterpolatedAttribute(A,t,e,i,s,r){return Pi.setScalar(0),Wi.setScalar(0),Xi.setScalar(0),Pi.fromBufferAttribute(A,t),Wi.fromBufferAttribute(A,e),Xi.fromBufferAttribute(A,i),r.setScalar(0),r.addScaledVector(Pi,s.x),r.addScaledVector(Wi,s.y),r.addScaledVector(Xi,s.z),r}static isFrontFacing(A,t,e,i){return KA.subVectors(e,t),nt.subVectors(A,t),KA.cross(nt).dot(i)<0}set(A,t,e){return this.a.copy(A),this.b.copy(t),this.c.copy(e),this}setFromPointsAndIndices(A,t,e,i){return this.a.copy(A[t]),this.b.copy(A[e]),this.c.copy(A[i]),this}setFromAttributeAndIndices(A,t,e,i){return this.a.fromBufferAttribute(A,t),this.b.fromBufferAttribute(A,e),this.c.fromBufferAttribute(A,i),this}clone(){return new this.constructor().copy(this)}copy(A){return this.a.copy(A.a),this.b.copy(A.b),this.c.copy(A.c),this}getArea(){return KA.subVectors(this.c,this.b),nt.subVectors(this.a,this.b),KA.cross(nt).length()*.5}getMidpoint(A){return A.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(A){return ZA.getNormal(this.a,this.b,this.c,A)}getPlane(A){return A.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(A,t){return ZA.getBarycoord(A,this.a,this.b,this.c,t)}getInterpolation(A,t,e,i,s){return ZA.getInterpolation(A,this.a,this.b,this.c,t,e,i,s)}containsPoint(A){return ZA.containsPoint(A,this.a,this.b,this.c)}isFrontFacing(A){return ZA.isFrontFacing(this.a,this.b,this.c,A)}intersectsBox(A){return A.intersectsTriangle(this)}closestPointToPoint(A,t){const e=this.a,i=this.b,s=this.c;let r,a;Vt.subVectors(i,e),Pt.subVectors(s,e),Zi.subVectors(A,e);const o=Vt.dot(Zi),g=Pt.dot(Zi);if(o<=0&&g<=0)return t.copy(e);Oi.subVectors(A,i);const I=Vt.dot(Oi),h=Pt.dot(Oi);if(I>=0&&h<=I)return t.copy(i);const B=o*h-I*g;if(B<=0&&o>=0&&I<=0)return r=o/(o-I),t.copy(e).addScaledVector(Vt,r);Vi.subVectors(A,s);const Q=Vt.dot(Vi),c=Pt.dot(Vi);if(c>=0&&Q<=c)return t.copy(s);const C=Q*g-o*c;if(C<=0&&g>=0&&c<=0)return a=g/(g-c),t.copy(e).addScaledVector(Pt,a);const l=I*c-Q*h;if(l<=0&&h-I>=0&&Q-c>=0)return fn.subVectors(s,i),a=(h-I)/(h-I+(Q-c)),t.copy(i).addScaledVector(fn,a);const E=1/(l+C+B);return r=C*E,a=B*E,t.copy(e).addScaledVector(Vt,r).addScaledVector(Pt,a)}equals(A){return A.a.equals(this.a)&&A.b.equals(this.b)&&A.c.equals(this.c)}}const yn={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},yt={h:0,s:0,l:0},Ze={h:0,s:0,l:0};function ji(n,A,t){return t<0&&(t+=1),t>1&&(t-=1),t<1/6?n+(A-n)*6*t:t<1/2?A:t<2/3?n+(A-n)*6*(2/3-t):n}class kt{constructor(A,t,e){return this.isColor=!0,this.r=1,this.g=1,this.b=1,this.set(A,t,e)}set(A,t,e){if(t===void 0&&e===void 0){const i=A;i&&i.isColor?this.copy(i):typeof i=="number"?this.setHex(i):typeof i=="string"&&this.setStyle(i)}else this.setRGB(A,t,e);return this}setScalar(A){return this.r=A,this.g=A,this.b=A,this}setHex(A,t=zA){return A=Math.floor(A),this.r=(A>>16&255)/255,this.g=(A>>8&255)/255,this.b=(A&255)/255,HA.toWorkingColorSpace(this,t),this}setRGB(A,t,e,i=HA.workingColorSpace){return this.r=A,this.g=t,this.b=e,HA.toWorkingColorSpace(this,i),this}setHSL(A,t,e,i=HA.workingColorSpace){if(A=Or(A,1),t=v(t,0,1),e=v(e,0,1),t===0)this.r=this.g=this.b=e;else{const s=e<=.5?e*(1+t):e+t-e*t,r=2*e-s;this.r=ji(r,s,A+1/3),this.g=ji(r,s,A),this.b=ji(r,s,A-1/3)}return HA.toWorkingColorSpace(this,i),this}setStyle(A,t=zA){function e(s){s!==void 0&&parseFloat(s)<1&&console.warn("THREE.Color: Alpha component of "+A+" will be ignored.")}let i;if(i=/^(\\w+)\\(([^\\)]*)\\)/.exec(A)){let s;const r=i[1],a=i[2];switch(r){case"rgb":case"rgba":if(s=/^\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec(a))return e(s[4]),this.setRGB(Math.min(255,parseInt(s[1],10))/255,Math.min(255,parseInt(s[2],10))/255,Math.min(255,parseInt(s[3],10))/255,t);if(s=/^\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec(a))return e(s[4]),this.setRGB(Math.min(100,parseInt(s[1],10))/100,Math.min(100,parseInt(s[2],10))/100,Math.min(100,parseInt(s[3],10))/100,t);break;case"hsl":case"hsla":if(s=/^\\s*(\\d*\\.?\\d+)\\s*,\\s*(\\d*\\.?\\d+)\\%\\s*,\\s*(\\d*\\.?\\d+)\\%\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec(a))return e(s[4]),this.setHSL(parseFloat(s[1])/360,parseFloat(s[2])/100,parseFloat(s[3])/100,t);break;default:console.warn("THREE.Color: Unknown color model "+A)}}else if(i=/^\\#([A-Fa-f\\d]+)$/.exec(A)){const s=i[1],r=s.length;if(r===3)return this.setRGB(parseInt(s.charAt(0),16)/15,parseInt(s.charAt(1),16)/15,parseInt(s.charAt(2),16)/15,t);if(r===6)return this.setHex(parseInt(s,16),t);console.warn("THREE.Color: Invalid hex color "+A)}else if(A&&A.length>0)return this.setColorName(A,t);return this}setColorName(A,t=zA){const e=yn[A.toLowerCase()];return e!==void 0?this.setHex(e,t):console.warn("THREE.Color: Unknown color "+A),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(A){return this.r=A.r,this.g=A.g,this.b=A.b,this}copySRGBToLinear(A){return this.r=tt(A.r),this.g=tt(A.g),this.b=tt(A.b),this}copyLinearToSRGB(A){return this.r=Tt(A.r),this.g=Tt(A.g),this.b=Tt(A.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(A=zA){return HA.fromWorkingColorSpace(lA.copy(this),A),Math.round(v(lA.r*255,0,255))*65536+Math.round(v(lA.g*255,0,255))*256+Math.round(v(lA.b*255,0,255))}getHexString(A=zA){return("000000"+this.getHex(A).toString(16)).slice(-6)}getHSL(A,t=HA.workingColorSpace){HA.fromWorkingColorSpace(lA.copy(this),t);const e=lA.r,i=lA.g,s=lA.b,r=Math.max(e,i,s),a=Math.min(e,i,s);let o,g;const I=(a+r)/2;if(a===r)o=0,g=0;else{const h=r-a;switch(g=I<=.5?h/(r+a):h/(2-r-a),r){case e:o=(i-s)/h+(i<s?6:0);break;case i:o=(s-e)/h+2;break;case s:o=(e-i)/h+4;break}o/=6}return A.h=o,A.s=g,A.l=I,A}getRGB(A,t=HA.workingColorSpace){return HA.fromWorkingColorSpace(lA.copy(this),t),A.r=lA.r,A.g=lA.g,A.b=lA.b,A}getStyle(A=zA){HA.fromWorkingColorSpace(lA.copy(this),A);const t=lA.r,e=lA.g,i=lA.b;return A!==zA?`color(${A} ${t.toFixed(3)} ${e.toFixed(3)} ${i.toFixed(3)})`:`rgb(${Math.round(t*255)},${Math.round(e*255)},${Math.round(i*255)})`}offsetHSL(A,t,e){return this.getHSL(yt),this.setHSL(yt.h+A,yt.s+t,yt.l+e)}add(A){return this.r+=A.r,this.g+=A.g,this.b+=A.b,this}addColors(A,t){return this.r=A.r+t.r,this.g=A.g+t.g,this.b=A.b+t.b,this}addScalar(A){return this.r+=A,this.g+=A,this.b+=A,this}sub(A){return this.r=Math.max(0,this.r-A.r),this.g=Math.max(0,this.g-A.g),this.b=Math.max(0,this.b-A.b),this}multiply(A){return this.r*=A.r,this.g*=A.g,this.b*=A.b,this}multiplyScalar(A){return this.r*=A,this.g*=A,this.b*=A,this}lerp(A,t){return this.r+=(A.r-this.r)*t,this.g+=(A.g-this.g)*t,this.b+=(A.b-this.b)*t,this}lerpColors(A,t,e){return this.r=A.r+(t.r-A.r)*e,this.g=A.g+(t.g-A.g)*e,this.b=A.b+(t.b-A.b)*e,this}lerpHSL(A,t){this.getHSL(yt),A.getHSL(Ze);const e=Ui(yt.h,Ze.h,t),i=Ui(yt.s,Ze.s,t),s=Ui(yt.l,Ze.l,t);return this.setHSL(e,i,s),this}setFromVector3(A){return this.r=A.x,this.g=A.y,this.b=A.z,this}applyMatrix3(A){const t=this.r,e=this.g,i=this.b,s=A.elements;return this.r=s[0]*t+s[3]*e+s[6]*i,this.g=s[1]*t+s[4]*e+s[7]*i,this.b=s[2]*t+s[5]*e+s[8]*i,this}equals(A){return A.r===this.r&&A.g===this.g&&A.b===this.b}fromArray(A,t=0){return this.r=A[t],this.g=A[t+1],this.b=A[t+2],this}toArray(A=[],t=0){return A[t]=this.r,A[t+1]=this.g,A[t+2]=this.b,A}fromBufferAttribute(A,t){return this.r=A.getX(t),this.g=A.getY(t),this.b=A.getZ(t),this}toJSON(){return this.getHex()}*[Symbol.iterator](){yield this.r,yield this.g,yield this.b}}const lA=new kt;kt.NAMES=yn;let Ia=0;class pn extends Ee{constructor(){super(),this.isMaterial=!0,Object.defineProperty(this,"id",{value:Ia++}),this.uuid=le(),this.name="",this.type="Material",this.blending=_s,this.side=Gi,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.alphaHash=!1,this.blendSrc=Zs,this.blendDst=Os,this.blendEquation=Ks,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.blendColor=new kt(0,0,0),this.blendAlpha=0,this.depthFunc=Vs,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=en,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=Jt,this.stencilZFail=Jt,this.stencilZPass=Jt,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaToCoverage=!1,this.premultipliedAlpha=!1,this.forceSinglePass=!1,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0,this._alphaTest=0}get alphaTest(){return this._alphaTest}set alphaTest(A){this._alphaTest>0!=A>0&&this.version++,this._alphaTest=A}onBeforeRender(){}onBeforeCompile(){}customProgramCacheKey(){return this.onBeforeCompile.toString()}setValues(A){if(A!==void 0)for(const t in A){const e=A[t];if(e===void 0){console.warn(`THREE.Material: parameter \'${t}\' has value of undefined.`);continue}const i=this[t];if(i===void 0){console.warn(`THREE.Material: \'${t}\' is not a property of THREE.${this.type}.`);continue}i&&i.isColor?i.set(e):i&&i.isVector3&&e&&e.isVector3?i.copy(e):this[t]=e}}toJSON(A){const t=A===void 0||typeof A=="string";t&&(A={textures:{},images:{}});const e={metadata:{version:4.6,type:"Material",generator:"Material.toJSON"}};e.uuid=this.uuid,e.type=this.type,this.name!==""&&(e.name=this.name),this.color&&this.color.isColor&&(e.color=this.color.getHex()),this.roughness!==void 0&&(e.roughness=this.roughness),this.metalness!==void 0&&(e.metalness=this.metalness),this.sheen!==void 0&&(e.sheen=this.sheen),this.sheenColor&&this.sheenColor.isColor&&(e.sheenColor=this.sheenColor.getHex()),this.sheenRoughness!==void 0&&(e.sheenRoughness=this.sheenRoughness),this.emissive&&this.emissive.isColor&&(e.emissive=this.emissive.getHex()),this.emissiveIntensity!==void 0&&this.emissiveIntensity!==1&&(e.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(e.specular=this.specular.getHex()),this.specularIntensity!==void 0&&(e.specularIntensity=this.specularIntensity),this.specularColor&&this.specularColor.isColor&&(e.specularColor=this.specularColor.getHex()),this.shininess!==void 0&&(e.shininess=this.shininess),this.clearcoat!==void 0&&(e.clearcoat=this.clearcoat),this.clearcoatRoughness!==void 0&&(e.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(e.clearcoatMap=this.clearcoatMap.toJSON(A).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(e.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(A).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(e.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(A).uuid,e.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),this.dispersion!==void 0&&(e.dispersion=this.dispersion),this.iridescence!==void 0&&(e.iridescence=this.iridescence),this.iridescenceIOR!==void 0&&(e.iridescenceIOR=this.iridescenceIOR),this.iridescenceThicknessRange!==void 0&&(e.iridescenceThicknessRange=this.iridescenceThicknessRange),this.iridescenceMap&&this.iridescenceMap.isTexture&&(e.iridescenceMap=this.iridescenceMap.toJSON(A).uuid),this.iridescenceThicknessMap&&this.iridescenceThicknessMap.isTexture&&(e.iridescenceThicknessMap=this.iridescenceThicknessMap.toJSON(A).uuid),this.anisotropy!==void 0&&(e.anisotropy=this.anisotropy),this.anisotropyRotation!==void 0&&(e.anisotropyRotation=this.anisotropyRotation),this.anisotropyMap&&this.anisotropyMap.isTexture&&(e.anisotropyMap=this.anisotropyMap.toJSON(A).uuid),this.map&&this.map.isTexture&&(e.map=this.map.toJSON(A).uuid),this.matcap&&this.matcap.isTexture&&(e.matcap=this.matcap.toJSON(A).uuid),this.alphaMap&&this.alphaMap.isTexture&&(e.alphaMap=this.alphaMap.toJSON(A).uuid),this.lightMap&&this.lightMap.isTexture&&(e.lightMap=this.lightMap.toJSON(A).uuid,e.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(e.aoMap=this.aoMap.toJSON(A).uuid,e.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(e.bumpMap=this.bumpMap.toJSON(A).uuid,e.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(e.normalMap=this.normalMap.toJSON(A).uuid,e.normalMapType=this.normalMapType,e.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(e.displacementMap=this.displacementMap.toJSON(A).uuid,e.displacementScale=this.displacementScale,e.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(e.roughnessMap=this.roughnessMap.toJSON(A).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(e.metalnessMap=this.metalnessMap.toJSON(A).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(e.emissiveMap=this.emissiveMap.toJSON(A).uuid),this.specularMap&&this.specularMap.isTexture&&(e.specularMap=this.specularMap.toJSON(A).uuid),this.specularIntensityMap&&this.specularIntensityMap.isTexture&&(e.specularIntensityMap=this.specularIntensityMap.toJSON(A).uuid),this.specularColorMap&&this.specularColorMap.isTexture&&(e.specularColorMap=this.specularColorMap.toJSON(A).uuid),this.envMap&&this.envMap.isTexture&&(e.envMap=this.envMap.toJSON(A).uuid,this.combine!==void 0&&(e.combine=this.combine)),this.envMapRotation!==void 0&&(e.envMapRotation=this.envMapRotation.toArray()),this.envMapIntensity!==void 0&&(e.envMapIntensity=this.envMapIntensity),this.reflectivity!==void 0&&(e.reflectivity=this.reflectivity),this.refractionRatio!==void 0&&(e.refractionRatio=this.refractionRatio),this.gradientMap&&this.gradientMap.isTexture&&(e.gradientMap=this.gradientMap.toJSON(A).uuid),this.transmission!==void 0&&(e.transmission=this.transmission),this.transmissionMap&&this.transmissionMap.isTexture&&(e.transmissionMap=this.transmissionMap.toJSON(A).uuid),this.thickness!==void 0&&(e.thickness=this.thickness),this.thicknessMap&&this.thicknessMap.isTexture&&(e.thicknessMap=this.thicknessMap.toJSON(A).uuid),this.attenuationDistance!==void 0&&this.attenuationDistance!==1/0&&(e.attenuationDistance=this.attenuationDistance),this.attenuationColor!==void 0&&(e.attenuationColor=this.attenuationColor.getHex()),this.size!==void 0&&(e.size=this.size),this.shadowSide!==null&&(e.shadowSide=this.shadowSide),this.sizeAttenuation!==void 0&&(e.sizeAttenuation=this.sizeAttenuation),this.blending!==_s&&(e.blending=this.blending),this.side!==Gi&&(e.side=this.side),this.vertexColors===!0&&(e.vertexColors=!0),this.opacity<1&&(e.opacity=this.opacity),this.transparent===!0&&(e.transparent=!0),this.blendSrc!==Zs&&(e.blendSrc=this.blendSrc),this.blendDst!==Os&&(e.blendDst=this.blendDst),this.blendEquation!==Ks&&(e.blendEquation=this.blendEquation),this.blendSrcAlpha!==null&&(e.blendSrcAlpha=this.blendSrcAlpha),this.blendDstAlpha!==null&&(e.blendDstAlpha=this.blendDstAlpha),this.blendEquationAlpha!==null&&(e.blendEquationAlpha=this.blendEquationAlpha),this.blendColor&&this.blendColor.isColor&&(e.blendColor=this.blendColor.getHex()),this.blendAlpha!==0&&(e.blendAlpha=this.blendAlpha),this.depthFunc!==Vs&&(e.depthFunc=this.depthFunc),this.depthTest===!1&&(e.depthTest=this.depthTest),this.depthWrite===!1&&(e.depthWrite=this.depthWrite),this.colorWrite===!1&&(e.colorWrite=this.colorWrite),this.stencilWriteMask!==255&&(e.stencilWriteMask=this.stencilWriteMask),this.stencilFunc!==en&&(e.stencilFunc=this.stencilFunc),this.stencilRef!==0&&(e.stencilRef=this.stencilRef),this.stencilFuncMask!==255&&(e.stencilFuncMask=this.stencilFuncMask),this.stencilFail!==Jt&&(e.stencilFail=this.stencilFail),this.stencilZFail!==Jt&&(e.stencilZFail=this.stencilZFail),this.stencilZPass!==Jt&&(e.stencilZPass=this.stencilZPass),this.stencilWrite===!0&&(e.stencilWrite=this.stencilWrite),this.rotation!==void 0&&this.rotation!==0&&(e.rotation=this.rotation),this.polygonOffset===!0&&(e.polygonOffset=!0),this.polygonOffsetFactor!==0&&(e.polygonOffsetFactor=this.polygonOffsetFactor),this.polygonOffsetUnits!==0&&(e.polygonOffsetUnits=this.polygonOffsetUnits),this.linewidth!==void 0&&this.linewidth!==1&&(e.linewidth=this.linewidth),this.dashSize!==void 0&&(e.dashSize=this.dashSize),this.gapSize!==void 0&&(e.gapSize=this.gapSize),this.scale!==void 0&&(e.scale=this.scale),this.dithering===!0&&(e.dithering=!0),this.alphaTest>0&&(e.alphaTest=this.alphaTest),this.alphaHash===!0&&(e.alphaHash=!0),this.alphaToCoverage===!0&&(e.alphaToCoverage=!0),this.premultipliedAlpha===!0&&(e.premultipliedAlpha=!0),this.forceSinglePass===!0&&(e.forceSinglePass=!0),this.wireframe===!0&&(e.wireframe=!0),this.wireframeLinewidth>1&&(e.wireframeLinewidth=this.wireframeLinewidth),this.wireframeLinecap!=="round"&&(e.wireframeLinecap=this.wireframeLinecap),this.wireframeLinejoin!=="round"&&(e.wireframeLinejoin=this.wireframeLinejoin),this.flatShading===!0&&(e.flatShading=!0),this.visible===!1&&(e.visible=!1),this.toneMapped===!1&&(e.toneMapped=!1),this.fog===!1&&(e.fog=!1),Object.keys(this.userData).length>0&&(e.userData=this.userData);function i(s){const r=[];for(const a in s){const o=s[a];delete o.metadata,r.push(o)}return r}if(t){const s=i(A.textures),r=i(A.images);s.length>0&&(e.textures=s),r.length>0&&(e.images=r)}return e}clone(){return new this.constructor().copy(this)}copy(A){this.name=A.name,this.blending=A.blending,this.side=A.side,this.vertexColors=A.vertexColors,this.opacity=A.opacity,this.transparent=A.transparent,this.blendSrc=A.blendSrc,this.blendDst=A.blendDst,this.blendEquation=A.blendEquation,this.blendSrcAlpha=A.blendSrcAlpha,this.blendDstAlpha=A.blendDstAlpha,this.blendEquationAlpha=A.blendEquationAlpha,this.blendColor.copy(A.blendColor),this.blendAlpha=A.blendAlpha,this.depthFunc=A.depthFunc,this.depthTest=A.depthTest,this.depthWrite=A.depthWrite,this.stencilWriteMask=A.stencilWriteMask,this.stencilFunc=A.stencilFunc,this.stencilRef=A.stencilRef,this.stencilFuncMask=A.stencilFuncMask,this.stencilFail=A.stencilFail,this.stencilZFail=A.stencilZFail,this.stencilZPass=A.stencilZPass,this.stencilWrite=A.stencilWrite;const t=A.clippingPlanes;let e=null;if(t!==null){const i=t.length;e=new Array(i);for(let s=0;s!==i;++s)e[s]=t[s].clone()}return this.clippingPlanes=e,this.clipIntersection=A.clipIntersection,this.clipShadows=A.clipShadows,this.shadowSide=A.shadowSide,this.colorWrite=A.colorWrite,this.precision=A.precision,this.polygonOffset=A.polygonOffset,this.polygonOffsetFactor=A.polygonOffsetFactor,this.polygonOffsetUnits=A.polygonOffsetUnits,this.dithering=A.dithering,this.alphaTest=A.alphaTest,this.alphaHash=A.alphaHash,this.alphaToCoverage=A.alphaToCoverage,this.premultipliedAlpha=A.premultipliedAlpha,this.forceSinglePass=A.forceSinglePass,this.visible=A.visible,this.toneMapped=A.toneMapped,this.userData=JSON.parse(JSON.stringify(A.userData)),this}dispose(){this.dispatchEvent({type:"dispose"})}set needsUpdate(A){A===!0&&this.version++}onBuild(){console.warn("Material: onBuild() has been removed.")}}class ha extends pn{constructor(A){super(),this.isMeshBasicMaterial=!0,this.type="MeshBasicMaterial",this.color=new kt(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new Nt,this.combine=Hr,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(A)}copy(A){return super.copy(A),this.color.copy(A.color),this.map=A.map,this.lightMap=A.lightMap,this.lightMapIntensity=A.lightMapIntensity,this.aoMap=A.aoMap,this.aoMapIntensity=A.aoMapIntensity,this.specularMap=A.specularMap,this.alphaMap=A.alphaMap,this.envMap=A.envMap,this.envMapRotation.copy(A.envMapRotation),this.combine=A.combine,this.reflectivity=A.reflectivity,this.refractionRatio=A.refractionRatio,this.wireframe=A.wireframe,this.wireframeLinewidth=A.wireframeLinewidth,this.wireframeLinecap=A.wireframeLinecap,this.wireframeLinejoin=A.wireframeLinejoin,this.fog=A.fog,this}}const sA=new f,Oe=new mA;class Wt{constructor(A,t,e=!1){if(Array.isArray(A))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.isBufferAttribute=!0,this.name="",this.array=A,this.itemSize=t,this.count=A!==void 0?A.length/t:0,this.normalized=e,this.usage=sn,this.updateRanges=[],this.gpuType=_r,this.version=0}onUploadCallback(){}set needsUpdate(A){A===!0&&this.version++}setUsage(A){return this.usage=A,this}addUpdateRange(A,t){this.updateRanges.push({start:A,count:t})}clearUpdateRanges(){this.updateRanges.length=0}copy(A){return this.name=A.name,this.array=new A.array.constructor(A.array),this.itemSize=A.itemSize,this.count=A.count,this.normalized=A.normalized,this.usage=A.usage,this.gpuType=A.gpuType,this}copyAt(A,t,e){A*=this.itemSize,e*=t.itemSize;for(let i=0,s=this.itemSize;i<s;i++)this.array[A+i]=t.array[e+i];return this}copyArray(A){return this.array.set(A),this}applyMatrix3(A){if(this.itemSize===2)for(let t=0,e=this.count;t<e;t++)Oe.fromBufferAttribute(this,t),Oe.applyMatrix3(A),this.setXY(t,Oe.x,Oe.y);else if(this.itemSize===3)for(let t=0,e=this.count;t<e;t++)sA.fromBufferAttribute(this,t),sA.applyMatrix3(A),this.setXYZ(t,sA.x,sA.y,sA.z);return this}applyMatrix4(A){for(let t=0,e=this.count;t<e;t++)sA.fromBufferAttribute(this,t),sA.applyMatrix4(A),this.setXYZ(t,sA.x,sA.y,sA.z);return this}applyNormalMatrix(A){for(let t=0,e=this.count;t<e;t++)sA.fromBufferAttribute(this,t),sA.applyNormalMatrix(A),this.setXYZ(t,sA.x,sA.y,sA.z);return this}transformDirection(A){for(let t=0,e=this.count;t<e;t++)sA.fromBufferAttribute(this,t),sA.transformDirection(A),this.setXYZ(t,sA.x,sA.y,sA.z);return this}set(A,t=0){return this.array.set(A,t),this}getComponent(A,t){let e=this.array[A*this.itemSize+t];return this.normalized&&(e=ue(e,this.array)),e}setComponent(A,t,e){return this.normalized&&(e=wA(e,this.array)),this.array[A*this.itemSize+t]=e,this}getX(A){let t=this.array[A*this.itemSize];return this.normalized&&(t=ue(t,this.array)),t}setX(A,t){return this.normalized&&(t=wA(t,this.array)),this.array[A*this.itemSize]=t,this}getY(A){let t=this.array[A*this.itemSize+1];return this.normalized&&(t=ue(t,this.array)),t}setY(A,t){return this.normalized&&(t=wA(t,this.array)),this.array[A*this.itemSize+1]=t,this}getZ(A){let t=this.array[A*this.itemSize+2];return this.normalized&&(t=ue(t,this.array)),t}setZ(A,t){return this.normalized&&(t=wA(t,this.array)),this.array[A*this.itemSize+2]=t,this}getW(A){let t=this.array[A*this.itemSize+3];return this.normalized&&(t=ue(t,this.array)),t}setW(A,t){return this.normalized&&(t=wA(t,this.array)),this.array[A*this.itemSize+3]=t,this}setXY(A,t,e){return A*=this.itemSize,this.normalized&&(t=wA(t,this.array),e=wA(e,this.array)),this.array[A+0]=t,this.array[A+1]=e,this}setXYZ(A,t,e,i){return A*=this.itemSize,this.normalized&&(t=wA(t,this.array),e=wA(e,this.array),i=wA(i,this.array)),this.array[A+0]=t,this.array[A+1]=e,this.array[A+2]=i,this}setXYZW(A,t,e,i,s){return A*=this.itemSize,this.normalized&&(t=wA(t,this.array),e=wA(e,this.array),i=wA(i,this.array),s=wA(s,this.array)),this.array[A+0]=t,this.array[A+1]=e,this.array[A+2]=i,this.array[A+3]=s,this}onUpload(A){return this.onUploadCallback=A,this}clone(){return new this.constructor(this.array,this.itemSize).copy(this)}toJSON(){const A={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.from(this.array),normalized:this.normalized};return this.name!==""&&(A.name=this.name),this.usage!==sn&&(A.usage=this.usage),A}}class Ba extends Wt{constructor(A,t,e){super(new Uint16Array(A),t,e)}}class Qa extends Wt{constructor(A,t,e){super(new Uint32Array(A),t,e)}}class Ve extends Wt{constructor(A,t,e){super(new Float32Array(A),t,e)}}let ca=0;const LA=new EA,$i=new DA,Xt=new f,kA=new zt,pe=new zt,gA=new f;class Pe extends Ee{constructor(){super(),this.isBufferGeometry=!0,Object.defineProperty(this,"id",{value:ca++}),this.uuid=le(),this.name="",this.type="BufferGeometry",this.index=null,this.indirect=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}getIndex(){return this.index}setIndex(A){return Array.isArray(A)?this.index=new(Vr(A)?Qa:Ba)(A,1):this.index=A,this}setIndirect(A){return this.indirect=A,this}getIndirect(){return this.indirect}getAttribute(A){return this.attributes[A]}setAttribute(A,t){return this.attributes[A]=t,this}deleteAttribute(A){return delete this.attributes[A],this}hasAttribute(A){return this.attributes[A]!==void 0}addGroup(A,t,e=0){this.groups.push({start:A,count:t,materialIndex:e})}clearGroups(){this.groups=[]}setDrawRange(A,t){this.drawRange.start=A,this.drawRange.count=t}applyMatrix4(A){const t=this.attributes.position;t!==void 0&&(t.applyMatrix4(A),t.needsUpdate=!0);const e=this.attributes.normal;if(e!==void 0){const s=new XA().getNormalMatrix(A);e.applyNormalMatrix(s),e.needsUpdate=!0}const i=this.attributes.tangent;return i!==void 0&&(i.transformDirection(A),i.needsUpdate=!0),this.boundingBox!==null&&this.computeBoundingBox(),this.boundingSphere!==null&&this.computeBoundingSphere(),this}applyQuaternion(A){return LA.makeRotationFromQuaternion(A),this.applyMatrix4(LA),this}rotateX(A){return LA.makeRotationX(A),this.applyMatrix4(LA),this}rotateY(A){return LA.makeRotationY(A),this.applyMatrix4(LA),this}rotateZ(A){return LA.makeRotationZ(A),this.applyMatrix4(LA),this}translate(A,t,e){return LA.makeTranslation(A,t,e),this.applyMatrix4(LA),this}scale(A,t,e){return LA.makeScale(A,t,e),this.applyMatrix4(LA),this}lookAt(A){return $i.lookAt(A),$i.updateMatrix(),this.applyMatrix4($i.matrix),this}center(){return this.computeBoundingBox(),this.boundingBox.getCenter(Xt).negate(),this.translate(Xt.x,Xt.y,Xt.z),this}setFromPoints(A){const t=this.getAttribute("position");if(t===void 0){const e=[];for(let i=0,s=A.length;i<s;i++){const r=A[i];e.push(r.x,r.y,r.z||0)}this.setAttribute("position",new Ve(e,3))}else{const e=Math.min(A.length,t.count);for(let i=0;i<e;i++){const s=A[i];t.setXYZ(i,s.x,s.y,s.z||0)}A.length>t.count&&console.warn("THREE.BufferGeometry: Buffer size too small for points data. Use .dispose() and create a new geometry."),t.needsUpdate=!0}return this}computeBoundingBox(){this.boundingBox===null&&(this.boundingBox=new zt);const A=this.attributes.position,t=this.morphAttributes.position;if(A&&A.isGLBufferAttribute){console.error("THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box.",this),this.boundingBox.set(new f(-1/0,-1/0,-1/0),new f(1/0,1/0,1/0));return}if(A!==void 0){if(this.boundingBox.setFromBufferAttribute(A),t)for(let e=0,i=t.length;e<i;e++){const s=t[e];kA.setFromBufferAttribute(s),this.morphTargetsRelative?(gA.addVectors(this.boundingBox.min,kA.min),this.boundingBox.expandByPoint(gA),gA.addVectors(this.boundingBox.max,kA.max),this.boundingBox.expandByPoint(gA)):(this.boundingBox.expandByPoint(kA.min),this.boundingBox.expandByPoint(kA.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error(\'THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.\',this)}computeBoundingSphere(){this.boundingSphere===null&&(this.boundingSphere=new Bn);const A=this.attributes.position,t=this.morphAttributes.position;if(A&&A.isGLBufferAttribute){console.error("THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere.",this),this.boundingSphere.set(new f,1/0);return}if(A){const e=this.boundingSphere.center;if(kA.setFromBufferAttribute(A),t)for(let s=0,r=t.length;s<r;s++){const a=t[s];pe.setFromBufferAttribute(a),this.morphTargetsRelative?(gA.addVectors(kA.min,pe.min),kA.expandByPoint(gA),gA.addVectors(kA.max,pe.max),kA.expandByPoint(gA)):(kA.expandByPoint(pe.min),kA.expandByPoint(pe.max))}kA.getCenter(e);let i=0;for(let s=0,r=A.count;s<r;s++)gA.fromBufferAttribute(A,s),i=Math.max(i,e.distanceToSquared(gA));if(t)for(let s=0,r=t.length;s<r;s++){const a=t[s],o=this.morphTargetsRelative;for(let g=0,I=a.count;g<I;g++)gA.fromBufferAttribute(a,g),o&&(Xt.fromBufferAttribute(A,g),gA.add(Xt)),i=Math.max(i,e.distanceToSquared(gA))}this.boundingSphere.radius=Math.sqrt(i),isNaN(this.boundingSphere.radius)&&console.error(\'THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.\',this)}}computeTangents(){const A=this.index,t=this.attributes;if(A===null||t.position===void 0||t.normal===void 0||t.uv===void 0){console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");return}const e=t.position,i=t.normal,s=t.uv;this.hasAttribute("tangent")===!1&&this.setAttribute("tangent",new Wt(new Float32Array(4*e.count),4));const r=this.getAttribute("tangent"),a=[],o=[];for(let p=0;p<e.count;p++)a[p]=new f,o[p]=new f;const g=new f,I=new f,h=new f,B=new mA,Q=new mA,c=new mA,C=new f,l=new f;function E(p,m,F){g.fromBufferAttribute(e,p),I.fromBufferAttribute(e,m),h.fromBufferAttribute(e,F),B.fromBufferAttribute(s,p),Q.fromBufferAttribute(s,m),c.fromBufferAttribute(s,F),I.sub(g),h.sub(g),Q.sub(B),c.sub(B);const D=1/(Q.x*c.y-c.x*Q.y);isFinite(D)&&(C.copy(I).multiplyScalar(c.y).addScaledVector(h,-Q.y).multiplyScalar(D),l.copy(h).multiplyScalar(Q.x).addScaledVector(I,-c.x).multiplyScalar(D),a[p].add(C),a[m].add(C),a[F].add(C),o[p].add(l),o[m].add(l),o[F].add(l))}let u=this.groups;u.length===0&&(u=[{start:0,count:A.count}]);for(let p=0,m=u.length;p<m;++p){const F=u[p],D=F.start,S=F.count;for(let N=D,k=D+S;N<k;N+=3)E(A.getX(N+0),A.getX(N+1),A.getX(N+2))}const d=new f,y=new f,w=new f,x=new f;function M(p){w.fromBufferAttribute(i,p),x.copy(w);const m=a[p];d.copy(m),d.sub(w.multiplyScalar(w.dot(m))).normalize(),y.crossVectors(x,m);const D=y.dot(o[p])<0?-1:1;r.setXYZW(p,d.x,d.y,d.z,D)}for(let p=0,m=u.length;p<m;++p){const F=u[p],D=F.start,S=F.count;for(let N=D,k=D+S;N<k;N+=3)M(A.getX(N+0)),M(A.getX(N+1)),M(A.getX(N+2))}}computeVertexNormals(){const A=this.index,t=this.getAttribute("position");if(t!==void 0){let e=this.getAttribute("normal");if(e===void 0)e=new Wt(new Float32Array(t.count*3),3),this.setAttribute("normal",e);else for(let B=0,Q=e.count;B<Q;B++)e.setXYZ(B,0,0,0);const i=new f,s=new f,r=new f,a=new f,o=new f,g=new f,I=new f,h=new f;if(A)for(let B=0,Q=A.count;B<Q;B+=3){const c=A.getX(B+0),C=A.getX(B+1),l=A.getX(B+2);i.fromBufferAttribute(t,c),s.fromBufferAttribute(t,C),r.fromBufferAttribute(t,l),I.subVectors(r,s),h.subVectors(i,s),I.cross(h),a.fromBufferAttribute(e,c),o.fromBufferAttribute(e,C),g.fromBufferAttribute(e,l),a.add(I),o.add(I),g.add(I),e.setXYZ(c,a.x,a.y,a.z),e.setXYZ(C,o.x,o.y,o.z),e.setXYZ(l,g.x,g.y,g.z)}else for(let B=0,Q=t.count;B<Q;B+=3)i.fromBufferAttribute(t,B+0),s.fromBufferAttribute(t,B+1),r.fromBufferAttribute(t,B+2),I.subVectors(r,s),h.subVectors(i,s),I.cross(h),e.setXYZ(B+0,I.x,I.y,I.z),e.setXYZ(B+1,I.x,I.y,I.z),e.setXYZ(B+2,I.x,I.y,I.z);this.normalizeNormals(),e.needsUpdate=!0}}normalizeNormals(){const A=this.attributes.normal;for(let t=0,e=A.count;t<e;t++)gA.fromBufferAttribute(A,t),gA.normalize(),A.setXYZ(t,gA.x,gA.y,gA.z)}toNonIndexed(){function A(a,o){const g=a.array,I=a.itemSize,h=a.normalized,B=new g.constructor(o.length*I);let Q=0,c=0;for(let C=0,l=o.length;C<l;C++){a.isInterleavedBufferAttribute?Q=o[C]*a.data.stride+a.offset:Q=o[C]*I;for(let E=0;E<I;E++)B[c++]=g[Q++]}return new Wt(B,I,h)}if(this.index===null)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;const t=new Pe,e=this.index.array,i=this.attributes;for(const a in i){const o=i[a],g=A(o,e);t.setAttribute(a,g)}const s=this.morphAttributes;for(const a in s){const o=[],g=s[a];for(let I=0,h=g.length;I<h;I++){const B=g[I],Q=A(B,e);o.push(Q)}t.morphAttributes[a]=o}t.morphTargetsRelative=this.morphTargetsRelative;const r=this.groups;for(let a=0,o=r.length;a<o;a++){const g=r[a];t.addGroup(g.start,g.count,g.materialIndex)}return t}toJSON(){const A={metadata:{version:4.6,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(A.uuid=this.uuid,A.type=this.type,this.name!==""&&(A.name=this.name),Object.keys(this.userData).length>0&&(A.userData=this.userData),this.parameters!==void 0){const o=this.parameters;for(const g in o)o[g]!==void 0&&(A[g]=o[g]);return A}A.data={attributes:{}};const t=this.index;t!==null&&(A.data.index={type:t.array.constructor.name,array:Array.prototype.slice.call(t.array)});const e=this.attributes;for(const o in e){const g=e[o];A.data.attributes[o]=g.toJSON(A.data)}const i={};let s=!1;for(const o in this.morphAttributes){const g=this.morphAttributes[o],I=[];for(let h=0,B=g.length;h<B;h++){const Q=g[h];I.push(Q.toJSON(A.data))}I.length>0&&(i[o]=I,s=!0)}s&&(A.data.morphAttributes=i,A.data.morphTargetsRelative=this.morphTargetsRelative);const r=this.groups;r.length>0&&(A.data.groups=JSON.parse(JSON.stringify(r)));const a=this.boundingSphere;return a!==null&&(A.data.boundingSphere={center:a.center.toArray(),radius:a.radius}),A}clone(){return new this.constructor().copy(this)}copy(A){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;const t={};this.name=A.name;const e=A.index;e!==null&&this.setIndex(e.clone(t));const i=A.attributes;for(const g in i){const I=i[g];this.setAttribute(g,I.clone(t))}const s=A.morphAttributes;for(const g in s){const I=[],h=s[g];for(let B=0,Q=h.length;B<Q;B++)I.push(h[B].clone(t));this.morphAttributes[g]=I}this.morphTargetsRelative=A.morphTargetsRelative;const r=A.groups;for(let g=0,I=r.length;g<I;g++){const h=r[g];this.addGroup(h.start,h.count,h.materialIndex)}const a=A.boundingBox;a!==null&&(this.boundingBox=a.clone());const o=A.boundingSphere;return o!==null&&(this.boundingSphere=o.clone()),this.drawRange.start=A.drawRange.start,this.drawRange.count=A.drawRange.count,this.userData=A.userData,this}dispose(){this.dispatchEvent({type:"dispose"})}}const wn=new EA,Rt=new ea,We=new Bn,mn=new f,Xe=new f,je=new f,$e=new f,As=new f,Ai=new f,Dn=new f,ti=new f;class xn extends DA{constructor(A=new Pe,t=new ha){super(),this.isMesh=!0,this.type="Mesh",this.geometry=A,this.material=t,this.updateMorphTargets()}copy(A,t){return super.copy(A,t),A.morphTargetInfluences!==void 0&&(this.morphTargetInfluences=A.morphTargetInfluences.slice()),A.morphTargetDictionary!==void 0&&(this.morphTargetDictionary=Object.assign({},A.morphTargetDictionary)),this.material=Array.isArray(A.material)?A.material.slice():A.material,this.geometry=A.geometry,this}updateMorphTargets(){const t=this.geometry.morphAttributes,e=Object.keys(t);if(e.length>0){const i=t[e[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let s=0,r=i.length;s<r;s++){const a=i[s].name||String(s);this.morphTargetInfluences.push(0),this.morphTargetDictionary[a]=s}}}}getVertexPosition(A,t){const e=this.geometry,i=e.attributes.position,s=e.morphAttributes.position,r=e.morphTargetsRelative;t.fromBufferAttribute(i,A);const a=this.morphTargetInfluences;if(s&&a){Ai.set(0,0,0);for(let o=0,g=s.length;o<g;o++){const I=a[o],h=s[o];I!==0&&(As.fromBufferAttribute(h,A),r?Ai.addScaledVector(As,I):Ai.addScaledVector(As.sub(t),I))}t.add(Ai)}return t}raycast(A,t){const e=this.geometry,i=this.material,s=this.matrixWorld;i!==void 0&&(e.boundingSphere===null&&e.computeBoundingSphere(),We.copy(e.boundingSphere),We.applyMatrix4(s),Rt.copy(A.ray).recast(A.near),!(We.containsPoint(Rt.origin)===!1&&(Rt.intersectSphere(We,mn)===null||Rt.origin.distanceToSquared(mn)>(A.far-A.near)**2))&&(wn.copy(s).invert(),Rt.copy(A.ray).applyMatrix4(wn),!(e.boundingBox!==null&&Rt.intersectsBox(e.boundingBox)===!1)&&this._computeIntersections(A,t,Rt)))}_computeIntersections(A,t,e){let i;const s=this.geometry,r=this.material,a=s.index,o=s.attributes.position,g=s.attributes.uv,I=s.attributes.uv1,h=s.attributes.normal,B=s.groups,Q=s.drawRange;if(a!==null)if(Array.isArray(r))for(let c=0,C=B.length;c<C;c++){const l=B[c],E=r[l.materialIndex],u=Math.max(l.start,Q.start),d=Math.min(a.count,Math.min(l.start+l.count,Q.start+Q.count));for(let y=u,w=d;y<w;y+=3){const x=a.getX(y),M=a.getX(y+1),p=a.getX(y+2);i=ei(this,E,A,e,g,I,h,x,M,p),i&&(i.faceIndex=Math.floor(y/3),i.face.materialIndex=l.materialIndex,t.push(i))}}else{const c=Math.max(0,Q.start),C=Math.min(a.count,Q.start+Q.count);for(let l=c,E=C;l<E;l+=3){const u=a.getX(l),d=a.getX(l+1),y=a.getX(l+2);i=ei(this,r,A,e,g,I,h,u,d,y),i&&(i.faceIndex=Math.floor(l/3),t.push(i))}}else if(o!==void 0)if(Array.isArray(r))for(let c=0,C=B.length;c<C;c++){const l=B[c],E=r[l.materialIndex],u=Math.max(l.start,Q.start),d=Math.min(o.count,Math.min(l.start+l.count,Q.start+Q.count));for(let y=u,w=d;y<w;y+=3){const x=y,M=y+1,p=y+2;i=ei(this,E,A,e,g,I,h,x,M,p),i&&(i.faceIndex=Math.floor(y/3),i.face.materialIndex=l.materialIndex,t.push(i))}}else{const c=Math.max(0,Q.start),C=Math.min(o.count,Q.start+Q.count);for(let l=c,E=C;l<E;l+=3){const u=l,d=l+1,y=l+2;i=ei(this,r,A,e,g,I,h,u,d,y),i&&(i.faceIndex=Math.floor(l/3),t.push(i))}}}}function Ca(n,A,t,e,i,s,r,a){let o;if(A.side===zr?o=e.intersectTriangle(r,s,i,!0,a):o=e.intersectTriangle(i,s,r,A.side===Gi,a),o===null)return null;ti.copy(a),ti.applyMatrix4(n.matrixWorld);const g=t.ray.origin.distanceTo(ti);return g<t.near||g>t.far?null:{distance:g,point:ti.clone(),object:n}}function ei(n,A,t,e,i,s,r,a,o,g){n.getVertexPosition(a,Xe),n.getVertexPosition(o,je),n.getVertexPosition(g,$e);const I=Ca(n,A,t,e,Xe,je,$e,Dn);if(I){const h=new f;ZA.getBarycoord(Dn,Xe,je,$e,h),i&&(I.uv=ZA.getInterpolatedAttribute(i,a,o,g,h,new mA)),s&&(I.uv1=ZA.getInterpolatedAttribute(s,a,o,g,h,new mA)),r&&(I.normal=ZA.getInterpolatedAttribute(r,a,o,g,h,new f),I.normal.dot(e.direction)>0&&I.normal.multiplyScalar(-1));const B={a,b:o,c:g,normal:new f,materialIndex:0};ZA.getNormal(Xe,je,$e,B.normal),I.face=B,I.barycoord=h}return I}function Ea(n){const A={};for(const t in n){A[t]={};for(const e in n[t]){const i=n[t][e];i&&(i.isColor||i.isMatrix3||i.isMatrix4||i.isVector2||i.isVector3||i.isVector4||i.isTexture||i.isQuaternion)?i.isRenderTargetTexture?(console.warn("UniformsUtils: Textures of render targets cannot be cloned via cloneUniforms() or mergeUniforms()."),A[t][e]=null):A[t][e]=i.clone():Array.isArray(i)?A[t][e]=i.slice():A[t][e]=i}}return A}function la(n){const A=[];for(let t=0;t<n.length;t++)A.push(n[t].clone());return A}var ua=`void main() {\n	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}`,da=`void main() {\n	gl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\n}`;class fa extends pn{constructor(A){super(),this.isShaderMaterial=!0,this.type="ShaderMaterial",this.defines={},this.uniforms={},this.uniformsGroups=[],this.vertexShader=ua,this.fragmentShader=da,this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.forceSinglePass=!0,this.extensions={clipCullDistance:!1,multiDraw:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv1:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,A!==void 0&&this.setValues(A)}copy(A){return super.copy(A),this.fragmentShader=A.fragmentShader,this.vertexShader=A.vertexShader,this.uniforms=Ea(A.uniforms),this.uniformsGroups=la(A.uniformsGroups),this.defines=Object.assign({},A.defines),this.wireframe=A.wireframe,this.wireframeLinewidth=A.wireframeLinewidth,this.fog=A.fog,this.lights=A.lights,this.clipping=A.clipping,this.extensions=Object.assign({},A.extensions),this.glslVersion=A.glslVersion,this}toJSON(A){const t=super.toJSON(A);t.glslVersion=this.glslVersion,t.uniforms={};for(const i in this.uniforms){const r=this.uniforms[i].value;r&&r.isTexture?t.uniforms[i]={type:"t",value:r.toJSON(A).uuid}:r&&r.isColor?t.uniforms[i]={type:"c",value:r.getHex()}:r&&r.isVector2?t.uniforms[i]={type:"v2",value:r.toArray()}:r&&r.isVector3?t.uniforms[i]={type:"v3",value:r.toArray()}:r&&r.isVector4?t.uniforms[i]={type:"v4",value:r.toArray()}:r&&r.isMatrix3?t.uniforms[i]={type:"m3",value:r.toArray()}:r&&r.isMatrix4?t.uniforms[i]={type:"m4",value:r.toArray()}:t.uniforms[i]={value:r}}Object.keys(this.defines).length>0&&(t.defines=this.defines),t.vertexShader=this.vertexShader,t.fragmentShader=this.fragmentShader,t.lights=this.lights,t.clipping=this.clipping;const e={};for(const i in this.extensions)this.extensions[i]===!0&&(e[i]=!0);return Object.keys(e).length>0&&(t.extensions=e),t}}class Mn extends DA{constructor(){super(),this.isCamera=!0,this.type="Camera",this.matrixWorldInverse=new EA,this.projectionMatrix=new EA,this.projectionMatrixInverse=new EA,this.coordinateSystem=Ce}copy(A,t){return super.copy(A,t),this.matrixWorldInverse.copy(A.matrixWorldInverse),this.projectionMatrix.copy(A.projectionMatrix),this.projectionMatrixInverse.copy(A.projectionMatrixInverse),this.coordinateSystem=A.coordinateSystem,this}getWorldDirection(A){return super.getWorldDirection(A).negate()}updateMatrixWorld(A){super.updateMatrixWorld(A),this.matrixWorldInverse.copy(this.matrixWorld).invert()}updateWorldMatrix(A,t){super.updateWorldMatrix(A,t),this.matrixWorldInverse.copy(this.matrixWorld).invert()}clone(){return new this.constructor().copy(this)}}class Sn extends DA{constructor(){super(),this.isScene=!0,this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.backgroundBlurriness=0,this.backgroundIntensity=1,this.backgroundRotation=new Nt,this.environmentIntensity=1,this.environmentRotation=new Nt,this.overrideMaterial=null,typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}copy(A,t){return super.copy(A,t),A.background!==null&&(this.background=A.background.clone()),A.environment!==null&&(this.environment=A.environment.clone()),A.fog!==null&&(this.fog=A.fog.clone()),this.backgroundBlurriness=A.backgroundBlurriness,this.backgroundIntensity=A.backgroundIntensity,this.backgroundRotation.copy(A.backgroundRotation),this.environmentIntensity=A.environmentIntensity,this.environmentRotation.copy(A.environmentRotation),A.overrideMaterial!==null&&(this.overrideMaterial=A.overrideMaterial.clone()),this.matrixAutoUpdate=A.matrixAutoUpdate,this}toJSON(A){const t=super.toJSON(A);return this.fog!==null&&(t.object.fog=this.fog.toJSON()),this.backgroundBlurriness>0&&(t.object.backgroundBlurriness=this.backgroundBlurriness),this.backgroundIntensity!==1&&(t.object.backgroundIntensity=this.backgroundIntensity),t.object.backgroundRotation=this.backgroundRotation.toArray(),this.environmentIntensity!==1&&(t.object.environmentIntensity=this.environmentIntensity),t.object.environmentRotation=this.environmentRotation.toArray(),t}}class ya extends jA{constructor(A=null,t=1,e=1,i,s,r,a,o,g=Ct,I=Ct,h,B){super(null,r,a,o,g,I,i,s,h,B),this.isDataTexture=!0,this.image={data:A,width:t,height:e},this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}class ii extends Pe{constructor(A=1,t=1,e=1,i=1){super(),this.type="PlaneGeometry",this.parameters={width:A,height:t,widthSegments:e,heightSegments:i};const s=A/2,r=t/2,a=Math.floor(e),o=Math.floor(i),g=a+1,I=o+1,h=A/a,B=t/o,Q=[],c=[],C=[],l=[];for(let E=0;E<I;E++){const u=E*B-r;for(let d=0;d<g;d++){const y=d*h-s;c.push(y,-u,0),C.push(0,0,1),l.push(d/a),l.push(1-E/o)}}for(let E=0;E<o;E++)for(let u=0;u<a;u++){const d=u+g*E,y=u+g*(E+1),w=u+1+g*(E+1),x=u+1+g*E;Q.push(d,y,x),Q.push(y,w,x)}this.setIndex(Q),this.setAttribute("position",new Ve(c,3)),this.setAttribute("normal",new Ve(C,3)),this.setAttribute("uv",new Ve(l,2))}copy(A){return super.copy(A),this.parameters=Object.assign({},A.parameters),this}static fromJSON(A){return new ii(A.width,A.height,A.widthSegments,A.heightSegments)}}class ts extends fa{constructor(A){super(A),this.isRawShaderMaterial=!0,this.type="RawShaderMaterial"}}const Fn={enabled:!1,files:{},add:function(n,A){this.enabled!==!1&&(this.files[n]=A)},get:function(n){if(this.enabled!==!1)return this.files[n]},remove:function(n){delete this.files[n]},clear:function(){this.files={}}};class pa{constructor(A,t,e){const i=this;let s=!1,r=0,a=0,o;const g=[];this.onStart=void 0,this.onLoad=A,this.onProgress=t,this.onError=e,this.itemStart=function(I){a++,s===!1&&i.onStart!==void 0&&i.onStart(I,r,a),s=!0},this.itemEnd=function(I){r++,i.onProgress!==void 0&&i.onProgress(I,r,a),r===a&&(s=!1,i.onLoad!==void 0&&i.onLoad())},this.itemError=function(I){i.onError!==void 0&&i.onError(I)},this.resolveURL=function(I){return o?o(I):I},this.setURLModifier=function(I){return o=I,this},this.addHandler=function(I,h){return g.push(I,h),this},this.removeHandler=function(I){const h=g.indexOf(I);return h!==-1&&g.splice(h,2),this},this.getHandler=function(I){for(let h=0,B=g.length;h<B;h+=2){const Q=g[h],c=g[h+1];if(Q.global&&(Q.lastIndex=0),Q.test(I))return c}return null}}}const wa=new pa;class es{constructor(A){this.manager=A!==void 0?A:wa,this.crossOrigin="anonymous",this.withCredentials=!1,this.path="",this.resourcePath="",this.requestHeader={}}load(){}loadAsync(A,t){const e=this;return new Promise(function(i,s){e.load(A,i,t,s)})}parse(){}setCrossOrigin(A){return this.crossOrigin=A,this}setWithCredentials(A){return this.withCredentials=A,this}setPath(A){return this.path=A,this}setResourcePath(A){return this.resourcePath=A,this}setRequestHeader(A){return this.requestHeader=A,this}}es.DEFAULT_MATERIAL_NAME="__DEFAULT";const at={};class ma extends Error{constructor(A,t){super(A),this.response=t}}class Da extends es{constructor(A){super(A)}load(A,t,e,i){A===void 0&&(A=""),this.path!==void 0&&(A=this.path+A),A=this.manager.resolveURL(A);const s=Fn.get(A);if(s!==void 0)return this.manager.itemStart(A),setTimeout(()=>{t&&t(s),this.manager.itemEnd(A)},0),s;if(at[A]!==void 0){at[A].push({onLoad:t,onProgress:e,onError:i});return}at[A]=[],at[A].push({onLoad:t,onProgress:e,onError:i});const r=new Request(A,{headers:new Headers(this.requestHeader),credentials:this.withCredentials?"include":"same-origin"}),a=this.mimeType,o=this.responseType;fetch(r).then(g=>{if(g.status===200||g.status===0){if(g.status===0&&console.warn("THREE.FileLoader: HTTP Status 0 received."),typeof ReadableStream>"u"||g.body===void 0||g.body.getReader===void 0)return g;const I=at[A],h=g.body.getReader(),B=g.headers.get("X-File-Size")||g.headers.get("Content-Length"),Q=B?parseInt(B):0,c=Q!==0;let C=0;const l=new ReadableStream({start(E){u();function u(){h.read().then(({done:d,value:y})=>{if(d)E.close();else{C+=y.byteLength;const w=new ProgressEvent("progress",{lengthComputable:c,loaded:C,total:Q});for(let x=0,M=I.length;x<M;x++){const p=I[x];p.onProgress&&p.onProgress(w)}E.enqueue(y),u()}},d=>{E.error(d)})}}});return new Response(l)}else throw new ma(`fetch for "${g.url}" responded with ${g.status}: ${g.statusText}`,g)}).then(g=>{switch(o){case"arraybuffer":return g.arrayBuffer();case"blob":return g.blob();case"document":return g.text().then(I=>new DOMParser().parseFromString(I,a));case"json":return g.json();default:if(a===void 0)return g.text();{const h=/charset="?([^;"\\s]*)"?/i.exec(a),B=h&&h[1]?h[1].toLowerCase():void 0,Q=new TextDecoder(B);return g.arrayBuffer().then(c=>Q.decode(c))}}}).then(g=>{Fn.add(A,g);const I=at[A];delete at[A];for(let h=0,B=I.length;h<B;h++){const Q=I[h];Q.onLoad&&Q.onLoad(g)}}).catch(g=>{const I=at[A];if(I===void 0)throw this.manager.itemError(A),g;delete at[A];for(let h=0,B=I.length;h<B;h++){const Q=I[h];Q.onError&&Q.onError(g)}this.manager.itemError(A)}).finally(()=>{this.manager.itemEnd(A)}),this.manager.itemStart(A)}setResponseType(A){return this.responseType=A,this}setMimeType(A){return this.mimeType=A,this}}class is{constructor(A,t,e,i){is.prototype.isMatrix2=!0,this.elements=[1,0,0,1],A!==void 0&&this.set(A,t,e,i)}identity(){return this.set(1,0,0,1),this}fromArray(A,t=0){for(let e=0;e<4;e++)this.elements[e]=A[e+t];return this}set(A,t,e,i){const s=this.elements;return s[0]=A,s[2]=t,s[1]=e,s[3]=i,this}}typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:qs}})),typeof window<"u"&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__=qs);const $A=-12,ot=(9-$A)/254,jt=Math.exp(-30),xa=11,Ma=11,O=1<<xa,pt=1<<Ma,Nn=1,Sa=!0;function $t(n){return n==="int"||n==="ivec2"||n==="ivec3"||n==="ivec4"}function Ae(n){return n==="uint"||n==="uvec2"||n==="uvec3"||n==="uvec4"}function Fa(n){return n==="float"||n==="vec2"||n==="vec3"||n==="vec4"}function Na(n){return n==="mat2"||n==="mat2x2"||n==="mat2x3"||n==="mat2x4"||n==="mat3"||n==="mat3x2"||n==="mat3x3"||n==="mat3x4"||n==="mat4"||n==="mat4x2"||n==="mat4x3"||n==="mat4x4"}function si(n){return Fa(n)||Na(n)}function te(n){return n==="mat2"||n==="mat2x2"}function ee(n){return n==="mat3"||n==="mat3x3"}function ie(n){return n==="mat4"||n==="mat4x4"}function rA(n){return Math.trunc(n).toString()}function aA(n){return`${Math.max(0,Math.trunc(n)).toString()}u`}function _(n){return n===Number.POSITIVE_INFINITY?"INFINITY":n===Number.NEGATIVE_INFINITY?"-INFINITY":Number.isInteger(n)?n.toFixed(1):n.toString()}function Gt(n){return n instanceof bt?n.type:n.dynoOut().type}class bt{constructor(A){this.__isDynoValue=!0,this.type=A}}class RA extends bt{constructor(A,t){super(A.outTypes[t]),this.dyno=A,this.key=t}}class ni extends bt{constructor(A,t){super(A),this.literal=t}getLiteral(){return this.literal}}class ka extends ni{constructor(A,t){super(A,""),this.value=t}getLiteral(){const{type:A,value:t}=this;switch(A){case"bool":return t?"true":"false";case"uint":return aA(t);case"int":return rA(t);case"float":return _(t);case"bvec2":{const e=t;return`bvec2(${e[0]}, ${e[1]})`}case"uvec2":{if(t instanceof mA)return`uvec2(${aA(t.x)}, ${aA(t.y)})`;const e=t;return`uvec2(${aA(e[0])}, ${aA(e[1])})`}case"ivec2":{if(t instanceof mA)return`ivec2(${rA(t.x)}, ${rA(t.y)})`;const e=t;return`ivec2(${rA(e[0])}, ${rA(e[1])})`}case"vec2":{if(t instanceof mA)return`vec2(${_(t.x)}, ${_(t.y)})`;const e=t;return`vec2(${_(e[0])}, ${_(e[1])})`}case"bvec3":{const e=t;return`bvec3(${e[0]}, ${e[1]}, ${e[2]})`}case"uvec3":{if(t instanceof f)return`uvec3(${aA(t.x)}, ${aA(t.y)}, ${aA(t.z)})`;const e=t;return`uvec3(${aA(e[0])}, ${aA(e[1])}, ${aA(e[2])})`}case"ivec3":{if(t instanceof f)return`ivec3(${rA(t.x)}, ${rA(t.y)}, ${rA(t.z)})`;const e=t;return`ivec3(${rA(e[0])}, ${rA(e[1])}, ${rA(e[2])})`}case"vec3":{if(t instanceof f)return`vec3(${_(t.x)}, ${_(t.y)}, ${_(t.z)})`;const e=t;return`vec3(${_(e[0])}, ${_(e[1])}, ${_(e[2])})`}case"bvec4":{const e=t;return`bvec4(${e[0]}, ${e[1]}, ${e[2]}, ${e[3]})`}case"uvec4":{if(t instanceof fA)return`uvec4(${aA(t.x)}, ${aA(t.y)}, ${aA(t.z)}, ${aA(t.w)})`;const e=t;return`uvec4(${aA(e[0])}, ${aA(e[1])}, ${aA(e[2])}, ${aA(e[3])})`}case"ivec4":{if(t instanceof fA)return`ivec4(${rA(t.x)}, ${rA(t.y)}, ${rA(t.z)}, ${rA(t.w)})`;const e=t;return`ivec4(${rA(e[0])}, ${rA(e[1])}, ${rA(e[2])}, ${rA(e[3])})`}case"vec4":{if(t instanceof fA)return`vec4(${_(t.x)}, ${_(t.y)}, ${_(t.z)}, ${_(t.w)})`;if(t instanceof oA)return`vec4(${_(t.x)}, ${_(t.y)}, ${_(t.z)}, ${_(t.w)})`;const e=t;return`vec4(${_(e[0])}, ${_(e[1])}, ${_(e[2])}, ${_(e[3])})`}case"mat2":case"mat2x2":{const e=t,i=e instanceof is?e.elements:t,s=new Array(4).fill(0).map((r,a)=>_(i[a]));return`${A}(${s.join(", ")})`}case"mat2x3":{const e=t,i=new Array(6).fill(0).map((s,r)=>_(e[r]));return`${A}(${i.join(", ")})`}case"mat2x4":{const e=t,i=new Array(8).fill(0).map((s,r)=>_(e[r]));return`${A}(${i.join(", ")})`}case"mat3":case"mat3x3":{const e=t,i=e instanceof XA?e.elements:t,s=new Array(9).fill(0).map((r,a)=>_(i[a]));return`${A}(${s.join(", ")})`}case"mat3x2":{const e=t,i=new Array(6).fill(0).map((s,r)=>_(e[r]));return`${A}(${i.join(", ")})`}case"mat3x4":{const e=t,i=new Array(12).fill(0).map((s,r)=>_(e[r]));return`${A}(${i.join(", ")})`}case"mat4":case"mat4x4":{const e=t,i=e instanceof EA?e.elements:t,s=new Array(16).fill(0).map((r,a)=>_(i[a]));return`${A}(${s.join(", ")})`}case"mat4x2":{const e=t,i=new Array(8).fill(0).map((s,r)=>_(e[r]));return`${A}(${i.join(", ")})`}case"mat4x3":{const e=t,i=new Array(12).fill(0).map((s,r)=>_(e[r]));return`${A}(${i.join(", ")})`}default:throw new Error(`Type not implemented: ${String(A)}`)}}}function Ra(n,A){return new ka(n,A)}const kn="    ";class Ga{constructor({indent:A}={}){this.globals=new Set,this.statements=[],this.uniforms={},this.declares=new Set,this.updaters=[],this.sequence=0,this.indent=kn,this.indent=A??kn}nextSequence(){return this.sequence++}}class uA{constructor({inTypes:A,outTypes:t,inputs:e,update:i,globals:s,statements:r,generate:a}){this.inTypes=A??{},this.outTypes=t??{},this.inputs=e??{},this.update=i,this.globals=s,this.statements=r,this.generate=a??(({inputs:o,outputs:g,compile:I})=>{var h,B;return{globals:(h=this.globals)==null?void 0:h.call(this,{inputs:o,outputs:g,compile:I}),statements:(B=this.statements)==null?void 0:B.call(this,{inputs:o,outputs:g,compile:I})}})}get outputs(){const A={};for(const t in this.outTypes)A[t]=new RA(this,t);return A}apply(A){return Object.assign(this.inputs,A),this.outputs}compile({inputs:A,outputs:t,compile:e}){const i=[`// ${this.constructor.name}(${Object.values(A).join(", ")}) => (${Object.values(t).join(", ")})`],s=[];for(const g in t){const I=t[g];I&&!e.declares.has(I)&&(e.declares.add(I),s.push(g))}const{globals:r,statements:a,uniforms:o}=this.generate({inputs:A,outputs:t,compile:e});for(const g of r??[])e.globals.add(g);for(const g in o)e.uniforms[g]=o[g];this.update&&e.updaters.push(this.update);for(const g of s){const I=t[g];I&&(e.uniforms[I]||i.push(`${Rn(I,this.outTypes[g])};`))}return a!=null&&a.length&&(i.push("{"),i.push(...a.map(g=>e.indent+g)),i.push("}")),i}}class ba extends uA{constructor({inTypes:A,outTypes:t,inputs:e,update:i,globals:s,construct:r}){super({inTypes:A,outTypes:t,inputs:e,update:i,globals:s,generate:a=>this.generateBlock(a)}),this.construct=r}generateBlock({inputs:A,outputs:t,compile:e}){var c,C;const i={},s={};for(const l in A)A[l]!=null&&(i[l]=new ni(this.inTypes[l],A[l]));for(const l in t)t[l]!=null&&(s[l]=new bt(this.outTypes[l]));const r={roots:[]},a=this.construct(i,s,r);for(const l of((c=this.globals)==null?void 0:c.call(this,{inputs:A,outputs:t,compile:e}))??[])e.globals.add(l);const o=[],g=new Map;function I(l,E,u){let d=g.get(l);if(!d){d={sequence:e.nextSequence(),outNames:new Map,newOuts:new Set},g.set(l,d);for(const y in l.inputs){let w=l.inputs[y];for(;w;){if(w instanceof bt){w instanceof RA&&I(w.dyno,w.key);break}w=w.dynoOut()}}o.push(l)}E&&(u||d.newOuts.add(E),d.outNames.set(E,u??`${E}_${d.sequence}`))}for(const l of r.roots)I(l);for(const l in s){let E=(a==null?void 0:a[l])??s[l];for(;E;){if(E instanceof bt){E instanceof RA&&I(E.dyno,E.key,t[l]);break}E=E.dynoOut()}s[l]=E}const h=[];for(const l of o){const E={},u={};for(const w in l.inputs){let x=l.inputs[w];for(;x;){if(x instanceof bt){if(x instanceof ni)E[w]=x.getLiteral();else if(x instanceof RA){const M=(C=g.get(x.dyno))==null?void 0:C.outNames.get(x.key);if(!M)throw new Error(`Source not found for ${x.dyno.constructor.name}.${x.key}`);E[w]=M}break}x=x.dynoOut()}}const d=g.get(l)??{outNames:new Map};for(const[w,x]of d.outNames.entries())u[w]=x;const y=l.compile({inputs:E,outputs:u,compile:e});h.push(y)}const B=[];for(const l in t)s[l]instanceof ni&&B.push(`${t[l]} = ${s[l].getLiteral()};`);return B.length>0&&h.push(B),{statements:h.flatMap((l,E)=>E===0?l:["",...l])}}}function ri(n,A,t,{update:e,globals:i}={}){return new ba({inTypes:n,outTypes:A,construct:t,update:e,globals:i})}function ss({inTypes:n,outTypes:A,inputs:t,update:e,globals:i,statements:s,generate:r}){return new uA({inTypes:n,outTypes:A,inputs:t,update:e,globals:i,statements:s,generate:r})}function Rn(n,A,t){const e=typeof A=="string"?A:A.type;if(!e)throw new Error(`Invalid DynoType: ${String(A)}`);return`${e} ${n}${t!=null?`[${t}]`:""}`}function gt(n){var s;let A=!1;const t=n.split(`\n`).map(r=>{const a=r.trimEnd();return A?a:a.length>0?(A=!0,a):null}).filter(r=>r!=null);for(;t.length>0&&t[t.length-1].length===0;)t.pop();if(t.length===0)return[];const e=(s=t[0].match(/^\\s*/))==null?void 0:s[0];if(!e)return t;const i=new RegExp(`^${e}`);return t.map(r=>r.replace(i,""))}function OA(n){return gt(n).join(`\n`)}class Ua extends uA{constructor({a:A,outKey:t,outTypeFunc:e}){const i={a:Gt(A)},s=e(Gt(A)),r={[t]:s};super({inTypes:i,outTypes:r,inputs:{a:A}}),this.outKey=t}dynoOut(){return new RA(this,this.outKey)}}class ai extends uA{constructor({a:A,b:t,outKey:e,outTypeFunc:i}){const s={a:Gt(A),b:Gt(t)},r=i(Gt(A),Gt(t)),a={[e]:r};super({inTypes:s,outTypes:a,inputs:{a:A,b:t}}),this.outKey=e}dynoOut(){return new RA(this,this.outKey)}}const ns=new Float32Array(1),Gn=new Uint32Array(ns.buffer);function se(n){ns[0]=n;const A=Gn[0],t=A>>31&1,e=A>>23&255,i=A&8388607,s=t<<15;if(e===255)return i!==0?s|32767:s|31744;const r=e-127+15;if(r>=31)return s|31744;if(r<=0){if(r<-10)return s;const o=(i|8388608)>>1-r+13;return s|o}const a=i>>13;return s|r<<10|a}function tA(n){const A=n>>15&1,t=n>>10&31,e=n&1023;let i;if(t===0)if(e===0)i=A<<31;else{let s=e,r=-14;for(;(s&1024)===0;)s<<=1,r--;s&=1023;const a=r+127,o=s<<13;i=A<<31|a<<23|o}else if(t===31)e===0?i=A<<31|2139095040:i=A<<31|2143289344;else{const s=t-15+127,r=e<<13;i=A<<31|s<<23|r}return Gn[0]=i,ns[0]}function YA(n){return Math.max(0,Math.min(255,Math.round(n*255)))}function bn(n){const A=[],t=new Set;function e(i){i&&typeof i=="object"&&!t.has(i)&&(t.add(i),i instanceof ArrayBuffer?A.push(i):ArrayBuffer.isView(i)?A.push(i.buffer):Array.isArray(i)?i.forEach(e):Object.values(i).forEach(e))}return e(n),A}function we(n,A,t,e,i,s,r,a,o,g,I,h,B,Q,c,C){const l=YA(Q),E=YA(c),u=YA(C),d=YA(B),y=Tn(new oA(o,g,I,h)),w=y&255,x=y>>>8&255,M=y>>>16&255,p=s<jt?0:Math.min(255,Math.max(1,Math.round((Math.log(s)-$A)/ot)+1)),m=r<jt?0:Math.min(255,Math.max(1,Math.round((Math.log(r)-$A)/ot)+1)),F=a<jt?0:Math.min(255,Math.max(1,Math.round((Math.log(a)-$A)/ot)+1)),D=se(t),S=se(e),N=se(i),k=A*4;n[k]=l|E<<8|u<<16|d<<24,n[k+1]=D|S<<16,n[k+2]=N|w<<16|x<<24,n[k+3]=p|m<<8|F<<16|M<<24}function Un(n,A,t,e,i){const s=se(t),r=se(e),a=se(i),o=A*4;n[o+1]=s|r<<16,n[o+2]=a|n[o+2]&4294901760}function Ln(n,A,t,e,i){const s=t<jt?0:Math.min(255,Math.max(1,Math.round((Math.log(t)-$A)/ot)+1)),r=e<jt?0:Math.min(255,Math.max(1,Math.round((Math.log(e)-$A)/ot)+1)),a=i<jt?0:Math.min(255,Math.max(1,Math.round((Math.log(i)-$A)/ot)+1)),o=A*4;n[o+3]=s|r<<8|a<<16|n[o+3]&4278190080}function Yn(n,A,t,e,i,s){const r=Tn(new oA(t,e,i,s)),a=r&255,o=r>>>8&255,g=r>>>16&255,I=A*4;n[I+2]=n[I+2]&65535|a<<16|o<<24,n[I+3]=n[I+3]&16777215|g<<24}function La(n,A,t,e,i,s){const r=YA(t),a=YA(e),o=YA(i),g=YA(s),I=A*4;n[I]=r|a<<8|o<<16|g<<24}function Ya(n,A,t,e,i){const s=YA(t),r=YA(e),a=YA(i),o=A*4;n[o]=s|r<<8|a<<16|n[o]&4278190080}function Ja(n,A,t){const e=YA(t),i=A*4;n[i]=n[i]&16777215|e<<24}const Ta=new f,va=new f,za=new oA,Ha=new kt,qa={center:Ta,scales:va,quaternion:za,color:Ha,opacity:0};function Jn(n,A){const t=qa,e=A*4,i=n[e],s=n[e+1],r=n[e+2],a=n[e+3];t.color.set((i&255)/255,(i>>>8&255)/255,(i>>>16&255)/255),t.opacity=(i>>>24&255)/255,t.center.set(tA(s&65535),tA(s>>>16&65535),tA(r&65535));const o=a&255;t.scales.x=o===0?0:Math.exp($A+(o-1)*ot);const g=a>>>8&255;t.scales.y=g===0?0:Math.exp($A+(g-1)*ot);const I=a>>>16&255;t.scales.z=I===0?0:Math.exp($A+(I-1)*ot);const h=r>>>16&65535|a>>>8&16711680;return Ka(h,t.quaternion),t}function GA(n){const A=O,t=Math.max(Nn,Math.min(pt,Math.ceil(n/A))),e=Math.ceil(n/(A*t)),i=A*t*e;return{width:A,height:t,depth:e,maxSplats:i}}function oi(n){const A=O,t=Math.max(Nn,Math.min(pt,Math.ceil(n/A))),e=Math.ceil(n/(A*t));return A*t*e}const _a=OA(`\n  precision highp float;\n\n  in vec3 position;\n\n  void main() {\n    gl_Position = vec4(position.xy, 0.0, 1.0);\n  }\n`);function Tn(n){const A=n.clone().normalize();A.w<0&&A.set(-A.x,-A.y,-A.z,-A.w);const t=2*Math.acos(A.w),e=Math.sqrt(A.x*A.x+A.y*A.y+A.z*A.z),i=e<1e-6?new f(1,0,0):new f(A.x,A.y,A.z).divideScalar(e),s=Math.abs(i.x)+Math.abs(i.y)+Math.abs(i.z);let r=i.x/s,a=i.y/s;if(i.z<0){const Q=r;r=(1-Math.abs(a))*(r>=0?1:-1),a=(1-Math.abs(Q))*(a>=0?1:-1)}const o=r*.5+.5,g=a*.5+.5,I=Math.round(o*255),h=Math.round(g*255);return Math.round(t*(255/Math.PI))<<16|h<<8|I}function Ka(n,A){const t=n&255,e=n>>>8&255,i=n>>>16&255,s=t/255,r=e/255;let a=(s-.5)*2,o=(r-.5)*2;const g=1-(Math.abs(a)+Math.abs(o)),I=Math.max(-g,0);a+=a>=0?-I:I,o+=o>=0?-I:I;const h=new f(a,o,g).normalize(),Q=i/255*Math.PI*.5,c=Math.sin(Q),C=Math.cos(Q);return A.set(h.x*c,h.y*c,h.z*c,C),A}function gi(n,A,t,e){const i=Math.max(-127,Math.min(127,n*127)),s=Math.max(-127,Math.min(127,A*127)),r=Math.max(-127,Math.min(127,t*127)),a=Math.max(-127,Math.min(127,e*127));return i&255|(s&255)<<8|(r&255)<<16|(a&255)<<24}function Ii(n,A,t){const e=A*2;for(let i=0;i<9;++i){const s=Math.max(-63,Math.min(63,t[i]*63))&127,r=i*7,a=r+7,o=Math.floor(r/32),g=r-o*32,I=s<<g&4294967295;if(n[e+o]|=I,a>o*32+32){const h=s>>>32-g&4294967295;n[e+o+1]|=h}}}function hi(n,A,t){n[A*4+0]=gi(t[0],t[1],t[2],t[3]),n[A*4+1]=gi(t[4],t[5],t[6],t[7]),n[A*4+2]=gi(t[8],t[9],t[10],t[11]),n[A*4+3]=gi(t[12],t[13],t[14],0)}function Bi(n,A,t){const e=A*4;for(let i=0;i<21;++i){const s=Math.max(-31,Math.min(31,t[i]*31))&63,r=i*6,a=r+6,o=Math.floor(r/32),g=r-o*32,I=s<<g&4294967295;if(n[e+o]|=I,a>o*32+32){const h=s>>>32-g&4294967295;n[e+o+1]|=h}}}function Za(n,A){const t=[];let e=0,i=null;const s=new Ts((o,g)=>{if(t.push(o),e+=o.length,g||e>=A){const I=new Uint8Array(e);let h=0;for(const B of t)I.set(B,h),h+=B.length;i=I.slice(0,A)}}),r=1024;let a=0;for(;i==null&&a<n.length;){const o=n.slice(a,a+r);s.push(o,!1),a+=r}if(i==null&&(s.push(new Uint8Array,!0),i==null))throw new Error("Failed to decompress partial gzip");return i}class Oa{constructor({fileBytes:A,chunkBytes:t=64*1024}){this.fileBytes=A,this.chunkBytes=t,this.offset=0,this.chunks=[],this.totalBytes=0,this.gunzip=new Ts((e,i)=>{this.chunks.push(e),this.totalBytes+=e.length})}read(A){for(;this.totalBytes<A&&this.offset<this.fileBytes.length;){const s=Math.min(this.offset+this.chunkBytes,this.fileBytes.length);this.gunzip.push(this.fileBytes.subarray(this.offset,s),!1),this.offset=s}if(this.totalBytes<A&&this.offset>=this.fileBytes.length&&this.gunzip.push(new Uint8Array(0),!0),this.totalBytes<A)throw new Error(`Unexpected EOF: needed ${A}, got ${this.totalBytes}`);const t=new Uint8Array(this.totalBytes);let e=0;for(const s of this.chunks)t.set(s,e),e+=s.length;const i=t.subarray(0,A);return this.chunks=[t.subarray(A)],this.totalBytes-=A,i}}function vn(n,A,t){const e=Math.floor(n.length/32);if(e*32!==n.length)throw new Error("Invalid .splat file size");A(e);const i=new Float32Array(n.buffer);for(let s=0;s<e;++s){const r=s*32,a=s*8,o=i[a+0],g=i[a+1],I=i[a+2],h=i[a+3],B=i[a+4],Q=i[a+5],c=n[r+24]/255,C=n[r+25]/255,l=n[r+26]/255,E=n[r+27]/255,u=(n[r+28]-128)/128,d=(n[r+29]-128)/128,y=(n[r+30]-128)/128,w=(n[r+31]-128)/128;t(s,o,g,I,h,B,Q,d,y,w,u,E,c,C,l)}}function Va(n){let A=0,t=0,e=new Uint32Array(0);return vn(n,i=>{A=i,t=oi(A),e=new Uint32Array(t*4)},(i,s,r,a,o,g,I,h,B,Q,c,C,l,E,u)=>{we(e,i,s,r,a,o,g,I,h,B,Q,c,C,l,E,u)}),{packedArray:e,numSplats:A}}const Qi={0:{bytesPerCenter:12,bytesPerScale:12,bytesPerRotation:16,bytesPerColor:4,bytesPerSphericalHarmonicsComponent:4,scaleOffsetBytes:12,rotationOffsetBytes:24,colorOffsetBytes:40,sphericalHarmonicsOffsetBytes:44,scaleRange:1},1:{bytesPerCenter:6,bytesPerScale:6,bytesPerRotation:8,bytesPerColor:4,bytesPerSphericalHarmonicsComponent:2,scaleOffsetBytes:6,rotationOffsetBytes:12,colorOffsetBytes:20,sphericalHarmonicsOffsetBytes:24,scaleRange:32767},2:{bytesPerCenter:6,bytesPerScale:6,bytesPerRotation:8,bytesPerColor:4,bytesPerSphericalHarmonicsComponent:1,scaleOffsetBytes:6,rotationOffsetBytes:12,colorOffsetBytes:20,sphericalHarmonicsOffsetBytes:24,scaleRange:32767}},zn={0:0,1:9,2:24,3:45};function Pa(n,A,t,e){var C;let r=0;const a=new DataView(n.buffer,r,4096);r+=4096;const o=a.getUint8(0),g=a.getUint8(1);if(o!==0||g<1)throw new Error(`Unsupported .ksplat version: ${o}.${g}`);const I=a.getUint32(4,!0);a.getUint32(16,!0);const h=a.getUint16(20,!0);if(h<0||h>2)throw new Error(`Invalid .ksplat compression level: ${h}`);const B=a.getFloat32(36,!0)||-1.5,Q=a.getFloat32(40,!0)||1.5;let c=4096+I*1024;for(let l=0;l<I;++l){let E=function(QA,T){if(h===0)return J.getFloat32(QA+L+T*4,!0);if(h===1)return tA(J.getUint16(QA+L+T*2,!0));const AA=J.getUint8(QA+L+T)/255;return B+AA*(Q-B)};const u=new DataView(n.buffer,r,1024);r+=1024;const d=u.getUint32(0,!0),y=u.getUint32(4,!0),w=u.getUint32(8,!0),x=u.getUint32(12,!0),M=u.getFloat32(16,!0),p=u.getUint16(20,!0),m=(u.getUint32(24,!0)||((C=Qi[h])==null?void 0:C.scaleRange))??1,F=u.getUint32(32,!0),D=F*w,S=u.getUint32(36,!0),N=S*4,k=p*x+N,G=u.getUint16(40,!0),R=zn[G],{bytesPerCenter:U,bytesPerScale:P,bytesPerRotation:K,bytesPerColor:j,bytesPerSphericalHarmonicsComponent:W,scaleOffsetBytes:$,rotationOffsetBytes:q,colorOffsetBytes:H,sphericalHarmonicsOffsetBytes:L}=Qi[h],Z=U+P+K+j+R*W,b=Z*y,yA=b+k,dA=[0,3,6,1,4,7,2,5,8],bA=[9,14,19,10,15,20,11,16,21,12,17,22,13,18,23],pA=[24,31,38,25,32,39,26,33,40,27,34,41,28,35,42,29,36,43,30,37,44],MA=G>=1?new Float32Array(3*3):void 0,SA=G>=2?new Float32Array(5*3):void 0,VA=G>=3?new Float32Array(7*3):void 0,FA=M/2/m,JA=c+N,TA=c+k,J=new DataView(n.buffer,TA,b),BA=new Float32Array(n.buffer,JA,x*3),Y=new Uint32Array(n.buffer,c,S);let Bt=F,he=D;for(let QA=0;QA<d;++QA){const T=QA*Z;let AA;if(QA<D)AA=Math.floor(QA/w);else{const At=Y[Bt-F];QA>=he+At&&(Bt+=1,he+=At),AA=Bt}const z=h===0?J.getFloat32(T+0,!0):(J.getUint16(T+0,!0)-m)*FA+BA[3*AA+0],PA=h===0?J.getFloat32(T+4,!0):(J.getUint16(T+2,!0)-m)*FA+BA[3*AA+1],Se=h===0?J.getFloat32(T+8,!0):(J.getUint16(T+4,!0)-m)*FA+BA[3*AA+2],Fe=h===0?J.getFloat32(T+$+0,!0):tA(J.getUint16(T+$+0,!0)),Ne=h===0?J.getFloat32(T+$+4,!0):tA(J.getUint16(T+$+2,!0)),Es=h===0?J.getFloat32(T+$+8,!0):tA(J.getUint16(T+$+4,!0)),ls=h===0?J.getFloat32(T+q+0,!0):tA(J.getUint16(T+q+0,!0)),us=h===0?J.getFloat32(T+q+4,!0):tA(J.getUint16(T+q+2,!0)),ds=h===0?J.getFloat32(T+q+8,!0):tA(J.getUint16(T+q+4,!0)),fs=h===0?J.getFloat32(T+q+12,!0):tA(J.getUint16(T+q+6,!0)),ys=J.getUint8(T+H+0)/255,ps=J.getUint8(T+H+1)/255,ws=J.getUint8(T+H+2)/255,ms=J.getUint8(T+H+3)/255;if(t(QA,z,PA,Se,Fe,Ne,Es,us,ds,fs,ls,ms,ys,ps,ws),G>=1&&MA){for(const[At,Ut]of dA.entries())MA[At]=E(T,Ut);if(SA)for(const[At,Ut]of bA.entries())SA[At]=E(T,Ut);if(VA)for(const[At,Ut]of pA.entries())VA[At]=E(T,Ut);e==null||e(QA,MA,SA,VA)}}c+=yA}}function Wa(n){var E;let e=0;const i=new DataView(n.buffer,e,4096);e+=4096;const s=i.getUint8(0),r=i.getUint8(1);if(s!==0||r<1)throw new Error(`Unsupported .ksplat version: ${s}.${r}`);const a=i.getUint32(4,!0),o=i.getUint32(16,!0),g=i.getUint16(20,!0);if(g<0||g>2)throw new Error(`Invalid .ksplat compression level: ${g}`);const I=i.getFloat32(36,!0)||-1.5,h=i.getFloat32(40,!0)||1.5,B=o,Q=oi(B),c=new Uint32Array(Q*4),C={};let l=4096+a*1024;for(let u=0;u<a;++u){let d=function(AA,z){if(g===0)return Y.getFloat32(AA+b+z*4,!0);if(g===1)return tA(Y.getUint16(AA+b+z*2,!0));const PA=Y.getUint8(AA+b+z)/255;return I+PA*(h-I)};const y=new DataView(n.buffer,e,1024);e+=1024;const w=y.getUint32(0,!0),x=y.getUint32(4,!0),M=y.getUint32(8,!0),p=y.getUint32(12,!0),m=y.getFloat32(16,!0),F=y.getUint16(20,!0),D=(y.getUint32(24,!0)||((E=Qi[g])==null?void 0:E.scaleRange))??1,S=y.getUint32(32,!0),N=S*M,k=y.getUint32(36,!0),G=k*4,R=F*p+G,U=y.getUint16(40,!0),P=zn[U],{bytesPerCenter:K,bytesPerScale:j,bytesPerRotation:W,bytesPerColor:$,bytesPerSphericalHarmonicsComponent:q,scaleOffsetBytes:H,rotationOffsetBytes:L,colorOffsetBytes:Z,sphericalHarmonicsOffsetBytes:b}=Qi[g],yA=K+j+W+$+P*q,dA=yA*x,bA=dA+R,pA=[0,3,6,1,4,7,2,5,8],MA=[9,14,19,10,15,20,11,16,21,12,17,22,13,18,23],SA=[24,31,38,25,32,39,26,33,40,27,34,41,28,35,42,29,36,43,30,37,44],VA=U>=1?new Float32Array(3*3):void 0,FA=U>=2?new Float32Array(5*3):void 0,JA=U>=3?new Float32Array(7*3):void 0,TA=m/2/D,J=l+G,BA=l+R,Y=new DataView(n.buffer,BA,dA),Bt=new Float32Array(n.buffer,J,p*3),he=new Uint32Array(n.buffer,l,k);let QA=S,T=N;for(let AA=0;AA<w;++AA){const z=AA*yA;let PA;if(AA<N)PA=Math.floor(AA/M);else{const Dt=he[QA-S];AA>=T+Dt&&(QA+=1,T+=Dt),PA=QA}const Se=g===0?Y.getFloat32(z+0,!0):(Y.getUint16(z+0,!0)-D)*TA+Bt[3*PA+0],Fe=g===0?Y.getFloat32(z+4,!0):(Y.getUint16(z+2,!0)-D)*TA+Bt[3*PA+1],Ne=g===0?Y.getFloat32(z+8,!0):(Y.getUint16(z+4,!0)-D)*TA+Bt[3*PA+2],Es=g===0?Y.getFloat32(z+H+0,!0):tA(Y.getUint16(z+H+0,!0)),ls=g===0?Y.getFloat32(z+H+4,!0):tA(Y.getUint16(z+H+2,!0)),us=g===0?Y.getFloat32(z+H+8,!0):tA(Y.getUint16(z+H+4,!0)),ds=g===0?Y.getFloat32(z+L+0,!0):tA(Y.getUint16(z+L+0,!0)),fs=g===0?Y.getFloat32(z+L+4,!0):tA(Y.getUint16(z+L+2,!0)),ys=g===0?Y.getFloat32(z+L+8,!0):tA(Y.getUint16(z+L+4,!0)),ps=g===0?Y.getFloat32(z+L+12,!0):tA(Y.getUint16(z+L+6,!0)),ws=Y.getUint8(z+Z+0)/255,ms=Y.getUint8(z+Z+1)/255,At=Y.getUint8(z+Z+2)/255,Ut=Y.getUint8(z+Z+3)/255;if(we(c,AA,Se,Fe,Ne,Es,ls,us,fs,ys,ps,ds,Ut,ws,ms,At),U>=1){if(VA){C.sh1||(C.sh1=new Uint32Array(B*2));for(const[Dt,ke]of pA.entries())VA[Dt]=d(z,ke);Ii(C.sh1,AA,VA)}if(FA){C.sh2||(C.sh2=new Uint32Array(B*4));for(const[Dt,ke]of MA.entries())FA[Dt]=d(z,ke);hi(C.sh2,AA,FA)}if(JA){C.sh3||(C.sh3=new Uint32Array(B*4));for(const[Dt,ke]of SA.entries())JA[Dt]=d(z,ke);Bi(C.sh3,AA,JA)}}}l+=bA}return{packedArray:c,numSplats:B,extra:C}}const xA={type:"Gsplat"},rs={type:"PackedSplats"},Xa=(n,A)=>new Ao({packedSplats:n,index:A}),ja=(n,A,t,e)=>new to({packedSplats:n,index:A,base:t,count:e}),ci=n=>new eo({gsplat:n}),as=({gsplat:n,flags:A,index:t,center:e,scales:i,quaternion:s,rgba:r,rgb:a,opacity:o,x:g,y:I,z:h,r:B,g:Q,b:c})=>new io({gsplat:n,flags:A,index:t,center:e,scales:i,quaternion:s,rgba:r,rgb:a,opacity:o,x:g,y:I,z:h,r:B,g:Q,b:c}),$a=(n,{scale:A,rotate:t,translate:e,recolor:i})=>new so({gsplat:n,scale:A,rotate:t,translate:e,recolor:i}),It=OA(`\n  struct Gsplat {\n    vec3 center;\n    uint flags;\n    vec3 scales;\n    int index;\n    vec4 quaternion;\n    vec4 rgba;\n  };\n  const uint GSPLAT_FLAG_ACTIVE = 1u << 0u;\n\n  bool isGsplatActive(uint flags) {\n    return (flags & GSPLAT_FLAG_ACTIVE) != 0u;\n  }\n`),os=OA(`\n  struct PackedSplats {\n    usampler2DArray texture;\n    int numSplats;\n  };\n`),Hn=OA(`\n  bool readPackedSplat(usampler2DArray texture, int numSplats, int index, out Gsplat gsplat) {\n    if ((index >= 0) && (index < numSplats)) {\n      uvec4 packed = texelFetch(texture, splatTexCoord(index), 0);\n      unpackSplat(packed, gsplat.center, gsplat.scales, gsplat.quaternion, gsplat.rgba);\n      return true;\n    } else {\n      return false;\n    }\n  }\n`);class Ao extends uA{constructor({packedSplats:A,index:t}){super({inTypes:{packedSplats:rs,index:"int"},outTypes:{gsplat:xA},inputs:{packedSplats:A,index:t},globals:()=>[It,os,Hn],statements:({inputs:e,outputs:i})=>{const{gsplat:s}=i;if(!s)return[];const{packedSplats:r,index:a}=e;let o;return r&&a?o=gt(`\n            if (readPackedSplat(${r}.texture, ${r}.numSplats, ${a}, ${s})) {\n              bool zeroSize = all(equal(${s}.scales, vec3(0.0, 0.0, 0.0)));\n              ${s}.flags = zeroSize ? 0u : GSPLAT_FLAG_ACTIVE;\n            } else {\n              ${s}.flags = 0u;\n            }\n          `):o=[`${s}.flags = 0u;`],o.push(`${s}.index = ${a??"0"};`),o}})}dynoOut(){return new RA(this,"gsplat")}}class to extends uA{constructor({packedSplats:A,index:t,base:e,count:i}){super({inTypes:{packedSplats:rs,index:"int",base:"int",count:"int"},outTypes:{gsplat:xA},inputs:{packedSplats:A,index:t,base:e,count:i},globals:()=>[It,os,Hn],statements:({inputs:s,outputs:r})=>{const{gsplat:a}=r;if(!a)return[];const{packedSplats:o,index:g,base:I,count:h}=s;let B;return o&&g&&I&&h?B=gt(`\n            ${a}.flags = 0u;\n            if ((${g} >= ${I}) && (${g} < (${I} + ${h}))) {\n              if (readPackedSplat(${o}.texture, ${o}.numSplats, ${g}, ${a})) {\n                bool zeroSize = all(equal(${a}.scales, vec3(0.0, 0.0, 0.0)));\n                ${a}.flags = zeroSize ? 0u : GSPLAT_FLAG_ACTIVE;\n              }\n            }\n          `):B=[`${a}.flags = 0u;`],B.push(`${a}.index = ${g??"0"};`),B}})}dynoOut(){return new RA(this,"gsplat")}}class eo extends uA{constructor({gsplat:A}){super({inTypes:{gsplat:xA},outTypes:{flags:"uint",active:"bool",index:"int",center:"vec3",scales:"vec3",quaternion:"vec4",rgba:"vec4",rgb:"vec3",opacity:"float",x:"float",y:"float",z:"float",r:"float",g:"float",b:"float"},inputs:{gsplat:A},globals:()=>[It],statements:({inputs:t,outputs:e})=>{const{gsplat:i}=t,{flags:s,active:r,index:a,center:o,scales:g,quaternion:I,rgba:h,rgb:B,opacity:Q,x:c,y:C,z:l,r:E,g:u,b:d}=e;return[s?`${s} = ${i?`${i}.flags`:"0u"};`:null,r?`${r} = isGsplatActive(${i?`${i}.flags`:"0u"});`:null,a?`${a} = ${i?`${i}.index`:"0"};`:null,o?`${o} = ${i?`${i}.center`:"vec3(0.0, 0.0, 0.0)"};`:null,g?`${g} = ${i?`${i}.scales`:"vec3(0.0, 0.0, 0.0)"};`:null,I?`${I} = ${i?`${i}.quaternion`:"vec4(0.0, 0.0, 0.0, 1.0)"};`:null,h?`${h} = ${i?`${i}.rgba`:"vec4(0.0, 0.0, 0.0, 0.0)"};`:null,B?`${B} = ${i?`${i}.rgba.rgb`:"vec3(0.0, 0.0, 0.0)"};`:null,Q?`${Q} = ${i?`${i}.rgba.a`:"0.0"};`:null,c?`${c} = ${i?`${i}.center.x`:"0.0"};`:null,C?`${C} = ${i?`${i}.center.y`:"0.0"};`:null,l?`${l} = ${i?`${i}.center.z`:"0.0"};`:null,E?`${E} = ${i?`${i}.rgba.r`:"0.0"};`:null,u?`${u} = ${i?`${i}.rgba.g`:"0.0"};`:null,d?`${d} = ${i?`${i}.rgba.b`:"0.0"};`:null].filter(Boolean)}})}}class io extends uA{constructor({gsplat:A,flags:t,index:e,center:i,scales:s,quaternion:r,rgba:a,rgb:o,opacity:g,x:I,y:h,z:B,r:Q,g:c,b:C}){super({inTypes:{gsplat:xA,flags:"uint",index:"int",center:"vec3",scales:"vec3",quaternion:"vec4",rgba:"vec4",rgb:"vec3",opacity:"float",x:"float",y:"float",z:"float",r:"float",g:"float",b:"float"},outTypes:{gsplat:xA},inputs:{gsplat:A,flags:t,index:e,center:i,scales:s,quaternion:r,rgba:a,rgb:o,opacity:g,x:I,y:h,z:B,r:Q,g:c,b:C},globals:()=>[It],statements:({inputs:l,outputs:E})=>{const{gsplat:u}=E;if(!u)return[];const{gsplat:d,flags:y,index:w,center:x,scales:M,quaternion:p,rgba:m,rgb:F,opacity:D,x:S,y:N,z:k,r:G,g:R,b:U}=l;return[`${u}.flags = ${y??(d?`${d}.flags`:"0u")};`,`${u}.index = ${w??(d?`${d}.index`:"0")};`,`${u}.center = ${x??(d?`${d}.center`:"vec3(0.0, 0.0, 0.0)")};`,`${u}.scales = ${M??(d?`${d}.scales`:"vec3(0.0, 0.0, 0.0)")};`,`${u}.quaternion = ${p??(d?`${d}.quaternion`:"vec4(0.0, 0.0, 0.0, 1.0)")};`,`${u}.rgba = ${m??(d?`${d}.rgba`:"vec4(0.0, 0.0, 0.0, 0.0)")};`,F?`${u}.rgba.rgb = ${F};`:null,D?`${u}.rgba.a = ${D};`:null,S?`${u}.center.x = ${S};`:null,N?`${u}.center.y = ${N};`:null,k?`${u}.center.z = ${k};`:null,G?`${u}.rgba.r = ${G};`:null,R?`${u}.rgba.g = ${R};`:null,U?`${u}.rgba.b = ${U};`:null].filter(Boolean)}})}dynoOut(){return new RA(this,"gsplat")}}OA(`\n  vec3 gsplatNormal(vec3 scales, vec4 quaternion) {\n    float minScale = min(scales.x, min(scales.y, scales.z));\n    vec3 normal;\n    if (scales.z == minScale) {\n      normal = vec3(0.0, 0.0, 1.0);\n    } else if (scales.y == minScale) {\n      normal = vec3(0.0, 1.0, 0.0);\n    } else {\n      normal = vec3(1.0, 0.0, 0.0);\n    }\n    return quatVec(quaternion, normal);\n  }\n`);class so extends uA{constructor({gsplat:A,scale:t,rotate:e,translate:i,recolor:s}){super({inTypes:{gsplat:xA,scale:"float",rotate:"vec4",translate:"vec3",recolor:"vec4"},outTypes:{gsplat:xA},inputs:{gsplat:A,scale:t,rotate:e,translate:i,recolor:s},globals:()=>[It],statements:({inputs:r,outputs:a,compile:o})=>{const{gsplat:g}=a;if(!g||!r.gsplat)return[];const{scale:I,rotate:h,translate:B,recolor:Q}=r,c=o.indent;return[`${g} = ${r.gsplat};`,`if (isGsplatActive(${g}.flags)) {`,I?`${c}${g}.center *= ${I};`:null,h?`${c}${g}.center = quatVec(${h}, ${g}.center);`:null,B?`${c}${g}.center += ${B};`:null,I?`${c}${g}.scales *= ${I};`:null,h?`${c}${g}.quaternion = quatQuat(${h}, ${g}.quaternion);`:null,Q?`${c}${g}.rgba *= ${Q};`:null,"}"].filter(Boolean)}})}dynoOut(){return new RA(this,"gsplat")}}const no=n=>new ro({gsplat:n});class ro extends uA{constructor({gsplat:A}){super({inTypes:{gsplat:xA},inputs:{gsplat:A},globals:()=>[It],statements:({inputs:t,outputs:e})=>{const{output:i}=e;if(!i)return[];const{gsplat:s}=t;return s?gt(`\n            if (isGsplatActive(${s}.flags)) {\n              ${i} = packSplat(${s}.center, ${s}.scales, ${s}.quaternion, ${s}.rgba);\n            } else {\n              ${i} = uvec4(0u, 0u, 0u, 0u);\n            }\n          `):[`${i} = uvec4(0u, 0u, 0u, 0u);`]}})}dynoOut(){return new RA(this,"output")}}class ao extends uA{constructor({rgba8:A}){super({inTypes:{rgba8:"vec4"},inputs:{rgba8:A},statements:({inputs:t,outputs:e})=>[`target = ${t.rgba8??"vec4(0.0, 0.0, 0.0, 0.0)"};`]})}dynoOut(){return new RA(this,"rgba8")}}class ht extends uA{constructor({key:A,type:t,count:e,value:i,update:s,globals:r}){A=A??"value",super({outTypes:{[A]:t},update:()=>{if(s){const a=s(this.value);a!==void 0&&(this.value=a)}this.uniform.value=this.value},generate:({inputs:a,outputs:o})=>{const g=(r==null?void 0:r({inputs:a,outputs:o}))??[],I={},h=o[A];return h&&(g.push(`uniform ${Rn(h,t,e)};`),I[h]=this.uniform),{globals:g,uniforms:I}}}),this.type=t,this.count=e,this.value=i,this.uniform={value:i},this.outKey=A}dynoOut(){return new RA(this,this.outKey)}}class gs extends ht{constructor({key:A,value:t,update:e}){super({key:A,type:"int",value:t,update:e})}}class Ci extends ht{constructor({key:A,value:t,update:e}){super({key:A,type:"float",value:t,update:e})}}class oo extends ht{constructor({key:A,value:t,update:e}){super({key:A,type:"vec3",value:t,update:e})}}class qn extends ht{constructor({key:A,value:t,update:e}){super({key:A,type:"vec4",value:t,update:e})}}class Is extends ht{constructor({key:A,value:t,update:e}){super({key:A,type:"usampler2DArray",value:t,update:e})}}class _n{constructor({graph:A,inputs:t,outputs:e,template:i}){this.graph=A,this.template=i,this.inputs=t??{},this.outputs=e??{};const s=new Ga({indent:this.template.indent});for(const a in this.outputs)this.outputs[a]&&s.declares.add(this.outputs[a]);const r=A.compile({inputs:this.inputs,outputs:this.outputs,compile:s});this.shader=i.generate({globals:s.globals,statements:r}),this.uniforms=s.uniforms,this.updaters=s.updaters}prepareMaterial(){return go(this)}update(){for(const A of this.updaters)A()}}class Kn{constructor(A){const t=A.match(/^([ \\t]*)\\{\\{\\s*GLOBALS\\s*\\}\\}/m),e=A.match(/^([ \\t]*)\\{\\{\\s*STATEMENTS\\s*\\}\\}/m);if(!t||!e)throw new Error("Template must contain {{ GLOBALS }} and {{ STATEMENTS }}");this.before=A.substring(0,t.index),this.between=A.substring(t.index+t[0].length,e.index),this.after=A.substring(e.index+e[0].length),this.indent=e[1]}generate({globals:A,statements:t}){return this.before+Array.from(A).join(`\n\n`)+this.between+t.map(e=>this.indent+e).join(`\n`)+this.after}}const Zn=new Map;function go(n){let A=Zn.get(n);return A||(A=new ts({glslVersion:Zr,vertexShader:_a,fragmentShader:n.shader,uniforms:n.uniforms}),Zn.set(n,A),A)}function On(n,A,t="add"){const e=()=>{throw new Error(`Invalid ${t} types: ${n}, ${A}`)};if(n===A)return n;if(n==="int"){if($t(A))return A;e()}if(A==="int"){if($t(n))return n;e()}if(n==="uint"){if(Ae(A))return A;e()}if(A==="uint"){if(Ae(n))return n;e()}if(n==="float"){if(si(A))return A;e()}if(A==="float"){if(si(n))return n;e()}throw new Error(`Invalid ${t} types: ${n}, ${A}`)}function Io(n,A){return On(n,A,"sub")}function ho(n,A){const t=()=>{throw new Error(`Invalid mul types: ${n}, ${A}`)},e=i=>i;if(n==="int"){if($t(A))return e(A);t()}if(A==="int"){if($t(n))return e(n);t()}if(n==="uint"){if(Ae(A))return e(A);t()}if(A==="uint"){if(Ae(n))return e(n);t()}if(n==="float"){if(si(A))return e(A);t()}if(A==="float"){if(si(n))return e(n);t()}if($t(n)||Ae(n)||$t(A)||Ae(A)){if(n===A)return e(n);t()}if(n==="vec2"){if(A==="vec2"||te(A))return e("vec2");if(A==="mat3x2")return e("vec3");if(A==="mat4x2")return e("vec4");t()}if(n==="vec3"){if(A==="mat2x3")return e("vec2");if(A==="vec3"||ee(A))return e("vec3");if(A==="mat4x3")return e("vec4");t()}if(n==="vec4"){if(A==="mat2x4")return e("vec2");if(A==="mat3x4")return e("vec3");if(A==="vec4"||ie(A))return e("vec4");t()}if(A==="vec2"){if(te(n))return e("vec2");if(n==="mat2x3")return e("vec3");if(n==="mat2x4")return e("vec4");t()}if(A==="vec3"){if(n==="mat3x2")return e("vec2");if(ee(n))return e("vec3");if(n==="mat3x4")return e("vec4");t()}if(A==="vec4"){if(n==="mat4x2")return e("vec2");if(n==="mat4x3")return e("vec3");if(ie(n))return e("vec4");t()}if(te(n)){if(te(A))return e("mat2");if(A==="mat3x2")return e("mat3x2");if(A==="mat4x2")return e("mat4x2");t()}if(n==="mat2x3"){if(te(A))return e("mat2x3");if(A==="mat3x2")return e("mat3");if(A==="mat4x2")return e("mat4x3");t()}if(n==="mat2x4"){if(te(A))return e("mat2x4");if(A==="mat3x2")return e("mat3x4");if(A==="mat4x2")return e("mat4");t()}if(n==="mat3x2"){if(A==="mat2x3")return e("mat2");if(ee(A))return e("mat3x2");if(A==="mat4x3")return e("mat4x2");t()}if(ee(n)){if(A==="mat2x3")return e("mat2x3");if(ee(A))return e("mat3");if(A==="mat4x3")return e("mat4x3");t()}if(n==="mat3x4"){if(A==="mat2x3")return e("mat2x4");if(ee(A))return e("mat3x4");if(A==="mat4x3")return e("mat4");t()}if(n==="mat4x2"){if(A==="mat2x4")return e("mat2");if(A==="mat3x4")return e("mat3x2");if(ie(A))return e("mat4x2");t()}if(n==="mat4x3"){if(A==="mat2x4")return e("mat2x3");if(A==="mat3x4")return e("mat3");if(ie(A))return e("mat4x3");t()}if(ie(n)){if(A==="mat2x4")return e("mat2x4");if(A==="mat3x4")return e("mat3x4");if(ie(A))return e("mat4");t()}throw new Error(`Invalid mul types: ${n}, ${A}`)}const Ei=(n,A)=>new co({a:n,b:A}),Bo=(n,A)=>new Co({a:n,b:A}),Qo=(n,A)=>new Eo({a:n,b:A});class co extends ai{constructor({a:A,b:t}){super({a:A,b:t,outKey:"sum",outTypeFunc:On}),this.statements=({inputs:e,outputs:i})=>[`${i.sum} = ${e.a} + ${e.b};`]}}class Co extends ai{constructor({a:A,b:t}){super({a:A,b:t,outKey:"difference",outTypeFunc:Io}),this.statements=({inputs:e,outputs:i})=>[`${i.difference} = ${e.a} - ${e.b};`]}}class Eo extends ai{constructor({a:A,b:t}){super({a:A,b:t,outKey:"product",outTypeFunc:ho}),this.statements=({inputs:e,outputs:i})=>[`${i.product} = ${e.a} * ${e.b};`]}}const lo=n=>new fo({a:n}),uo=(n,A)=>new po({a:n,b:A});class fo extends Ua{constructor({a:A}){super({a:A,outTypeFunc:t=>t,outKey:"normalize"}),this.statements=({inputs:t,outputs:e})=>[`${e.normalize} = normalize(${t.a});`]}}function yo(n){if(n==="float")return"vec2";if(n==="vec2")return"vec3";if(n==="vec3")return"vec4";throw new Error("Invalid type")}class po extends ai{constructor({a:A,b:t}){const e=Gt(A),i=yo(e);super({a:A,b:t,outKey:"extend",outTypeFunc:()=>i}),this.statements=({inputs:s,outputs:r})=>[`${r.extend} = ${i}(${s.a}, ${s.b});`]}}const wo=(n,{scale:A,scales:t,rotate:e,translate:i})=>new Do({position:n,scale:A,scales:t,rotate:e,translate:i}).outputs.position,mo=(n,{scale:A,scales:t,rotate:e})=>new xo({dir:n,scale:A,scales:t,rotate:e}).outputs.dir;class Do extends uA{constructor({position:A,scale:t,scales:e,rotate:i,translate:s}){super({inTypes:{position:"vec3",scale:"float",scales:"vec3",rotate:"vec4",translate:"vec3"},outTypes:{position:"vec3"},inputs:{position:A,scale:t,scales:e,rotate:i,translate:s},statements:({inputs:r,outputs:a})=>{const{position:o}=a;if(!o)return[];const{scale:g,scales:I,rotate:h,translate:B}=r;return[`${o} = ${r.position??"vec3(0.0, 0.0, 0.0)"};`,g?`${o} *= ${g};`:null,I?`${o} *= ${I};`:null,h?`${o} = quatVec(${h}, ${o});`:null,B?`${o} += ${B};`:null].filter(Boolean)}})}}class xo extends uA{constructor({dir:A,scale:t,scales:e,rotate:i}){super({inTypes:{dir:"vec3",scale:"float",scales:"vec3",rotate:"vec4"},outTypes:{dir:"vec3"},inputs:{dir:A,scale:t,scales:e,rotate:i},statements:({inputs:s,outputs:r})=>{const{dir:a}=r;if(!a)return[];const{scale:o,scales:g,rotate:I}=s;return[`${a} = ${s.dir??"vec3(0.0, 0.0, 0.0)"};`,o?`${a} *= ${o};`:null,g?`${a} *= ${g};`:null,I?`${a} = quatVec(${I}, ${a});`:null].filter(Boolean)}})}}var Mo=`precision highp float;\nprecision highp int;\nprecision highp sampler2D;\nprecision highp usampler2D;\nprecision highp isampler2D;\nprecision highp sampler2DArray;\nprecision highp usampler2DArray;\nprecision highp isampler2DArray;\nprecision highp sampler3D;\nprecision highp usampler3D;\nprecision highp isampler3D;\n\n#include <splatDefines>\n\nuniform uint targetLayer;\nuniform int targetBase;\nuniform int targetCount;\n\nout uvec4 target;\n\n{{ GLOBALS }}\n\nvoid produceSplat(int index) {\n    {{ STATEMENTS }}\n}\n\nvoid main() {\n    int targetIndex = int(targetLayer << SPLAT_TEX_LAYER_BITS) + int(uint(gl_FragCoord.y) << SPLAT_TEX_WIDTH_BITS) + int(gl_FragCoord.x);\n    int index = targetIndex - targetBase;\n\n    if ((index >= 0) && (index < targetCount)) {\n        produceSplat(index);\n    } else {\n        target = uvec4(0u, 0u, 0u, 0u);\n    }\n}`;const V=class V{constructor(A={}){this.maxSplats=0,this.numSplats=0,this.packedArray=null,this.isInitialized=!1,this.target=null,this.source=null,this.needsUpdate=!0,this.extra={},this.dyno=new Vn({packedSplats:this}),this.initialized=Promise.resolve(this),this.reinitialize(A)}reinitialize(A){this.isInitialized=!1,A.url||A.fileBytes||A.construct?this.initialized=this.asyncInitialize(A).then(()=>(this.isInitialized=!0,this)):(this.initialize(A),this.isInitialized=!0,this.initialized=Promise.resolve(this))}initialize(A){A.packedArray?(this.packedArray=A.packedArray,this.maxSplats=Math.floor(this.packedArray.length/4),this.maxSplats=Math.floor(this.maxSplats/O)*O,this.numSplats=Math.min(this.maxSplats,A.numSplats??Number.POSITIVE_INFINITY)):(this.maxSplats=A.maxSplats??0,this.numSplats=0),this.extra=A.extra??{}}async asyncInitialize(A){const{url:t,fileBytes:e,construct:i}=A;if(t){const s=new Vo;s.packedSplats=this,await s.loadAsync(t)}else if(e){const s=await Ir({input:e,fileType:A.fileType,pathOrUrl:A.fileName??t});this.initialize(s)}if(i){const s=i(this);s instanceof Promise&&await s}}dispose(){this.target&&(this.target.dispose(),this.target=null),this.source&&(this.source.dispose(),this.source=null)}ensureSplats(A){const t=A<=this.maxSplats?this.maxSplats:Math.max(A,2*this.maxSplats),e=this.packedArray?this.packedArray.length/4:0;if(!this.packedArray||t>e){this.maxSplats=GA(t).maxSplats;const i=new Uint32Array(this.maxSplats*4);this.packedArray&&i.set(this.packedArray),this.packedArray=i}return this.packedArray}ensureSplatsSh(A,t){let e,i;if(A===0)return this.ensureSplats(t);if(A===1)e=2,i="sh1";else if(A===2)e=4,i="sh2";else if(A===3)e=4,i="sh3";else throw new Error(`Invalid level: ${A}`);let s=this.extra[i]?this.extra[i].length/e:0;const r=t<=s?s:Math.max(t,2*s);if(!this.extra[i]||r>s){s=GA(r).maxSplats;const a=new Uint32Array(s*e);this.extra[i]&&a.set(this.extra[i]),this.extra[i]=a}return this.extra[i]}getSplat(A){if(!this.packedArray||A>=this.numSplats)throw new Error("Invalid index");return Jn(this.packedArray,A)}setSplat(A,t,e,i,s,r){const a=this.ensureSplats(A+1);we(a,A,t.x,t.y,t.z,e.x,e.y,e.z,i.x,i.y,i.z,i.w,s,r.r,r.g,r.b),this.numSplats=Math.max(this.numSplats,A+1)}pushSplat(A,t,e,i,s){const r=this.ensureSplats(this.numSplats+1);we(r,this.numSplats,A.x,A.y,A.z,t.x,t.y,t.z,e.x,e.y,e.z,e.w,i,s.r,s.g,s.b),++this.numSplats}forEachSplat(A){if(!(!this.packedArray||!this.numSplats))for(let t=0;t<this.numSplats;++t){const e=Jn(this.packedArray,t);A(t,e.center,e.scales,e.quaternion,e.opacity,e.color)}}ensureGenerate(A){if(this.target&&(A??1)<=this.maxSplats)return!1;this.dispose();const t=GA(A??1),{width:e,height:i,depth:s}=t;return this.maxSplats=t.maxSplats,this.target=new In(e,i,s,{depthBuffer:!1,stencilBuffer:!1,generateMipmaps:!1,magFilter:Ct,minFilter:Ct}),this.target.texture.format=Yt,this.target.texture.type=Mt,this.target.texture.internalFormat="RGBA32UI",this.target.scissorTest=!0,!0}generateMapping(A){let t=0;const e=A.map(i=>{const s=t,r=Math.ceil(i/O)*O;return t+=r,{base:s,count:i}});return{maxSplats:t,mapping:e}}getTexture(){return this.target?this.target.texture:this.source||this.packedArray?this.maybeUpdateSource():V.getEmpty()}maybeUpdateSource(){if(!this.packedArray)throw new Error("No packed splats");if(this.needsUpdate||!this.source){if(this.needsUpdate=!1,this.source){const{width:A,height:t,depth:e}=this.source.image;this.maxSplats!==A*t*e&&(this.source.dispose(),this.source=null)}if(this.source)this.packedArray.buffer!==this.source.image.data.buffer&&(this.source.image.data=new Uint8Array(this.packedArray.buffer));else{const{width:A,height:t,depth:e}=GA(this.maxSplats);this.source=new Et(this.packedArray,A,t,e),this.source.format=Yt,this.source.type=Mt,this.source.internalFormat="RGBA32UI",this.source.needsUpdate=!0}this.source.needsUpdate=!0}return this.source}static getEmpty(){if(!V.emptySource){const{width:A,height:t,depth:e,maxSplats:i}=GA(1),s=new Uint32Array(i*4);V.emptySource=new Et(s,A,t,e),V.emptySource.format=Yt,V.emptySource.type=Mt,V.emptySource.internalFormat="RGBA32UI",V.emptySource.needsUpdate=!0}return V.emptySource}prepareProgramMaterial(A){let t=V.generatorProgram.get(A);if(!t){const i=ri({index:"int"},{output:"uvec4"},({index:s})=>{A.inputs.index=s;const r=A.outputs.gsplat;return{output:no(r)}});V.programTemplate||(V.programTemplate=new Kn(Mo)),t=new _n({graph:i,inputs:{index:"index"},outputs:{output:"target"},template:V.programTemplate}),Object.assign(t.uniforms,{targetLayer:{value:0},targetBase:{value:0},targetCount:{value:0}}),V.generatorProgram.set(A,t)}const e=t.prepareMaterial();return V.mesh.material=e,{program:t,material:e}}saveRenderState(A){return{xrEnabled:A.xr.enabled,autoClear:A.autoClear}}resetRenderState(A,t){A.setRenderTarget(null),A.xr.enabled=t.xrEnabled,A.autoClear=t.autoClear}generate({generator:A,base:t,count:e,renderer:i}){if(!this.target)throw new Error("Target must be initialized with ensureSplats");if(t+e>this.maxSplats)throw new Error("Base + count exceeds maxSplats");const{program:s,material:r}=this.prepareProgramMaterial(A);s.update();const a=this.saveRenderState(i),o=Math.ceil((t+e)/O)*O,g=O*pt;for(r.uniforms.targetBase.value=t,r.uniforms.targetCount.value=e;t<o;){const I=Math.floor(t/g);r.uniforms.targetLayer.value=I;const h=I*g,B=Math.floor((t-h)/O),Q=Math.min(pt,Math.ceil((o-h)/O));this.target.scissor.set(0,B,O,Q-B),i.setRenderTarget(this.target,I),i.xr.enabled=!1,i.autoClear=!1,i.render(V.scene,V.camera),t+=O*(Q-B)}return this.resetRenderState(i,a),{nextBase:o}}};V.emptySource=null,V.programTemplate=null,V.generatorProgram=new Map,V.geometry=new ii(2,2),V.mesh=new xn(V.geometry,new ts({visible:!1})),V.scene=new Sn().add(V.mesh),V.camera=new Mn;let ne=V;class Vn extends ht{constructor({packedSplats:A}={}){super({key:"packedSplats",type:rs,globals:()=>[os],value:{texture:ne.getEmpty(),numSplats:0},update:t=>{var e,i;return t.texture=((e=this.packedSplats)==null?void 0:e.getTexture())??ne.getEmpty(),t.numSplats=((i=this.packedSplats)==null?void 0:i.numSplats)??0,t}}),this.packedSplats=A}}var So=`precision highp float;\nprecision highp int;\nprecision highp sampler2D;\nprecision highp usampler2D;\nprecision highp isampler2D;\nprecision highp sampler2DArray;\nprecision highp usampler2DArray;\nprecision highp isampler2DArray;\nprecision highp sampler3D;\nprecision highp usampler3D;\nprecision highp isampler3D;\n\n#include <splatDefines>\n\nuniform uint targetLayer;\nuniform int targetBase;\nuniform int targetCount;\n\nout vec4 target;\n\n{{ GLOBALS }}\n\nvoid computeReadback(int index) {\n    {{ STATEMENTS }}\n}\n\nvoid main() {\n    int targetIndex = int(targetLayer << SPLAT_TEX_LAYER_BITS) + int(uint(gl_FragCoord.y) << SPLAT_TEX_WIDTH_BITS) + int(gl_FragCoord.x);\n    int index = targetIndex - targetBase;\n\n    if ((index >= 0) && (index < targetCount)) {\n        computeReadback(index);\n    } else {\n        target = vec4(0.0, 0.0, 0.0, 0.0);\n    }\n}`;const IA=class IA{constructor({renderer:A}={}){this.renderer=A,this.capacity=0,this.count=0}dispose(){this.target&&(this.target.dispose(),this.target=void 0)}ensureBuffer(A,t){const i=Math.ceil(Math.max(1,A)/O)*O*4;if(t.byteLength>=i)return t;const s=new ArrayBuffer(i);if(t instanceof ArrayBuffer)return s;const r=t.constructor;return new r(s)}ensureCapacity(A){const{width:t,height:e,depth:i,maxSplats:s}=GA(A);(!this.target||s>this.capacity)&&(this.dispose(),this.capacity=s,this.target=new In(t,e,i,{depthBuffer:!1,stencilBuffer:!1,generateMipmaps:!1,magFilter:Ct,minFilter:Ct}),this.target.texture.format=Je,this.target.texture.type=Ye,this.target.texture.internalFormat="RGBA8",this.target.scissorTest=!0)}prepareProgramMaterial(A){let t=IA.readbackProgram.get(A);if(!t){const i=ri({index:"int"},{rgba8:"vec4"},({index:s})=>(A.inputs.index=s,{rgba8:new ao({rgba8:A.outputs.rgba8})}));IA.programTemplate||(IA.programTemplate=new Kn(So)),t=new _n({graph:i,inputs:{index:"index"},outputs:{rgba8:"target"},template:IA.programTemplate}),Object.assign(t.uniforms,{targetLayer:{value:0},targetBase:{value:0},targetCount:{value:0}}),IA.readbackProgram.set(A,t)}const e=t.prepareMaterial();return IA.mesh.material=e,{program:t,material:e}}saveRenderState(A){return{xrEnabled:A.xr.enabled,autoClear:A.autoClear}}resetRenderState(A,t){A.setRenderTarget(null),A.xr.enabled=t.xrEnabled,A.autoClear=t.autoClear}process({count:A,material:t}){const e=this.renderer;if(!e)throw new Error("No renderer");if(!this.target)throw new Error("No target");const i=O*pt;t.uniforms.targetBase.value=0,t.uniforms.targetCount.value=A;let s=0;for(;s<A;){const r=Math.floor(s/i),a=r*i,o=Math.min(pt,Math.ceil((A-a)/O));t.uniforms.targetLayer.value=r,this.target.scissor.set(0,0,O,o),e.setRenderTarget(this.target,r),e.xr.enabled=!1,e.autoClear=!1,e.render(IA.scene,IA.camera),s+=O*o}this.count=A}async read({readback:A}){const t=this.renderer;if(!t)throw new Error("No renderer");if(!this.target)throw new Error("No target");const e=Math.ceil(this.count/O)*O;if(A.byteLength<e*4)throw new Error(`Readback buffer too small: ${A.byteLength} < ${e*4}`);const i=new Uint8Array(A instanceof ArrayBuffer?A:A.buffer),s=O*pt;let r=0;const a=[];for(;r<this.count;){const o=Math.floor(r/s),g=o*s,I=Math.min(pt,Math.ceil((this.count-g)/O));t.setRenderTarget(this.target,o);const h=O*I*4,B=i.subarray(g*4,g*4+h),Q=t==null?void 0:t.readRenderTargetPixelsAsync(this.target,0,0,O,I,B);a.push(Q),r+=O*I}return Promise.all(a).then(()=>A)}render({reader:A,count:t,renderer:e}){if(this.renderer=e||this.renderer,!this.renderer)throw new Error("No renderer");this.ensureCapacity(t);const{program:i,material:s}=this.prepareProgramMaterial(A);i.update();const r=this.saveRenderState(this.renderer);this.process({count:t,material:s}),this.resetRenderState(this.renderer,r)}async readback({readback:A}){if(!this.renderer)throw new Error("No renderer");const t=this.saveRenderState(this.renderer),e=this.read({readback:A});return this.resetRenderState(this.renderer,t),e}async renderReadback({reader:A,count:t,renderer:e,readback:i}){if(this.renderer=e||this.renderer,!this.renderer)throw new Error("No renderer");this.ensureCapacity(t);const{program:s,material:r}=this.prepareProgramMaterial(A);s.update();const a=this.saveRenderState(this.renderer);this.process({count:t,material:r});const o=this.read({readback:i});return this.resetRenderState(this.renderer,a),o}getTexture(){var A;return(A=this.target)==null?void 0:A.texture}};IA.programTemplate=null,IA.readbackProgram=new Map,IA.geometry=new ii(2,2),IA.mesh=new xn(IA.geometry,new ts({visible:!1})),IA.scene=new Sn().add(IA.mesh),IA.camera=new Mn;let hs=IA;const hA=class hA{constructor(A={}){this.capacity=0,this.count=0,this.array=null,this.readback=null,this.source=null,this.needsUpdate=!0,this.dyno=new ht({key:"rgbaArray",type:Wn,globals:()=>[Xn],value:{texture:hA.getEmpty(),count:0},update:t=>{var e;return t.texture=((e=this.readback)==null?void 0:e.getTexture())??this.source??hA.getEmpty(),t.count=this.count,t}}),A.array?(this.array=A.array,this.capacity=Math.floor(this.array.length/4),this.capacity=Math.floor(this.capacity/O)*O,this.count=Math.min(this.capacity,A.count??Number.POSITIVE_INFINITY)):(this.capacity=A.capacity??0,this.count=0)}dispose(){this.readback&&(this.readback.dispose(),this.readback=null),this.source&&(this.source.dispose(),this.source=null)}ensureCapacity(A){var t;if(!this.array||A>(((t=this.array)==null?void 0:t.length)??0)/4){this.capacity=GA(A).maxSplats;const e=new Uint8Array(this.capacity*4);this.array&&e.set(this.array),this.array=e}return this.array}getTexture(){var t;let A=(t=this.readback)==null?void 0:t.getTexture();return(this.source||this.array)&&(A=this.maybeUpdateSource()),A??hA.getEmpty()}maybeUpdateSource(){if(!this.array)throw new Error("No array");if(this.needsUpdate||!this.source){if(this.needsUpdate=!1,this.source){const{width:A,height:t,depth:e}=this.source.image;this.capacity!==A*t*e&&(this.source.dispose(),this.source=null)}if(this.source)this.array.buffer!==this.source.image.data.buffer&&(this.source.image.data=new Uint8Array(this.array.buffer));else{const{width:A,height:t,depth:e}=GA(this.capacity);this.source=new Et(this.array,A,t,e),this.source.format=Je,this.source.type=Ye,this.source.internalFormat="RGBA8",this.source.needsUpdate=!0}this.source.needsUpdate=!0}return this.source}render({reader:A,count:t,renderer:e}){this.readback||(this.readback=new hs({renderer:e})),this.readback.render({reader:A,count:t,renderer:e}),this.capacity=this.readback.capacity,this.count=this.readback.count}fromPackedSplats({packedSplats:A,base:t,count:e,renderer:i}){const{dynoSplats:s,dynoBase:r,dynoCount:a,reader:o}=hA.makeDynos();return s.packedSplats=A,r.value=t,a.value=e,this.render({reader:o,count:e,renderer:i}),this}async read(){if(!this.readback)throw new Error("No readback");return(!this.array||this.array.length<this.count*4)&&(this.array=new Uint8Array(this.capacity*4)),(await this.readback.readback({readback:this.array})).subarray(0,this.count*4)}static getEmpty(){if(!hA.emptySource){const A=new Uint8Array(4);hA.emptySource=new Et(A,1,1,1),hA.emptySource.format=Je,hA.emptySource.type=Ye,hA.emptySource.internalFormat="RGBA8",hA.emptySource.needsUpdate=!0}return hA.emptySource}static makeDynos(){if(!hA.dynos){const A=new Vn,t=new gs({value:0}),e=new gs({value:0}),i=ri({index:"int"},{rgba8:"vec4"},({index:s})=>{if(!s)throw new Error("index is undefined");s=Ei(s,t);const r=ja(A,s,t,e);return{rgba8:ci(r).outputs.rgba}});hA.dynos={dynoSplats:A,dynoBase:t,dynoCount:e,reader:i}}return hA.dynos}};hA.emptySource=null,hA.dynos=null;let Pn=hA;const Wn={type:"RgbaArray"},Xn=OA(`\n  struct RgbaArray {\n    sampler2DArray texture;\n    int count;\n  };\n`);function Fo(n,A){return new uA({inTypes:{rgba:Wn,index:"int"},outTypes:{rgba:"vec4"},inputs:{rgba:n,index:A},globals:()=>[Xn],statements:({inputs:e,outputs:i})=>gt(`\n        if ((index >= 0) && (index < ${e.rgba}.count)) {\n          ${i.rgba} = texelFetch(${e.rgba}.texture, splatTexCoord(index), 0);\n        } else {\n          ${i.rgba} = vec4(0.0, 0.0, 0.0, 0.0);\n        }\n      `)}).outputs.rgba}function No(n){switch(n){case"all":return 0;case"plane":return 1;case"sphere":return 2;case"box":return 3;case"ellipsoid":return 4;case"cylinder":return 5;case"capsule":return 6;case"infinite_cone":return 7;default:throw new Error(`Unknown SDF type: ${n}`)}}function ko(n){switch(n){case"multiply":return 0;case"set_rgb":return 1;case"add_rgba":return 2;default:throw new Error(`Unknown blend mode: ${n}`)}}class Ro extends DA{constructor(A={}){super();const{type:t,invert:e,opacity:i,color:s,displace:r,radius:a}=A;this.type=t??"sphere",this.invert=e??!1,this.opacity=i??1,this.color=s??new kt(1,1,1),this.displace=r??new f(0,0,0),this.radius=a??0}}const wi=class wi extends DA{constructor(A={}){const{name:t,rgbaBlendMode:e="multiply",sdfSmooth:i=0,softEdge:s=0,invert:r=!1,sdfs:a=null}=A;super(),this.rgbaBlendMode=e,this.sdfSmooth=i,this.softEdge=s,this.invert=r,this.sdfs=a,this.ordering=wi.nextOrdering++,this.name=t??`Edit ${this.ordering}`}addSdf(A){this.sdfs==null&&(this.sdfs=[]),this.sdfs.includes(A)||this.sdfs.push(A)}removeSdf(A){this.sdfs!=null&&(this.sdfs=this.sdfs.filter(t=>t!==A))}};wi.nextOrdering=1;let Bs=wi;class Go{constructor({maxSdfs:A,maxEdits:t}){this.maxSdfs=Math.max(16,A??0),this.numSdfs=0,this.sdfData=new Uint32Array(this.maxSdfs*8*4),this.sdfFloatData=new Float32Array(this.sdfData.buffer),this.sdfTexture=this.newSdfTexture(this.sdfData,this.maxSdfs),this.dynoSdfArray=new ht({key:"sdfArray",type:jn,globals:()=>[$n],value:{numSdfs:0,sdfTexture:this.sdfTexture},update:e=>(e.numSdfs=this.numSdfs,e.sdfTexture=this.sdfTexture,e)}),this.maxEdits=Math.max(16,t??0),this.numEdits=0,this.editData=new Uint32Array(this.maxEdits*4),this.editFloatData=new Float32Array(this.editData.buffer),this.dynoNumEdits=new gs({value:0}),this.dynoEdits=this.newEdits(this.editData,this.maxEdits)}newSdfTexture(A,t){const e=new ya(A,8,t,Yt,Mt);return e.internalFormat="RGBA32UI",e.needsUpdate=!0,e}newEdits(A,t){return new ht({key:"edits",type:"uvec4",count:t,globals:()=>[Ar],value:A})}ensureCapacity({maxSdfs:A,maxEdits:t}){let e=!1;return A>this.sdfTexture.image.height&&(this.sdfTexture.dispose(),this.maxSdfs=Math.max(this.maxSdfs*2,A),this.sdfData=new Uint32Array(this.maxSdfs*8*4),this.sdfFloatData=new Float32Array(this.sdfData.buffer),this.sdfTexture=this.newSdfTexture(this.sdfData,this.maxSdfs)),t>(this.dynoEdits.count??0)&&(this.maxEdits=Math.max(this.maxEdits*2,t),this.editData=new Uint32Array(this.maxEdits*4),this.editFloatData=new Float32Array(this.editData.buffer),this.dynoEdits=this.newEdits(this.editData,this.maxEdits),e=!0),e}updateEditData(A,t){const e=this.editData[A]!==t;return this.editData[A]=t,e}updateEditFloatData(A,t){re[0]=t;const e=this.editFloatData[A]!==re[0];return e&&(this.editFloatData[A]=re[0]),e}encodeEdit(A,{sdfFirst:t,sdfCount:e,invert:i,rgbaBlendMode:s,softEdge:r,sdfSmooth:a}){const o=A*4;let g=!1;return g=this.updateEditData(o+0,s|(i?256:0))||g,g=this.updateEditData(o+1,t|e<<16)||g,g=this.updateEditFloatData(o+2,r)||g,g=this.updateEditFloatData(o+3,a)||g,g}updateSdfData(A,t){const e=this.sdfData[A]!==t;return this.sdfData[A]=t,e}updateSdfFloatData(A,t){re[0]=t;const e=this.sdfFloatData[A]!==re[0];return e&&(this.sdfFloatData[A]=re[0]),e}encodeSdf(A,{sdfType:t,invert:e,center:i,quaternion:s,scale:r,sizes:a},o){const g=A*32,I=t|(e?256:0);let h=!1;h=this.updateSdfFloatData(g+0,(i==null?void 0:i.x)??0)||h,h=this.updateSdfFloatData(g+1,(i==null?void 0:i.y)??0)||h,h=this.updateSdfFloatData(g+2,(i==null?void 0:i.z)??0)||h,h=this.updateSdfData(g+3,I)||h,h=this.updateSdfFloatData(g+4,(s==null?void 0:s.x)??0)||h,h=this.updateSdfFloatData(g+5,(s==null?void 0:s.y)??0)||h,h=this.updateSdfFloatData(g+6,(s==null?void 0:s.z)??0)||h,h=this.updateSdfFloatData(g+7,(s==null?void 0:s.w)??0)||h,h=this.updateSdfFloatData(g+8,(r==null?void 0:r.x)??0)||h,h=this.updateSdfFloatData(g+9,(r==null?void 0:r.y)??0)||h,h=this.updateSdfFloatData(g+10,(r==null?void 0:r.z)??0)||h,h=this.updateSdfData(g+11,0)||h,h=this.updateSdfFloatData(g+12,(a==null?void 0:a.x)??0)||h,h=this.updateSdfFloatData(g+13,(a==null?void 0:a.y)??0)||h,h=this.updateSdfFloatData(g+14,(a==null?void 0:a.z)??0)||h,h=this.updateSdfFloatData(g+15,(a==null?void 0:a.w)??0)||h;const B=Math.min(4,o.length);for(let Q=0;Q<B;++Q){const c=g+16+Q*4;h=this.updateSdfFloatData(c+0,o[Q].x)||h,h=this.updateSdfFloatData(c+1,o[Q].y)||h,h=this.updateSdfFloatData(c+2,o[Q].z)||h,h=this.updateSdfFloatData(c+3,o[Q].w)||h}return h}update(A){const t=A.reduce((h,{sdfs:B})=>h+B.length,0),e=this.ensureCapacity({maxEdits:A.length,maxSdfs:t}),i=[new fA,new fA],s=new f,r=new oA,a=new f,o=new fA;let g=0,I=e;A.length!==this.dynoNumEdits.value&&(this.dynoNumEdits.value=A.length,this.numEdits=A.length,I=!0);for(const[h,{edit:B,sdfs:Q}]of A.entries()){I=this.encodeEdit(h,{sdfFirst:g,sdfCount:Q.length,invert:B.invert,rgbaBlendMode:ko(B.rgbaBlendMode),softEdge:B.softEdge,sdfSmooth:B.sdfSmooth})||I;let c=!1;for(const C of Q)o.set(C.scale.x,C.scale.y,C.scale.z,C.radius),C.scale.setScalar(1),C.updateMatrixWorld(),C.matrixWorld.clone().invert().decompose(s,r,a),C.scale.set(o.x,o.y,o.z),C.updateMatrixWorld(),i[0].set(C.color.r,C.color.g,C.color.b,C.opacity),i[1].set(C.displace.x,C.displace.y,C.displace.z,1),c=this.encodeSdf(g,{sdfType:No(C.type),invert:C.invert,center:s,quaternion:r,scale:a,sizes:o},i)||c,g+=1;this.numSdfs=g,c&&(this.sdfTexture.needsUpdate=!0),I||(I=c)}return{updated:I,dynoUpdated:e}}modify(A){return bo(A,this.dynoSdfArray,this.dynoNumEdits,this.dynoEdits)}}const jn={type:"SdfArray"},$n=OA(`\n  struct SdfArray {\n    int numSdfs;\n    usampler2D sdfTexture;\n  };\n\n  void unpackSdfArray(\n    usampler2D sdfTexture, int sdfIndex, out uint flags,\n    out vec3 center, out vec4 quaternion, out vec3 scale, out vec4 sizes,\n    int numValues, out vec4 values[4]\n  ) {\n    uvec4 temp = texelFetch(sdfTexture, ivec2(0, sdfIndex), 0);\n    flags = temp.w;\n    center = vec3(uintBitsToFloat(temp.x), uintBitsToFloat(temp.y), uintBitsToFloat(temp.z));\n\n    temp = texelFetch(sdfTexture, ivec2(1, sdfIndex), 0);\n    quaternion = vec4(uintBitsToFloat(temp.x), uintBitsToFloat(temp.y), uintBitsToFloat(temp.z), uintBitsToFloat(temp.w));\n\n    temp = texelFetch(sdfTexture, ivec2(2, sdfIndex), 0);\n    scale = vec3(uintBitsToFloat(temp.x), uintBitsToFloat(temp.y), uintBitsToFloat(temp.z));\n\n    temp = texelFetch(sdfTexture, ivec2(3, sdfIndex), 0);\n    sizes = vec4(uintBitsToFloat(temp.x), uintBitsToFloat(temp.y), uintBitsToFloat(temp.z), uintBitsToFloat(temp.w));\n\n    for (int i = 0; i < numValues; ++i) {\n      temp = texelFetch(sdfTexture, ivec2(4 + i, sdfIndex), 0);\n      values[i] = vec4(uintBitsToFloat(temp.x), uintBitsToFloat(temp.y), uintBitsToFloat(temp.z), uintBitsToFloat(temp.w));\n    }\n  }\n\n  const uint SDF_FLAG_TYPE = 0xFFu;\n  const uint SDF_FLAG_INVERT = 1u << 8u;\n\n  const uint SDF_TYPE_ALL = 0u;\n  const uint SDF_TYPE_PLANE = 1u;\n  const uint SDF_TYPE_SPHERE = 2u;\n  const uint SDF_TYPE_BOX = 3u;\n  const uint SDF_TYPE_ELLIPSOID = 4u;\n  const uint SDF_TYPE_CYLINDER = 5u;\n  const uint SDF_TYPE_CAPSULE = 6u;\n  const uint SDF_TYPE_INFINITE_CONE = 7u;\n\n  float evaluateSdfArray(\n    usampler2D sdfTexture, int numSdfs, int sdfFirst, int sdfCount, vec3 pos,\n    float smoothK, int numValues, out vec4 outValues[4]\n  ) {\n    float distanceAccum = (smoothK == 0.0) ? 1.0 / 0.0 : 0.0;\n    float maxExp = -1.0 / 0.0;\n    for (int i = 0; i < numValues; ++i) {\n        outValues[i] = vec4(0.0);\n    }\n\n    uint flags;\n    vec3 center, scale;\n    vec4 quaternion, sizes;\n    vec4 values[4];\n\n    int sdfLast = min(sdfFirst + sdfCount, numSdfs);\n    for (int index = sdfFirst; index < sdfLast; ++index) {\n      unpackSdfArray(sdfTexture, index, flags, center, quaternion, scale, sizes, numValues, values);\n      uint sdfType = flags & SDF_FLAG_TYPE;\n      vec3 sdfPos = quatVec(quaternion, pos * scale) + center;\n\n      float distance;\n      switch (sdfType) {\n        case SDF_TYPE_ALL:\n          distance = -1.0 / 0.0;\n          break;\n        case SDF_TYPE_PLANE: {\n          distance = sdfPos.z;\n          break;\n        }\n        case SDF_TYPE_SPHERE: {\n          distance = length(sdfPos) - sizes.w;\n          break;\n        }\n        case SDF_TYPE_BOX: {\n          vec3 q = abs(sdfPos) - sizes.xyz + sizes.w;\n          distance = length(max(q, 0.0)) + min(max(q.x, max(q.y, q.z)), 0.0) - sizes.w;\n          break;\n        }\n        case SDF_TYPE_ELLIPSOID: {\n          vec3 sizes = sizes.xyz;\n          float k0 = length(sdfPos / sizes);\n          float k1 = length(sdfPos / dot(sizes, sizes));\n          distance = k0 * (k0 - 1.0) / k1;\n          break;\n        }\n        case SDF_TYPE_CYLINDER: {\n          vec2 d = abs(vec2(length(sdfPos.xz), sdfPos.y)) - sizes.wy;\n          distance = min(max(d.x, d.y), 0.0) + length(max(d, 0.0));\n          break;\n        }\n        case SDF_TYPE_CAPSULE: {\n          sdfPos.y -= clamp(sdfPos.y, -0.5 * sizes.y, 0.5 * sizes.y);\n          distance = length(sdfPos) - sizes.w;\n          break;\n        }\n        case SDF_TYPE_INFINITE_CONE: {\n          float angle = 0.25 * PI * sizes.w;\n          vec2 c = vec2(sin(angle), cos(angle));\n          vec2 q = vec2(length(sdfPos.xy), -sdfPos.z);\n          float d = length(q - c * max(dot(q, c), 0.0));\n          distance = d * (((q.x * c.y - q.y * c.x) < 0.0) ? -1.0 : 1.0);\n          break;\n        }\n      }\n\n      if ((flags & SDF_FLAG_INVERT) != 0u) {\n        distance = -distance;\n      }\n\n      if (smoothK == 0.0) {\n        if (distance < distanceAccum) {\n          distanceAccum = distance;\n          for (int i = 0; i < numValues; ++i) {\n            outValues[i] = values[i];\n          }\n        }\n      } else {\n        float scaledDistance = -distance / smoothK;\n        if (scaledDistance > maxExp) {\n          float scale = exp(maxExp - scaledDistance);\n          distanceAccum *= scale;\n          for (int i = 0; i < numValues; ++i) {\n            outValues[i] *= scale;\n          }\n          maxExp = scaledDistance;\n        }\n\n        float weight = exp(scaledDistance - maxExp);\n        distanceAccum += weight;\n        for (int i = 0; i < numValues; ++i) {\n          outValues[i] += weight * values[i];\n        }\n      }\n    }\n\n    if (smoothK == 0.0) {\n      return distanceAccum;\n    } else {\n      // Very distant SDFs may result in 0 accumulation\n      if (distanceAccum == 0.0) {\n        return 1.0 / 0.0;\n      }\n      for (int i = 0; i < numValues; ++i) {\n        outValues[i] /= distanceAccum;\n      }\n      return (-log(distanceAccum) - maxExp) * smoothK;\n    }\n  }\n\n  float modulateSdfArray(\n    usampler2D sdfTexture, int numSdfs, int sdfFirst, int sdfCount, vec3 pos,\n    float smoothK, int numValues, out vec4 values[4],\n    float softEdge, bool invert\n  ) {\n    float distance = evaluateSdfArray(sdfTexture, numSdfs, sdfFirst, sdfCount, pos, smoothK, numValues, values);\n    if (invert) {\n      distance = -distance;\n    }\n\n    return (softEdge == 0.0) ? ((distance < 0.0) ? 1.0 : 0.0)\n      : clamp(-distance / softEdge + 0.5, 0.0, 1.0);\n  }\n`),Ar=OA(`\n  const uint EDIT_FLAG_BLEND = 0xFFu;\n  const uint EDIT_BLEND_MULTIPLY = 0u;\n  const uint EDIT_BLEND_SET_RGB = 1u;\n  const uint EDIT_BLEND_ADD_RGBA = 2u;\n  const uint EDIT_FLAG_INVERT = 0x100u;\n\n  void decodeEdit(\n    uvec4 packedEdit, out int sdfFirst, out int sdfCount,\n    out bool invert, out uint rgbaBlendMode, out float softEdge, out float sdfSmooth\n  ) {\n    rgbaBlendMode = packedEdit.x & EDIT_FLAG_BLEND;\n    invert = (packedEdit.x & EDIT_FLAG_INVERT) != 0u;\n\n    sdfFirst = int(packedEdit.y & 0xFFFFu);\n    sdfCount = int(packedEdit.y >> 16u);\n\n    softEdge = uintBitsToFloat(packedEdit.z);\n    sdfSmooth = uintBitsToFloat(packedEdit.w);\n  }\n\n  void applyRgbaDisplaceEdit(\n    usampler2D sdfTexture, int numSdfs, int sdfFirst, int sdfCount, inout vec3 pos,\n    float smoothK, float softEdge, bool invert, uint rgbaBlendMode, inout vec4 rgba\n  ) {\n    vec4 values[4];\n    float modulate = modulateSdfArray(sdfTexture, numSdfs, sdfFirst, sdfCount, pos, smoothK, 2, values, softEdge, invert);\n    // On Android, moving values[0] is necessary to work around a compiler bug.\n    vec4 sdfRgba = values[0];\n    vec4 sdfDisplaceScale = values[1];\n\n    vec4 target;\n    switch (rgbaBlendMode) {\n      case EDIT_BLEND_MULTIPLY:\n        target = rgba * sdfRgba;\n        break;\n      case EDIT_BLEND_SET_RGB:\n        target = vec4(sdfRgba.rgb, rgba.a * sdfRgba.a);\n        break;\n      case EDIT_BLEND_ADD_RGBA:\n        target = rgba + sdfRgba;\n        break;\n      default:\n        // Debug output if blend mode not set\n        target = vec4(fract(pos), 1.0);\n    }\n    rgba = mix(rgba, target, modulate);\n    pos += sdfDisplaceScale.xyz * modulate;\n  }\n\n  void applyPackedRgbaDisplaceEdit(uvec4 packedEdit, usampler2D sdfTexture, int numSdfs, inout vec3 pos, inout vec4 rgba) {\n    int sdfFirst, sdfCount;\n    bool invert;\n    uint rgbaBlendMode;\n    float softEdge, sdfSmooth;\n    decodeEdit(packedEdit, sdfFirst, sdfCount, invert, rgbaBlendMode, softEdge, sdfSmooth);\n    applyRgbaDisplaceEdit(sdfTexture, numSdfs, sdfFirst, sdfCount, pos, sdfSmooth, softEdge, invert, rgbaBlendMode, rgba);\n  }\n`);function bo(n,A,t,e){return new uA({inTypes:{gsplat:xA,sdfArray:jn,numEdits:"int",rgbaDisplaceEdits:"uvec4"},outTypes:{gsplat:xA},globals:()=>[$n,Ar],inputs:{gsplat:n,sdfArray:A,numEdits:t,rgbaDisplaceEdits:e},statements:({inputs:s,outputs:r})=>{const{sdfArray:a,numEdits:o,rgbaDisplaceEdits:g}=s,{gsplat:I}=r;return gt(`\n        ${I} = ${s.gsplat};\n        if (isGsplatActive(${I}.flags)) {\n          for (int editIndex = 0; editIndex < ${o}; ++editIndex) {\n            applyPackedRgbaDisplaceEdit(\n              ${g}[editIndex], ${a}.sdfTexture, ${a}.numSdfs,\n              ${I}.center, ${I}.rgba\n            );\n          }\n        }\n      `)}}).outputs.gsplat}const re=new Float32Array(1);class li{constructor(){this.scale=new Ci({value:Number.NEGATIVE_INFINITY}),this.rotate=new qn({value:new oA(Number.POSITIVE_INFINITY,Number.POSITIVE_INFINITY,Number.POSITIVE_INFINITY,Number.POSITIVE_INFINITY)}),this.translate=new oo({value:new f(Number.POSITIVE_INFINITY,Number.POSITIVE_INFINITY,Number.POSITIVE_INFINITY)})}apply(A){return wo(A,{scale:this.scale,rotate:this.rotate,translate:this.translate})}applyDir(A){return mo(A,{rotate:this.rotate})}applyGsplat(A){return $a(A,{scale:this.scale,rotate:this.rotate,translate:this.translate})}updateFromMatrix(A){const t=new f,e=new oA,i=new f;A.decompose(i,e,t);const s=(t.x+t.y+t.z)/3;let r=!1;return s!==this.scale.value&&(this.scale.value=s,r=!0),i.equals(this.translate.value)||(this.translate.value.copy(i),r=!0),e.equals(this.rotate.value)||(this.rotate.value.copy(e),r=!0),r}update(A){return A.updateMatrixWorld(),this.updateFromMatrix(A.matrixWorld)}}class Uo extends DA{constructor({numSplats:A,generator:t,construct:e,update:i}){if(super(),this.numSplats=A??0,this.generator=t,this.frameUpdate=i,this.version=0,e){const s=e(this);Object.assign(this,s)}}updateVersion(){this.version+=1}set needsUpdate(A){A&&this.updateVersion()}}const mt=class mt extends Uo{constructor(A={}){const t=new li,e=new li,i=new li,s=new li,r=new qn({value:new fA(Number.NEGATIVE_INFINITY,Number.NEGATIVE_INFINITY,Number.NEGATIVE_INFINITY,Number.NEGATIVE_INFINITY)}),a=new Ci({value:0}),o=new Ci({value:0}),g={transform:t,viewToWorld:e,worldToView:i,viewToObject:s,recolor:r,time:a,deltaTime:o};if(super({update:({time:I,deltaTime:h,viewToWorld:B,globalEdits:Q})=>this.update({time:I,deltaTime:h,viewToWorld:B,globalEdits:Q})}),this.isInitialized=!1,this.recolor=new kt(1,1,1),this.opacity=1,this.enableViewToObject=!1,this.enableViewToWorld=!1,this.enableWorldToView=!1,this.skinning=null,this.edits=null,this.rgbaDisplaceEdits=null,this.splatRgba=null,this.maxSh=3,this.packedSplats=A.packedSplats??new ne,this.numSplats=this.packedSplats.numSplats,this.editable=A.editable??!0,this.onFrame=A.onFrame,this.context=g,this.objectModifier=A.objectModifier,this.worldModifier=A.worldModifier,this.updateGenerator(),A.url||A.fileBytes||A.constructSplats||A.packedSplats&&!A.packedSplats.isInitialized)this.initialized=this.asyncInitialize(A).then(async()=>{if(this.updateGenerator(),this.isInitialized=!0,A.onLoad){const I=A.onLoad(this);I instanceof Promise&&await I}return this});else if(this.isInitialized=!0,this.initialized=Promise.resolve(this),A.onLoad){const I=A.onLoad(this);I instanceof Promise&&(this.initialized=I.then(()=>this))}}async asyncInitialize(A){const{url:t,fileBytes:e,fileType:i,fileName:s,maxSplats:r,constructSplats:a}=A;if(t||e||a){const o={url:t,fileBytes:e,fileType:i,fileName:s,maxSplats:r,construct:a};this.packedSplats.reinitialize(o)}this.packedSplats&&(await this.packedSplats.initialized,this.numSplats=this.packedSplats.numSplats,this.updateGenerator())}static async staticInitialize(){await mi(),mt.isStaticInitialized=!0}pushSplat(A,t,e,i,s){this.packedSplats.pushSplat(A,t,e,i,s)}forEachSplat(A){this.packedSplats.forEachSplat(A)}dispose(){this.packedSplats.dispose()}constructGenerator(A){const{transform:t,viewToObject:e,recolor:i}=A,s=ri({index:"int"},{gsplat:xA},({index:r})=>{if(!r)throw new Error("index is undefined");let a=Xa(this.packedSplats.dyno,r);if(this.maxSh>=1){const{sh1Texture:g,sh2Texture:I,sh3Texture:h}=this.ensureShTextures();if(g){const B=e.translate,{center:Q}=ci(a).outputs,c=lo(Bo(Q,B));let C=To(a,g,c);this.maxSh>=2&&I&&(C=Ei(C,vo(a,I,c))),this.maxSh>=3&&h&&(C=Ei(C,zo(a,h,c)));let{rgba:l}=ci(a).outputs;l=Ei(l,uo(C,Ra("float",0))),a=as({gsplat:a,rgba:l})}}if(this.splatRgba){const g=Fo(this.splatRgba.dyno,r);a=as({gsplat:a,rgba:g})}this.skinning&&(a=this.skinning.modify(a)),this.objectModifier&&(a=this.objectModifier.apply({gsplat:a}).gsplat),a=t.applyGsplat(a);const o=Qo(i,ci(a).outputs.rgba);return a=as({gsplat:a,rgba:o}),this.rgbaDisplaceEdits&&(a=this.rgbaDisplaceEdits.modify(a)),this.worldModifier&&(a=this.worldModifier.apply({gsplat:a}).gsplat),{gsplat:a}});this.generator=s}updateGenerator(){this.constructGenerator(this.context)}update({time:A,viewToWorld:t,deltaTime:e,globalEdits:i}){var l;this.numSplats=this.packedSplats.numSplats,this.context.time.value=A,this.context.deltaTime.value=e,mt.dynoTime.value=A;const{transform:s,viewToObject:r,recolor:a}=this.context;let o=s.update(this);this.context.viewToWorld.updateFromMatrix(t)&&this.enableViewToWorld&&(o=!0);const g=t.clone().invert();this.context.worldToView.updateFromMatrix(g)&&this.enableWorldToView&&(o=!0);const B=new EA().compose(s.translate.value,s.rotate.value,new f().setScalar(s.scale.value)).invert().multiply(t);r.updateFromMatrix(B)&&(this.enableViewToObject||this.packedSplats.extra.sh1)&&(o=!0);const Q=new fA(this.recolor.r,this.recolor.g,this.recolor.b,this.opacity);Q.equals(a.value)||(a.value.copy(Q),o=!0);const c=this.editable?(this.edits??[]).concat(i):[];this.editable&&!this.edits&&this.traverseVisible(E=>{E instanceof Bs&&c.push(E)}),c.sort((E,u)=>E.ordering-u.ordering);const C=c.map(E=>{if(E.sdfs!=null)return{edit:E,sdfs:E.sdfs};const u=[];return E.traverseVisible(d=>{d instanceof Ro&&u.push(d)}),{edit:E,sdfs:u}});if(C.length>0&&!this.rgbaDisplaceEdits){const E=C.length,u=C.reduce((d,y)=>d+y.sdfs.length,0);this.rgbaDisplaceEdits=new Go({maxEdits:E,maxSdfs:u}),this.updateGenerator()}if(this.rgbaDisplaceEdits){const E=this.rgbaDisplaceEdits.update(C);o||(o=E.updated),E.dynoUpdated&&this.updateGenerator()}o&&this.updateVersion(),(l=this.onFrame)==null||l.call(this,{mesh:this,time:A,deltaTime:e})}raycast(A,t){if(!this.packedSplats.packedArray||!this.packedSplats.numSplats)return;const{near:e,far:i,ray:s}=A,r=this.matrixWorld.clone().invert(),a=new XA().setFromMatrix4(r),o=s.origin.clone().applyMatrix4(r),g=s.direction.clone().applyMatrix3(a),I=new f;r.decompose(new f,new oA,I),(I.x*I.y*I.z)**(1/3);const B=fr(o.x,o.y,o.z,g.x,g.y,g.z,e,i,this.packedSplats.numSplats,this.packedSplats.packedArray,!0);for(const Q of B){const c=s.direction.clone().multiplyScalar(Q).add(s.origin);t.push({distance:Q,point:c,object:this})}}ensureShTextures(){if(!this.packedSplats.extra.sh1)return{};let A=this.packedSplats.extra.sh1Texture;if(!A){let i=this.packedSplats.extra.sh1;const{width:s,height:r,depth:a,maxSplats:o}=GA(i.length/2);if(i.length<o*2){const I=new Uint32Array(o*2);I.set(i),this.packedSplats.extra.sh1=I,i=I}const g=new Et(i,s,r,a);g.format=Kr,g.type=Mt,g.internalFormat="RG32UI",g.needsUpdate=!0,A=new Is({value:g,key:"sh1"}),this.packedSplats.extra.sh1Texture=A}if(!this.packedSplats.extra.sh2)return{sh1Texture:A};let t=this.packedSplats.extra.sh2Texture;if(!t){let i=this.packedSplats.extra.sh2;const{width:s,height:r,depth:a,maxSplats:o}=GA(i.length/4);if(i.length<o*4){const I=new Uint32Array(o*4);I.set(i),this.packedSplats.extra.sh2=I,i=I}const g=new Et(i,s,r,a);g.format=Yt,g.type=Mt,g.internalFormat="RGBA32UI",g.needsUpdate=!0,t=new Is({value:g,key:"sh2"}),this.packedSplats.extra.sh2Texture=t}if(!this.packedSplats.extra.sh3)return{sh1Texture:A,sh2Texture:t};let e=this.packedSplats.extra.sh3Texture;if(!e){let i=this.packedSplats.extra.sh3;const{width:s,height:r,depth:a,maxSplats:o}=GA(i.length/4);if(i.length<o*4){const I=new Uint32Array(o*4);I.set(i),this.packedSplats.extra.sh3=I,i=I}const g=new Et(i,s,r,a);g.format=Yt,g.type=Mt,g.internalFormat="RGBA32UI",g.needsUpdate=!0,e=new Is({value:g,key:"sh3"}),this.packedSplats.extra.sh3Texture=e}return{sh1Texture:A,sh2Texture:t,sh3Texture:e}}};mt.staticInitialized=mt.staticInitialize(),mt.isStaticInitialized=!1,mt.dynoTime=new Ci({value:0});let Qs=mt;const Lo=OA(`\n  vec3 evaluateSH1(Gsplat gsplat, usampler2DArray sh1, vec3 viewDir) {\n    // Extract sint7 values packed into 2 x uint32\n    uvec2 packed = texelFetch(sh1, splatTexCoord(gsplat.index), 0).rg;\n    vec3 sh1_0 = vec3(ivec3(\n      int(packed.x << 25u) >> 25,\n      int(packed.x << 18u) >> 25,\n      int(packed.x << 11u) >> 25\n    )) / 63.0;\n    vec3 sh1_1 = vec3(ivec3(\n      int(packed.x << 4u) >> 25,\n      int((packed.x >> 3u) | (packed.y << 29u)) >> 25,\n      int(packed.y << 22u) >> 25\n    )) / 63.0;\n    vec3 sh1_2 = vec3(ivec3(\n      int(packed.y << 15u) >> 25,\n      int(packed.y << 8u) >> 25,\n      int(packed.y << 1u) >> 25\n    )) / 63.0;\n\n    return sh1_0 * (-0.4886025 * viewDir.y)\n      + sh1_1 * (0.4886025 * viewDir.z)\n      + sh1_2 * (-0.4886025 * viewDir.x);\n  }\n`),Yo=OA(`\n  vec3 evaluateSH2(Gsplat gsplat, usampler2DArray sh2, vec3 viewDir) {\n    // Extract sint8 values packed into 4 x uint32\n    uvec4 packed = texelFetch(sh2, splatTexCoord(gsplat.index), 0);\n    vec3 sh2_0 = vec3(ivec3(\n      int(packed.x << 24u) >> 24,\n      int(packed.x << 16u) >> 24,\n      int(packed.x << 8u) >> 24\n    )) / 127.0;\n    vec3 sh2_1 = vec3(ivec3(\n      int(packed.x) >> 24,\n      int(packed.y << 24u) >> 24,\n      int(packed.y << 16u) >> 24\n    )) / 127.0;\n    vec3 sh2_2 = vec3(ivec3(\n      int(packed.y << 8u) >> 24,\n      int(packed.y) >> 24,\n      int(packed.z << 24u) >> 24\n    )) / 127.0;\n    vec3 sh2_3 = vec3(ivec3(\n      int(packed.z << 16u) >> 24,\n      int(packed.z << 8u) >> 24,\n      int(packed.z) >> 24\n    )) / 127.0;\n    vec3 sh2_4 = vec3(ivec3(\n      int(packed.w << 24u) >> 24,\n      int(packed.w << 16u) >> 24,\n      int(packed.w << 8u) >> 24\n    )) / 127.0;\n\n    return sh2_0 * (1.0925484 * viewDir.x * viewDir.y)\n      + sh2_1 * (-1.0925484 * viewDir.y * viewDir.z)\n      + sh2_2 * (0.3153915 * (2.0 * viewDir.z * viewDir.z - viewDir.x * viewDir.x - viewDir.y * viewDir.y))\n      + sh2_3 * (-1.0925484 * viewDir.x * viewDir.z)\n      + sh2_4 * (0.5462742 * (viewDir.x * viewDir.x - viewDir.y * viewDir.y));\n  }\n`),Jo=OA(`\n  vec3 evaluateSH3(Gsplat gsplat, usampler2DArray sh3, vec3 viewDir) {\n    // Extract sint6 values packed into 4 x uint32\n    uvec4 packed = texelFetch(sh3, splatTexCoord(gsplat.index), 0);\n    vec3 sh3_0 = vec3(ivec3(\n      int(packed.x << 26u) >> 26,\n      int(packed.x << 20u) >> 26,\n      int(packed.x << 14u) >> 26\n    )) / 31.0;\n    vec3 sh3_1 = vec3(ivec3(\n      int(packed.x << 8u) >> 26,\n      int(packed.x << 2u) >> 26,\n      int((packed.x >> 4u) | (packed.y << 28u)) >> 26\n    )) / 31.0;\n    vec3 sh3_2 = vec3(ivec3(\n      int(packed.y << 22u) >> 26,\n      int(packed.y << 16u) >> 26,\n      int(packed.y << 10u) >> 26\n    )) / 31.0;\n    vec3 sh3_3 = vec3(ivec3(\n      int(packed.y << 4u) >> 26,\n      int((packed.y >> 2u) | (packed.z << 30u)) >> 26,\n      int(packed.z << 24u) >> 26\n    )) / 31.0;\n    vec3 sh3_4 = vec3(ivec3(\n      int(packed.z << 18u) >> 26,\n      int(packed.z << 12u) >> 26,\n      int(packed.z << 6u) >> 26\n    )) / 31.0;\n    vec3 sh3_5 = vec3(ivec3(\n      int(packed.z) >> 26,\n      int(packed.w << 26u) >> 26,\n      int(packed.w << 20u) >> 26\n    )) / 31.0;\n    vec3 sh3_6 = vec3(ivec3(\n      int(packed.w << 14u) >> 26,\n      int(packed.w << 8u) >> 26,\n      int(packed.w << 2u) >> 26\n    )) / 31.0;\n\n    float xx = viewDir.x * viewDir.x;\n    float yy = viewDir.y * viewDir.y;\n    float zz = viewDir.z * viewDir.z;\n    float xy = viewDir.x * viewDir.y;\n    float yz = viewDir.y * viewDir.z;\n    float zx = viewDir.z * viewDir.x;\n\n    return sh3_0 * (-0.5900436 * viewDir.y * (3.0 * xx - yy))\n      + sh3_1 * (2.8906114 * xy * viewDir.z) +\n      + sh3_2 * (-0.4570458 * viewDir.y * (4.0 * zz - xx - yy))\n      + sh3_3 * (0.3731763 * viewDir.z * (2.0 * zz - 3.0 * xx - 3.0 * yy))\n      + sh3_4 * (-0.4570458 * viewDir.x * (4.0 * zz - xx - yy))\n      + sh3_5 * (1.4453057 * viewDir.z * (xx - yy))\n      + sh3_6 * (-0.5900436 * viewDir.x * (xx - 3.0 * yy));\n  }\n`);function To(n,A,t){return ss({inTypes:{gsplat:xA,sh1:"usampler2DArray",viewDir:"vec3"},outTypes:{rgb:"vec3"},inputs:{gsplat:n,sh1:A,viewDir:t},globals:()=>[It,Lo],statements:({inputs:e,outputs:i})=>gt(`\n        if (isGsplatActive(${e.gsplat}.flags)) {\n          ${i.rgb} = evaluateSH1(${e.gsplat}, ${e.sh1}, ${e.viewDir});\n        } else {\n          ${i.rgb} = vec3(0.0);\n        }\n      `)}).outputs.rgb}function vo(n,A,t){return ss({inTypes:{gsplat:xA,sh2:"usampler2DArray",viewDir:"vec3"},outTypes:{rgb:"vec3"},inputs:{gsplat:n,sh2:A,viewDir:t},globals:()=>[It,Yo],statements:({inputs:e,outputs:i})=>gt(`\n        if (isGsplatActive(${e.gsplat}.flags)) {\n          ${i.rgb} = evaluateSH2(${e.gsplat}, ${e.sh2}, ${e.viewDir});\n        } else {\n          ${i.rgb} = vec3(0.0);\n        }\n      `)}).outputs.rgb}function zo(n,A,t){return ss({inTypes:{gsplat:xA,sh3:"usampler2DArray",viewDir:"vec3"},outTypes:{rgb:"vec3"},inputs:{gsplat:n,sh3:A,viewDir:t},globals:()=>[It,Jo],statements:({inputs:e,outputs:i})=>gt(`\n        if (isGsplatActive(${e.gsplat}.flags)) {\n          ${i.rgb} = evaluateSH3(${e.gsplat}, ${e.sh3}, ${e.viewDir});\n        } else {\n          ${i.rgb} = vec3(0.0);\n        }\n      `)}).outputs.rgb}const Ie=class Ie{constructor({fileBytes:A}){this.header="",this.littleEndian=!0,this.elements={},this.comments=[],this.data=null,this.numSplats=0,this.fileBytes=A instanceof ArrayBuffer?new Uint8Array(A):A}async parseHeader(){const t=new ReadableStream({start:r=>{r.enqueue(this.fileBytes.slice(0,65536)),r.close()}}).pipeThrough(new TextDecoderStream).getReader();this.header="";const e=`end_header\n`;for(;;){const{value:r,done:a}=await t.read();if(a)throw new Error("Failed to read header");this.header+=r;const o=this.header.indexOf(e);if(o>=0){this.header=this.header.slice(0,o+e.length);break}}const i=new TextEncoder().encode(this.header).length;this.data=new DataView(this.fileBytes.buffer,i),this.elements={};let s=null;this.comments=[],this.header.trim().split(`\n`).forEach((r,a)=>{const o=r.trim();if(a===0){if(o!=="ply")throw new Error("Invalid PLY header");return}if(o.length===0)return;const g=o.split(" ");switch(g[0]){case"format":if(g[1]==="binary_little_endian")this.littleEndian=!0;else if(g[1]==="binary_big_endian")this.littleEndian=!1;else throw new Error(`Unsupported PLY format: ${g[1]}`);if(g[2]!=="1.0")throw new Error(`Unsupported PLY version: ${g[2]}`);break;case"end_header":break;case"comment":this.comments.push(o.slice(8));break;case"element":{const I=g[1];s={name:I,count:Number.parseInt(g[2]),properties:{}},this.elements[I]=s;break}case"property":if(s==null)throw new Error("Property must be inside an element");g[1]==="list"?s.properties[g[4]]={isList:!0,type:g[3],countType:g[2]}:s.properties[g[2]]={isList:!1,type:g[1]};break}}),this.elements.vertex&&(this.numSplats=this.elements.vertex.count)}parseData(A){let t=0;const e=this.data;if(e==null)throw new Error("No data to parse");for(const i in this.elements){const s=this.elements[i],{count:r,properties:a}=s,o={},g=[];for(const[h,B]of Object.entries(a))B.isList?(o[h]=[],g.push(()=>{const Q=o[h];Q.length=di[B.countType](e,t,this.littleEndian),t+=ae[B.countType];for(let c=0;c<Q.length;c++)Q[c]=di[B.type](e,t,this.littleEndian),t+=ae[B.type]})):(o[h]=0,g.push(()=>{o[h]=di[B.type](e,t,this.littleEndian),t+=ae[B.type]}));const I=A(s)??(()=>{});for(let h=0;h<r;h++){for(const B of g)B();I(h,o)}}}parseSplats(A,t){if(this.elements.vertex==null)throw new Error("No vertex element found");let e=!1;const i=[];let s=0,r=[],a=[],o=[],g,I,h;function B(){const E=qo[s];r=new Array(3).fill(null).flatMap((u,d)=>[0,1,2].map((y,w)=>`f_rest_${d+w*E/3}`)),a=new Array(5).fill(null).flatMap((u,d)=>[0,1,2].map((y,w)=>`f_rest_${3+d+w*E/3}`)),o=new Array(7).fill(null).flatMap((u,d)=>[0,1,2].map((y,w)=>`f_rest_${8+d+w*E/3}`)),g=s>=1?new Float32Array(3*3):void 0,I=s>=2?new Float32Array(5*3):void 0,h=s>=3?new Float32Array(7*3):void 0}function Q(E,u){if(!g)throw new Error("Missing sh1");for(const[d,y]of r.entries())g[d]=u[y]*8/255-4;if(I)for(const[d,y]of a.entries())I[d]=u[y]*8/255-4;if(h)for(const[d,y]of o.entries())h[d]=u[y]*8/255-4;t==null||t(E,g,I,h)}function c(E){const{min_x:u,min_y:d,min_z:y,max_x:w,max_y:x,max_z:M,min_scale_x:p,min_scale_y:m,min_scale_z:F,max_scale_x:D,max_scale_y:S,max_scale_z:N}=E.properties;if(!u||!d||!y||!w||!x||!M||!p||!m||!F||!D||!S||!N)throw new Error("Missing PLY chunk properties");return e=!0,(k,G)=>{const{min_x:R,min_y:U,min_z:P,max_x:K,max_y:j,max_z:W,min_scale_x:$,min_scale_y:q,min_scale_z:H,max_scale_x:L,max_scale_y:Z,max_scale_z:b,min_r:yA,min_g:dA,min_b:bA,max_r:pA,max_g:MA,max_b:SA}=G;i.push({min_x:R,min_y:U,min_z:P,max_x:K,max_y:j,max_z:W,min_scale_x:$,min_scale_y:q,min_scale_z:H,max_scale_x:L,max_scale_y:Z,max_scale_z:b,min_r:yA,min_g:dA,min_b:bA,max_r:pA,max_g:MA,max_b:SA})}}function C(E){if(t&&E.name==="sh")return s=er(E.properties),B(),Q;if(E.name!=="vertex")return null;const{packed_position:u,packed_rotation:d,packed_scale:y,packed_color:w}=E.properties;if(!u||!d||!y||!w)throw new Error("Missing PLY properties: packed_position, packed_rotation, packed_scale, packed_color");const x=Math.sqrt(2);return(M,p)=>{const m=i[M>>>8];if(m==null)throw new Error("Missing PLY chunk");const{min_x:F,min_y:D,min_z:S,max_x:N,max_y:k,max_z:G,min_scale_x:R,min_scale_y:U,min_scale_z:P,max_scale_x:K,max_scale_y:j,max_scale_z:W,min_r:$,min_g:q,min_b:H,max_r:L,max_g:Z,max_b:b}=m,{packed_position:yA,packed_rotation:dA,packed_scale:bA,packed_color:pA}=p,MA=(yA>>>21&2047)/2047*(N-F)+F,SA=(yA>>>11&1023)/1023*(k-D)+D,VA=(yA&2047)/2047*(G-S)+S,FA=((dA>>>20&1023)/1023-.5)*x,JA=((dA>>>10&1023)/1023-.5)*x,TA=((dA&1023)/1023-.5)*x,J=Math.sqrt(Math.max(0,1-FA*FA-JA*JA-TA*TA)),BA=dA>>>30,Y=BA===0?FA:BA===1?J:JA,Bt=BA<=1?JA:BA===2?J:TA,he=BA<=2?TA:J,QA=BA===0?J:FA,T=Math.exp((bA>>>21&2047)/2047*(K-R)+R),AA=Math.exp((bA>>>11&1023)/1023*(j-U)+U),z=Math.exp((bA&2047)/2047*(W-P)+P),PA=(pA>>>24&255)/255*((L??1)-($??0))+($??0),Se=(pA>>>16&255)/255*((Z??1)-(q??0))+(q??0),Fe=(pA>>>8&255)/255*((b??1)-(H??0))+(H??0),Ne=(pA&255)/255;A(M,MA,SA,VA,T,AA,z,Y,Bt,he,QA,Ne,PA,Se,Fe)}}const l=E=>{if(E.name==="chunk")return c(E);if(e)return C(E);if(E.name!=="vertex")return null;const{x:u,y:d,z:y,scale_0:w,scale_1:x,scale_2:M,rot_0:p,rot_1:m,rot_2:F,rot_3:D,opacity:S,f_dc_0:N,f_dc_1:k,f_dc_2:G,red:R,green:U,blue:P,alpha:K}=E.properties;if(!u||!d||!y)throw new Error("Missing PLY properties: x, y, z");const j=w&&x&&M,W=p&&m&&F&&D,$=K!=null?fi[K.type]:1,q=R!=null?fi[R.type]:1,H=U!=null?fi[U.type]:1,L=P!=null?fi[P.type]:1;return s=er(E.properties),B(),(Z,b)=>{const yA=j?Math.exp(b.scale_0):Ie.defaultPointScale,dA=j?Math.exp(b.scale_1):Ie.defaultPointScale,bA=j?Math.exp(b.scale_2):Ie.defaultPointScale,pA=W?b.rot_1:0,MA=W?b.rot_2:0,SA=W?b.rot_3:0,VA=W?b.rot_0:1,FA=S!=null?1/(1+Math.exp(-b.opacity)):K!=null?b.alpha/$:1,JA=N!=null?b.f_dc_0*ui+.5:R!=null?b.red/q:1,TA=k!=null?b.f_dc_1*ui+.5:U!=null?b.green/H:1,J=G!=null?b.f_dc_2*ui+.5:P!=null?b.blue/L:1;if(A(Z,b.x,b.y,b.z,yA,dA,bA,pA,MA,SA,VA,FA,JA,TA,J),t&&g){if(g)for(const[BA,Y]of r.entries())g[BA]=b[Y];if(I)for(const[BA,Y]of a.entries())I[BA]=b[Y];if(h)for(const[BA,Y]of o.entries())h[BA]=b[Y];t(Z,g,I,h)}}};this.parseData(l)}injectRgba(A){let t=0;const e=this.data;if(e==null)throw new Error("No parsed data");if(A.length!==this.numSplats*4)throw new Error("Invalid RGBA array length");for(const i in this.elements){const s=this.elements[i],{count:r,properties:a}=s,o=[];let g=0;const I=i==="vertex";if(I){for(const h of["opacity","f_dc_0","f_dc_1","f_dc_2"])if(!a[h]||a[h].type!=="float")throw new Error(`Can\'t injectRgba due to property: ${h}`)}for(const[h,B]of Object.entries(a))if(B.isList)o.push(()=>{const Q=di[B.countType](e,t,this.littleEndian);t+=ae[B.countType],t+=Q*ae[B.type]});else{if(I)if(h==="f_dc_0"||h==="f_dc_1"||h==="f_dc_2"){const Q=Number.parseInt(h.slice(5));o.push(()=>{const c=(A[g+Q]/255-.5)/ui;tr[B.type](e,t,this.littleEndian,c)})}else h==="opacity"&&o.push(()=>{const Q=Math.max(-100,Math.min(100,-Math.log(1/(A[g+3]/255)-1)));tr[B.type](e,t,this.littleEndian,Q)});o.push(()=>{t+=ae[B.type]})}for(let h=0;h<r;h++){for(const B of o)B();I&&(g+=4)}}}};Ie.defaultPointScale=.001;let me=Ie;const ui=.28209479177387814,di={char:(n,A,t)=>n.getInt8(A),uchar:(n,A,t)=>n.getUint8(A),short:(n,A,t)=>n.getInt16(A,t),ushort:(n,A,t)=>n.getUint16(A,t),int:(n,A,t)=>n.getInt32(A,t),uint:(n,A,t)=>n.getUint32(A,t),float:(n,A,t)=>n.getFloat32(A,t),double:(n,A,t)=>n.getFloat64(A,t)},tr={char:(n,A,t,e)=>{n.setInt8(A,e)},uchar:(n,A,t,e)=>{n.setUint8(A,e)},short:(n,A,t,e)=>{n.setInt16(A,e,t)},ushort:(n,A,t,e)=>{n.setUint16(A,e,t)},int:(n,A,t,e)=>{n.setInt32(A,e,t)},uint:(n,A,t,e)=>{n.setUint32(A,e,t)},float:(n,A,t,e)=>{n.setFloat32(A,e,t)},double:(n,A,t,e)=>{n.setFloat64(A,e,t)}},ae={char:1,uchar:1,short:2,ushort:2,int:4,uint:4,float:4,double:8},fi={char:127,uchar:255,short:32767,ushort:65535,int:2147483647,uint:4294967295,float:1,double:1},Ho={0:0,9:1,24:2,45:3},qo={0:0,1:9,2:24,3:45};function er(n){let A=0;for(;n[`f_rest_${A}`];)A+=1;const t=Ho[A];if(t==null)throw new Error(`Unsupported number of SH coefficients: ${A}`);return t}function _o(n){return new Worker(self.location.href,{name:n==null?void 0:n.name})}class Ko{constructor(){this.messages={},this.messageIdNext=0,this.worker=new _o,this.worker.onmessage=A=>this.onMessage(A)}makeMessageId(){return++this.messageIdNext}makeMessagePromiseId(){const A=this.makeMessageId(),t=new Promise((e,i)=>{this.messages[A]={resolve:e,reject:i}});return{id:A,promise:t}}onMessage(A){const{id:t,result:e,error:i}=A.data,s=this.messages[t];s&&(delete this.messages[t],i?s.reject(i):s.resolve(e))}async call(A,t){const{id:e,promise:i}=this.makeMessagePromiseId();return this.worker.postMessage({name:A,args:t,id:e},{transfer:bn(t)}),i}}let ir=4,yi=0;const sr=[],nr=[];async function Zo(){const n=sr.shift();if(n)return n;if(yi<ir){const A=new Ko;return yi+=1,A}return new Promise(A=>{nr.push(A)})}function Oo(n){if(yi>ir){yi-=1;return}const A=nr.shift();if(A){A(n);return}sr.push(n)}async function oe(n){const A=await Zo();try{return await n(A)}finally{Oo(A)}}class Vo extends es{constructor(A){super(A),this.fileLoader=new Da(A)}load(A,t,e,i){const s=this.manager.resolveURL((this.path??"")+(A??"")),r=new Request(s,{headers:new Headers(this.requestHeader),credentials:this.withCredentials?"include":"same-origin"});let a=this.fileType;fetch(r).then(async o=>{if(!o.ok)throw new Error(`${o.status} "${o.statusText}" fetching URL: ${s}`);if(t){const g=await o.arrayBuffer(),I={},h=[];try{const B=or(g);if(this.fileType==="pcsogs"&&B===void 0)throw new Error("Invalid PC SOGS file");if(B!==void 0){a="pcsogs";for(const c of["means","scales","quats","sh0","shN"]){const C=B[c];if(C){const l=C.files;for(const E of l){const u=new URL(E,s).toString();this.manager.itemStart(u);const d=this.loadExtra(u).then(y=>{I[E]=y}).catch(y=>{throw this.manager.itemError(u),y}).finally(()=>{this.manager.itemEnd(u)});h.push(d)}}}}await Promise.all(h);const Q=await Ir({input:g,extraFiles:I,fileType:a,pathOrUrl:s});this.packedSplats?(this.packedSplats.initialize(Q),t(this.packedSplats)):t(new ne(Q))}catch(B){i==null||i(B)}}}).catch(o=>{i==null||i(o)}).finally(()=>{this.manager.itemEnd(s)}),this.manager.itemStart(s)}async loadAsync(A,t){return new Promise((e,i)=>{this.load(A,s=>{e(s)},t,i)})}async loadExtra(A){return new Promise((t,e)=>{this.fileLoader.load(A,i=>t(i),void 0,i=>e(i))})}parse(A){return new Qs({packedSplats:A})}}var De=(n=>(n.PLY="ply",n.SPZ="spz",n.SPLAT="splat",n.KSPLAT="ksplat",n.PCSOGS="pcsogs",n.PCSOGSZIP="pcsogszip",n))(De||{});function rr(n){const A=new DataView(n.buffer);if((A.getUint32(0,!0)&16777215)===7957616)return"ply";if((A.getUint32(0,!0)&16777215)===559903){const t=Za(n,4);return new DataView(t.buffer).getUint32(0,!0)===1347635022?"spz":void 0}if(A.getUint32(0,!0)===67324752)return gr(n)?"pcsogszip":void 0}function Po(n){const A=n.split(/[?#]/,1)[0],t=Math.max(A.lastIndexOf("/"),A.lastIndexOf("\\\\")),e=A.slice(t+1),i=e.lastIndexOf(".");return i<=0||i===e.length-1?"":e.slice(i+1).toLowerCase()}function ar(n){const A=Po(n);if(A==="ply")return"ply";if(A==="spz")return"spz";if(A==="splat")return"splat";if(A==="ksplat")return"ksplat"}function or(n){try{let A;if(typeof n=="string")A=n;else{const e=n instanceof ArrayBuffer?new Uint8Array(n):n;if(e.length>65536)return;A=new TextDecoder().decode(e)}const t=JSON.parse(A);if(!t||typeof t!="object"||Array.isArray(t))return;for(const e of["means","scales","quats","sh0"])if(!t[e]||typeof t[e]!="object"||Array.isArray(t[e])||!t[e].shape||!t[e].files||e!=="quats"&&(!t[e].mins||!t[e].maxs))return;return t}catch{return}}function gr(n){try{const A=n instanceof ArrayBuffer?new Uint8Array(n):n;let t=null;const e=vr(A,{filter:({name:s})=>s.split(/[\\\\/]/).pop()==="meta.json"?(t=s,!0):!1});if(!t)return;const i=or(e[t]);return i?{name:t,json:i}:void 0}catch{return}}async function Ir({input:n,extraFiles:A,fileType:t,pathOrUrl:e}){const i=n instanceof ArrayBuffer?new Uint8Array(n):n;let s=t;switch(t||(s=rr(i),!s&&e&&(s=ar(e))),s){case"ply":{const r=new me({fileBytes:i});await r.parseHeader();const a=r.numSplats,o=GA(a).maxSplats,g={fileBytes:i,packedArray:new Uint32Array(o*4)};return await oe(async I=>{const{packedArray:h,numSplats:B,extra:Q}=await I.call("unpackPly",g);return{packedArray:h,numSplats:B,extra:Q}})}case"spz":return await oe(async r=>{const{packedArray:a,numSplats:o,extra:g}=await r.call("decodeSpz",{fileBytes:i});return{packedArray:a,numSplats:o,extra:g}});case"splat":return await oe(async r=>{const{packedArray:a,numSplats:o}=await r.call("decodeAntiSplat",{fileBytes:i});return{packedArray:a,numSplats:o}});case"ksplat":return await oe(async r=>{const{packedArray:a,numSplats:o,extra:g}=await r.call("decodeKsplat",{fileBytes:i});return{packedArray:a,numSplats:o,extra:g}});case"pcsogs":return await oe(async r=>{const{packedArray:a,numSplats:o,extra:g}=await r.call("decodePcSogs",{fileBytes:i,extraFiles:A});return{packedArray:a,numSplats:o,extra:g}});case"pcsogszip":return await oe(async r=>{const{packedArray:a,numSplats:o,extra:g}=await r.call("decodePcSogsZip",{fileBytes:i});return{packedArray:a,numSplats:o,extra:g}});default:throw new Error(`Unknown splat file type: ${s}`)}}class Wo{constructor({maxSplats:A=1}={}){this.numSplats=0,this.maxSplats=GA(A).maxSplats,this.centers=new Float32Array(this.maxSplats*3),this.scales=new Float32Array(this.maxSplats*3),this.quaternions=new Float32Array(this.maxSplats*4),this.opacities=new Float32Array(this.maxSplats),this.colors=new Float32Array(this.maxSplats*3)}pushSplat(){const A=this.numSplats;return this.ensureIndex(A),this.numSplats+=1,A}unpushSplat(A){if(A===this.numSplats-1)this.numSplats-=1;else throw new Error("Cannot unpush splat from non-last position")}ensureCapacity(A){if(A>this.maxSplats){const t=Math.max(A,this.maxSplats*2),e=new Float32Array(t*3),i=new Float32Array(t*3),s=new Float32Array(t*4),r=new Float32Array(t),a=new Float32Array(t*3);if(e.set(this.centers),i.set(this.scales),s.set(this.quaternions),r.set(this.opacities),a.set(this.colors),this.centers=e,this.scales=i,this.quaternions=s,this.opacities=r,this.colors=a,this.sh1){const o=new Float32Array(t*9);o.set(this.sh1),this.sh1=o}if(this.sh2){const o=new Float32Array(t*15);o.set(this.sh2),this.sh2=o}if(this.sh3){const o=new Float32Array(t*21);o.set(this.sh3),this.sh3=o}this.maxSplats=t}}ensureIndex(A){this.ensureCapacity(A+1)}setCenter(A,t,e,i){this.centers[A*3]=t,this.centers[A*3+1]=e,this.centers[A*3+2]=i}setScale(A,t,e,i){this.scales[A*3]=t,this.scales[A*3+1]=e,this.scales[A*3+2]=i}setQuaternion(A,t,e,i,s){this.quaternions[A*4]=t,this.quaternions[A*4+1]=e,this.quaternions[A*4+2]=i,this.quaternions[A*4+3]=s}setOpacity(A,t){this.opacities[A]=t}setColor(A,t,e,i){this.colors[A*3]=t,this.colors[A*3+1]=e,this.colors[A*3+2]=i}setSh1(A,t){this.sh1||(this.sh1=new Float32Array(this.maxSplats*9));for(let e=0;e<9;++e)this.sh1[A*9+e]=t[e]}setSh2(A,t){this.sh2||(this.sh2=new Float32Array(this.maxSplats*15));for(let e=0;e<15;++e)this.sh2[A*15+e]=t[e]}setSh3(A,t){this.sh3||(this.sh3=new Float32Array(this.maxSplats*21));for(let e=0;e<21;++e)this.sh3[A*21+e]=t[e]}}async function hr(n,A){if(n.quats.encoding!=="quaternion_packed")throw new Error("Unsupported quaternion encoding");const t=n.means.shape[0],e=oi(t),i=new Uint32Array(e*4),s={},r=await Promise.all([xe(A[n.means.files[0]]),xe(A[n.means.files[1]])]);for(let B=0;B<t;++B){const Q=B*4,c=(r[0][Q+0]+(r[1][Q+0]<<8))/65535,C=(r[0][Q+1]+(r[1][Q+1]<<8))/65535,l=(r[0][Q+2]+(r[1][Q+2]<<8))/65535;let E=n.means.mins[0]+(n.means.maxs[0]-n.means.mins[0])*c,u=n.means.mins[1]+(n.means.maxs[1]-n.means.mins[1])*C,d=n.means.mins[2]+(n.means.maxs[2]-n.means.mins[2])*l;E=Math.sign(E)*(Math.exp(Math.abs(E))-1),u=Math.sign(u)*(Math.exp(Math.abs(u))-1),d=Math.sign(d)*(Math.exp(Math.abs(d))-1),Un(i,B,E,u,d)}const a=await xe(A[n.scales.files[0]]);for(let B=0;B<t;++B){const Q=B*4,c=a[Q+0]/255,C=a[Q+1]/255,l=a[Q+2]/255,E=n.scales.mins[0]+(n.scales.maxs[0]-n.scales.mins[0])*c,u=n.scales.mins[1]+(n.scales.maxs[1]-n.scales.mins[1])*C,d=n.scales.mins[2]+(n.scales.maxs[2]-n.scales.mins[2])*l;Ln(i,B,Math.exp(E),Math.exp(u),Math.exp(d))}const o=await xe(A[n.quats.files[0]]),g=Math.sqrt(2);for(let B=0;B<t;++B){const Q=B*4,c=(o[Q+0]/255-.5)*g,C=(o[Q+1]/255-.5)*g,l=(o[Q+2]/255-.5)*g,E=Math.sqrt(Math.max(0,1-c*c-C*C-l*l)),u=o[Q+3]-252,d=u===0?c:u===1?E:C,y=u<=1?C:u===2?E:l,w=u<=2?l:E;Yn(i,B,d,y,w,u===0?E:c)}const I=await xe(A[n.sh0.files[0]]),h=.28209479177387814;for(let B=0;B<t;++B){const Q=B*4,c=I[Q+0]/255,C=I[Q+1]/255,l=I[Q+2]/255,E=I[Q+3]/255,u=n.sh0.mins[0]+(n.sh0.maxs[0]-n.sh0.mins[0])*c,d=n.sh0.mins[1]+(n.sh0.maxs[1]-n.sh0.mins[1])*C,y=n.sh0.mins[2]+(n.sh0.maxs[2]-n.sh0.mins[2])*l,w=n.sh0.mins[3]+(n.sh0.maxs[3]-n.sh0.mins[3])*E,x=h*u+.5,M=h*d+.5,p=h*y+.5,m=1/(1+Math.exp(-w));La(i,B,x,M,p,m)}if(n.shN){const B=n.shN.shape[1]>=45,Q=n.shN.shape[1]>=24,c=n.shN.shape[1]>=9;c&&(s.sh1=new Uint32Array(t*2)),Q&&(s.sh2=new Uint32Array(t*4)),B&&(s.sh3=new Uint32Array(t*4));const C=new Float32Array(9),l=new Float32Array(15),E=new Float32Array(21),[u,d]=await Promise.all([cs(A[n.shN.files[0]]),cs(A[n.shN.files[1]])]);for(let y=0;y<t;++y){const w=y*4,x=d.rgba[w+0]+(d.rgba[w+1]<<8),M=(x&63)*15,m=(x>>>6)*u.width+M;for(let F=0;F<3;++F){if(c)for(let D=0;D<3;++D)C[D*3+F]=n.shN.mins+(n.shN.maxs-n.shN.mins)*u.rgba[(m+D)*4+F]/255;if(Q)for(let D=0;D<5;++D)l[D*3+F]=n.shN.mins+(n.shN.maxs-n.shN.mins)*u.rgba[(m+3+D)*4+F]/255;if(B)for(let D=0;D<7;++D)E[D*3+F]=n.shN.mins+(n.shN.maxs-n.shN.mins)*u.rgba[(m+8+D)*4+F]/255}c&&Ii(s.sh1,y,C),Q&&hi(s.sh2,y,l),B&&Bi(s.sh3,y,E)}}return{packedArray:i,numSplats:t,extra:s}}let pi=null;async function cs(n){if(!pi&&(pi=new OffscreenCanvas(1,1).getContext("webgl2"),!pi))throw new Error("Failed to create WebGL2 context");const A=new Blob([n]),t=await createImageBitmap(A,{premultiplyAlpha:"none"}),e=pi,i=e.createTexture();e.bindTexture(e.TEXTURE_2D,i),e.pixelStorei(e.UNPACK_FLIP_Y_WEBGL,!0),e.texImage2D(e.TEXTURE_2D,0,e.RGBA,e.RGBA,e.UNSIGNED_BYTE,t),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MAG_FILTER,e.NEAREST),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MIN_FILTER,e.NEAREST);const s=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,s),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,i,0);const r=new Uint8Array(t.width*t.height*4);return e.readPixels(0,0,t.width,t.height,e.RGBA,e.UNSIGNED_BYTE,r),e.deleteTexture(i),e.deleteFramebuffer(s),{rgba:r,width:t.width,height:t.height}}async function xe(n){const{rgba:A}=await cs(n);return A}async function Xo(n){var h;const A=gr(n);if(!A)throw new Error("Invalid PC SOGS zip file");const{name:t,json:e}=A,i=t.lastIndexOf("/"),s=t.lastIndexOf("\\\\"),r=t.slice(0,Math.max(i,s)+1),a=new Map,o=[...e.means.files,...e.scales.files,...e.quats.files,...e.sh0.files,...((h=e.shN)==null?void 0:h.files)??[]];for(const B of o)a.set(r+B,B);const g=await new Promise((B,Q)=>{Tr(n,{filter:({name:c})=>a.has(c)},(c,C)=>{c?Q(c):B(C)})}),I={};for(const[B,Q]of a.entries())I[Q]=g[B];return await hr(e,I)}class Br{constructor({fileBytes:A}){this.fileBytes=A instanceof ArrayBuffer?new Uint8Array(A):A,this.reader=new Oa({fileBytes:this.fileBytes});const t=new DataView(this.reader.read(16).buffer);if(t.getUint32(0,!0)!==1347635022)throw new Error("Invalid SPZ file");if(this.version=t.getUint32(4,!0),this.version<1||this.version>2)throw new Error(`Unsupported SPZ version: ${this.version}`);this.numSplats=t.getUint32(8,!0),this.shDegree=t.getUint8(12),this.fractionalBits=t.getUint8(13),this.flags=t.getUint8(14),this.flagAntiAlias=(this.flags&1)!==0,this.reserved=t.getUint8(15),this.parsed=!1}parseSplats(A,t,e,i,s,r){if(this.parsed)throw new Error("SPZ file already parsed");if(this.parsed=!0,this.version===1){const a=this.reader.read(this.numSplats*3*2),o=new Uint16Array(a.buffer);for(let g=0;g<this.numSplats;g++){const I=g*3,h=tA(o[I]),B=tA(o[I+1]),Q=tA(o[I+2]);A==null||A(g,h,B,Q)}}else if(this.version===2){const a=1<<this.fractionalBits,o=this.reader.read(this.numSplats*3*3);for(let g=0;g<this.numSplats;g++){const I=g*9,h=((o[I+2]<<24|o[I+1]<<16|o[I]<<8)>>8)/a,B=((o[I+5]<<24|o[I+4]<<16|o[I+3]<<8)>>8)/a,Q=((o[I+8]<<24|o[I+7]<<16|o[I+6]<<8)>>8)/a;A==null||A(g,h,B,Q)}}else throw new Error("Unreachable");{const a=this.reader.read(this.numSplats);for(let o=0;o<this.numSplats;o++)t==null||t(o,a[o]/255)}{const a=this.reader.read(this.numSplats*3),o=cr/.15;for(let g=0;g<this.numSplats;g++){const I=g*3,h=(a[I]/255-.5)*o+.5,B=(a[I+1]/255-.5)*o+.5,Q=(a[I+2]/255-.5)*o+.5;e==null||e(g,h,B,Q)}}{const a=this.reader.read(this.numSplats*3);for(let o=0;o<this.numSplats;o++){const g=o*3,I=Math.exp(a[g]/16-10),h=Math.exp(a[g+1]/16-10),B=Math.exp(a[g+2]/16-10);i==null||i(o,I,h,B)}}{const a=this.reader.read(this.numSplats*3);for(let o=0;o<this.numSplats;o++){const g=o*3,I=a[g]/127.5-1,h=a[g+1]/127.5-1,B=a[g+2]/127.5-1,Q=Math.sqrt(Math.max(0,1-I*I-h*h-B*B));s==null||s(o,I,h,B,Q)}}if(r&&this.shDegree>=1){const a=new Float32Array(9),o=this.shDegree>=2?new Float32Array(5*3):void 0,g=this.shDegree>=3?new Float32Array(7*3):void 0,I=this.reader.read(this.numSplats*Qr[this.shDegree]*3);let h=0;for(let B=0;B<this.numSplats;B++){for(let Q=0;Q<9;++Q)a[Q]=(I[h+Q]-128)/128;if(h+=9,o){for(let Q=0;Q<15;++Q)o[Q]=(I[h+Q]-128)/128;h+=15}if(g){for(let Q=0;Q<21;++Q)g[Q]=(I[h+Q]-128)/128;h+=21}r==null||r(B,a,o,g)}}}}const Qr={1:3,2:8,3:15},cr=.28209479177387814,jo=1347635022,$o=2,Ag=1;class wt{constructor({numSplats:A,shDegree:t,fractionalBits:e=12,flagAntiAlias:i=!0}){this.clippedCount=0;const s=19+(t>=1?9:0)+(t>=2?15:0)+(t>=3?21:0),r=16+A*s;this.buffer=new ArrayBuffer(r),this.view=new DataView(this.buffer),this.view.setUint32(0,jo,!0),this.view.setUint32(4,$o,!0),this.view.setUint32(8,A,!0),this.view.setUint8(12,t),this.view.setUint8(13,e),this.view.setUint8(14,i?Ag:0),this.view.setUint8(15,0),this.numSplats=A,this.shDegree=t,this.fractionalBits=e,this.fraction=1<<e,this.flagAntiAlias=i}setCenter(A,t,e,i){const s=Math.round(t*this.fraction),r=Math.max(-8388607,Math.min(8388607,s)),a=Math.round(e*this.fraction),o=Math.max(-8388607,Math.min(8388607,a)),g=Math.round(i*this.fraction),I=Math.max(-8388607,Math.min(8388607,g));(s!==r||a!==o||g!==I)&&(this.clippedCount+=1);const Q=16+A*9;this.view.setUint8(Q,r&255),this.view.setUint8(Q+1,r>>8&255),this.view.setUint8(Q+2,r>>16&255),this.view.setUint8(Q+3,o&255),this.view.setUint8(Q+4,o>>8&255),this.view.setUint8(Q+5,o>>16&255),this.view.setUint8(Q+6,I&255),this.view.setUint8(Q+7,I>>8&255),this.view.setUint8(Q+8,I>>16&255)}setAlpha(A,t){const e=16+this.numSplats*9+A;this.view.setUint8(e,Math.max(0,Math.min(255,Math.round(t*255))))}static scaleRgb(A){const t=((A-.5)/(cr/.15)+.5)*255;return Math.max(0,Math.min(255,Math.round(t)))}setRgb(A,t,e,i){const s=16+this.numSplats*10+A*3;this.view.setUint8(s,wt.scaleRgb(t)),this.view.setUint8(s+1,wt.scaleRgb(e)),this.view.setUint8(s+2,wt.scaleRgb(i))}setScale(A,t,e,i){const s=16+this.numSplats*13+A*3;this.view.setUint8(s,Math.max(0,Math.min(255,Math.round((Math.log(t)+10)*16)))),this.view.setUint8(s+1,Math.max(0,Math.min(255,Math.round((Math.log(e)+10)*16)))),this.view.setUint8(s+2,Math.max(0,Math.min(255,Math.round((Math.log(i)+10)*16))))}setQuat(A,t,e,i,s){const r=16+this.numSplats*16+A*3,a=s<0;this.view.setUint8(r,Math.max(0,Math.min(255,Math.round(((a?-t:t)+1)*127.5)))),this.view.setUint8(r+1,Math.max(0,Math.min(255,Math.round(((a?-e:e)+1)*127.5)))),this.view.setUint8(r+2,Math.max(0,Math.min(255,Math.round(((a?-i:i)+1)*127.5))))}static quantizeSh(A,t){const e=Math.round(A*128)+128,i=1<<8-t,s=Math.floor((e+i/2)/i)*i;return Math.max(0,Math.min(255,s))}setSh(A,t,e,i){const s=Qr[this.shDegree]||0,r=16+this.numSplats*19+A*s*3;for(let a=0;a<9;++a)this.view.setUint8(r+a,wt.quantizeSh(t[a],5));if(e){const a=r+9;for(let o=0;o<15;++o)this.view.setUint8(a+o,wt.quantizeSh(e[o],4));if(i){const o=a+15;for(let g=0;g<21;++g)this.view.setUint8(o+g,wt.quantizeSh(i[g],4))}}}async finalize(){const A=new Uint8Array(this.buffer),e=new ReadableStream({async start(r){r.enqueue(A),r.close()}}).pipeThrough(new CompressionStream("gzip")),s=await new Response(e).arrayBuffer();return console.log("Compressed",A.length,"bytes to",s.byteLength,"bytes"),new Uint8Array(s)}}async function tg(n){var I,h,B;const A=new Wo,{inputs:t,clipXyz:e,maxSh:i,fractionalBits:s=12,opacityThreshold:r}=n;for(const Q of t){let c=function(p){return p.multiplyScalar(d),p.applyQuaternion(y),p.add(w),p},C=function(p){return p.multiplyScalar(d),p},l=function(p){return p.premultiply(y),p},E=function(p){return!x||x.containsPoint(p)},u=function(p){return r!==void 0?p>=r:!0};const d=((I=Q.transform)==null?void 0:I.scale)??1,y=new oA().fromArray(((h=Q.transform)==null?void 0:h.quaternion)??[0,0,0,1]),w=new f().fromArray(((B=Q.transform)==null?void 0:B.translate)??[0,0,0]),x=e?new zt(new f().fromArray(e.min),new f().fromArray(e.max)):void 0;let M=Q.fileType;switch(M||(M=rr(Q.fileBytes),!M&&Q.pathOrUrl&&(M=ar(Q.pathOrUrl))),M){case De.PLY:{const p=new me({fileBytes:Q.fileBytes});await p.parseHeader();let m=null;p.parseSplats((F,D,S,N,k,G,R,U,P,K,j,W,$,q,H)=>{const L=c(new f(D,S,N));if(E(L)&&u(W)){m=A.pushSplat(),A.setCenter(m,L.x,L.y,L.z);const Z=C(new f(k,G,R));A.setScale(m,Z.x,Z.y,Z.z);const b=l(new oA(U,P,K,j));A.setQuaternion(m,b.x,b.y,b.z,b.w),A.setOpacity(m,W),A.setColor(m,$,q,H)}else m=null},(F,D,S,N)=>{D&&m!==null&&A.setSh1(m,D),S&&m!==null&&A.setSh2(m,S),N&&m!==null&&A.setSh3(m,N)});break}case De.SPZ:{const p=new Br({fileBytes:Q.fileBytes}),m=new Int32Array(p.numSplats);m.fill(-1);const F=new Float32Array(p.numSplats*3),D=new f;p.parseSplats((S,N,k,G)=>{const R=c(new f(N,k,G));F[S*3]=R.x,F[S*3+1]=R.y,F[S*3+2]=R.z},(S,N)=>{D.fromArray(F,S*3),E(D)&&u(N)&&(m[S]=A.pushSplat(),A.setCenter(m[S],D.x,D.y,D.z),A.setOpacity(m[S],N))},(S,N,k,G)=>{m[S]>=0&&A.setColor(m[S],N,k,G)},(S,N,k,G)=>{if(m[S]>=0){const R=C(new f(N,k,G));A.setScale(m[S],R.x,R.y,R.z)}},(S,N,k,G,R)=>{if(m[S]>=0){const U=l(new oA(N,k,G,R));A.setQuaternion(m[S],U.x,U.y,U.z,U.w)}},(S,N,k,G)=>{m[S]>=0&&(A.setSh1(m[S],N),k&&A.setSh2(m[S],k),G&&A.setSh3(m[S],G))});break}case De.SPLAT:vn(Q.fileBytes,p=>{},(p,m,F,D,S,N,k,G,R,U,P,K,j,W,$)=>{const q=c(new f(m,F,D));if(E(q)&&u(K)){const H=A.pushSplat();A.setCenter(H,q.x,q.y,q.z);const L=C(new f(S,N,k));A.setScale(H,L.x,L.y,L.z);const Z=l(new oA(G,R,U,P));A.setQuaternion(H,Z.x,Z.y,Z.z,Z.w),A.setOpacity(H,K),A.setColor(H,j,W,$)}});break;case De.KSPLAT:{let p=null;Pa(Q.fileBytes,m=>{},(m,F,D,S,N,k,G,R,U,P,K,j,W,$,q)=>{const H=c(new f(F,D,S));if(E(H)&&u(j)){p=A.pushSplat(),A.setCenter(p,H.x,H.y,H.z);const L=C(new f(N,k,G));A.setScale(p,L.x,L.y,L.z);const Z=l(new oA(R,U,P,K));A.setQuaternion(p,Z.x,Z.y,Z.z,Z.w),A.setOpacity(p,j),A.setColor(p,W,$,q)}else p=null},(m,F,D,S)=>{p!==null&&(A.setSh1(p,F),D&&A.setSh2(p,D),S&&A.setSh3(p,S))});break}default:throw new Error(`transcodeSpz not implemented for ${M}`)}}const a=Math.min(i??3,A.sh3?3:A.sh2?2:A.sh1?1:0),o=new wt({numSplats:A.numSplats,shDegree:a,fractionalBits:s,flagAntiAlias:!0});for(let Q=0;Q<A.numSplats;++Q){const c=Q*3,C=Q*4;o.setCenter(Q,A.centers[c],A.centers[c+1],A.centers[c+2]),o.setScale(Q,A.scales[c],A.scales[c+1],A.scales[c+2]),o.setQuat(Q,A.quaternions[C],A.quaternions[C+1],A.quaternions[C+2],A.quaternions[C+3]),o.setAlpha(Q,A.opacities[Q]),o.setRgb(Q,A.colors[c],A.colors[c+1],A.colors[c+2]),A.sh1&&a>=1&&o.setSh(Q,A.sh1.slice(Q*9,(Q+1)*9),a>=2&&A.sh2?A.sh2.slice(Q*15,(Q+1)*15):void 0,a>=3&&A.sh3?A.sh3.slice(Q*21,(Q+1)*21):void 0)}return{fileBytes:await o.finalize(),clippedCount:o.clippedCount}}async function Cr(n){const{name:A,args:t,id:e}=n.data;let i,s;try{switch(A){case"unpackPly":{const{packedArray:r,fileBytes:a}=t,o=await eg({packedArray:r,fileBytes:a});i={id:e,numSplats:o.numSplats,packedArray:o.packedArray,extra:o.extra};break}case"decodeSpz":{const{fileBytes:r}=t,a=ig(r);i={id:e,numSplats:a.numSplats,packedArray:a.packedArray,extra:a.extra};break}case"decodeAntiSplat":{const{fileBytes:r}=t,a=Va(r);i={id:e,numSplats:a.numSplats,packedArray:a.packedArray};break}case"decodeKsplat":{const{fileBytes:r}=t,a=Wa(r);i={id:e,numSplats:a.numSplats,packedArray:a.packedArray,extra:a.extra};break}case"decodePcSogs":{const{fileBytes:r,extraFiles:a}=t,o=JSON.parse(new TextDecoder().decode(r)),g=await hr(o,a);i={id:e,numSplats:g.numSplats,packedArray:g.packedArray,extra:g.extra};break}case"decodePcSogsZip":{const{fileBytes:r}=t,a=await Xo(r);i={id:e,numSplats:a.numSplats,packedArray:a.packedArray,extra:a.extra};break}case"sortSplats":{const{maxSplats:r,totalSplats:a,readback:o,ordering:g}=t;i={id:e,readback:o,...sg({totalSplats:a,readback:o,ordering:g})};break}case"sortDoubleSplats":{const{numSplats:r,readback:a,ordering:o}=t;i={id:e,readback:a,ordering:o},Sa&&(i={id:e,readback:a,ordering:o,activeSplats:dr(r,a,o)});break}case"transcodeSpz":{const r=t,a=await tg(r);i={id:e,fileBytes:a,input:r};break}default:throw new Error(`Unknown name: ${A}`)}}catch(r){s=r}self.postMessage({id:e,result:i,error:s},{transfer:bn(i)})}async function eg({packedArray:n,fileBytes:A}){const t=new me({fileBytes:A});await t.parseHeader();const e=t.numSplats,i={};return t.parseSplats((s,r,a,o,g,I,h,B,Q,c,C,l,E,u,d)=>{we(n,s,r,a,o,g,I,h,B,Q,c,C,l,E,u,d)},(s,r,a,o)=>{r&&(i.sh1||(i.sh1=new Uint32Array(e*2)),Ii(i.sh1,s,r)),a&&(i.sh2||(i.sh2=new Uint32Array(e*4)),hi(i.sh2,s,a)),o&&(i.sh3||(i.sh3=new Uint32Array(e*4)),Bi(i.sh3,s,o))}),{packedArray:n,numSplats:e,extra:i}}function ig(n){const A=new Br({fileBytes:n}),t=A.numSplats,e=oi(t),i=new Uint32Array(e*4),s={};return A.parseSplats((r,a,o,g)=>{Un(i,r,a,o,g)},(r,a)=>{Ja(i,r,a)},(r,a,o,g)=>{Ya(i,r,a,o,g)},(r,a,o,g)=>{Ln(i,r,a,o,g)},(r,a,o,g,I)=>{Yn(i,r,a,o,g,I)},(r,a,o,g)=>{a&&(s.sh1||(s.sh1=new Uint32Array(t*2)),Ii(s.sh1,r,a)),o&&(s.sh2||(s.sh2=new Uint32Array(t*4)),hi(s.sh2,r,o)),g&&(s.sh3||(s.sh3=new Uint32Array(t*4)),Bi(s.sh3,r,g))}),{packedArray:i,numSplats:t,extra:s}}const ge=31744,Me=ge+1;let nA=null;function sg({totalSplats:n,readback:A,ordering:t}){nA||(nA=new Uint32Array(Me)),nA.fill(0);const e=A.map(o=>new Uint32Array(o.buffer)),i=e[0].length,s=Math.ceil(n/i);let r=0;for(let o=0;o<s;++o){const g=e[o],I=Math.min(g.length,n-r);for(let h=0;h<I;++h){const B=g[h]&32767;B<ge&&(nA[B]+=1)}r+=I}let a=0;for(let o=0;o<Me;++o){const g=a+nA[o];nA[o]=a,a=g}r=0;for(let o=0;o<s;++o){const g=e[o],I=Math.min(g.length,n-r);for(let h=0;h<I;++h){const B=g[h]&32767;B<ge&&(t[nA[B]]=r+h,nA[B]+=1)}r+=I}if(nA[Me-1]!==a)throw new Error(`Expected ${a} active splats but got ${nA[Me-1]}`);return{activeSplats:a,ordering:t}}function og({numSplats:n,readback:A,ordering:t}){nA||(nA=new Uint32Array(Me)),nA.fill(0);for(let i=0;i<n;++i){const s=A[i];s<ge&&(nA[s]+=1)}let e=0;for(let i=ge-1;i>=0;--i){const s=e+nA[i];nA[i]=e,e=s}for(let i=0;i<n;++i){const s=A[i];s<ge&&(t[nA[s]]=i,nA[s]+=1)}if(nA[0]!==e)throw new Error(`Expected ${e} active splats but got ${nA[0]}`);return{activeSplats:e,ordering:t}}const Cs=[];function Er(n){Cs.push(n)}async function ng(){self.addEventListener("message",Er),await mi(),self.removeEventListener("message",Er),self.addEventListener("message",Cr);for(const n of Cs)Cr(n);Cs.length=0}ng().catch(console.error)})();\n//# sourceMappingURL=worker-xCg1Nj1w.js.map\n', gs = typeof self < "u" && self.Blob && new Blob([Ra], { type: "text/javascript;charset=utf-8" });
function nc(t) {
  let A;
  try {
    if (A = gs && (self.URL || self.webkitURL).createObjectURL(gs), !A) throw "";
    const e = new Worker(A, {
      name: t == null ? void 0 : t.name
    });
    return e.addEventListener("error", () => {
      (self.URL || self.webkitURL).revokeObjectURL(A);
    }), e;
  } catch {
    return new Worker(
      "data:text/javascript;charset=utf-8," + encodeURIComponent(Ra),
      {
        name: t == null ? void 0 : t.name
      }
    );
  } finally {
    A && (self.URL || self.webkitURL).revokeObjectURL(A);
  }
}
class rc {
  constructor() {
    this.messages = {}, this.messageIdNext = 0, this.worker = new nc(), this.worker.onmessage = (A) => this.onMessage(A);
  }
  makeMessageId() {
    return ++this.messageIdNext;
  }
  makeMessagePromiseId() {
    const A = this.makeMessageId(), e = new Promise((s, i) => {
      this.messages[A] = { resolve: s, reject: i };
    });
    return { id: A, promise: e };
  }
  onMessage(A) {
    const { id: e, result: s, error: i } = A.data, n = this.messages[e];
    n && (delete this.messages[e], i ? n.reject(i) : n.resolve(s));
  }
  // Invoke an RPC on the worker with the given name and arguments.
  // The normal usage of a worker is to run one activity at a time,
  // but this function allows for concurrent calls, tagging each request
  // with a unique message Id and awaiting a response to that same Id.
  // The method will automatically transfer any ArrayBuffers in the
  // arguments to the worker. If you'd like to transfer a copy of a
  // buffer then you must clone it before passing to this function.
  async call(A, e) {
    const { id: s, promise: i } = this.makeMessagePromiseId();
    return this.worker.postMessage(
      { name: A, args: e, id: s },
      { transfer: Si(e) }
    ), i;
  }
}
let va = 4, Qe = 0;
const Ua = [], ba = [];
async function ac() {
  const t = Ua.shift();
  if (t)
    return t;
  if (Qe < va) {
    const A = new rc();
    return Qe += 1, A;
  }
  return new Promise((A) => {
    ba.push(A);
  });
}
function oc(t) {
  if (Qe > va) {
    Qe -= 1;
    return;
  }
  const A = ba.shift();
  if (A) {
    A(t);
    return;
  }
  Ua.push(t);
}
async function Bt(t) {
  const A = await ac();
  try {
    return await t(A);
  } finally {
    oc(A);
  }
}
class gc extends no {
  constructor(A) {
    super(A), this.fileLoader = new ro(A);
  }
  load(A, e, s, i) {
    const n = this.manager.resolveURL(
      (this.path ?? "") + (A ?? "")
    ), r = new Request(n, {
      headers: new Headers(this.requestHeader),
      credentials: this.withCredentials ? "include" : "same-origin"
    });
    let a = this.fileType;
    fetch(r).then(async (o) => {
      if (!o.ok)
        throw new Error(
          `${o.status} "${o.statusText}" fetching URL: ${n}`
        );
      if (e) {
        const I = await o.arrayBuffer(), B = {}, g = [];
        try {
          const c = As(I);
          if (this.fileType === "pcsogs" && c === void 0)
            throw new Error("Invalid PC SOGS file");
          if (c !== void 0) {
            a = "pcsogs";
            for (const h of ["means", "scales", "quats", "sh0", "shN"]) {
              const E = c[h];
              if (E) {
                const l = E.files;
                for (const u of l) {
                  const d = new URL(u, n).toString();
                  this.manager.itemStart(d);
                  const p = this.loadExtra(d).then((w) => {
                    B[u] = w;
                  }).catch((w) => {
                    throw this.manager.itemError(d), w;
                  }).finally(() => {
                    this.manager.itemEnd(d);
                  });
                  g.push(p);
                }
              }
            }
          }
          await Promise.all(g);
          const C = await Ta({
            input: I,
            extraFiles: B,
            fileType: a,
            pathOrUrl: n
          });
          this.packedSplats ? (this.packedSplats.initialize(C), e(this.packedSplats)) : e(new KA(C));
        } catch (c) {
          i == null || i(c);
        }
      }
    }).catch((o) => {
      i == null || i(o);
    }).finally(() => {
      this.manager.itemEnd(n);
    }), this.manager.itemStart(n);
  }
  async loadAsync(A, e) {
    return new Promise((s, i) => {
      this.load(
        A,
        (n) => {
          s(n);
        },
        e,
        i
      );
    });
  }
  async loadExtra(A) {
    return new Promise((e, s) => {
      this.fileLoader.load(
        A,
        (i) => e(i),
        void 0,
        (i) => s(i)
      );
    });
  }
  parse(A) {
    return new ZA({ packedSplats: A });
  }
}
var Lt = /* @__PURE__ */ ((t) => (t.PLY = "ply", t.SPZ = "spz", t.SPLAT = "splat", t.KSPLAT = "ksplat", t.PCSOGS = "pcsogs", t.PCSOGSZIP = "pcsogszip", t))(Lt || {});
function La(t) {
  const A = new DataView(t.buffer);
  if ((A.getUint32(0, !0) & 16777215) === 7957616)
    return "ply";
  if ((A.getUint32(0, !0) & 16777215) === 559903) {
    const e = Li(t, 4);
    return new DataView(e.buffer).getUint32(0, !0) === 1347635022 ? "spz" : void 0;
  }
  if (A.getUint32(0, !0) === 67324752)
    return Bc(t) ? "pcsogszip" : void 0;
}
function Ic(t) {
  const A = t.split(/[?#]/, 1)[0], e = Math.max(
    A.lastIndexOf("/"),
    A.lastIndexOf("\\")
  ), s = A.slice(e + 1), i = s.lastIndexOf(".");
  return i <= 0 || i === s.length - 1 ? "" : s.slice(i + 1).toLowerCase();
}
function Ya(t) {
  const A = Ic(t);
  if (A === "ply")
    return "ply";
  if (A === "spz")
    return "spz";
  if (A === "splat")
    return "splat";
  if (A === "ksplat")
    return "ksplat";
}
function QC(t) {
  return As(t) !== void 0;
}
function As(t) {
  try {
    let A;
    if (typeof t == "string")
      A = t;
    else {
      const s = t instanceof ArrayBuffer ? new Uint8Array(t) : t;
      if (s.length > 65536)
        return;
      A = new TextDecoder().decode(s);
    }
    const e = JSON.parse(A);
    if (!e || typeof e != "object" || Array.isArray(e))
      return;
    for (const s of ["means", "scales", "quats", "sh0"])
      if (!e[s] || typeof e[s] != "object" || Array.isArray(e[s]) || !e[s].shape || !e[s].files || s !== "quats" && (!e[s].mins || !e[s].maxs))
        return;
    return e;
  } catch {
    return;
  }
}
function Bc(t) {
  try {
    const A = t instanceof ArrayBuffer ? new Uint8Array(t) : t;
    let e = null;
    const s = mo(A, {
      filter: ({ name: n }) => n.split(/[\\/]/).pop() === "meta.json" ? (e = n, !0) : !1
    });
    if (!e)
      return;
    const i = As(s[e]);
    return i ? { name: e, json: i } : void 0;
  } catch {
    return;
  }
}
async function Ta({
  input: t,
  extraFiles: A,
  fileType: e,
  pathOrUrl: s
}) {
  const i = t instanceof ArrayBuffer ? new Uint8Array(t) : t;
  let n = e;
  switch (e || (n = La(i), !n && s && (n = Ya(s))), n) {
    case "ply": {
      const r = new Be({ fileBytes: i });
      await r.parseHeader();
      const a = r.numSplats, o = mA(a).maxSplats, I = { fileBytes: i, packedArray: new Uint32Array(o * 4) };
      return await Bt(async (B) => {
        const { packedArray: g, numSplats: c, extra: C } = await B.call(
          "unpackPly",
          I
        );
        return { packedArray: g, numSplats: c, extra: C };
      });
    }
    case "spz":
      return await Bt(async (r) => {
        const { packedArray: a, numSplats: o, extra: I } = await r.call(
          "decodeSpz",
          {
            fileBytes: i
          }
        );
        return { packedArray: a, numSplats: o, extra: I };
      });
    case "splat":
      return await Bt(async (r) => {
        const { packedArray: a, numSplats: o } = await r.call(
          "decodeAntiSplat",
          {
            fileBytes: i
          }
        );
        return { packedArray: a, numSplats: o };
      });
    case "ksplat":
      return await Bt(async (r) => {
        const { packedArray: a, numSplats: o, extra: I } = await r.call(
          "decodeKsplat",
          { fileBytes: i }
        );
        return { packedArray: a, numSplats: o, extra: I };
      });
    case "pcsogs":
      return await Bt(async (r) => {
        const { packedArray: a, numSplats: o, extra: I } = await r.call(
          "decodePcSogs",
          { fileBytes: i, extraFiles: A }
        );
        return { packedArray: a, numSplats: o, extra: I };
      });
    case "pcsogszip":
      return await Bt(async (r) => {
        const { packedArray: a, numSplats: o, extra: I } = await r.call(
          "decodePcSogsZip",
          { fileBytes: i }
        );
        return { packedArray: a, numSplats: o, extra: I };
      });
    default:
      throw new Error(`Unknown splat file type: ${n}`);
  }
}
class Qc {
  constructor({ maxSplats: A = 1 } = {}) {
    this.numSplats = 0, this.maxSplats = mA(A).maxSplats, this.centers = new Float32Array(this.maxSplats * 3), this.scales = new Float32Array(this.maxSplats * 3), this.quaternions = new Float32Array(this.maxSplats * 4), this.opacities = new Float32Array(this.maxSplats), this.colors = new Float32Array(this.maxSplats * 3);
  }
  pushSplat() {
    const A = this.numSplats;
    return this.ensureIndex(A), this.numSplats += 1, A;
  }
  unpushSplat(A) {
    if (A === this.numSplats - 1)
      this.numSplats -= 1;
    else
      throw new Error("Cannot unpush splat from non-last position");
  }
  ensureCapacity(A) {
    if (A > this.maxSplats) {
      const e = Math.max(A, this.maxSplats * 2), s = new Float32Array(e * 3), i = new Float32Array(e * 3), n = new Float32Array(e * 4), r = new Float32Array(e), a = new Float32Array(e * 3);
      if (s.set(this.centers), i.set(this.scales), n.set(this.quaternions), r.set(this.opacities), a.set(this.colors), this.centers = s, this.scales = i, this.quaternions = n, this.opacities = r, this.colors = a, this.sh1) {
        const o = new Float32Array(e * 9);
        o.set(this.sh1), this.sh1 = o;
      }
      if (this.sh2) {
        const o = new Float32Array(e * 15);
        o.set(this.sh2), this.sh2 = o;
      }
      if (this.sh3) {
        const o = new Float32Array(e * 21);
        o.set(this.sh3), this.sh3 = o;
      }
      this.maxSplats = e;
    }
  }
  ensureIndex(A) {
    this.ensureCapacity(A + 1);
  }
  setCenter(A, e, s, i) {
    this.centers[A * 3] = e, this.centers[A * 3 + 1] = s, this.centers[A * 3 + 2] = i;
  }
  setScale(A, e, s, i) {
    this.scales[A * 3] = e, this.scales[A * 3 + 1] = s, this.scales[A * 3 + 2] = i;
  }
  setQuaternion(A, e, s, i, n) {
    this.quaternions[A * 4] = e, this.quaternions[A * 4 + 1] = s, this.quaternions[A * 4 + 2] = i, this.quaternions[A * 4 + 3] = n;
  }
  setOpacity(A, e) {
    this.opacities[A] = e;
  }
  setColor(A, e, s, i) {
    this.colors[A * 3] = e, this.colors[A * 3 + 1] = s, this.colors[A * 3 + 2] = i;
  }
  setSh1(A, e) {
    this.sh1 || (this.sh1 = new Float32Array(this.maxSplats * 9));
    for (let s = 0; s < 9; ++s)
      this.sh1[A * 9 + s] = e[s];
  }
  setSh2(A, e) {
    this.sh2 || (this.sh2 = new Float32Array(this.maxSplats * 15));
    for (let s = 0; s < 15; ++s)
      this.sh2[A * 15 + s] = e[s];
  }
  setSh3(A, e) {
    this.sh3 || (this.sh3 = new Float32Array(this.maxSplats * 21));
    for (let s = 0; s < 21; ++s)
      this.sh3[A * 21 + s] = e[s];
  }
}
var cc = `precision highp float;
precision highp int;
precision highp sampler2D;
precision highp usampler2D;
precision highp isampler2D;
precision highp sampler2DArray;
precision highp usampler2DArray;
precision highp isampler2DArray;
precision highp sampler3D;
precision highp usampler3D;
precision highp isampler3D;

#include <splatDefines>

uniform uint targetLayer;
uniform int targetBase;
uniform int targetCount;

out uvec4 target;

{{ GLOBALS }}

void produceSplat(int index) {
    {{ STATEMENTS }}
}

void main() {
    int targetIndex = int(targetLayer << SPLAT_TEX_LAYER_BITS) + int(uint(gl_FragCoord.y) << SPLAT_TEX_WIDTH_BITS) + int(gl_FragCoord.x);
    int index = targetIndex - targetBase;

    if ((index >= 0) && (index < targetCount)) {
        produceSplat(index);
    } else {
        target = uvec4(0u, 0u, 0u, 0u);
    }
}`;
const eA = class eA {
  constructor(A = {}) {
    this.maxSplats = 0, this.numSplats = 0, this.packedArray = null, this.isInitialized = !1, this.target = null, this.source = null, this.needsUpdate = !0, this.extra = {}, this.dyno = new ts({ packedSplats: this }), this.initialized = Promise.resolve(this), this.reinitialize(A);
  }
  reinitialize(A) {
    this.isInitialized = !1, A.url || A.fileBytes || A.construct ? this.initialized = this.asyncInitialize(A).then(() => (this.isInitialized = !0, this)) : (this.initialize(A), this.isInitialized = !0, this.initialized = Promise.resolve(this));
  }
  initialize(A) {
    A.packedArray ? (this.packedArray = A.packedArray, this.maxSplats = Math.floor(this.packedArray.length / 4), this.maxSplats = Math.floor(this.maxSplats / X) * X, this.numSplats = Math.min(
      this.maxSplats,
      A.numSplats ?? Number.POSITIVE_INFINITY
    )) : (this.maxSplats = A.maxSplats ?? 0, this.numSplats = 0), this.extra = A.extra ?? {};
  }
  async asyncInitialize(A) {
    const { url: e, fileBytes: s, construct: i } = A;
    if (e) {
      const n = new gc();
      n.packedSplats = this, await n.loadAsync(e);
    } else if (s) {
      const n = await Ta({
        input: s,
        fileType: A.fileType,
        pathOrUrl: A.fileName ?? e
      });
      this.initialize(n);
    }
    if (i) {
      const n = i(this);
      n instanceof Promise && await n;
    }
  }
  // Call this when you are finished with the PackedSplats and want to free
  // any buffers it holds.
  dispose() {
    this.target && (this.target.dispose(), this.target = null), this.source && (this.source.dispose(), this.source = null);
  }
  // Ensures that this.packedArray can fit numSplats Gsplats. If it's too small,
  // resize exponentially and copy over the original data.
  //
  // Typically you don't need to call this, because calling this.setSplat(index, ...)
  // and this.pushSplat(...) will automatically call ensureSplats() so we have
  // enough splats.
  ensureSplats(A) {
    const e = A <= this.maxSplats ? this.maxSplats : (
      // Grow exponentially to avoid frequent reallocations
      Math.max(A, 2 * this.maxSplats)
    ), s = this.packedArray ? this.packedArray.length / 4 : 0;
    if (!this.packedArray || e > s) {
      this.maxSplats = mA(e).maxSplats;
      const i = new Uint32Array(this.maxSplats * 4);
      this.packedArray && i.set(this.packedArray), this.packedArray = i;
    }
    return this.packedArray;
  }
  // Ensure the extra array for the given level is large enough to hold numSplats
  ensureSplatsSh(A, e) {
    let s, i;
    if (A === 0)
      return this.ensureSplats(e);
    if (A === 1)
      s = 2, i = "sh1";
    else if (A === 2)
      s = 4, i = "sh2";
    else if (A === 3)
      s = 4, i = "sh3";
    else
      throw new Error(`Invalid level: ${A}`);
    let n = this.extra[i] ? this.extra[i].length / s : 0;
    const r = e <= n ? n : Math.max(e, 2 * n);
    if (!this.extra[i] || r > n) {
      n = mA(r).maxSplats;
      const a = new Uint32Array(n * s);
      this.extra[i] && a.set(this.extra[i]), this.extra[i] = a;
    }
    return this.extra[i];
  }
  // Unpack the 16-byte Gsplat data at index into the Three.js components
  // center: THREE.Vector3, scales: THREE.Vector3, quaternion: THREE.Quaternion,
  // opacity: number 0..1, color: THREE.Color 0..1.
  getSplat(A) {
    if (!this.packedArray || A >= this.numSplats)
      throw new Error("Invalid index");
    return Ue(this.packedArray, A);
  }
  // Set all PackedSplat components at index with the provided Gsplat attributes
  // (can be the same objects returned by getSplat). Ensures there is capacity
  // for at least index+1 Gsplats.
  setSplat(A, e, s, i, n, r) {
    const a = this.ensureSplats(A + 1);
    ve(
      a,
      A,
      e.x,
      e.y,
      e.z,
      s.x,
      s.y,
      s.z,
      i.x,
      i.y,
      i.z,
      i.w,
      n,
      r.r,
      r.g,
      r.b
    ), this.numSplats = Math.max(this.numSplats, A + 1);
  }
  // Effectively calls this.setSplat(this.numSplats++, center, ...), useful on
  // construction where you just want to iterate and create a collection of Gsplats.
  pushSplat(A, e, s, i, n) {
    const r = this.ensureSplats(this.numSplats + 1);
    ve(
      r,
      this.numSplats,
      A.x,
      A.y,
      A.z,
      e.x,
      e.y,
      e.z,
      s.x,
      s.y,
      s.z,
      s.w,
      i,
      n.r,
      n.g,
      n.b
    ), ++this.numSplats;
  }
  // Iterate over Gsplats index 0..=(this.numSplats-1), unpack each Gsplat
  // and invoke the callback function with the Gsplat attributes.
  forEachSplat(A) {
    if (!(!this.packedArray || !this.numSplats))
      for (let e = 0; e < this.numSplats; ++e) {
        const s = Ue(this.packedArray, e);
        A(
          e,
          s.center,
          s.scales,
          s.quaternion,
          s.opacity,
          s.color
        );
      }
  }
  // Ensures our PackedSplats.target render target has enough space to generate
  // maxSplats total Gsplats, and reallocate if not large enough.
  ensureGenerate(A) {
    if (this.target && (A ?? 1) <= this.maxSplats)
      return !1;
    this.dispose();
    const e = mA(A ?? 1), { width: s, height: i, depth: n } = e;
    return this.maxSplats = e.maxSplats, this.target = new Q.WebGLArrayRenderTarget(s, i, n, {
      depthBuffer: !1,
      stencilBuffer: !1,
      generateMipmaps: !1,
      magFilter: Q.NearestFilter,
      minFilter: Q.NearestFilter
    }), this.target.texture.format = Q.RGBAIntegerFormat, this.target.texture.type = Q.UnsignedIntType, this.target.texture.internalFormat = "RGBA32UI", this.target.scissorTest = !0, !0;
  }
  // Given an array of splatCounts (.numSplats for each
  // SplatGenerator/SplatMesh in the scene), compute a
  // "mapping layout" in the composite array of generated outputs.
  generateMapping(A) {
    let e = 0;
    const s = A.map((i) => {
      const n = e, r = Math.ceil(i / X) * X;
      return e += r, { base: n, count: i };
    });
    return { maxSplats: e, mapping: s };
  }
  // Returns a THREE.DataArrayTexture representing the PackedSplats content as
  // a Uint32x4 data array texture (2048 x 2048 x depth in size)
  getTexture() {
    return this.target ? this.target.texture : this.source || this.packedArray ? this.maybeUpdateSource() : eA.getEmpty();
  }
  // Check if source texture needs to be created/updated
  maybeUpdateSource() {
    if (!this.packedArray)
      throw new Error("No packed splats");
    if (this.needsUpdate || !this.source) {
      if (this.needsUpdate = !1, this.source) {
        const { width: A, height: e, depth: s } = this.source.image;
        this.maxSplats !== A * e * s && (this.source.dispose(), this.source = null);
      }
      if (this.source)
        this.packedArray.buffer !== this.source.image.data.buffer && (this.source.image.data = new Uint8Array(this.packedArray.buffer));
      else {
        const { width: A, height: e, depth: s } = mA(this.maxSplats);
        this.source = new Q.DataArrayTexture(
          this.packedArray,
          A,
          e,
          s
        ), this.source.format = Q.RGBAIntegerFormat, this.source.type = Q.UnsignedIntType, this.source.internalFormat = "RGBA32UI", this.source.needsUpdate = !0;
      }
      this.source.needsUpdate = !0;
    }
    return this.source;
  }
  // Can be used where you need an uninitialized THREE.DataArrayTexture like
  // a uniform you will update with the result of this.getTexture() later.
  static getEmpty() {
    if (!eA.emptySource) {
      const { width: A, height: e, depth: s, maxSplats: i } = mA(1), n = new Uint32Array(i * 4);
      eA.emptySource = new Q.DataArrayTexture(
        n,
        A,
        e,
        s
      ), eA.emptySource.format = Q.RGBAIntegerFormat, eA.emptySource.type = Q.UnsignedIntType, eA.emptySource.internalFormat = "RGBA32UI", eA.emptySource.needsUpdate = !0;
    }
    return eA.emptySource;
  }
  // Get a program and THREE.RawShaderMaterial for a given GsplatGenerator,
  // generating it if necessary and caching the result.
  prepareProgramMaterial(A) {
    let e = eA.generatorProgram.get(A);
    if (!e) {
      const i = kA(
        { index: "int" },
        { output: "uvec4" },
        ({ index: n }) => {
          A.inputs.index = n;
          const r = A.outputs.gsplat;
          return { output: Ks(r) };
        }
      );
      eA.programTemplate || (eA.programTemplate = new Pe(
        cc
      )), e = new Ze({
        graph: i,
        inputs: { index: "index" },
        outputs: { output: "target" },
        template: eA.programTemplate
      }), Object.assign(e.uniforms, {
        targetLayer: { value: 0 },
        targetBase: { value: 0 },
        targetCount: { value: 0 }
      }), eA.generatorProgram.set(A, e);
    }
    const s = e.prepareMaterial();
    return eA.mesh.material = s, { program: e, material: s };
  }
  saveRenderState(A) {
    return {
      xrEnabled: A.xr.enabled,
      autoClear: A.autoClear
    };
  }
  resetRenderState(A, e) {
    A.setRenderTarget(null), A.xr.enabled = e.xrEnabled, A.autoClear = e.autoClear;
  }
  // Executes a dyno program specified by generator which is any DynoBlock that
  // maps { index: "int" } to { gsplat: Gsplat }. This is called in
  // SparkRenderer.updateInternal() to re-generate Gsplats in the scene for
  // SplatGenerator instances whose version is newer than what was generated
  // for it last time.
  generate({
    generator: A,
    base: e,
    count: s,
    renderer: i
  }) {
    if (!this.target)
      throw new Error("Target must be initialized with ensureSplats");
    if (e + s > this.maxSplats)
      throw new Error("Base + count exceeds maxSplats");
    const { program: n, material: r } = this.prepareProgramMaterial(A);
    n.update();
    const a = this.saveRenderState(i), o = Math.ceil((e + s) / X) * X, I = X * it;
    for (r.uniforms.targetBase.value = e, r.uniforms.targetCount.value = s; e < o; ) {
      const B = Math.floor(e / I);
      r.uniforms.targetLayer.value = B;
      const g = B * I, c = Math.floor((e - g) / X), C = Math.min(
        it,
        Math.ceil((o - g) / X)
      );
      this.target.scissor.set(
        0,
        c,
        X,
        C - c
      ), i.setRenderTarget(this.target, B), i.xr.enabled = !1, i.autoClear = !1, i.render(eA.scene, eA.camera), e += X * (C - c);
    }
    return this.resetRenderState(i, a), { nextBase: o };
  }
};
eA.emptySource = null, eA.programTemplate = null, eA.generatorProgram = /* @__PURE__ */ new Map(), eA.geometry = new Q.PlaneGeometry(2, 2), eA.mesh = new Q.Mesh(
  eA.geometry,
  new Q.RawShaderMaterial({ visible: !1 })
), eA.scene = new Q.Scene().add(eA.mesh), eA.camera = new Q.Camera();
let KA = eA;
class ts extends G {
  constructor({ packedSplats: A } = {}) {
    super({
      key: "packedSplats",
      type: Ot,
      globals: () => [he],
      value: {
        texture: KA.getEmpty(),
        numSplats: 0
      },
      update: (e) => {
        var s, i;
        return e.texture = ((s = this.packedSplats) == null ? void 0 : s.getTexture()) ?? KA.getEmpty(), e.numSplats = ((i = this.packedSplats) == null ? void 0 : i.numSplats) ?? 0, e;
      }
    }), this.packedSplats = A;
  }
}
class Je extends Q.InstancedBufferGeometry {
  constructor(A, e) {
    super(), this.ordering = A, this.setAttribute("position", new Q.BufferAttribute(Cc, 3)), this.setIndex(new Q.BufferAttribute(Ec, 1)), this._maxInstanceCount = A.length, this.instanceCount = e, this.attribute = new Q.InstancedBufferAttribute(A, 1, !1, 1), this.attribute.setUsage(Q.DynamicDrawUsage), this.setAttribute("splatIndex", this.attribute);
  }
  update(A, e) {
    this.ordering = A, this.attribute.array = A, this.instanceCount = e, this.attribute.addUpdateRange(0, e), this.attribute.needsUpdate = !0;
  }
}
const Cc = new Float32Array([
  -1,
  -1,
  0,
  1,
  -1,
  0,
  1,
  1,
  0,
  -1,
  1,
  0
]), Ec = new Uint16Array([0, 1, 2, 0, 2, 3]), st = class st {
  constructor(A) {
    if (this.lastTime = null, this.encodeLinear = !1, this.superXY = 1, this.display = null, this.sorting = null, this.pending = null, this.sortingCheck = !1, this.readback = new Uint16Array(0), this.spark = A.spark, this.camera = A.camera, this.viewToWorld = A.viewToWorld ?? new Q.Matrix4(), A.target) {
      const { width: e, height: s, doubleBuffer: i } = A.target, n = Math.max(1, Math.min(4, A.target.superXY ?? 1));
      if (this.superXY = n, e * n > 8192 || s * n > 8192)
        throw new Error("Target size too large");
      this.target = new Q.WebGLRenderTarget(
        e * n,
        s * n,
        {
          format: Q.RGBAFormat,
          type: Q.UnsignedByteType,
          colorSpace: Q.SRGBColorSpace
        }
      ), i && (this.back = new Q.WebGLRenderTarget(
        e * n,
        s * n,
        {
          format: Q.RGBAFormat,
          type: Q.UnsignedByteType,
          colorSpace: Q.SRGBColorSpace
        }
      )), this.encodeLinear = !0;
    }
    this.onTextureUpdated = A.onTextureUpdated, this.sortRadial = A.sortRadial ?? !0, this.sortDistance = A.sortDistance, this.sortCoorient = A.sortCoorient, this.depthBias = A.depthBias, this.sort360 = A.sort360, this.orderingFreelist = new Ni({
      allocate: (e) => new Uint32Array(e),
      valid: (e, s) => e.length === s
    }), this.autoUpdate = !1, this.setAutoUpdate(A.autoUpdate ?? !1);
  }
  // Call this when you are done with the SparkViewpoint and want to
  // free up its resources (GPU targets, pixel buffers, etc.)
  dispose() {
    var A;
    this.setAutoUpdate(!1), this.target && (this.target.dispose(), this.target = void 0), this.back && (this.back.dispose(), this.back = void 0), this.display && (this.spark.releaseAccumulator(this.display.accumulator), this.display.geometry.dispose(), this.display = null), (A = this.pending) != null && A.accumulator && (this.spark.releaseAccumulator(this.pending.accumulator), this.pending = null);
  }
  // Use this function to change whether this viewpoint will auto-update
  // its sort order whenever the attached SparkRenderer updates the Gsplats.
  // Turn this on or off depending on whether you expect to do renders from
  // this viewpoint most frames.
  setAutoUpdate(A) {
    !this.autoUpdate && A ? this.spark.autoViewpoints.push(this) : this.autoUpdate && !A && (this.spark.autoViewpoints = this.spark.autoViewpoints.filter(
      (e) => e !== this
    )), this.autoUpdate = A;
  }
  // See below async prepareRenderPixels() for explanation of parameters.
  // Awaiting this method updates the Gsplats in the scene and performs a sort of the
  // Gsplats from this viewpoint, preparing it for a subsequent this.renderTarget()
  // call in the same tick.
  async prepare({
    scene: A,
    camera: e,
    viewToWorld: s,
    update: i,
    forceOrigin: n
  }) {
    var a;
    for (s ? this.viewToWorld = s : (this.camera = e ?? this.camera, this.camera && (this.camera.updateMatrixWorld(), this.viewToWorld = this.camera.matrixWorld.clone())); i ?? !0; ) {
      const o = n ? this.viewToWorld : void 0;
      if (this.spark.updateInternal({ scene: A, originToWorld: o }))
        break;
      await new Promise((B) => setTimeout(B, 10));
    }
    const r = this.spark.active;
    r !== ((a = this.display) == null ? void 0 : a.accumulator) && (this.spark.active.refCount += 1), await this.sortUpdate({ accumulator: r, viewToWorld: this.viewToWorld });
  }
  // Render out the viewpoint to the view target RGBA buffer.
  // Swaps buffers if doubleBuffer: true was set.
  // Calls onTextureUpdated(texture) with the resulting texture.
  renderTarget({
    scene: A,
    camera: e
  }) {
    var i;
    const s = this.back ?? this.target;
    if (!s)
      throw new Error("Must initialize SparkViewpoint with target");
    if (e = e ?? this.camera, !e)
      throw new Error("Must provide camera");
    if (e instanceof Q.PerspectiveCamera) {
      const n = new Q.PerspectiveCamera().copy(e, !1);
      n.aspect = s.width / s.height, n.updateProjectionMatrix(), e = n;
    }
    this.viewToWorld = e.matrixWorld.clone();
    try {
      this.spark.renderer.setRenderTarget(s), this.spark.prepareViewpoint(this), this.spark.renderer.render(A, e);
    } finally {
      this.spark.prepareViewpoint(this.spark.defaultView), this.spark.renderer.setRenderTarget(null);
    }
    s !== this.target && ([this.target, this.back] = [this.back, this.target]), (i = this.onTextureUpdated) == null || i.call(this, s.texture);
  }
  // Read back the previously rendered target image as a Uint8Array of packed
  // RGBA values (in that order). If superXY was set greater than 1 then
  // downsampling is performed in the target pixel array with simple averaging
  // to derive the returned pixel values. Subsequent calls to this.readTarget()
  // will reuse the same buffers to minimize memory allocations.
  async readTarget() {
    if (!this.target)
      throw new Error("Must initialize SparkViewpoint with target");
    const { width: A, height: e } = this.target, s = A * e * 4;
    (!this.superPixels || this.superPixels.length < s) && (this.superPixels = new Uint8Array(s)), await this.spark.renderer.readRenderTargetPixelsAsync(
      this.target,
      0,
      0,
      A,
      e,
      this.superPixels
    );
    const { superXY: i } = this;
    if (i === 1)
      return this.superPixels;
    const n = A / i, r = e / i, a = n * r * 4;
    (!this.pixels || this.pixels.length < a) && (this.pixels = new Uint8Array(a));
    const { superPixels: o, pixels: I } = this, B = i * i;
    for (let g = 0; g < r; g++) {
      const c = g * n;
      for (let C = 0; C < n; C++) {
        const h = C * i;
        let E = 0, l = 0, u = 0, d = 0;
        for (let w = 0; w < i; w++) {
          const f = (g * i + w) * this.target.width;
          for (let x = 0; x < i; x++) {
            const M = (f + h + x) * 4;
            E += o[M], l += o[M + 1], u += o[M + 2], d += o[M + 3];
          }
        }
        const p = (c + C) * 4;
        I[p] = E / B, I[p + 1] = l / B, I[p + 2] = u / B, I[p + 3] = d / B;
      }
    }
    return I;
  }
  // Render out a viewpoint as a Uint8Array of RGBA values for the provided scene
  // and any camera/viewToWorld viewpoint overrides. By default update is true,
  // which triggers its SparkRenderer to check and potentially update the Gsplats.
  // Setting update to false disables this and sorts the Gsplats as they are.
  // Setting forceOrigin (default: false) to true forces the view update to
  // recalculate the splats with this view origin, potentially altering any
  // view-dependent effects. If you expect view-dependent effects to play a role
  // in the rendering quality, enable this.
  //
  // Underneath, prepareRenderPixels() simply calls await this.prepare(...),
  // this.renderTarget(...), and finally returns the result this.readTarget(),
  // a Promise to a Uint8Array with RGBA values for all the pixels (potentially
  // downsampled if the superXY parameter was used). These steps can also be called
  // manually, for example if you need to alter the scene before and after
  // this.renderTarget(...) to hide UI elements from being rendered.
  async prepareRenderPixels({
    scene: A,
    camera: e,
    viewToWorld: s,
    update: i,
    forceOrigin: n
  }) {
    return await this.prepare({ scene: A, camera: e, viewToWorld: s, update: i, forceOrigin: n }), this.renderTarget({ scene: A, camera: e }), this.readTarget();
  }
  // This is called automatically by SparkRenderer, there is no need to call it!
  // The method cannot be private because then SparkRenderer would
  // not be able to call it.
  autoPoll({ accumulator: A }) {
    var n, r, a, o;
    this.camera && (this.camera.updateMatrixWorld(), this.viewToWorld = this.camera.matrixWorld.clone());
    let e = !1, s = !1;
    if (!this.display)
      e = !0;
    else if (A) {
      e = !0;
      const { mappingVersion: I } = this.display.accumulator;
      A.mappingVersion === I && (this.spark.releaseAccumulator(this.display.accumulator), this.display.accumulator = A, s = !0);
    }
    const i = ((n = this.sorting) == null ? void 0 : n.viewToWorld) ?? ((r = this.display) == null ? void 0 : r.viewToWorld);
    i && !oe({
      matrix1: this.viewToWorld,
      matrix2: i,
      // By default update sort each 1 cm
      maxDistance: this.sortDistance ?? 0.01,
      // By default for radial sort, update for intermittent movement so that
      // we bring back splats culled by being behind the camera.
      // For depth sort, small rotations can change sort order a lot, so
      // update sort for even small rotations.
      minCoorient: this.sortCoorient ?? this.sortRadial ? 0.99 : 0.999
    }) && (e = !0), e && (A && (A.refCount += 1), A && ((a = this.pending) != null && a.accumulator) && this.pending.accumulator !== ((o = this.display) == null ? void 0 : o.accumulator) && this.spark.releaseAccumulator(this.pending.accumulator), this.pending = { accumulator: A, viewToWorld: this.viewToWorld, displayed: s }, this.driveSort());
  }
  async driveSort() {
    var A;
    for (; ; ) {
      if (this.sorting || !this.pending)
        return;
      const { viewToWorld: e, displayed: s } = this.pending;
      let i = this.pending.accumulator ?? ((A = this.display) == null ? void 0 : A.accumulator);
      if (i || (i = this.spark.active, i.refCount += 1), this.pending = null, !i)
        throw new Error("No accumulator to sort");
      this.sorting = { viewToWorld: e }, await this.sortUpdate({ accumulator: i, viewToWorld: e, displayed: s }), this.sorting = null;
    }
  }
  async sortUpdate({
    accumulator: A,
    viewToWorld: e,
    displayed: s = !1
  }) {
    if (this.sortingCheck)
      throw new Error("Only one sort at a time");
    this.sortingCheck = !0, A = A ?? this.spark.active;
    const { numSplats: i, maxSplats: n } = A.splats;
    let r = 0, a = this.orderingFreelist.alloc(n);
    if (i > 0) {
      const {
        reader: o,
        doubleSortReader: I,
        dynoSortRadial: B,
        dynoOrigin: g,
        dynoDirection: c,
        dynoDepthBias: C,
        dynoSort360: h,
        dynoSplats: E
      } = st.makeSorter(), l = Math.ceil(n / 2);
      this.readback = o.ensureBuffer(l, this.readback);
      const u = A.toWorld.clone().invert(), d = e.clone().premultiply(u);
      B.value = this.sort360 ? !0 : this.sortRadial, g.value.set(0, 0, 0).applyMatrix4(d), c.value.set(0, 0, -1).applyMatrix4(d).sub(g.value).normalize(), C.value = this.depthBias ?? 1, h.value = this.sort360 ?? !1, E.packedSplats = A.splats, await o.renderReadback({
        renderer: this.spark.renderer,
        reader: I,
        count: Math.ceil(i / 2),
        readback: this.readback
      });
      const p = await Bt(async (w) => w.call("sortDoubleSplats", {
        numSplats: i,
        readback: this.readback,
        ordering: a
      }));
      this.readback = p.readback, a = p.ordering, r = p.activeSplats;
    }
    this.updateDisplay({
      accumulator: A,
      viewToWorld: e,
      ordering: a,
      activeSplats: r,
      displayed: s
    }), this.sortingCheck = !1;
  }
  updateDisplay({
    accumulator: A,
    viewToWorld: e,
    ordering: s,
    activeSplats: i,
    displayed: n = !1
  }) {
    if (!this.display)
      this.display = {
        accumulator: A,
        viewToWorld: e,
        geometry: new Je(s, i)
      };
    else {
      !n && A !== this.display.accumulator && (this.spark.releaseAccumulator(this.display.accumulator), this.display.accumulator = A), this.display.viewToWorld = e;
      const r = this.display.geometry.ordering;
      r.length === s.length ? this.display.geometry.update(s, i) : (this.display.geometry.dispose(), this.display.geometry = new Je(s, i)), this.orderingFreelist.free(r);
    }
    this.spark.viewpoint === this && this.spark.prepareViewpoint(this);
  }
  static makeSorter() {
    if (!st.dynos) {
      const A = new ae({ value: !0 }), e = new St({ value: new Q.Vector3() }), s = new St({ value: new Q.Vector3() }), i = new ct({ value: 1 }), n = new ae({ value: !1 }), r = new ts(), a = new ge(), o = kA(
        { index: "int" },
        { rgba8: "vec4" },
        ({ index: I }) => {
          if (!I)
            throw new Error("No index");
          const B = {
            sortRadial: A,
            sortOrigin: e,
            sortDirection: s,
            sortDepthBias: i,
            sort360: n
          }, g = QA(I, q("int", 2)), c = Ht(r, g), C = Is({ gsplat: c, ...B }), h = Ht(
            r,
            DA(g, q("int", 1))
          ), E = Is({ gsplat: h, ...B }), l = qA({
            vectorType: "vec2",
            x: C,
            y: E
          });
          return { rgba8: Kn(qn(l)) };
        }
      );
      st.dynos = {
        dynoSortRadial: A,
        dynoOrigin: e,
        dynoDirection: s,
        dynoDepthBias: i,
        dynoSort360: n,
        dynoSplats: r,
        reader: a,
        doubleSortReader: o
      };
    }
    return st.dynos;
  }
};
st.EMPTY_TEXTURE = new Q.Texture(), st.dynos = null;
let ce = st;
const hc = CA(`
  float computeSort(Gsplat gsplat, bool sortRadial, vec3 sortOrigin, vec3 sortDirection, float sortDepthBias, bool sort360) {
    if (!isGsplatActive(gsplat.flags)) {
      return INFINITY;
    }

    vec3 center = gsplat.center - sortOrigin;
    float biasedDepth = dot(center, sortDirection) + sortDepthBias;
    if (!sort360 && (biasedDepth <= 0.0)) {
      return INFINITY;
    }

    return sortRadial ? length(center) : biasedDepth;
  }
`);
function Is({
  gsplat: t,
  sortRadial: A,
  sortOrigin: e,
  sortDirection: s,
  sortDepthBias: i,
  sort360: n
}) {
  return jt({
    inTypes: {
      gsplat: W,
      sortRadial: "bool",
      sortOrigin: "vec3",
      sortDirection: "vec3",
      sortDepthBias: "float",
      sort360: "bool"
    },
    outTypes: { metric: "float" },
    globals: () => [NA, hc],
    inputs: {
      gsplat: t,
      sortRadial: A,
      sortOrigin: e,
      sortDirection: s,
      sortDepthBias: i,
      sort360: n
    },
    statements: ({ inputs: r, outputs: a }) => {
      const {
        gsplat: o,
        sortRadial: I,
        sortOrigin: B,
        sortDirection: g,
        sortDepthBias: c,
        sort360: C
      } = r;
      return vA(`
        ${a.metric} = computeSort(${o}, ${I}, ${B}, ${g}, ${c}, ${C});
      `);
    }
  }).outputs.metric;
}
class Ne {
  constructor() {
    this.splats = new KA(), this.toWorld = new Q.Matrix4(), this.mapping = [], this.refCount = 0, this.splatsVersion = -1, this.mappingVersion = -1;
  }
  ensureGenerate(A) {
    this.splats.ensureGenerate(A) && (this.mapping = []);
  }
  // Generate all Gsplats from an array of generators
  generateSplats({
    renderer: A,
    modifier: e,
    generators: s,
    forceUpdate: i,
    originToWorld: n
  }) {
    const r = this.mapping.reduce((I, B) => (I.set(B.node, B), I), /* @__PURE__ */ new Map());
    let a = 0, o = 0;
    for (const { node: I, generator: B, version: g, base: c, count: C } of s) {
      const h = r.get(I);
      if ((i || B !== (h == null ? void 0 : h.generator) || g !== (h == null ? void 0 : h.version) || c !== (h == null ? void 0 : h.base) || C !== (h == null ? void 0 : h.count)) && B && C > 0) {
        const E = e.apply(B);
        try {
          this.splats.generate({
            generator: E,
            base: c,
            count: C,
            renderer: A
          });
        } catch (l) {
          I.generator = void 0, I.generatorError = l;
        }
        a += 1;
      }
      o = Math.max(o, c + C);
    }
    return this.splats.numSplats = o, this.toWorld = n, this.mapping = s, a !== 0;
  }
  // Check if this accumulator has exactly the same generator mapping as
  // the previous one. If so, we can reuse the Gsplat sort order.
  hasCorrespondence(A) {
    return this.mapping.length !== A.mapping.length ? !1 : this.mapping.every(({ node: e, base: s, count: i }, n) => {
      const {
        node: r,
        base: a,
        count: o
      } = A.mapping[n];
      return e === r && s === a && i === o;
    });
  }
}
var lc = `const float LN_SCALE_MIN = -12.0;
const float LN_SCALE_MAX = 9.0;
const float LN_RESCALE = (LN_SCALE_MAX - LN_SCALE_MIN) / 254.0; 

const uint SPLAT_TEX_WIDTH_BITS = 11u;
const uint SPLAT_TEX_HEIGHT_BITS = 11u;
const uint SPLAT_TEX_DEPTH_BITS = 11u;
const uint SPLAT_TEX_LAYER_BITS = SPLAT_TEX_WIDTH_BITS + SPLAT_TEX_HEIGHT_BITS;

const uint SPLAT_TEX_WIDTH = 1u << SPLAT_TEX_WIDTH_BITS;
const uint SPLAT_TEX_HEIGHT = 1u << SPLAT_TEX_HEIGHT_BITS;
const uint SPLAT_TEX_DEPTH = 1u << SPLAT_TEX_DEPTH_BITS;

const uint SPLAT_TEX_WIDTH_MASK = SPLAT_TEX_WIDTH - 1u;
const uint SPLAT_TEX_HEIGHT_MASK = SPLAT_TEX_HEIGHT - 1u;
const uint SPLAT_TEX_DEPTH_MASK = SPLAT_TEX_DEPTH - 1u;

const uint F16_INF = 0x7c00u;
const float PI = 3.1415926535897932384626433832795;

const float INFINITY = 1.0 / 0.0;
const float NEG_INFINITY = -INFINITY;

const float MAX_PIXEL_RADIUS = 512.0;
const float MIN_ALPHA = 0.5 * (1.0 / 255.0); 
const float MAX_STDDEV = sqrt(8.0);

float sqr(float x) {
    return x * x;
}

float pow4(float x) {
    float x2 = x * x;
    return x2 * x2;
}

float pow8(float x) {
    float x4 = pow4(x);
    return x4 * x4;
}

vec3 srgbToLinear(vec3 rgb) {
    return pow(rgb, vec3(2.2));
}

vec3 linearToSrgb(vec3 rgb) {
    return pow(rgb, vec3(1.0 / 2.2));
}

uint encodeQuatOctXy88R8(vec4 q) {
    
    if (q.w < 0.0) {
        q = -q;
    }
    
    float theta = 2.0 * acos(q.w);
    float halfTheta = theta * 0.5;
    float s = sin(halfTheta);
    
    vec3 axis = (abs(s) < 1e-6) ? vec3(1.0, 0.0, 0.0) : q.xyz / s;
    
    
    
    float sum = abs(axis.x) + abs(axis.y) + abs(axis.z);
    vec2 p = vec2(axis.x, axis.y) / sum;
    
    if (axis.z < 0.0) {
        float oldPx = p.x;
        p.x = (1.0 - abs(p.y)) * (p.x >= 0.0 ? 1.0 : -1.0);
        p.y = (1.0 - abs(oldPx)) * (p.y >= 0.0 ? 1.0 : -1.0);
    }
    
    float u_f = p.x * 0.5 + 0.5;
    float v_f = p.y * 0.5 + 0.5;
    
    uint quantU = uint(clamp(round(u_f * 255.0), 0.0, 255.0));
    uint quantV = uint(clamp(round(v_f * 255.0), 0.0, 255.0));
    
    
    
    uint angleInt = uint(clamp(round((theta / 3.14159265359) * 255.0), 0.0, 255.0));
    
    
    return (angleInt << 16u) | (quantV << 8u) | quantU;
}

vec4 decodeQuatOctXy88R8(uint encoded) {
    
    uint quantU = encoded & uint(0xFFu);               
    uint quantV = (encoded >> 8u) & uint(0xFFu);         
    uint angleInt = encoded >> 16u;                      

    
    float u_f = float(quantU) / 255.0;
    float v_f = float(quantV) / 255.0;
    vec2 f = vec2(u_f * 2.0 - 1.0, v_f * 2.0 - 1.0);

    vec3 axis = vec3(f.xy, 1.0 - abs(f.x) - abs(f.y));
    float t = max(-axis.z, 0.0);
    axis.x += (axis.x >= 0.0) ? -t : t;
    axis.y += (axis.y >= 0.0) ? -t : t;
    axis = normalize(axis);
    
    
    float theta = (float(angleInt) / 255.0) * 3.14159265359;
    float halfTheta = theta * 0.5;
    float s = sin(halfTheta);
    float w = cos(halfTheta);
    
    return vec4(axis * s, w);
}

    

    

    

    

    

    

    

    

    

    

uvec4 packSplat(vec3 center, vec3 scales, vec4 quaternion, vec4 rgba) {
    uvec4 uRgba = uvec4(round(clamp(rgba * 255.0, 0.0, 255.0)));

    uint uQuat = encodeQuatOctXy88R8(quaternion);
    
    
    uvec3 uQuat3 = uvec3(uQuat & 0xffu, (uQuat >> 8u) & 0xffu, (uQuat >> 16u) & 0xffu);

    
    uvec3 uScales = uvec3(
        (scales.x == 0.0) ? 0u : uint(round(clamp((log(scales.x) - LN_SCALE_MIN) / LN_RESCALE, 0.0, 254.0))) + 1u,
        (scales.y == 0.0) ? 0u : uint(round(clamp((log(scales.y) - LN_SCALE_MIN) / LN_RESCALE, 0.0, 254.0))) + 1u,
        (scales.z == 0.0) ? 0u : uint(round(clamp((log(scales.z) - LN_SCALE_MIN) / LN_RESCALE, 0.0, 254.0))) + 1u
    );

    
    uint word0 = uRgba.r | (uRgba.g << 8u) | (uRgba.b << 16u) | (uRgba.a << 24u);
    uint word1 = packHalf2x16(center.xy);
    uint word2 = packHalf2x16(vec2(center.z, 0.0)) | (uQuat3.x << 16u) | (uQuat3.y << 24u);
    uint word3 = uScales.x | (uScales.y << 8u) | (uScales.z << 16u) | (uQuat3.z << 24u);
    return uvec4(word0, word1, word2, word3);
}

void unpackSplat(uvec4 packed, out vec3 center, out vec3 scales, out vec4 quaternion, out vec4 rgba) {
    uint word0 = packed.x, word1 = packed.y, word2 = packed.z, word3 = packed.w;

    uvec4 uRgba = uvec4(word0 & 0xffu, (word0 >> 8u) & 0xffu, (word0 >> 16u) & 0xffu, (word0 >> 24u) & 0xffu);
    rgba = vec4(uRgba) / 255.0;

    center = vec4(
        unpackHalf2x16(word1),
        unpackHalf2x16(word2 & 0xffffu)
    ).xyz;

    uvec3 uScales = uvec3(word3 & 0xffu, (word3 >> 8u) & 0xffu, (word3 >> 16u) & 0xffu);
    scales = vec3(
        (uScales.x == 0u) ? 0.0 : exp(LN_SCALE_MIN + float(uScales.x - 1u) * LN_RESCALE),
        (uScales.y == 0u) ? 0.0 : exp(LN_SCALE_MIN + float(uScales.y - 1u) * LN_RESCALE),
        (uScales.z == 0u) ? 0.0 : exp(LN_SCALE_MIN + float(uScales.z - 1u) * LN_RESCALE)
    );

    uint uQuat = ((word2 >> 16u) & 0xFFFFu) | ((word3 >> 8u) & 0xFF0000u);
    quaternion = decodeQuatOctXy88R8(uQuat);
    
    
}

vec3 quatVec(vec4 q, vec3 v) {
    
    vec3 t = 2.0 * cross(q.xyz, v);
    return v + q.w * t + cross(q.xyz, t);
}

vec4 quatQuat(vec4 q1, vec4 q2) {
    return vec4(
        q1.w * q2.x + q1.x * q2.w + q1.y * q2.z - q1.z * q2.y,
        q1.w * q2.y - q1.x * q2.z + q1.y * q2.w + q1.z * q2.x,
        q1.w * q2.z + q1.x * q2.y - q1.y * q2.x + q1.z * q2.w,
        q1.w * q2.w - q1.x * q2.x - q1.y * q2.y - q1.z * q2.z
    );
}

mat3 scaleQuaternionToMatrix(vec3 s, vec4 q) {
    
    return mat3(
        s.x * (1.0 - 2.0 * (q.y * q.y + q.z * q.z)),
        s.x * (2.0 * (q.x * q.y + q.w * q.z)),
        s.x * (2.0 * (q.x * q.z - q.w * q.y)),
        s.y * (2.0 * (q.x * q.y - q.w * q.z)),
        s.y * (1.0 - 2.0 * (q.x * q.x + q.z * q.z)),
        s.y * (2.0 * (q.y * q.z + q.w * q.x)),
        s.z * (2.0 * (q.x * q.z + q.w * q.y)),
        s.z * (2.0 * (q.y * q.z - q.w * q.x)),
        s.z * (1.0 - 2.0 * (q.x * q.x + q.y * q.y))
    );
}

vec4 slerp(vec4 q1, vec4 q2, float t) {
    
    float cosHalfTheta = dot(q1, q2);

    
    if (abs(cosHalfTheta) >= 0.999) {
        return q1;
    }
    
    
    
    if (cosHalfTheta < 0.0) {
        q2 = -q2;
        cosHalfTheta = -cosHalfTheta;
    }

    
    float halfTheta = acos(cosHalfTheta);
    float sinHalfTheta = sqrt(1.0 - cosHalfTheta * cosHalfTheta);

    
    float ratioA = sin((1.0 - t) * halfTheta) / sinHalfTheta;
    float ratioB = sin(t * halfTheta) / sinHalfTheta;

    
    return q1 * ratioA + q2 * ratioB;
}

ivec3 splatTexCoord(int index) {
    uint x = uint(index) & SPLAT_TEX_WIDTH_MASK;
    uint y = (uint(index) >> SPLAT_TEX_WIDTH_BITS) & SPLAT_TEX_HEIGHT_MASK;
    uint z = uint(index) >> SPLAT_TEX_LAYER_BITS;
    return ivec3(x, y, z);
}`, uc = `precision highp float;
precision highp int;

#include <splatDefines>

uniform float near;
uniform float far;
uniform bool encodeLinear;
uniform float maxStdDev;
uniform bool disableFalloff;
uniform float falloff;

uniform bool splatTexEnable;
uniform sampler3D splatTexture;
uniform mat2 splatTexMul;
uniform vec2 splatTexAdd;
uniform float splatTexNear;
uniform float splatTexFar;
uniform float splatTexMid;

out vec4 fragColor;

in vec4 vRgba;
in vec2 vSplatUv;
in vec3 vNdc;

void main() {
    vec4 rgba = vRgba;

    float z = dot(vSplatUv, vSplatUv);
    if (!splatTexEnable) {
        if (z > (maxStdDev * maxStdDev)) {
            discard;
        }
    } else {
        vec2 uv = splatTexMul * vSplatUv + splatTexAdd;
        float ndcZ = vNdc.z;
        float depth = (2.0 * near * far) / (far + near - ndcZ * (far - near));
        float clampedFar = max(splatTexFar, splatTexNear);
        float clampedDepth = clamp(depth, splatTexNear, clampedFar);
        float logDepth = log2(clampedDepth + 1.0);
        float logNear = log2(splatTexNear + 1.0);
        float logFar = log2(clampedFar + 1.0);

        float texZ;
        if (splatTexMid > 0.0) {
            float clampedMid = clamp(splatTexMid, splatTexNear, clampedFar);
            float logMid = log2(clampedMid + 1.0);
            texZ = (clampedDepth <= clampedMid) ?
                (0.5 * ((logDepth - logNear) / (logMid - logNear))) :
                (0.5 * ((logDepth - logMid) / (logFar - logMid)) + 0.5);
        } else {
            texZ = (logDepth - logNear) / (logFar - logNear);
        }

        vec4 modulate = texture(splatTexture, vec3(uv, 1.0 - texZ));
        rgba *= modulate;
    }

    rgba.a *= mix(1.0, exp(-0.5 * z), falloff);

    if (rgba.a < MIN_ALPHA) {
        discard;
    }
    if (encodeLinear) {
        rgba.rgb = srgbToLinear(rgba.rgb);
    }
    fragColor = rgba;
}`, dc = `precision highp float;
precision highp int;
precision highp usampler2DArray;

#include <splatDefines>

attribute uint splatIndex;

out vec4 vRgba;
out vec2 vSplatUv;
out vec3 vNdc;

uniform vec2 renderSize;
uniform uint numSplats;
uniform vec4 renderToViewQuat;
uniform vec3 renderToViewPos;
uniform float maxStdDev;
uniform float time;
uniform float deltaTime;
uniform bool debugFlag;
uniform bool enable2DGS;
uniform float blurAmount;
uniform float preBlurAmount;
uniform float focalDistance;
uniform float apertureAngle;
uniform float clipXY;
uniform float renderScale;

uniform usampler2DArray packedSplats;

void main() {
    
    gl_Position = vec4(0.0, 0.0, 2.0, 1.0);

    if (uint(gl_InstanceID) >= numSplats) {
        return;
    }
    if (splatIndex == 0xffffffffu) {
        
        return;
    }

    ivec3 texCoord = ivec3(
        splatIndex & SPLAT_TEX_WIDTH_MASK,
        (splatIndex >> SPLAT_TEX_WIDTH_BITS) & SPLAT_TEX_HEIGHT_MASK,
        splatIndex >> SPLAT_TEX_LAYER_BITS
    );
    uvec4 packed = texelFetch(packedSplats, texCoord, 0);

    vec3 center, scales;
    vec4 quaternion, rgba;
    unpackSplat(packed, center, scales, quaternion, rgba);

    if (rgba.a < MIN_ALPHA) {
        return;
    }
    bvec3 zeroScales = equal(scales, vec3(0.0));
    if (all(zeroScales)) {
        return;
    }

    
    vec3 viewCenter = quatVec(renderToViewQuat, center) + renderToViewPos;

    
    if (viewCenter.z >= 0.0) {
        return;
    }

    
    vec4 clipCenter = projectionMatrix * vec4(viewCenter, 1.0);

    
    if (abs(clipCenter.z) >= clipCenter.w) {
        return;
    }

    
    float clip = clipXY * clipCenter.w;
    if (abs(clipCenter.x) > clip || abs(clipCenter.y) > clip) {
        return;
    }

    
    vec4 viewQuaternion = quatQuat(renderToViewQuat, quaternion);

    if (enable2DGS && any(zeroScales)) {
        vRgba = rgba;
        vSplatUv = position.xy * maxStdDev;

        vec3 offset;
        if (zeroScales.z) {
            offset = vec3(vSplatUv.xy * scales.xy, 0.0);
        } else if (zeroScales.y) {
            offset = vec3(vSplatUv.x * scales.x, 0.0, vSplatUv.y * scales.z);
        } else {
            offset = vec3(0.0, vSplatUv.xy * scales.yz);
        }

        vec3 viewPos = viewCenter + quatVec(viewQuaternion, offset);
        gl_Position = projectionMatrix * vec4(viewPos, 1.0);
        vNdc = gl_Position.xyz / gl_Position.w;
        return;
    }

    
    vec3 ndcCenter = clipCenter.xyz / clipCenter.w;

    
    mat3 RS = scaleQuaternionToMatrix(scales, viewQuaternion);
    mat3 cov3D = RS * transpose(RS);

    
    vec2 scaledRenderSize = renderSize * renderScale;
    vec2 focal = 0.5 * scaledRenderSize * vec2(projectionMatrix[0][0], projectionMatrix[1][1]);
    float invZ = 1.0 / viewCenter.z;
    vec2 J1 = focal * invZ;
    vec2 J2 = -(J1 * viewCenter.xy) * invZ;
    mat3 J = mat3(
        J1.x, 0.0, J2.x,
        0.0, J1.y, J2.y,
        0.0, 0.0, 0.0
    );

    
    
    
    
    
    
    
    mat3 cov2D = transpose(J) * cov3D * J;
    float a = cov2D[0][0];
    float d = cov2D[1][1];
    float b = cov2D[0][1];

    
    a += preBlurAmount;
    d += preBlurAmount;

    float fullBlurAmount = blurAmount;
    if ((focalDistance > 0.0) && (apertureAngle > 0.0)) {
        float focusRadius = MAX_PIXEL_RADIUS;
        if (viewCenter.z < 0.0) {
            float focusBlur = abs((-viewCenter.z - focalDistance) / viewCenter.z);
            float apertureRadius = focal.x * tan(0.5 * apertureAngle);
            focusRadius = focusBlur * apertureRadius;
        }
        fullBlurAmount = clamp(sqr(focusRadius), blurAmount, sqr(MAX_PIXEL_RADIUS));
    }

    
    float detOrig = a * d - b * b;
    a += fullBlurAmount;
    d += fullBlurAmount;
    float det = a * d - b * b;

    
    float blurAdjust = sqrt(max(0.0, detOrig / det));
    rgba.a *= blurAdjust;
    if (rgba.a < MIN_ALPHA) {
        return;
    }

    
    float eigenAvg = 0.5 * (a + d);
    float eigenDelta = sqrt(max(0.0, eigenAvg * eigenAvg - det));
    float eigen1 = eigenAvg + eigenDelta;
    float eigen2 = eigenAvg - eigenDelta;

    vec2 eigenVec1 = normalize(vec2((abs(b) < 0.001) ? 1.0 : b, eigen1 - a));
    vec2 eigenVec2 = vec2(eigenVec1.y, -eigenVec1.x);

    float scale1 = position.x * min(MAX_PIXEL_RADIUS, maxStdDev * sqrt(eigen1));
    float scale2 = position.y * min(MAX_PIXEL_RADIUS, maxStdDev * sqrt(eigen2));

    
    vec2 pixelOffset = eigenVec1 * scale1 + eigenVec2 * scale2;
    vec2 ndcOffset = (2.0 / scaledRenderSize) * pixelOffset;
    vec3 ndc = vec3(ndcCenter.xy + ndcOffset, ndcCenter.z);

    vRgba = rgba;
    vSplatUv = position.xy * maxStdDev;
    vNdc = ndc;
    gl_Position = vec4(ndc.xy * clipCenter.w, clipCenter.zw);
}`;
let Fe = null;
function pc() {
  return Fe || (Q.ShaderChunk.splatDefines = lc, Fe = {
    splatVertex: dc,
    splatFragment: uc
  }), Fe;
}
const Bs = 5;
let He = !1, qe = !1, Ja;
function yc(t) {
  let A = !1;
  return t instanceof ZA ? !0 : (t.traverse((e) => {
    A = A || e instanceof ZA;
  }), A);
}
const Ha = Q.Scene.prototype.add;
Q.Scene.prototype.add = function(t) {
  return He = He || yc(t), qe = qe || t instanceof Ce, Ha.call(this, t), this;
};
const wc = Q.Scene.prototype.onBeforeRender;
Q.Scene.prototype.onBeforeRender = function(t) {
  if (He) {
    if (!qe) {
      const A = Ja || new Ce({ renderer: t });
      this.add(A);
    }
    Q.Scene.prototype.onBeforeRender = wc, Q.Scene.prototype.add = Ha;
  }
};
const aA = class aA extends Q.Mesh {
  constructor(A) {
    const e = aA.makeUniforms(), s = pc(), i = new Q.ShaderMaterial({
      glslVersion: Q.GLSL3,
      vertexShader: s.splatVertex,
      fragmentShader: s.splatFragment,
      uniforms: e,
      transparent: !0,
      blending: Q.NormalBlending,
      depthTest: !0,
      depthWrite: !1,
      side: Q.DoubleSide
    });
    super(Qs, i), this.renderScale = 1, this.splatTexture = null, this.autoViewpoints = [], this.rotateToAccumulator = new Zt({ value: new Q.Quaternion() }), this.translateToAccumulator = new St({ value: new Q.Vector3() }), this.lastFrame = -1, this.lastUpdateTime = null, this.defaultCameras = [], this.pendingUpdate = null, this.envViewpoint = null, this.frustumCulled = !1, this.renderer = A.renderer, this.material = i, this.uniforms = e;
    const n = kA(
      { gsplat: W },
      { gsplat: W },
      ({ gsplat: r }) => {
        if (!r)
          throw new Error("gsplat not defined");
        return r = Ve(r, {
          rotate: this.rotateToAccumulator,
          translate: this.translateToAccumulator
        }), { gsplat: r };
      }
    );
    this.modifier = new PQ(n), this.autoUpdate = A.autoUpdate ?? !0, this.preUpdate = A.preUpdate ?? !1, this.originDistance = A.originDistance ?? 1, this.maxStdDev = A.maxStdDev ?? Math.sqrt(8), this.enable2DGS = A.enable2DGS ?? !1, this.preBlurAmount = A.preBlurAmount ?? 0, this.blurAmount = A.blurAmount ?? 0.3, this.focalDistance = A.focalDistance ?? 0, this.apertureAngle = A.apertureAngle ?? 0, this.falloff = A.falloff ?? 1, this.clipXY = A.clipXY ?? 1.4, this.active = new Ne(), this.accumulatorCount = 1, this.freeAccumulators = [];
    for (let r = 0; r < 1; ++r)
      this.freeAccumulators.push(new Ne()), this.accumulatorCount += 1;
    this.defaultView = new ce({
      ...A.view,
      autoUpdate: !0,
      spark: this
    }), this.viewpoint = this.defaultView, this.prepareViewpoint(this.viewpoint), this.clock = A.clock ? Fi(A.clock) : new Q.Clock(), Ja = this;
  }
  static makeUniforms() {
    return {
      // Size of render viewport in pixels
      renderSize: { value: new Q.Vector2() },
      // Near and far plane distances
      near: { value: 0.1 },
      far: { value: 1e3 },
      // Total number of Gsplats in packedSplats to render
      numSplats: { value: 0 },
      // SplatAccumulator to view transformation quaternion
      renderToViewQuat: { value: new Q.Quaternion() },
      // SplatAccumulator to view transformation translation
      renderToViewPos: { value: new Q.Vector3() },
      // Maximum distance (in stddevs) from Gsplat center to render
      maxStdDev: { value: 1 },
      // Enable interpreting 0-thickness Gsplats as 2DGS
      enable2DGS: { value: !1 },
      // Add to projected 2D splat covariance diagonal (thickens and brightens)
      preBlurAmount: { value: 0 },
      // Add to 2D splat covariance diagonal and adjust opacity (anti-aliasing)
      blurAmount: { value: 0.3 },
      // Depth-of-field distance to focal plane
      focalDistance: { value: 0 },
      // Full-width angle of aperture opening (in radians)
      apertureAngle: { value: 0 },
      // Modulate Gaussian kernal falloff. 0 means "no falloff, flat shading",
      // 1 is normal e^-x^2 falloff.
      falloff: { value: 1 },
      // Clip Gsplats that are clipXY times beyond the +-1 frustum bounds
      clipXY: { value: 1.4 },
      // Debug renderSize scale factor
      renderScale: { value: 1 },
      // Enable splat texture rendering
      splatTexEnable: { value: !1 },
      // Splat texture to render
      splatTexture: { type: "t", value: aA.EMPTY_SPLAT_TEXTURE },
      // Splat texture UV transform (multiply)
      splatTexMul: { value: new Q.Matrix2() },
      // Splat texture UV transform (add)
      splatTexAdd: { value: new Q.Vector2() },
      // Splat texture near plane distance
      splatTexNear: { value: 0.1 },
      // Splat texture far plane distance
      splatTexFar: { value: 1e3 },
      // Splat texture mid plane distance, or 0.0 to disable
      splatTexMid: { value: 0 },
      // Gsplat collection to render
      packedSplats: { type: "t", value: KA.getEmpty() },
      // Time in seconds for time-based effects
      time: { value: 0 },
      // Delta time in seconds since last frame
      deltaTime: { value: 0 },
      // Whether to encode Gsplat with linear RGB (for environment mapping)
      encodeLinear: { value: !1 },
      // Debug flag that alternates each frame
      debugFlag: { value: !1 }
    };
  }
  canAllocAccumulator() {
    return this.freeAccumulators.length > 0 || this.accumulatorCount < Bs;
  }
  maybeAllocAccumulator() {
    let A = this.freeAccumulators.pop();
    if (A === void 0) {
      if (this.accumulatorCount >= Bs)
        return null;
      A = new Ne(), this.accumulatorCount += 1;
    }
    return A.refCount = 1, A;
  }
  releaseAccumulator(A) {
    A.refCount -= 1, A.refCount === 0 && this.freeAccumulators.push(A);
  }
  newViewpoint(A) {
    return new ce({ ...A, spark: this });
  }
  onBeforeRender(A, e, s) {
    var C, h;
    const i = this.time ?? this.clock.getElapsedTime(), n = i - (this.viewpoint.lastTime ?? i);
    this.viewpoint.lastTime = i;
    const r = A.info.render.frame, a = r !== this.lastFrame;
    this.lastFrame = r;
    const o = this.viewpoint;
    if (o === this.defaultView) {
      if (a)
        if (!A.xr.isPresenting)
          this.defaultView.viewToWorld = s.matrixWorld.clone(), this.defaultCameras = [this.defaultView.viewToWorld];
        else {
          const E = A.xr.getCamera().cameras;
          this.defaultCameras = E.map((l) => l.matrixWorld), this.defaultView.viewToWorld = fc(this.defaultCameras) ?? new Q.Matrix4();
        }
      this.autoUpdate && this.update({ scene: e, viewToWorld: this.defaultView.viewToWorld });
    }
    if (a && (this.uniforms.time.value = i, this.uniforms.deltaTime.value = n, this.uniforms.debugFlag.value = performance.now() / 1e3 % 2 < 1), o.target)
      this.uniforms.renderSize.value.set(
        o.target.width,
        o.target.height
      );
    else {
      const E = A.getDrawingBufferSize(
        this.uniforms.renderSize.value
      );
      if (E.x === 1 && E.y === 1) {
        const l = (C = A.xr.getSession()) == null ? void 0 : C.renderState.baseLayer;
        l && (E.x = l.framebufferWidth, E.y = l.framebufferHeight);
      }
    }
    const I = s;
    if (this.uniforms.near.value = I.near, this.uniforms.far.value = I.far, this.uniforms.encodeLinear.value = o.encodeLinear, this.uniforms.maxStdDev.value = this.maxStdDev, this.uniforms.enable2DGS.value = this.enable2DGS, this.uniforms.preBlurAmount.value = this.preBlurAmount, this.uniforms.blurAmount.value = this.blurAmount, this.uniforms.focalDistance.value = this.focalDistance, this.uniforms.apertureAngle.value = this.apertureAngle, this.uniforms.falloff.value = this.falloff, this.uniforms.clipXY.value = this.clipXY, this.uniforms.renderScale.value = this.renderScale, this.splatTexture) {
      const { enable: E, texture: l, multiply: u, add: d, near: p, far: w, mid: f } = this.splatTexture;
      E && l ? (this.uniforms.splatTexEnable.value = !0, this.uniforms.splatTexture.value = l, u ? this.uniforms.splatTexMul.value.fromArray(u.elements) : this.uniforms.splatTexMul.value.set(
        0.5 / this.maxStdDev,
        0,
        0,
        0.5 / this.maxStdDev
      ), this.uniforms.splatTexAdd.value.set((d == null ? void 0 : d.x) ?? 0.5, (d == null ? void 0 : d.y) ?? 0.5), this.uniforms.splatTexNear.value = p ?? this.uniforms.near.value, this.uniforms.splatTexFar.value = w ?? this.uniforms.far.value, this.uniforms.splatTexMid.value = f ?? 0) : (this.uniforms.splatTexEnable.value = !1, this.uniforms.splatTexture.value = aA.EMPTY_SPLAT_TEXTURE);
    } else
      this.uniforms.splatTexEnable.value = !1, this.uniforms.splatTexture.value = aA.EMPTY_SPLAT_TEXTURE;
    const B = ((h = o.display) == null ? void 0 : h.accumulator.toWorld) ?? new Q.Matrix4(), g = s.matrixWorld.clone().invert();
    B.clone().premultiply(g).decompose(
      this.uniforms.renderToViewPos.value,
      this.uniforms.renderToViewQuat.value,
      new Q.Vector3()
    );
  }
  // Update the uniforms for the given viewpoint.
  // Note that the client expects to be able to call render() at any point
  // to update the canvas, so we must switch the viewpoint back to
  // defaultView when we're finished.
  prepareViewpoint(A) {
    if (this.viewpoint = A ?? this.viewpoint, this.viewpoint.display) {
      const { accumulator: e, geometry: s } = this.viewpoint.display;
      this.uniforms.numSplats.value = e.splats.numSplats, this.uniforms.packedSplats.value = e.splats.getTexture(), this.geometry = s;
    } else
      this.uniforms.numSplats.value = 0, this.uniforms.packedSplats.value = KA.getEmpty(), this.geometry = Qs;
  }
  // If spark.autoUpdate is false then you must manually call
  // spark.update({ scene }) to have the scene Gsplats be re-generated.
  update({
    scene: A,
    viewToWorld: e
  }) {
    const s = this.matrixWorld.clone();
    this.preUpdate ? this.updateInternal({ scene: A, originToWorld: s, viewToWorld: e }) : (this.pendingUpdate = {
      scene: A,
      originToWorld: s
    }, setTimeout(() => {
      if (this.pendingUpdate) {
        const { scene: i, originToWorld: n } = this.pendingUpdate;
        this.pendingUpdate = null, this.updateInternal({ scene: i, originToWorld: n, viewToWorld: e });
      }
    }, 1));
  }
  updateInternal({
    scene: A,
    originToWorld: e,
    viewToWorld: s
  }) {
    var h;
    if (!this.canAllocAccumulator())
      return !1;
    e || (e = this.active.toWorld), s = s ?? e.clone();
    const i = this.time ?? this.clock.getElapsedTime(), n = i - (this.lastUpdateTime ?? i);
    this.lastUpdateTime = i;
    const r = this.active.mapping.reduce((E, l) => (E.set(l.node, l), E), /* @__PURE__ */ new Map()), { generators: a, visibleGenerators: o, globalEdits: I } = this.compileScene(A);
    for (const E of a)
      (h = E.frameUpdate) == null || h.call(E, {
        object: E,
        time: i,
        deltaTime: n,
        viewToWorld: s,
        globalEdits: I
      });
    const B = new Set(o.map((E) => E.uuid));
    for (const E of a) {
      const l = r.get(E), d = E.generator && B.has(E.uuid) ? E.numSplats : 0;
      (E.generator !== (l == null ? void 0 : l.generator) || d !== (l == null ? void 0 : l.count)) && E.updateVersion();
    }
    const c = !oe({
      matrix1: e,
      matrix2: this.active.toWorld,
      maxDistance: this.originDistance
    }) || a.length !== r.size || a.some((E) => {
      var l;
      return E.version !== ((l = r.get(E)) == null ? void 0 : l.version);
    });
    let C = null;
    if (c) {
      if (C = this.maybeAllocAccumulator(), !C)
        throw new Error("Unreachable");
      const E = !oe({
        matrix1: e,
        matrix2: this.active.toWorld,
        maxDistance: 1e-5,
        minCoorient: 0.99999
      }), u = o.map((M, D) => {
        const y = r.get(M);
        return y ? (
          // Sort by version deltas then by previous ordering in the mapping,
          // attempting to keep unchanging generators near the front
          // to improve our chances of avoiding a re-generation.
          [M.version - y.version, y.base, M]
        ) : [Number.POSITIVE_INFINITY, M.version, M];
      }).sort((M, D) => M[0] !== D[0] ? M[0] - D[0] : M[1] - D[1]).map(([M, D, y]) => y), d = u.map((M) => M.numSplats), { maxSplats: p, mapping: w } = C.splats.generateMapping(d), f = u.map((M, D) => {
        const { base: y, count: R } = w[D];
        return {
          node: M,
          generator: M.generator,
          version: M.version,
          base: y,
          count: R
        };
      });
      e.clone().invert().decompose(
        this.translateToAccumulator.value,
        this.rotateToAccumulator.value,
        new Q.Vector3()
      ), C.ensureGenerate(p), C.generateSplats({
        renderer: this.renderer,
        modifier: this.modifier,
        generators: f,
        forceUpdate: E,
        originToWorld: e
      }), C.splatsVersion = this.active.splatsVersion + 1;
      const x = C.hasCorrespondence(this.active);
      C.mappingVersion = this.active.mappingVersion + (x ? 0 : 1), this.releaseAccumulator(this.active), this.active = C, this.prepareViewpoint();
    }
    return setTimeout(() => {
      for (const E of this.autoViewpoints)
        E.autoPoll({ accumulator: C ?? void 0 });
    }, 1), !0;
  }
  compileScene(A) {
    const e = [];
    A.traverse((n) => {
      n instanceof Kt && e.push(n);
    });
    const s = [];
    A.traverseVisible((n) => {
      n instanceof Kt && s.push(n);
    });
    const i = /* @__PURE__ */ new Set();
    return A.traverseVisible((n) => {
      if (n instanceof Ie) {
        let r = n.parent;
        for (; r != null && !(r instanceof ZA); )
          r = r.parent;
        r == null && i.add(n);
      }
    }), {
      generators: e,
      visibleGenerators: s,
      globalEdits: Array.from(i)
    };
  }
  // Renders out the scene to an environment map that can be used for
  // Image-based lighting or similar applications. First optionally updates Gsplats,
  // sorts them with respect to the provided worldCenter, renders 6 cube faces,
  // then pre-filters them using THREE.PMREMGenerator and returns a THREE.Texture
  // that can assigned directly to a THREE.MeshStandardMaterial.envMap property.
  async renderEnvMap({
    renderer: A,
    scene: e,
    worldCenter: s,
    size: i = 256,
    near: n = 0.1,
    far: r = 1e3,
    hideObjects: a = [],
    update: o = !1
  }) {
    var C, h;
    if (this.envViewpoint || (this.envViewpoint = this.newViewpoint({ sort360: !0 })), !aA.cubeRender || aA.cubeRender.target.width !== i || aA.cubeRender.near !== n || aA.cubeRender.far !== r) {
      aA.cubeRender && aA.cubeRender.target.dispose();
      const E = new Q.WebGLCubeRenderTarget(i, {
        format: Q.RGBAFormat,
        generateMipmaps: !0,
        minFilter: Q.LinearMipMapLinearFilter
      }), l = new Q.CubeCamera(n, r, E);
      aA.cubeRender = { target: E, camera: l, near: n, far: r };
    }
    aA.pmrem || (aA.pmrem = new Q.PMREMGenerator(A ?? this.renderer));
    const I = new Q.Matrix4().setPosition(s);
    await ((C = this.envViewpoint) == null ? void 0 : C.prepare({ scene: e, viewToWorld: I, update: o }));
    const { target: B, camera: g } = aA.cubeRender;
    g.position.copy(s);
    const c = /* @__PURE__ */ new Map();
    for (const E of a)
      c.set(E, E.visible), E.visible = !1;
    this.prepareViewpoint(this.envViewpoint), g.update(A ?? this.renderer, e), this.prepareViewpoint(this.defaultView);
    for (const [E, l] of c.entries())
      E.visible = l;
    return (h = aA.pmrem) == null ? void 0 : h.fromCubemap(B.texture).texture;
  }
  // Utility function to recursively set the envMap property for any
  // THREE.MeshStandardMaterial within the subtree of root.
  recurseSetEnvMap(A, e) {
    A.traverse((s) => {
      if (s instanceof Q.Mesh)
        if (Array.isArray(s.material))
          for (const i of s.material)
            i instanceof Q.MeshStandardMaterial && (i.envMap = e);
        else
          s.material instanceof Q.MeshStandardMaterial && (s.material.envMap = e);
    });
  }
  // Utility function that helps extract the Gsplat RGBA values from a
  // SplatGenerator, including the result of any real-time RGBA SDF edits applied
  // to a SplatMesh. This effectively "bakes" any computed RGBA values, which can
  // now be used as a pipeline input via SplatMesh.splatRgba to inject these
  // baked values into the Gsplat data.
  getRgba({
    generator: A,
    rgba: e
  }) {
    const s = this.active.mapping.find(({ node: i }) => i === A);
    if (!s)
      throw new Error("Generator not found");
    return e = e ?? new Te(), e.fromPackedSplats({
      packedSplats: this.active.splats,
      base: s.base,
      count: s.count,
      renderer: this.renderer
    }), e;
  }
  // Utility function that builds on getRgba({ generator }) and additionally
  // reads back the RGBA values to the CPU in a Uint8Array with packed RGBA
  // in that byte order.
  async readRgba({
    generator: A,
    rgba: e
  }) {
    return e = this.getRgba({ generator: A, rgba: e }), e.read();
  }
};
aA.cubeRender = null, aA.pmrem = null, aA.EMPTY_SPLAT_TEXTURE = new Q.Data3DTexture();
let Ce = aA;
const Qs = new Je(new Uint32Array(1), 0);
kA(
  { packedSplats: Ot, index: "int" },
  { gsplat: W },
  ({ packedSplats: t, index: A }) => {
    if (!t || !A)
      throw new Error("Invalid input");
    return { gsplat: Ht(t, A) };
  }
);
function fc(t) {
  if (t.length === 0)
    return null;
  const A = new Q.Vector3(), e = new Q.Quaternion(), s = new Q.Vector3(), i = [], n = [];
  for (const r of t)
    r.decompose(A, e, s), i.push(A), n.push(e);
  return new Q.Matrix4().compose(
    Gi(i),
    Ri(n),
    new Q.Vector3(1, 1, 1)
  );
}
function Dc(t, A, e) {
  const s = Math.floor(t.length / 32);
  if (s * 32 !== t.length)
    throw new Error("Invalid .splat file size");
  const i = new Float32Array(t.buffer);
  for (let n = 0; n < s; ++n) {
    const r = n * 32, a = n * 8, o = i[a + 0], I = i[a + 1], B = i[a + 2], g = i[a + 3], c = i[a + 4], C = i[a + 5], h = t[r + 24] / 255, E = t[r + 25] / 255, l = t[r + 26] / 255, u = t[r + 27] / 255, d = (t[r + 28] - 128) / 128, p = (t[r + 29] - 128) / 128, w = (t[r + 30] - 128) / 128, f = (t[r + 31] - 128) / 128;
    e(
      n,
      o,
      I,
      B,
      g,
      c,
      C,
      p,
      w,
      f,
      d,
      u,
      h,
      E,
      l
    );
  }
}
const cs = {
  0: {
    bytesPerCenter: 12,
    bytesPerScale: 12,
    bytesPerRotation: 16,
    bytesPerColor: 4,
    bytesPerSphericalHarmonicsComponent: 4,
    scaleOffsetBytes: 12,
    rotationOffsetBytes: 24,
    colorOffsetBytes: 40,
    sphericalHarmonicsOffsetBytes: 44,
    scaleRange: 1
  },
  1: {
    bytesPerCenter: 6,
    bytesPerScale: 6,
    bytesPerRotation: 8,
    bytesPerColor: 4,
    bytesPerSphericalHarmonicsComponent: 2,
    scaleOffsetBytes: 6,
    rotationOffsetBytes: 12,
    colorOffsetBytes: 20,
    sphericalHarmonicsOffsetBytes: 24,
    scaleRange: 32767
  },
  2: {
    bytesPerCenter: 6,
    bytesPerScale: 6,
    bytesPerRotation: 8,
    bytesPerColor: 4,
    bytesPerSphericalHarmonicsComponent: 1,
    scaleOffsetBytes: 6,
    rotationOffsetBytes: 12,
    colorOffsetBytes: 20,
    sphericalHarmonicsOffsetBytes: 24,
    scaleRange: 32767
  }
}, mc = {
  0: 0,
  1: 9,
  2: 24,
  3: 45
};
function Mc(t, A, e, s) {
  var E;
  let r = 0;
  const a = new DataView(t.buffer, r, 4096);
  r += 4096;
  const o = a.getUint8(0), I = a.getUint8(1);
  if (o !== 0 || I < 1)
    throw new Error(
      `Unsupported .ksplat version: ${o}.${I}`
    );
  const B = a.getUint32(4, !0);
  a.getUint32(16, !0);
  const g = a.getUint16(20, !0);
  if (g < 0 || g > 2)
    throw new Error(`Invalid .ksplat compression level: ${g}`);
  const c = a.getFloat32(36, !0) || -1.5, C = a.getFloat32(40, !0) || 1.5;
  let h = 4096 + B * 1024;
  for (let l = 0; l < B; ++l) {
    let u = function(SA, J) {
      if (g === 0)
        return Y.getFloat32(
          SA + j + J * 4,
          !0
        );
      if (g === 1)
        return fA(
          Y.getUint16(
            SA + j + J * 2,
            !0
          )
        );
      const VA = Y.getUint8(SA + j + J) / 255;
      return c + VA * (C - c);
    };
    const d = new DataView(t.buffer, r, 1024);
    r += 1024;
    const p = d.getUint32(0, !0), w = d.getUint32(4, !0), f = d.getUint32(8, !0), x = d.getUint32(12, !0), M = d.getFloat32(16, !0), D = d.getUint16(20, !0), y = (d.getUint32(24, !0) || ((E = cs[g]) == null ? void 0 : E.scaleRange)) ?? 1, R = d.getUint32(32, !0), S = R * f, m = d.getUint32(36, !0), U = m * 4, F = D * x + U, k = d.getUint16(40, !0), v = mc[k], {
      bytesPerCenter: L,
      bytesPerScale: AA,
      bytesPerRotation: z,
      bytesPerColor: sA,
      bytesPerSphericalHarmonicsComponent: tA,
      scaleOffsetBytes: O,
      rotationOffsetBytes: T,
      colorOffsetBytes: Z,
      sphericalHarmonicsOffsetBytes: j
    } = cs[g], P = L + AA + z + sA + v * tA, b = P * w, dA = b + F, gA = [0, 3, 6, 1, 4, 7, 2, 5, 8], pA = [
      9,
      14,
      19,
      10,
      15,
      20,
      11,
      16,
      21,
      12,
      17,
      22,
      13,
      18,
      23
    ], yA = [
      24,
      31,
      38,
      25,
      32,
      39,
      26,
      33,
      40,
      27,
      34,
      41,
      28,
      35,
      42,
      29,
      36,
      43,
      30,
      37,
      44
    ], MA = k >= 1 ? new Float32Array(3 * 3) : void 0, EA = k >= 2 ? new Float32Array(5 * 3) : void 0, UA = k >= 3 ? new Float32Array(7 * 3) : void 0, xA = M / 2 / y, PA = h + U, XA = h + F, Y = new DataView(
      t.buffer,
      XA,
      b
    ), uA = new Float32Array(
      t.buffer,
      PA,
      x * 3
    ), _A = new Uint32Array(
      t.buffer,
      h,
      m
    );
    let Rt = R, Xt = S;
    for (let SA = 0; SA < p; ++SA) {
      const J = SA * P;
      let VA;
      if (SA < S)
        VA = Math.floor(SA / f);
      else {
        const WA = _A[Rt - R];
        SA >= Xt + WA && (Rt += 1, Xt += WA), VA = Rt;
      }
      const de = g === 0 ? Y.getFloat32(J + 0, !0) : (Y.getUint16(J + 0, !0) - y) * xA + uA[3 * VA + 0], pe = g === 0 ? Y.getFloat32(J + 4, !0) : (Y.getUint16(J + 2, !0) - y) * xA + uA[3 * VA + 1], ye = g === 0 ? Y.getFloat32(J + 8, !0) : (Y.getUint16(J + 4, !0) - y) * xA + uA[3 * VA + 2], we = g === 0 ? Y.getFloat32(J + O + 0, !0) : fA(Y.getUint16(J + O + 0, !0)), fe = g === 0 ? Y.getFloat32(J + O + 4, !0) : fA(Y.getUint16(J + O + 2, !0)), Pa = g === 0 ? Y.getFloat32(J + O + 8, !0) : fA(Y.getUint16(J + O + 4, !0)), Xa = g === 0 ? Y.getFloat32(J + T + 0, !0) : fA(
        Y.getUint16(J + T + 0, !0)
      ), Wa = g === 0 ? Y.getFloat32(J + T + 4, !0) : fA(
        Y.getUint16(J + T + 2, !0)
      ), $a = g === 0 ? Y.getFloat32(J + T + 8, !0) : fA(
        Y.getUint16(J + T + 4, !0)
      ), Ao = g === 0 ? Y.getFloat32(J + T + 12, !0) : fA(
        Y.getUint16(J + T + 6, !0)
      ), to = Y.getUint8(J + Z + 0) / 255, eo = Y.getUint8(J + Z + 1) / 255, so = Y.getUint8(J + Z + 2) / 255, io = Y.getUint8(J + Z + 3) / 255;
      if (e(
        SA,
        de,
        pe,
        ye,
        we,
        fe,
        Pa,
        Wa,
        $a,
        Ao,
        Xa,
        io,
        to,
        eo,
        so
      ), k >= 1 && MA) {
        for (const [WA, vt] of gA.entries())
          MA[WA] = u(J, vt);
        if (EA)
          for (const [WA, vt] of pA.entries())
            EA[WA] = u(J, vt);
        if (UA)
          for (const [WA, vt] of yA.entries())
            UA[WA] = u(J, vt);
        s == null || s(SA, MA, EA, UA);
      }
    }
    h += dA;
  }
}
class xc {
  constructor({ fileBytes: A }) {
    this.fileBytes = A instanceof ArrayBuffer ? new Uint8Array(A) : A, this.reader = new Yi({ fileBytes: this.fileBytes });
    const e = new DataView(this.reader.read(16).buffer);
    if (e.getUint32(0, !0) !== 1347635022)
      throw new Error("Invalid SPZ file");
    if (this.version = e.getUint32(4, !0), this.version < 1 || this.version > 2)
      throw new Error(`Unsupported SPZ version: ${this.version}`);
    this.numSplats = e.getUint32(8, !0), this.shDegree = e.getUint8(12), this.fractionalBits = e.getUint8(13), this.flags = e.getUint8(14), this.flagAntiAlias = (this.flags & 1) !== 0, this.reserved = e.getUint8(15), this.parsed = !1;
  }
  parseSplats(A, e, s, i, n, r) {
    if (this.parsed)
      throw new Error("SPZ file already parsed");
    if (this.parsed = !0, this.version === 1) {
      const a = this.reader.read(this.numSplats * 3 * 2), o = new Uint16Array(a.buffer);
      for (let I = 0; I < this.numSplats; I++) {
        const B = I * 3, g = fA(o[B]), c = fA(o[B + 1]), C = fA(o[B + 2]);
        A == null || A(I, g, c, C);
      }
    } else if (this.version === 2) {
      const a = 1 << this.fractionalBits, o = this.reader.read(this.numSplats * 3 * 3);
      for (let I = 0; I < this.numSplats; I++) {
        const B = I * 9, g = ((o[B + 2] << 24 | o[B + 1] << 16 | o[B] << 8) >> 8) / a, c = ((o[B + 5] << 24 | o[B + 4] << 16 | o[B + 3] << 8) >> 8) / a, C = ((o[B + 8] << 24 | o[B + 7] << 16 | o[B + 6] << 8) >> 8) / a;
        A == null || A(I, g, c, C);
      }
    } else
      throw new Error("Unreachable");
    {
      const a = this.reader.read(this.numSplats);
      for (let o = 0; o < this.numSplats; o++)
        e == null || e(o, a[o] / 255);
    }
    {
      const a = this.reader.read(this.numSplats * 3), o = Ka / 0.15;
      for (let I = 0; I < this.numSplats; I++) {
        const B = I * 3, g = (a[B] / 255 - 0.5) * o + 0.5, c = (a[B + 1] / 255 - 0.5) * o + 0.5, C = (a[B + 2] / 255 - 0.5) * o + 0.5;
        s == null || s(I, g, c, C);
      }
    }
    {
      const a = this.reader.read(this.numSplats * 3);
      for (let o = 0; o < this.numSplats; o++) {
        const I = o * 3, B = Math.exp(a[I] / 16 - 10), g = Math.exp(a[I + 1] / 16 - 10), c = Math.exp(a[I + 2] / 16 - 10);
        i == null || i(o, B, g, c);
      }
    }
    {
      const a = this.reader.read(this.numSplats * 3);
      for (let o = 0; o < this.numSplats; o++) {
        const I = o * 3, B = a[I] / 127.5 - 1, g = a[I + 1] / 127.5 - 1, c = a[I + 2] / 127.5 - 1, C = Math.sqrt(
          Math.max(0, 1 - B * B - g * g - c * c)
        );
        n == null || n(o, B, g, c, C);
      }
    }
    if (r && this.shDegree >= 1) {
      const a = new Float32Array(9), o = this.shDegree >= 2 ? new Float32Array(5 * 3) : void 0, I = this.shDegree >= 3 ? new Float32Array(7 * 3) : void 0, B = this.reader.read(
        this.numSplats * qa[this.shDegree] * 3
      );
      let g = 0;
      for (let c = 0; c < this.numSplats; c++) {
        for (let C = 0; C < 9; ++C)
          a[C] = (B[g + C] - 128) / 128;
        if (g += 9, o) {
          for (let C = 0; C < 15; ++C)
            o[C] = (B[g + C] - 128) / 128;
          g += 15;
        }
        if (I) {
          for (let C = 0; C < 21; ++C)
            I[C] = (B[g + C] - 128) / 128;
          g += 21;
        }
        r == null || r(c, a, o, I);
      }
    }
  }
}
const qa = { 1: 3, 2: 8, 3: 15 }, Ka = 0.28209479177387814, Sc = 1347635022, Nc = 2, Fc = 1;
class tt {
  constructor({
    numSplats: A,
    shDegree: e,
    fractionalBits: s = 12,
    flagAntiAlias: i = !0
  }) {
    this.clippedCount = 0;
    const n = 19 + (e >= 1 ? 9 : 0) + (e >= 2 ? 15 : 0) + (e >= 3 ? 21 : 0), r = 16 + A * n;
    this.buffer = new ArrayBuffer(r), this.view = new DataView(this.buffer), this.view.setUint32(0, Sc, !0), this.view.setUint32(4, Nc, !0), this.view.setUint32(8, A, !0), this.view.setUint8(12, e), this.view.setUint8(13, s), this.view.setUint8(14, i ? Fc : 0), this.view.setUint8(15, 0), this.numSplats = A, this.shDegree = e, this.fractionalBits = s, this.fraction = 1 << s, this.flagAntiAlias = i;
  }
  setCenter(A, e, s, i) {
    const n = Math.round(e * this.fraction), r = Math.max(-8388607, Math.min(8388607, n)), a = Math.round(s * this.fraction), o = Math.max(-8388607, Math.min(8388607, a)), I = Math.round(i * this.fraction), B = Math.max(-8388607, Math.min(8388607, I));
    (n !== r || a !== o || I !== B) && (this.clippedCount += 1);
    const C = 16 + A * 9;
    this.view.setUint8(C, r & 255), this.view.setUint8(C + 1, r >> 8 & 255), this.view.setUint8(C + 2, r >> 16 & 255), this.view.setUint8(C + 3, o & 255), this.view.setUint8(C + 4, o >> 8 & 255), this.view.setUint8(C + 5, o >> 16 & 255), this.view.setUint8(C + 6, B & 255), this.view.setUint8(C + 7, B >> 8 & 255), this.view.setUint8(C + 8, B >> 16 & 255);
  }
  setAlpha(A, e) {
    const s = 16 + this.numSplats * 9 + A;
    this.view.setUint8(
      s,
      Math.max(0, Math.min(255, Math.round(e * 255)))
    );
  }
  static scaleRgb(A) {
    const e = ((A - 0.5) / (Ka / 0.15) + 0.5) * 255;
    return Math.max(0, Math.min(255, Math.round(e)));
  }
  setRgb(A, e, s, i) {
    const n = 16 + this.numSplats * 10 + A * 3;
    this.view.setUint8(n, tt.scaleRgb(e)), this.view.setUint8(n + 1, tt.scaleRgb(s)), this.view.setUint8(n + 2, tt.scaleRgb(i));
  }
  setScale(A, e, s, i) {
    const n = 16 + this.numSplats * 13 + A * 3;
    this.view.setUint8(
      n,
      Math.max(0, Math.min(255, Math.round((Math.log(e) + 10) * 16)))
    ), this.view.setUint8(
      n + 1,
      Math.max(0, Math.min(255, Math.round((Math.log(s) + 10) * 16)))
    ), this.view.setUint8(
      n + 2,
      Math.max(0, Math.min(255, Math.round((Math.log(i) + 10) * 16)))
    );
  }
  setQuat(A, e, s, i, n) {
    const r = 16 + this.numSplats * 16 + A * 3, a = n < 0;
    this.view.setUint8(
      r,
      Math.max(
        0,
        Math.min(255, Math.round(((a ? -e : e) + 1) * 127.5))
      )
    ), this.view.setUint8(
      r + 1,
      Math.max(
        0,
        Math.min(255, Math.round(((a ? -s : s) + 1) * 127.5))
      )
    ), this.view.setUint8(
      r + 2,
      Math.max(
        0,
        Math.min(255, Math.round(((a ? -i : i) + 1) * 127.5))
      )
    );
  }
  static quantizeSh(A, e) {
    const s = Math.round(A * 128) + 128, i = 1 << 8 - e, n = Math.floor((s + i / 2) / i) * i;
    return Math.max(0, Math.min(255, n));
  }
  setSh(A, e, s, i) {
    const n = qa[this.shDegree] || 0, r = 16 + this.numSplats * 19 + A * n * 3;
    for (let a = 0; a < 9; ++a)
      this.view.setUint8(r + a, tt.quantizeSh(e[a], 5));
    if (s) {
      const a = r + 9;
      for (let o = 0; o < 15; ++o)
        this.view.setUint8(a + o, tt.quantizeSh(s[o], 4));
      if (i) {
        const o = a + 15;
        for (let I = 0; I < 21; ++I)
          this.view.setUint8(o + I, tt.quantizeSh(i[I], 4));
      }
    }
  }
  async finalize() {
    const A = new Uint8Array(this.buffer), s = new ReadableStream({
      async start(r) {
        r.enqueue(A), r.close();
      }
    }).pipeThrough(new CompressionStream("gzip")), n = await new Response(s).arrayBuffer();
    return console.log(
      "Compressed",
      A.length,
      "bytes to",
      n.byteLength,
      "bytes"
    ), new Uint8Array(n);
  }
}
async function cC(t) {
  var B, g, c;
  const A = new Qc(), {
    inputs: e,
    clipXyz: s,
    maxSh: i,
    fractionalBits: n = 12,
    opacityThreshold: r
  } = t;
  for (const C of e) {
    let h = function(D) {
      return D.multiplyScalar(p), D.applyQuaternion(w), D.add(f), D;
    }, E = function(D) {
      return D.multiplyScalar(p), D;
    }, l = function(D) {
      return D.premultiply(w), D;
    }, u = function(D) {
      return !x || x.containsPoint(D);
    }, d = function(D) {
      return r !== void 0 ? D >= r : !0;
    };
    const p = ((B = C.transform) == null ? void 0 : B.scale) ?? 1, w = new Q.Quaternion().fromArray(
      ((g = C.transform) == null ? void 0 : g.quaternion) ?? [0, 0, 0, 1]
    ), f = new Q.Vector3().fromArray(
      ((c = C.transform) == null ? void 0 : c.translate) ?? [0, 0, 0]
    ), x = s ? new Q.Box3(
      new Q.Vector3().fromArray(s.min),
      new Q.Vector3().fromArray(s.max)
    ) : void 0;
    let M = C.fileType;
    switch (M || (M = La(C.fileBytes), !M && C.pathOrUrl && (M = Ya(C.pathOrUrl))), M) {
      case Lt.PLY: {
        const D = new Be({ fileBytes: C.fileBytes });
        await D.parseHeader();
        let y = null;
        D.parseSplats(
          (R, S, m, U, F, k, v, L, AA, z, sA, tA, O, T, Z) => {
            const j = h(new Q.Vector3(S, m, U));
            if (u(j) && d(tA)) {
              y = A.pushSplat(), A.setCenter(y, j.x, j.y, j.z);
              const P = E(
                new Q.Vector3(F, k, v)
              );
              A.setScale(y, P.x, P.y, P.z);
              const b = l(
                new Q.Quaternion(L, AA, z, sA)
              );
              A.setQuaternion(
                y,
                b.x,
                b.y,
                b.z,
                b.w
              ), A.setOpacity(y, tA), A.setColor(y, O, T, Z);
            } else
              y = null;
          },
          (R, S, m, U) => {
            S && y !== null && A.setSh1(y, S), m && y !== null && A.setSh2(y, m), U && y !== null && A.setSh3(y, U);
          }
        );
        break;
      }
      case Lt.SPZ: {
        const D = new xc({ fileBytes: C.fileBytes }), y = new Int32Array(D.numSplats);
        y.fill(-1);
        const R = new Float32Array(D.numSplats * 3), S = new Q.Vector3();
        D.parseSplats(
          (m, U, F, k) => {
            const v = h(new Q.Vector3(U, F, k));
            R[m * 3] = v.x, R[m * 3 + 1] = v.y, R[m * 3 + 2] = v.z;
          },
          (m, U) => {
            S.fromArray(R, m * 3), u(S) && d(U) && (y[m] = A.pushSplat(), A.setCenter(y[m], S.x, S.y, S.z), A.setOpacity(y[m], U));
          },
          (m, U, F, k) => {
            y[m] >= 0 && A.setColor(y[m], U, F, k);
          },
          (m, U, F, k) => {
            if (y[m] >= 0) {
              const v = E(
                new Q.Vector3(U, F, k)
              );
              A.setScale(y[m], v.x, v.y, v.z);
            }
          },
          (m, U, F, k, v) => {
            if (y[m] >= 0) {
              const L = l(
                new Q.Quaternion(U, F, k, v)
              );
              A.setQuaternion(
                y[m],
                L.x,
                L.y,
                L.z,
                L.w
              );
            }
          },
          (m, U, F, k) => {
            y[m] >= 0 && (A.setSh1(y[m], U), F && A.setSh2(y[m], F), k && A.setSh3(y[m], k));
          }
        );
        break;
      }
      case Lt.SPLAT:
        Dc(
          C.fileBytes,
          (D) => {
          },
          (D, y, R, S, m, U, F, k, v, L, AA, z, sA, tA, O) => {
            const T = h(new Q.Vector3(y, R, S));
            if (u(T) && d(z)) {
              const Z = A.pushSplat();
              A.setCenter(Z, T.x, T.y, T.z);
              const j = E(
                new Q.Vector3(m, U, F)
              );
              A.setScale(Z, j.x, j.y, j.z);
              const P = l(
                new Q.Quaternion(k, v, L, AA)
              );
              A.setQuaternion(
                Z,
                P.x,
                P.y,
                P.z,
                P.w
              ), A.setOpacity(Z, z), A.setColor(Z, sA, tA, O);
            }
          }
        );
        break;
      case Lt.KSPLAT: {
        let D = null;
        Mc(
          C.fileBytes,
          (y) => {
          },
          (y, R, S, m, U, F, k, v, L, AA, z, sA, tA, O, T) => {
            const Z = h(new Q.Vector3(R, S, m));
            if (u(Z) && d(sA)) {
              D = A.pushSplat(), A.setCenter(D, Z.x, Z.y, Z.z);
              const j = E(
                new Q.Vector3(U, F, k)
              );
              A.setScale(D, j.x, j.y, j.z);
              const P = l(
                new Q.Quaternion(v, L, AA, z)
              );
              A.setQuaternion(
                D,
                P.x,
                P.y,
                P.z,
                P.w
              ), A.setOpacity(D, sA), A.setColor(D, tA, O, T);
            } else
              D = null;
          },
          (y, R, S, m) => {
            D !== null && (A.setSh1(D, R), S && A.setSh2(D, S), m && A.setSh3(D, m));
          }
        );
        break;
      }
      default:
        throw new Error(`transcodeSpz not implemented for ${M}`);
    }
  }
  const a = Math.min(
    i ?? 3,
    A.sh3 ? 3 : A.sh2 ? 2 : A.sh1 ? 1 : 0
  ), o = new tt({
    numSplats: A.numSplats,
    shDegree: a,
    fractionalBits: n,
    flagAntiAlias: !0
  });
  for (let C = 0; C < A.numSplats; ++C) {
    const h = C * 3, E = C * 4;
    o.setCenter(
      C,
      A.centers[h],
      A.centers[h + 1],
      A.centers[h + 2]
    ), o.setScale(
      C,
      A.scales[h],
      A.scales[h + 1],
      A.scales[h + 2]
    ), o.setQuat(
      C,
      A.quaternions[E],
      A.quaternions[E + 1],
      A.quaternions[E + 2],
      A.quaternions[E + 3]
    ), o.setAlpha(C, A.opacities[C]), o.setRgb(
      C,
      A.colors[h],
      A.colors[h + 1],
      A.colors[h + 2]
    ), A.sh1 && a >= 1 && o.setSh(
      C,
      A.sh1.slice(C * 9, (C + 1) * 9),
      a >= 2 && A.sh2 ? A.sh2.slice(C * 15, (C + 1) * 15) : void 0,
      a >= 3 && A.sh3 ? A.sh3.slice(C * 21, (C + 1) * 21) : void 0
    );
  }
  return { fileBytes: await o.finalize(), clippedCount: o.clippedCount };
}
class CC {
  constructor(A) {
    this.mesh = A.mesh, this.numSplats = A.numSplats ?? this.mesh.numSplats;
    const { width: e, height: s, depth: i, maxSplats: n } = mA(this.numSplats);
    this.skinData = new Uint16Array(n * 4), this.skinTexture = new Q.DataArrayTexture(
      this.skinData,
      e,
      s,
      i
    ), this.skinTexture.format = Q.RGBAIntegerFormat, this.skinTexture.type = Q.UnsignedShortType, this.skinTexture.internalFormat = "RGBA16UI", this.skinTexture.needsUpdate = !0, this.numBones = A.numBones ?? 256, this.boneData = new Float32Array(this.numBones * 16), this.boneTexture = new Q.DataTexture(
      this.boneData,
      4,
      this.numBones,
      Q.RGBAFormat,
      Q.FloatType
    ), this.boneTexture.internalFormat = "RGBA32F", this.boneTexture.needsUpdate = !0, this.uniform = new G({
      key: "skinning",
      type: za,
      globals: () => [_a],
      value: {
        numSplats: this.numSplats,
        numBones: this.numBones,
        skinTexture: this.skinTexture,
        boneTexture: this.boneTexture
      }
    });
  }
  // Apply the skeletal animation to a Gsplat in a dyno program.
  modify(A) {
    return Gc(A, this.uniform);
  }
  // Set the "rest" pose for a bone with position and quaternion orientation.
  setRestQuatPos(A, e, s) {
    const i = A * 16;
    this.boneData[i + 0] = e.x, this.boneData[i + 1] = e.y, this.boneData[i + 2] = e.z, this.boneData[i + 3] = e.w, this.boneData[i + 4] = s.x, this.boneData[i + 5] = s.y, this.boneData[i + 6] = s.z, this.boneData[i + 7] = 0, this.boneData[i + 8] = 0, this.boneData[i + 9] = 0, this.boneData[i + 10] = 0, this.boneData[i + 11] = 1, this.boneData[i + 12] = 0, this.boneData[i + 13] = 0, this.boneData[i + 14] = 0, this.boneData[i + 15] = 0;
  }
  // Set the "current" position and orientation of a bone.
  setBoneQuatPos(A, e, s) {
    const i = A * 16, n = new Q.Quaternion(
      this.boneData[i + 0],
      this.boneData[i + 1],
      this.boneData[i + 2],
      this.boneData[i + 3]
    ), r = new Q.Vector3(
      this.boneData[i + 4],
      this.boneData[i + 5],
      this.boneData[i + 6]
    ), a = n.clone().invert(), o = s.clone().sub(r);
    o.applyQuaternion(a), a.multiply(e);
    const I = new Q.Quaternion(
      o.x,
      o.y,
      o.z,
      0
    ).multiply(n);
    this.boneData[i + 8] = a.x, this.boneData[i + 9] = a.y, this.boneData[i + 10] = a.z, this.boneData[i + 11] = a.w, this.boneData[i + 12] = 0.5 * I.x, this.boneData[i + 13] = 0.5 * I.y, this.boneData[i + 14] = 0.5 * I.z, this.boneData[i + 15] = 0.5 * I.w;
  }
  // Set up to 4 bone indices and weights for a Gsplat. For fewer than 4 bones,
  // you can set the remaining weights to 0 (and index=0).
  setSplatBones(A, e, s) {
    const i = A * 4;
    this.skinData[i + 0] = Math.min(255, Math.max(0, Math.round(s.x * 255))) + (e.x << 8), this.skinData[i + 1] = Math.min(255, Math.max(0, Math.round(s.y * 255))) + (e.y << 8), this.skinData[i + 2] = Math.min(255, Math.max(0, Math.round(s.z * 255))) + (e.z << 8), this.skinData[i + 3] = Math.min(255, Math.max(0, Math.round(s.w * 255))) + (e.w << 8);
  }
  // Call this to indicate that the bones have changed and the Gsplats need to be
  // re-generated with updated skinning.
  updateBones() {
    this.boneTexture.needsUpdate = !0, this.mesh.needsUpdate = !0;
  }
}
const za = { type: "GsplatSkinning" }, _a = CA(`
  struct GsplatSkinning {
    int numSplats;
    int numBones;
    usampler2DArray skinTexture;
    sampler2D boneTexture;
  };
`), kc = CA(`
  void applyGsplatSkinning(
    int numSplats, int numBones,
    usampler2DArray skinTexture, sampler2D boneTexture,
    int splatIndex, inout vec3 center, inout vec4 quaternion
  ) {
    if ((splatIndex < 0) || (splatIndex >= numSplats)) {
      return;
    }

    uvec4 skinData = texelFetch(skinTexture, splatTexCoord(splatIndex), 0);

    float weights[4];
    weights[0] = float(skinData.x & 0xffu) / 255.0;
    weights[1] = float(skinData.y & 0xffu) / 255.0;
    weights[2] = float(skinData.z & 0xffu) / 255.0;
    weights[3] = float(skinData.w & 0xffu) / 255.0;

    uint boneIndices[4];
    boneIndices[0] = (skinData.x >> 8u) & 0xffu;
    boneIndices[1] = (skinData.y >> 8u) & 0xffu;
    boneIndices[2] = (skinData.z >> 8u) & 0xffu;
    boneIndices[3] = (skinData.w >> 8u) & 0xffu;

    vec4 quat = vec4(0.0);
    vec4 dual = vec4(0.0);
    for (int i = 0; i < 4; i++) {
      if (weights[i] > 0.0) {
        int boneIndex = int(boneIndices[i]);
        vec4 boneQuat = vec4(0.0, 0.0, 0.0, 1.0);
        vec4 boneDual = vec4(0.0);
        if (boneIndex < numBones) {
          boneQuat = texelFetch(boneTexture, ivec2(2, boneIndex), 0);
          boneDual = texelFetch(boneTexture, ivec2(3, boneIndex), 0);
        }

        if ((i > 0) && (dot(quat, boneQuat) < 0.0)) {
          // Flip sign if next blend is pointing in the opposite direction
          boneQuat = -boneQuat;
          boneDual = -boneDual;
        }
        quat += weights[i] * boneQuat;
        dual += weights[i] * boneDual;
      }
    }

    // Normalize dual quaternion
    float norm = length(quat);
    quat /= norm;
    dual /= norm;
    vec3 translate = vec3(
      2.0 * (-dual.w * quat.x + dual.x * quat.w - dual.y * quat.z + dual.z * quat.y),
      2.0 * (-dual.w * quat.y + dual.x * quat.z + dual.y * quat.w - dual.z * quat.x),
      2.0 * (-dual.w * quat.z - dual.x * quat.y + dual.y * quat.x + dual.z * quat.w)
    );

    center = quatVec(quat, center) + translate;
    quaternion = quatQuat(quat, quaternion);
  }
`);
function Gc(t, A) {
  return new V({
    inTypes: { gsplat: W, skinning: za },
    outTypes: { gsplat: W },
    globals: () => [_a, kc],
    inputs: { gsplat: t, skinning: A },
    statements: ({ inputs: s, outputs: i }) => {
      const { skinning: n } = s, { gsplat: r } = i;
      return vA(`
        ${r} = ${s.gsplat};
        if (isGsplatActive(${r}.flags)) {
          applyGsplatSkinning(
            ${n}.numSplats, ${n}.numBones,
            ${n}.skinTexture, ${n}.boneTexture,
            ${r}.index, ${r}.center, ${r}.quaternion
          );
        }
      `);
    }
  }).outputs.gsplat;
}
function EC({
  // PackedSplats object to add splats to
  splats: t,
  // min and max box extents of the grid
  extents: A,
  // step size along each grid axis
  stepSize: e = 1,
  // spherical radius of each Gsplat
  pointRadius: s = 0.01,
  // relative size of the "shadow copy" of each Gsplat placed behind it
  pointShadowScale: i = 2,
  // Gsplat opacity
  opacity: n = 1,
  // Gsplat color (THREE.Color) or function to set color for position:
  // ((THREE.Color, THREE.Vector3) => void) (default: RGB-modulated grid)
  color: r
}) {
  const o = new Q.Vector3(), I = new Q.Vector3(), B = new Q.Quaternion(0, 0, 0, 1);
  r == null && (r = (c, C) => c.set(
    0.55 + 0.45 * Math.cos(C.x * 1),
    0.55 + 0.45 * Math.cos(C.y * 1),
    0.55 + 0.45 * Math.cos(C.z * 1)
  ));
  const g = new Q.Color();
  for (let c = A.min.z; c < A.max.z + 1e-6; c += e)
    for (let C = A.min.y; C < A.max.y + 1e-6; C += e)
      for (let h = A.min.x; h < A.max.x + 1e-6; h += e) {
        o.set(h, C, c);
        for (let E = 0; E < 2; ++E)
          I.setScalar(s * (E ? 1 : i)), E ? typeof r == "function" ? r(g, o) : g.copy(r) : g.setScalar(0), t.pushSplat(o, I, B, n, g);
      }
}
function hC({
  // PackedSplats object to add splats to
  splats: t,
  // scale (Gsplat scale along axis)
  scale: A = 0.25,
  // radius of the axes (Gsplat scale orthogonal to axis)
  axisRadius: e = 75e-4,
  // relative size of the "shadow copy" of each Gsplat placed behind it
  axisShadowScale: s = 2,
  // origins of the axes (default single axis at origin)
  origins: i = [new Q.Vector3()]
}) {
  const n = new Q.Vector3(), r = new Q.Vector3(), a = new Q.Quaternion(0, 0, 0, 1), o = new Q.Color(), I = 1;
  for (const B of i)
    for (let g = 0; g < 3; ++g) {
      n.set(
        B.x + (g === 0 ? A : 0),
        B.y + (g === 1 ? A : 0),
        B.z + (g === 2 ? A : 0)
      );
      for (let c = 0; c < 2; ++c)
        r.set(
          (g === 0 ? A : e) * (c ? 1 : s),
          (g === 1 ? A : e) * (c ? 1 : s),
          (g === 2 ? A : e) * (c ? 1 : s)
        ), o.setRGB(
          c === 0 ? 0 : g === 0 ? 1 : 0,
          c === 0 ? 0 : g === 1 ? 1 : 0,
          c === 0 ? 0 : g === 2 ? 1 : 0
        ), t.pushSplat(n, r, a, I, o);
    }
}
function lC({
  // PackedSplats object to add splats to
  splats: t,
  // center of the sphere (default: origin)
  origin: A = new Q.Vector3(),
  // radius of the sphere
  radius: e = 1,
  // maximum depth of recursion for subdividing the sphere
  // Warning: Gsplat count grows exponentially with depth
  maxDepth: s = 3,
  // filter function to apply to each point, for example to select
  // points in a certain direction or other function ((THREE.Vector3) => boolean)
  // (default: null)
  filter: i = null,
  // radius of each oriented Gsplat
  pointRadius: n = 0.02,
  // flatness of each oriented Gsplat
  pointThickness: r = 1e-3,
  // color of each Gsplat (THREE.Color) or function to set color for point:
  // ((THREE.Color, THREE.Vector3) => void) (default: white)
  color: a = new Q.Color(1, 1, 1)
}) {
  const o = {};
  function I(E) {
    if (i && !i(E))
      return;
    const l = `${E.x},${E.y},${E.z}`;
    o[l] || (o[l] = E);
  }
  function B(E, l, u, d) {
    if (I(l), I(u), I(d), E >= s)
      return;
    const p = new Q.Vector3().addVectors(l, u).normalize(), w = new Q.Vector3().addVectors(u, d).normalize(), f = new Q.Vector3().addVectors(d, l).normalize();
    B(E + 1, l, p, f), B(E + 1, p, u, w), B(E + 1, f, w, d), B(E + 1, p, w, f);
  }
  for (const E of [-1, 1])
    for (const l of [-1, 1])
      for (const u of [-1, 1]) {
        const d = new Q.Vector3(E, 0, 0), p = new Q.Vector3(0, l, 0), w = new Q.Vector3(0, 0, u);
        B(0, d, p, w);
      }
  const g = Object.values(o), c = new Q.Vector3(n, n, r), C = new Q.Quaternion(), h = typeof a == "function" ? new Q.Color() : a;
  for (const E of g)
    C.setFromUnitVectors(new Q.Vector3(0, 0, -1), E), typeof a == "function" && a(h, E), E.multiplyScalar(e), E.add(A), t.pushSplat(E, c, C, 1, h);
}
function uC({
  // text string to display
  text: t,
  // browser font to render text with (default: "Arial")
  font: A,
  // font size in pixels/Gsplats (default: 32)
  fontSize: e,
  // SplatMesh.recolor tint assuming white Gsplats (default: white)
  color: s,
  // Individual Gsplat color (default: white)
  rgb: i,
  // Gsplat radius (default: 0.8 covers 1-unit spacing well)
  dotRadius: n,
  // text alignment: "left", "center", "right", "start", "end" (default: "start")
  textAlign: r,
  // line spacing multiplier, lines delimited by "\n" (default: 1.0)
  lineHeight: a,
  // Coordinate scale in object-space (default: 1.0)
  objectScale: o
}) {
  A = A ?? "Arial", e = e ?? 32, s = s ?? new Q.Color(1, 1, 1), n = n ?? 0.8, r = r ?? "start", a = a ?? 1, o = o ?? 1;
  const I = t.split(`
`), B = document.createElement("canvas"), g = B.getContext("2d");
  if (!g)
    throw new Error("Failed to create canvas context");
  g.font = `${e}px ${A}`, g.textAlign = r;
  const c = g.measureText(""), C = c.fontBoundingBoxAscent + c.fontBoundingBoxDescent;
  let h = Number.POSITIVE_INFINITY, E = Number.NEGATIVE_INFINITY, l = Number.POSITIVE_INFINITY, u = Number.NEGATIVE_INFINITY;
  for (let F = 0; F < I.length; ++F) {
    const k = g.measureText(I[F]), v = C * a * F;
    h = Math.min(h, -k.actualBoundingBoxLeft), E = Math.max(E, k.actualBoundingBoxRight), l = Math.min(l, v - k.actualBoundingBoxAscent), u = Math.max(u, v + k.actualBoundingBoxDescent);
  }
  const d = Math.floor(h), p = Math.floor(l), w = Math.ceil(E) - d, f = Math.ceil(u) - p;
  B.width = w, B.height = f, g.font = `${e}px ${A}`, g.textAlign = r, g.textBaseline = "alphabetic", g.fillStyle = "#FFFFFF";
  for (let F = 0; F < I.length; ++F) {
    const k = C * a * F - p;
    g.fillText(I[F], -d, k);
  }
  const x = g.getImageData(0, 0, w, f), M = new Uint8Array(x.data.buffer), D = new KA(), y = new Q.Vector3(), R = new Q.Vector3().setScalar(n * o), S = new Q.Quaternion(0, 0, 0, 1);
  i = i ?? new Q.Color(1, 1, 1);
  let m = 0;
  for (let F = 0; F < f; ++F)
    for (let k = 0; k < w; ++k) {
      const v = M[m + 3];
      if (v > 0) {
        const L = v / 255;
        y.set(k - 0.5 * (w - 1), 0.5 * (f - 1) - F, 0), y.multiplyScalar(o), D.pushSplat(y, R, S, L, i);
      }
      m += 4;
    }
  const U = new ZA({ packedSplats: D });
  return U.recolor = s, U;
}
function dC({
  // URL of the image to convert to splats (example: `url: "./image.png"`)
  url: t,
  // Radius of each Gsplat, default covers 1-unit spacing well (default: 0.8)
  dotRadius: A,
  // Subsampling factor for the image. Higher values reduce resolution,
  // for example 2 will halve the width and height by averaging (default: 1)
  subXY: e,
  // Optional callback function to modify each Gsplat before it's added.
  // Return null to skip adding the Gsplat, or a number to set the opacity
  // and add the Gsplat with parameter values in the objects center, rgba etc. were
  // passed into the forEachSplat callback. Ending the callback in `return opacity;`
  // will retain the original opacity.
  // ((width: number, height: number, index: number, center: THREE.Vector3, scales: THREE.Vector3, quaternion: THREE.Quaternion, opacity: number, color: THREE.Color) => number | null)
  forEachSplat: s
}) {
  return A = A ?? 0.8, e = Math.max(1, Math.floor(e ?? 1)), new ZA({
    constructSplats: async (i) => new Promise((n, r) => {
      const a = new Image();
      a.crossOrigin = "anonymous", a.onerror = r, a.onload = () => {
        const { width: o, height: I } = a, B = document.createElement("canvas");
        B.width = o, B.height = I;
        const g = B.getContext("2d");
        if (!g) {
          r(new Error("Failed to create canvas context"));
          return;
        }
        g.imageSmoothingEnabled = !0, g.imageSmoothingQuality = "high";
        const c = Math.round(o / e), C = Math.round(I / e);
        g.drawImage(a, 0, 0, c, C);
        try {
          const h = g.getImageData(0, 0, c, C), E = new Uint8Array(h.data.buffer), l = new Q.Vector3(), u = new Q.Vector3().setScalar(A), d = new Q.Quaternion(0, 0, 0, 1), p = new Q.Color();
          let w = 0;
          for (let f = 0; f < C; ++f)
            for (let x = 0; x < c; ++x) {
              const M = w * 4, D = E[M + 3];
              if (D > 0) {
                let y = D / 255;
                p.set(
                  E[M + 0] / 255,
                  E[M + 1] / 255,
                  E[M + 2] / 255
                ), l.set(
                  x - 0.5 * (c - 1),
                  0.5 * (C - 1) - f,
                  0
                ), u.setScalar(A), d.set(0, 0, 0, 1);
                let R = !0;
                if (s) {
                  const S = s(
                    c,
                    C,
                    w,
                    l,
                    u,
                    d,
                    y,
                    p
                  );
                  y = S ?? y, R = S !== null;
                }
                R && i.pushSplat(l, u, d, y, p);
              }
              w += 1;
            }
          n();
        } catch (h) {
          r(h);
        }
      }, a.src = t;
    })
  });
}
function Rc({
  box: t,
  cells: A,
  dotScale: e,
  color: s,
  opacity: i
}) {
  A.x = Math.max(1, Math.round(A.x)), A.y = Math.max(1, Math.round(A.y)), A.z = Math.max(1, Math.round(A.z)), i = i ?? 1;
  const n = A.x * A.y * A.z, r = q("int", A.x), a = q("int", A.y);
  q("int", A.z);
  const o = TA(0), I = new Kt({
    numSplats: n,
    generator: kA(
      { index: "int" },
      { gsplat: W },
      ({ index: g }) => {
        if (!g)
          throw new Error("index is undefined");
        const c = be(g, r), C = ie(g, r), h = be(C, a), E = ie(C, a), l = qA({
          vectorType: "ivec3",
          x: c,
          y: h,
          z: E
        }), u = Hn(o), d = qA({ vectorType: "ivec2", x: g, y: u }), p = _r(d), w = q("vec3", t.min), f = q("vec3", t.max), x = Nt(f, w), M = ie(DA(Et(l), p), q("vec3", A));
        let D, y, R;
        s ? (D = q("float", s.r), y = q("float", s.g), R = q("float", s.b)) : { r: D, g: y, b: R } = xt(M).outputs;
        const S = qA({
          vectorType: "vec4",
          r: D,
          g: y,
          b: R,
          a: q("float", i)
        }), m = DA(w, QA(x, M)), U = Et(q("float", e)), F = q("vec4", new Q.Quaternion(0, 0, 0, 1));
        let k = rt({
          flags: re("uint", "GSPLAT_FLAG_ACTIVE"),
          index: g,
          center: m,
          scales: U,
          quaternion: F,
          rgba: S
        });
        return k = B.applyGsplat(k), { gsplat: k };
      },
      {
        globals: () => [NA]
      }
    ),
    update: ({ time: g }) => {
      o.value = g, B.update(I), I.updateVersion();
    }
  }), B = new wt();
  return I;
}
const vc = {
  box: new Q.Box3(
    new Q.Vector3(-1, -1, -1),
    new Q.Vector3(1, 1, 1)
  ),
  density: 100,
  fallDirection: new Q.Vector3(-1, -3, 1).normalize(),
  fallVelocity: 0.02,
  wanderScale: 0.04,
  wanderVariance: 2,
  color1: new Q.Color(1, 1, 1),
  color2: new Q.Color(0.5, 0.5, 1),
  minScale: 1e-3,
  maxScale: 5e-3,
  anisoScale: new Q.Vector3(1, 1, 1)
}, Uc = {
  box: new Q.Box3(
    new Q.Vector3(-2, -1, -2),
    new Q.Vector3(2, 5, 2)
  ),
  density: 10,
  fallDirection: new Q.Vector3(0, -1, 0),
  fallVelocity: 2,
  wanderScale: 0.1,
  wanderVariance: 1,
  color1: new Q.Color(1, 1, 1),
  color2: new Q.Color(0.25, 0.25, 0.5),
  minScale: 5e-3,
  maxScale: 0.01,
  anisoScale: new Q.Vector3(0.1, 1, 0.1)
};
function bc({
  // min and max box extents of the snowBox
  box: t,
  // minimum y-coordinate to clamp particle position, which can be used to
  // fake hitting a ground plane and lingering there for a bit
  minY: A,
  // number of Gsplats to generate (default: calculated from box and density)
  numSplats: e,
  // density of Gsplats per unit volume (default: 100)
  density: s,
  // The xyz anisotropic scale of the Gsplat, which can be used for example
  // to elongate rain particles (default: (1, 1, 1))
  anisoScale: i,
  // Minimum Gsplat particle scale (default: 0.001)
  minScale: n,
  // Maximum Gsplat particle scale (default: 0.005)
  maxScale: r,
  // The average direction of fall (default: (0, -1, 0))
  fallDirection: a,
  // The average speed of the fall (multiplied with fallDirection) (default: 0.02)
  fallVelocity: o,
  // The world scale of wandering overlay motion (default: 0.01)
  wanderScale: I,
  // Controls how uniformly the particles wander in sync, more variance mean
  // more randomness in the motion (default: 2)
  wanderVariance: B,
  // Color 1 of the two colors interpolated between (default: (1, 1, 1))
  color1: g,
  // Color 2 of the two colors interpolated between (default: (0.5, 0.5, 1))
  color2: c,
  // The base opacity of the Gsplats (default: 1)
  opacity: C,
  // Optional callback function to call each frame.
  onFrame: h
}) {
  t = t ?? new Q.Box3(new Q.Vector3(-1, -1, -1), new Q.Vector3(1, 1, 1));
  const E = (t.max.x - t.min.x) * (t.max.y - t.min.y) * (t.max.z - t.min.z);
  s = s ?? 100, e = e ?? Math.max(1, Math.min(1e6, Math.round(E * s)));
  const l = TA(n ?? 1e-3), u = TA(r ?? 5e-3), d = At(
    ((i == null ? void 0 : i.clone()) ?? new Q.Vector3(1, 1, 1)).normalize()
  ), p = At(
    (a ?? new Q.Vector3(0, -1, 0)).normalize()
  ), w = TA(o ?? 0.02), f = TA(I ?? 0.01), x = TA(B ?? 2), M = At(g ?? new Q.Color(1, 1, 1)), D = At(c ?? new Q.Color(0.5, 0.5, 1)), y = TA(C ?? 1), R = TA(0), S = At(new Q.Vector3(0, 0, 0)), m = At(t.min), U = At(t.max), F = TA(A ?? Number.NEGATIVE_INFINITY), k = Nt(U, m), v = new Kt({
    numSplats: e,
    generator: kA(
      { index: "int" },
      { gsplat: W },
      ({ index: AA }) => {
        if (!AA)
          throw new Error("index not defined");
        const z = Le(AA), sA = xt(z).outputs.w;
        let tA = Et(z), O = ne(QA(sA, q("float", 100)));
        O = Ye(QA(re("float", "PI"), O)), O = DA(l, QA(O, Nt(u, l)));
        const T = QA(O, d), Z = ne(QA(sA, q("float", 10))), j = ne(sA), P = Ki(M, D, j), b = QA(P, Z), dA = Le(
          qA({
            vectorType: "ivec2",
            x: AA,
            y: q("int", 6837)
          })
        );
        let gA = Et(dA), pA = QA(xt(dA).outputs.w, x);
        pA = DA(R, pA), tA = DA(tA, S);
        const yA = Hi(
          tA,
          q("vec3", new Q.Vector3(1, 1, 1))
        );
        tA = DA(m, QA(k, yA));
        const MA = q("vec4", new Q.Quaternion(0, 0, 0, 1));
        gA = Ye(DA(Et(pA), gA)), gA = QA(gA, f);
        let EA = DA(tA, gA), UA = xt(EA).outputs.y;
        UA = qi(F, UA), EA = qA({ vector: EA, y: UA });
        let xA = rt({
          flags: re("uint", "GSPLAT_FLAG_ACTIVE"),
          index: AA,
          center: EA,
          scales: T,
          quaternion: MA,
          rgb: b,
          opacity: y
        });
        return xA = L.applyGsplat(xA), { gsplat: xA };
      },
      {
        globals: () => [NA]
      }
    ),
    update: ({ object: AA, time: z, deltaTime: sA }) => {
      R.value = z, L.update(v);
      const tA = p.value.clone().multiplyScalar(w.value * sA);
      S.value.add(tA), AA.visible = y.value > 0, h == null || h({ object: AA, time: z, deltaTime: sA }), v.updateVersion();
    }
  }), L = new wt();
  return {
    snow: v,
    min: m,
    max: U,
    minY: F,
    color1: M,
    color2: D,
    opacity: y,
    fallVelocity: w,
    wanderVariance: x,
    wanderScale: f,
    fallDirection: p,
    minScale: l,
    maxScale: u,
    anisoScale: d
  };
}
const pC = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  DEFAULT_RAIN: Uc,
  DEFAULT_SNOW: vc,
  snowBox: bc,
  staticBox: Rc
}, Symbol.toStringTag, { value: "Module" }));
function Va(t) {
  return kA({ gsplat: W }, { gsplat: W }, ({ gsplat: A }) => {
    if (!A)
      throw new Error("No gsplat input");
    let e = Re(A);
    const s = t.applyGsplat(A), i = Qt(s).outputs.center, n = Re(s), r = pr(i, n), a = wn(r, q("float", 0));
    e = $e(a, We(e), e);
    const o = DA(
      QA(e, q("float", 0.5)),
      q("float", 0.5)
    );
    return A = rt({ gsplat: A, rgb: o }), { gsplat: A };
  });
}
function Lc(t) {
  t.enableWorldToView = !0, t.worldModifier = Va(t.context.worldToView), t.updateGenerator();
}
function ja(t, A, e, s) {
  return kA({ gsplat: W }, { gsplat: W }, ({ gsplat: i }) => {
    if (!i)
      throw new Error("No gsplat input");
    let { center: n } = Qt(i).outputs;
    n = t.apply(n);
    const { z: r } = xt(n).outputs;
    let a = Vr(We(r), A, e);
    return a = $e(s, Nt(q("float", 1), a), a), i = rt({ gsplat: i, r: a, g: a, b: a }), { gsplat: i };
  });
}
function Yc(t, A, e, s) {
  t.enableWorldToView = !0;
  const i = q("float", A), n = q("float", e), r = q("bool", s ?? !1);
  return t.worldModifier = ja(
    t.context.worldToView,
    i,
    n,
    r
  ), t.updateGenerator(), {
    minDepth: i,
    maxDepth: n,
    reverse: r
  };
}
const yC = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  makeDepthColorModifier: ja,
  makeNormalColorModifier: Va,
  setDepthColor: Yc,
  setWorldNormalColor: Lc
}, Symbol.toStringTag, { value: "Module" })), Jt = class Jt {
  static createButton(A, e = {}) {
    const s = navigator.xr;
    if (!s)
      return null;
    const i = s, n = document.createElement("button");
    A.xr.enabled = !0, A.xr.setReferenceSpaceType("local");
    function r() {
      let g = null;
      async function c(E) {
        console.log("onSessionStarted"), E.addEventListener("end", C), await A.xr.setSession(E), n.textContent = "EXIT VR", g = E;
      }
      function C() {
        console.log("onSessionEnded"), g == null || g.removeEventListener("end", C), n.textContent = "ENTER VR", g = null;
      }
      n.style.display = "", n.style.cursor = "pointer", n.style.left = "calc(50% - 100px)", n.style.width = "200px", n.style.height = "100px", n.textContent = "ENTER VR";
      const h = {
        ...e,
        optionalFeatures: [
          // "local-floor",
          // "bounded-floor",
          // "layers",
          ...e.optionalFeatures || []
        ]
      };
      n.onmouseenter = () => {
        n.style.opacity = "1.0";
      }, n.onmouseleave = () => {
        n.style.opacity = "0.5";
      }, n.onclick = () => {
        g === null ? (console.log("requesting session"), i.requestSession("immersive-vr", h).then(
          c
        )) : (console.log("ending session"), g.end());
      };
    }
    function a() {
      n.style.display = "none", n.style.cursor = "auto", n.style.left = "calc(50% - 75px)", n.style.width = "150px", n.onmouseenter = null, n.onmouseleave = null, n.onclick = null;
    }
    function o() {
      a(), n.textContent = "VR NOT SUPPORTED";
    }
    function I(g) {
      a(), console.warn(
        "Exception when trying to call xr.isSessionSupported",
        g
      ), n.textContent = "VR NOT ALLOWED";
    }
    function B(g) {
      g.style.position = "absolute", g.style.bottom = "20px", g.style.padding = "12px 6px", g.style.border = "1px solid #fff", g.style.borderRadius = "4px", g.style.background = "rgba(0,0,0,0.1)", g.style.color = "#fff", g.style.font = "normal 13px sans-serif", g.style.textAlign = "center", g.style.opacity = "0.5", g.style.outline = "none", g.style.zIndex = "999";
    }
    return n.id = "VRButton", n.style.display = "none", B(n), i.isSessionSupported("immersive-vr").then((g) => {
      g ? r() : o(), g && Jt.xrSessionIsGranted && n.click();
    }).catch(I), n;
  }
  static registerSessionGrantedListener() {
    const A = navigator.xr;
    if (!A)
      return null;
    const e = A;
    /WebXRViewer\//i.test(navigator.userAgent) || e.addEventListener("sessiongranted", () => {
      Jt.xrSessionIsGranted = !0;
    });
  }
};
Jt.xrSessionIsGranted = !1;
let Ke = Jt;
Ke.registerSessionGrantedListener();
const Tc = 0.5, Jc = 0.5, Hc = 0;
var es = /* @__PURE__ */ ((t) => (t.w = "wrist", t.t0 = "thumb-metacarpal", t.t1 = "thumb-phalanx-proximal", t.t2 = "thumb-phalanx-distal", t.t3 = "thumb-tip", t.i0 = "index-finger-metacarpal", t.i1 = "index-finger-phalanx-proximal", t.i2 = "index-finger-phalanx-intermediate", t.i3 = "index-finger-phalanx-distal", t.i4 = "index-finger-tip", t.m0 = "middle-finger-metacarpal", t.m1 = "middle-finger-phalanx-proximal", t.m2 = "middle-finger-phalanx-intermediate", t.m3 = "middle-finger-phalanx-distal", t.m4 = "middle-finger-tip", t.r0 = "ring-finger-metacarpal", t.r1 = "ring-finger-phalanx-proximal", t.r2 = "ring-finger-phalanx-intermediate", t.r3 = "ring-finger-phalanx-distal", t.r4 = "ring-finger-tip", t.p0 = "pinky-finger-metacarpal", t.p1 = "pinky-finger-phalanx-proximal", t.p2 = "pinky-finger-phalanx-intermediate", t.p3 = "pinky-finger-phalanx-distal", t.p4 = "pinky-finger-tip", t))(es || {});
const Oa = Object.keys(es), wC = Oa.length, fC = {
  w: 0,
  t0: 1,
  t1: 2,
  t2: 3,
  t3: 4,
  i0: 5,
  i1: 6,
  i2: 7,
  i3: 8,
  i4: 9,
  m0: 10,
  m1: 11,
  m2: 12,
  m3: 13,
  m4: 14,
  r0: 15,
  r1: 16,
  r2: 17,
  r3: 18,
  r4: 19,
  p0: 20,
  p1: 21,
  p2: 22,
  p3: 23,
  p4: 24
}, ee = {
  w: 0.02,
  t0: 0.02,
  t1: 0.014,
  t2: 0.0115,
  t3: 85e-4,
  i0: 0.022,
  i1: 0.012,
  i2: 85e-4,
  i3: 75e-4,
  i4: 65e-4,
  m0: 0.021,
  m1: 0.012,
  m2: 8e-3,
  m3: 75e-4,
  m4: 65e-4,
  r0: 0.019,
  r1: 0.011,
  r2: 75e-4,
  r3: 7e-3,
  r4: 6e-3,
  p0: 0.012,
  p1: 0.01,
  p2: 7e-3,
  p3: 65e-4,
  p4: 55e-4
}, qc = [
  ["w", "t0", "t1", "t2", "t3"],
  ["w", "i0", "i1", "i2", "i3", "i4"],
  ["w", "m0", "m1", "m2", "m3", "m4"],
  ["w", "r0", "r1", "r2", "r3", "r4"],
  ["w", "p0", "p1", "p2", "p3", "p4"]
], Kc = [
  [8, 10, 8, 6],
  [8, 19, 14, 8, 6],
  [8, 19, 14, 8, 6],
  [8, 19, 14, 8, 6],
  [8, 19, 14, 8, 6]
], DC = ["t3", "i4", "m4", "r4", "p4"], mC = ["i4", "m4", "r4", "p4"];
var Za = /* @__PURE__ */ ((t) => (t.left = "left", t.right = "right", t))(Za || {});
const ze = Object.keys(Za);
class MC {
  constructor() {
    this.hands = {}, this.last = {}, this.values = {}, this.tests = {}, this.lastTests = {}, this.updated = !1;
  }
  update({ xr: A, xrFrame: e }) {
    const s = A.getSession();
    if (!s)
      return;
    const i = A.getReferenceSpace();
    if (i && e.getJointPose) {
      this.last = this.hands, this.lastTests = this.tests, this.hands = {}, this.values = {}, this.tests = {};
      for (const n of s.inputSources) {
        if (!n.hand)
          continue;
        const r = n.handedness;
        this.hands[r] = {};
        for (const a of Oa) {
          const o = n.hand.get(es[a]);
          if (o) {
            const I = e.getJointPose(o, i);
            if (I) {
              const { position: B, orientation: g } = I.transform;
              this.hands[r][a] = {
                position: new LA(B.x, B.y, B.z),
                quaternion: new ss(
                  g.x,
                  g.y,
                  g.z,
                  g.w
                ),
                radius: I.radius || 1e-3
              };
            }
          }
        }
      }
      for (const n of ze)
        for (const { key: r, value: a } of [
          { key: `${n}AllTips`, value: this.allTipsTouching(n) },
          {
            key: `${n}IndexThumb`,
            value: this.touching(n, "i4", n, "t3")
          },
          {
            key: `${n}MiddleThumb`,
            value: this.touching(n, "m4", n, "t3")
          },
          {
            key: `${n}RingThumb`,
            value: this.touching(n, "r4", n, "t3")
          },
          {
            key: `${n}PinkyThumb`,
            value: this.touching(n, "p4", n, "t3")
          },
          { key: `${n}TriTips`, value: this.triTipsTouching(n) }
        ])
          this.values[r] = a, this.tests[r] = a === 1 ? !0 : a === 0 ? !1 : this.lastTests[r] ?? !1;
    }
  }
  makeGhostMesh() {
    const A = new LA(), e = new LA(0.01, 0.01, 0.01), s = new ss(0, 0, 0, 1), i = new is(1, 1, 1), n = Math.PI * 3;
    new is(1, 1, 1);
    let r = 1;
    const a = new ZA({
      onFrame: () => {
        let o = 0;
        for (const I of ze) {
          const B = this.hands[I];
          for (const [g, c] of qc.entries())
            for (let C = 1; C < c.length; ++C) {
              const h = Kc[g][C - 1] * 2, E = C + 1 === c.length, l = B == null ? void 0 : B[c[C - 1]], u = B == null ? void 0 : B[c[C]];
              for (let d = 0; d < h; ++d) {
                const p = (d + 0.5) / h;
                if (r = 0, l && u) {
                  A.copy(l.position).lerp(u.position, p), s.copy(l.quaternion).slerp(u.quaternion, p);
                  const w = ee[c[C - 1]], f = ee[c[C]];
                  let x = (1 - p) * w + p * f;
                  E && p > 0.8 && (x *= Math.sqrt(1 - ((p - 0.8) / 0.2) ** 2)), e.set(0.65 * x, 0.5 * x, 3e-3), i.set(
                    0.55 + 0.45 * Math.sin(A.x * n),
                    0.55 + 0.45 * Math.sin(A.y * n),
                    0.55 + 0.45 * Math.sin(A.z * n)
                  ), I === "right" && i.set(1 - i.r, 1 - i.g, 1 - i.b), r = 0.75;
                }
                a.packedSplats.setSplat(
                  o,
                  A,
                  e,
                  s,
                  r,
                  i
                ), o += 1;
              }
            }
        }
        a.packedSplats.numSplats = o, a.packedSplats.needsUpdate = !0, a.numSplats = o, a.updateVersion();
      }
    });
    return a;
  }
  distance(A, e, s, i, n = !1) {
    const r = n ? this.last[A] : this.hands[A], a = n ? this.last[s] : this.hands[s], o = r == null ? void 0 : r[e], I = a == null ? void 0 : a[i];
    return !o || !I ? Number.POSITIVE_INFINITY : o.position.distanceTo(I.position);
  }
  separation(A, e, s, i, n = !1) {
    const r = this.distance(A, e, s, i, n);
    return r === Number.POSITIVE_INFINITY ? Number.POSITIVE_INFINITY : r - ee[e] - ee[i];
  }
  touching(A, e, s, i, n = !1) {
    const r = this.separation(A, e, s, i, n);
    return r === Number.POSITIVE_INFINITY ? Number.POSITIVE_INFINITY : 1 - Math.max(0, Math.min(1, r / 0.01 - Hc));
  }
  allTipsTouching(A, e = !1) {
    return Math.min(
      this.touching(A, "t3", A, "i4", e),
      this.touching(A, "i4", A, "m4", e),
      this.touching(A, "m4", A, "r4", e),
      this.touching(A, "r4", A, "p4", e)
      // this.touching(hand, "p4", hand, "t3", last),
    );
  }
  triTipsTouching(A, e = !1) {
    return Math.min(
      this.touching(A, "t3", A, "i4", e),
      this.touching(A, "i4", A, "m4", e),
      this.touching(A, "m4", A, "t3", e)
    );
  }
}
class xC {
  constructor({
    xrHands: A,
    control: e,
    moveInertia: s,
    rotateInertia: i
  }) {
    this.lastGrip = {}, this.lastPivot = new LA(), this.rotateVelocity = 0, this.velocity = new LA(), this.xrHands = A, this.control = e, this.moveInertia = s ?? Tc, this.rotateInertia = i ?? Jc;
  }
  update(A) {
    var n, r, a, o, I;
    const e = {};
    for (const B of ze) {
      const g = this.xrHands.hands[B];
      g && this.xrHands.tests[`${B}MiddleThumb`] && (e[B] = new LA().add(((n = g.t3) == null ? void 0 : n.position) ?? new LA()).add(((r = g.i4) == null ? void 0 : r.position) ?? new LA()).add(((a = g.m4) == null ? void 0 : a.position) ?? new LA()).add(((o = g.r4) == null ? void 0 : o.position) ?? new LA()).add(((I = g.p4) == null ? void 0 : I.position) ?? new LA()).multiplyScalar(1 / 5));
    }
    if (e.left && e.right && this.lastGrip.left && this.lastGrip.right) {
      const B = e.left.clone().add(e.right).multiplyScalar(0.5), g = this.lastGrip.left.clone().add(this.lastGrip.right).multiplyScalar(0.5);
      this.lastPivot = B;
      const c = B.clone().applyMatrix4(this.control.matrix);
      c.sub(g.clone().applyMatrix4(this.control.matrix)), c.multiplyScalar(1 / A), this.velocity.lerp(c, 1 - Math.exp(-20 * A));
      const C = Math.atan2(e.left.z - B.z, e.left.x - B.x), h = Math.atan2(
        this.lastGrip.left.z - g.z,
        this.lastGrip.left.x - g.x
      );
      let E = C - h;
      E > Math.PI ? E -= Math.PI * 2 : E < -Math.PI && (E += Math.PI * 2);
      const l = E / A, u = Math.exp(-20 * A);
      this.rotateVelocity = this.rotateVelocity * u + l * (1 - u);
    } else if (this.rotateVelocity *= Math.exp(-A / this.rotateInertia), e.left && this.lastGrip.left) {
      const B = e.left.clone().applyMatrix4(this.control.matrix);
      B.sub(this.lastGrip.left.clone().applyMatrix4(this.control.matrix)), B.multiplyScalar(1 / A), this.velocity.lerp(B, 1 - Math.exp(-20 * A));
    } else if (e.right && this.lastGrip.right) {
      const B = e.right.clone().applyMatrix4(this.control.matrix);
      B.sub(
        this.lastGrip.right.clone().applyMatrix4(this.control.matrix)
      ), B.multiplyScalar(1 / A), this.velocity.lerp(B, 1 - Math.exp(-20 * A));
    } else
      this.velocity.multiplyScalar(Math.exp(-A / this.moveInertia));
    const s = this.lastPivot.clone().negate(), i = new De().makeTranslation(s).premultiply(new De().makeRotationY(this.rotateVelocity * A)).premultiply(new De().makeTranslation(this.lastPivot));
    this.control.matrix.multiply(i), this.control.matrix.decompose(
      this.control.position,
      this.control.quaternion,
      this.control.scale
    ), this.control.updateMatrixWorld(!0), this.control.position.sub(this.velocity.clone().multiplyScalar(A)), this.lastGrip = e;
  }
}
const zc = 1, _c = 2, Vc = 2e-3, jc = 6e-3, Oc = 15e-4, Zc = 0.15, Pc = 0.15, Xc = 0.1, Wc = 2, $c = 1, AC = 200, tC = 400, eC = 50, sC = {
  KeyW: new Q.Vector3(0, 0, -1),
  KeyS: new Q.Vector3(0, 0, 1),
  KeyA: new Q.Vector3(-1, 0, 0),
  KeyD: new Q.Vector3(1, 0, 0),
  KeyR: new Q.Vector3(0, 1, 0),
  KeyF: new Q.Vector3(0, -1, 0)
}, iC = {
  ArrowUp: new Q.Vector3(0, 0, -1),
  ArrowDown: new Q.Vector3(0, 0, 1),
  ArrowLeft: new Q.Vector3(-1, 0, 0),
  ArrowRight: new Q.Vector3(1, 0, 0),
  PageUp: new Q.Vector3(0, 1, 0),
  PageDown: new Q.Vector3(0, -1, 0)
}, nC = {
  KeyQ: new Q.Vector3(0, 0, 1),
  KeyE: new Q.Vector3(0, 0, -1)
}, rC = {
  Home: new Q.Vector3(0, -1, 0),
  End: new Q.Vector3(0, 1, 0),
  Insert: new Q.Vector3(-1, 0, 0),
  Delete: new Q.Vector3(1, 0, 0)
};
class SC {
  constructor({ canvas: A }) {
    this.lastTime = 0, this.fpsMovement = new aC({}), this.pointerControls = new oC({ canvas: A });
  }
  update(A) {
    const e = performance.now(), s = (e - (this.lastTime || e)) / 1e3;
    this.lastTime = e, this.fpsMovement.update(s, A), this.pointerControls.update(s, A);
  }
}
class aC {
  constructor({
    moveSpeed: A,
    rollSpeed: e,
    stickThreshold: s,
    rotateSpeed: i,
    keycodeMoveMapping: n,
    keycodeRotateMapping: r,
    gamepadMapping: a,
    capsMultiplier: o,
    shiftMultiplier: I,
    ctrlMultiplier: B,
    xr: g
  } = {}) {
    this.enable = !0, this.moveSpeed = A ?? zc, this.rollSpeed = e ?? _c, this.stickThreshold = s ?? Xc, this.rotateSpeed = i ?? Wc, this.keycodeMoveMapping = n ?? {
      ...sC,
      ...iC
    }, this.keycodeRotateMapping = r ?? {
      ...nC,
      ...rC
    }, this.gamepadMapping = a ?? {
      4: "rollLeft",
      5: "rollRight",
      6: "ctrl",
      7: "shift"
    }, this.capsMultiplier = o ?? 10, this.shiftMultiplier = I ?? 5, this.ctrlMultiplier = B ?? 1 / 5, this.xr = g, this.keydown = {}, this.keycode = {}, document.addEventListener("keydown", (c) => {
      this.keydown[c.key] = !0, this.keycode[c.code] = !0;
    }), document.addEventListener("keyup", (c) => {
      this.keydown[c.key] = !1, this.keycode[c.code] = !1;
    }), window.addEventListener("blur", () => {
      this.keydown = {}, this.keycode = {};
    });
  }
  // Call this method in your render loop with `control` set to the object to control
  // (`THREE.Camera` or a `THREE.Object3D` that contains it), with `deltaTime`
  // in seconds since the last update.
  update(A, e) {
    var B, g;
    if (!this.enable)
      return;
    const s = [new Q.Vector2(), new Q.Vector2()], i = navigator.getGamepads()[0];
    i && (s[0].set(i.axes[0], i.axes[1]), s[1].set(i.axes[2], i.axes[3]));
    const n = (i == null ? void 0 : i.buttons.map((c) => c.pressed)) || [], r = Array.from(((g = (B = this.xr) == null ? void 0 : B.getSession()) == null ? void 0 : g.inputSources) ?? []);
    for (const c of r) {
      const C = c.gamepad;
      if (C)
        switch (c.handedness) {
          case "none": {
            s[0].x += C.axes[0], s[0].y += C.axes[1], s[1].x += C.axes[2], s[1].y += C.axes[3];
            break;
          }
          case "left": {
            s[0].x += C.axes[2], s[0].y += C.axes[3];
            break;
          }
          case "right": {
            s[1].x += C.axes[2], s[1].y += C.axes[3];
            break;
          }
        }
    }
    for (const c of s)
      c.x = Math.abs(c.x) >= this.stickThreshold ? c.x : 0, c.y = Math.abs(c.y) >= this.stickThreshold ? c.y : 0;
    const a = new Q.Vector3(
      s[1].x,
      s[1].y,
      0
    ).multiplyScalar(this.rotateSpeed);
    for (const [c, C] of Object.entries(this.keycodeRotateMapping))
      this.keycode[c] && a.add(C);
    for (const c in this.gamepadMapping)
      if (n[Number.parseInt(c)])
        switch (this.gamepadMapping[c]) {
          case "rollLeft":
            a.z += 1;
            break;
          case "rollRight":
            a.z -= 1;
            break;
        }
    if (a.multiply(
      new Q.Vector3(this.rotateSpeed, this.rotateSpeed, this.rollSpeed)
    ), a.manhattanLength() > 0) {
      a.multiplyScalar(A);
      const c = new Q.Euler().setFromQuaternion(
        e.quaternion,
        "YXZ"
      );
      c.y -= a.x, c.x = Math.max(
        -Math.PI / 2,
        Math.min(Math.PI / 2, c.x - a.y)
      ), c.z = Math.max(-Math.PI, Math.min(Math.PI, c.z + a.z)), e.quaternion.setFromEuler(c);
    }
    const o = new Q.Vector3(s[0].x, 0, s[0].y);
    for (const [c, C] of Object.entries(this.keycodeMoveMapping))
      this.keycode[c] && o.add(C);
    let I = 1;
    this.keydown.CapsLock && (I *= this.capsMultiplier), (this.keycode.ShiftLeft || this.keycode.ShiftRight) && (I *= this.shiftMultiplier), (this.keycode.ControlLeft || this.keycode.ControlRight) && (I *= this.ctrlMultiplier);
    for (const c in this.gamepadMapping)
      if (n[Number.parseInt(c)])
        switch (this.gamepadMapping[c]) {
          case "shift":
            I *= this.shiftMultiplier;
            break;
          case "ctrl":
            I *= this.ctrlMultiplier;
            break;
        }
    o.applyQuaternion(e.quaternion), e.position.add(
      o.multiplyScalar(this.moveSpeed * I * A)
    );
  }
}
class oC {
  constructor({
    // The HTML canvas element to attach pointer events to
    canvas: A,
    // Speed of rotation (default DEFAULT_ROTATE_SPEED)
    rotateSpeed: e,
    // Speed of sliding when dragging with right/middle mouse button or two fingers
    // (default DEFAULT_SLIDE_SPEED)
    slideSpeed: s,
    // Speed of movement when using mouse scroll wheel (default DEFAULT_SCROLL_SPEED)
    scrollSpeed: i,
    // Swap the direction of rotation and sliding (default: false)
    swapRotateSlide: n,
    // Reverse the direction of rotation (default: false)
    reverseRotate: r,
    // Reverse the direction of sliding (default: false)
    reverseSlide: a,
    // Reverse the direction of swipe gestures (default: false)
    reverseSwipe: o,
    // Reverse the direction of scroll wheel movement (default: false)
    reverseScroll: I,
    // Inertia factor for movement (default: DEFAULT_MOVE_INERTIA)
    moveInertia: B,
    // Inertia factor for rotation (default: DEFAULT_ROTATE_INERTIA)
    rotateInertia: g,
    // Pointer rolling scale factor (default: DEFAULT_POINTER_ROLL_SCALE)
    pointerRollScale: c,
    // Callback for double press events (default: () => {})
    doublePress: C
  }) {
    this.enable = !0, this.canvas = A, this.rotateSpeed = e ?? Vc, this.slideSpeed = s ?? jc, this.scrollSpeed = i ?? Oc, this.swapRotateSlide = n ?? !1, this.reverseRotate = r ?? !1, this.reverseSlide = a ?? !1, this.reverseSwipe = o ?? !1, this.reverseScroll = I ?? !1, this.moveInertia = B ?? Pc, this.rotateInertia = g ?? Zc, this.pointerRollScale = c ?? $c, this.doublePress = C ?? (() => {
    }), this.doublePressLimitMs = tC, this.doublePressDistance = eC, this.lastUp = null, this.rotating = null, this.sliding = null, this.dualPress = !1, this.scroll = new Q.Vector3(), this.rotateVelocity = new Q.Vector3(), this.moveVelocity = new Q.Vector3(), A.addEventListener("pointerdown", (E) => {
      const l = this.getPointerPosition(E), u = l.clone(), d = l.clone(), p = !this.swapRotateSlide && !this.rotating && (E.pointerType !== "mouse" || E.button === 0) || this.swapRotateSlide && this.sliding && !this.rotating && (E.pointerType !== "mouse" || E.button === 1), { pointerId: w, timeStamp: f } = E;
      if (p)
        this.rotating = { initial: u, last: d, position: l, pointerId: w, timeStamp: f }, A.setPointerCapture(E.pointerId), this.dualPress = !1;
      else if (!this.sliding) {
        const x = E.pointerType === "mouse" ? E.button : void 0;
        this.sliding = {
          initial: u,
          last: d,
          position: l,
          pointerId: w,
          button: x,
          timeStamp: f
        }, A.setPointerCapture(E.pointerId), this.dualPress = this.rotating != null && f - this.rotating.timeStamp < AC;
      }
    });
    const h = (E) => {
      var d, p;
      ((d = this.rotating) == null ? void 0 : d.pointerId) === E.pointerId ? (this.rotating = null, A.releasePointerCapture(E.pointerId), this.dualPress && this.sliding && (A.releasePointerCapture(this.sliding.pointerId), this.sliding = null)) : ((p = this.sliding) == null ? void 0 : p.pointerId) === E.pointerId && (this.sliding = null, A.releasePointerCapture(E.pointerId), this.dualPress && this.rotating && (A.releasePointerCapture(this.rotating.pointerId), this.rotating = null));
      const l = this.getPointerPosition(E), u = this.lastUp;
      if (this.lastUp = { position: l, time: E.timeStamp }, u && u.position.distanceTo(l) < this.doublePressDistance) {
        const f = E.timeStamp - u.time;
        f < this.doublePressLimitMs && (this.lastUp = null, this.doublePress({ position: l, intervalMs: f }));
      }
    };
    document.addEventListener("pointerup", h), document.addEventListener("pointercancel", h), document.addEventListener("pointermove", (E) => {
      var l, u;
      ((l = this.rotating) == null ? void 0 : l.pointerId) === E.pointerId ? this.rotating.position = this.getPointerPosition(E) : ((u = this.sliding) == null ? void 0 : u.pointerId) === E.pointerId && (this.sliding.position = this.getPointerPosition(E));
    }), A.addEventListener("contextmenu", (E) => {
      E.preventDefault();
    }), A.addEventListener("wheel", (E) => {
      this.scroll.add(
        new Q.Vector3(E.deltaX, E.deltaY, E.deltaZ)
      ), E.preventDefault();
    });
  }
  getPointerPosition(A) {
    const e = this.canvas.getBoundingClientRect();
    return new Q.Vector2(
      A.clientX - e.left,
      A.clientY - e.top
    );
  }
  update(A, e) {
    if (!this.enable)
      return;
    if (this.dualPress && this.rotating && this.sliding) {
      const i = [
        this.rotating.position.clone().sub(this.rotating.last),
        this.sliding.position.clone().sub(this.sliding.last)
      ], n = i[0].dot(i[1]);
      if (n >= 0.2) {
        const r = i[0].clone().add(i[1]), a = new Q.Vector3(r.x, -r.y, 0);
        a.multiplyScalar(this.slideSpeed * (this.reverseSwipe ? 1 : -1)), a.applyQuaternion(e.quaternion), e.position.add(a), this.moveVelocity = a.clone().multiplyScalar(1 / A);
      } else if (n <= -0.2) {
        const r = this.sliding.last.clone().sub(this.rotating.last), a = r.length();
        r.multiplyScalar(1 / a).normalize();
        const o = new Q.Vector2(-r.y, r.x), I = [i[0].dot(r), i[1].dot(r)], B = [i[0].dot(o), i[1].dot(o)], g = this.rotating.last.clone().add(this.sliding.last).multiplyScalar(0.5);
        let c = new Q.Vector3();
        if (e instanceof Q.Camera) {
          const d = new Q.Vector2(
            g.x / this.canvas.clientWidth * 2 - 1,
            -(g.y / this.canvas.clientHeight) * 2 + 1
          ), p = new Q.Raycaster();
          p.setFromCamera(d, e), c = p.ray.direction;
        }
        const C = I[1] - I[0], h = c.multiplyScalar(C * this.slideSpeed);
        e.position.add(h), this.moveVelocity = h.clone().multiplyScalar(1 / A);
        const E = [
          Math.atan(B[0] / (-0.5 * a)),
          Math.atan(B[1] / (0.5 * a))
        ], l = 0.5 * (E[0] + E[1]) * this.pointerRollScale, u = new Q.Euler().setFromQuaternion(
          e.quaternion,
          "YXZ"
        );
        u.z = Math.max(
          -Math.PI,
          Math.min(Math.PI, u.z + 0.5 * l)
        ), e.quaternion.setFromEuler(u);
      }
      this.rotating.last.copy(this.rotating.position), this.sliding.last.copy(this.sliding.position);
    } else {
      const i = new Q.Vector3();
      if (this.rotating && !this.dualPress) {
        const r = this.rotating.position.clone().sub(this.rotating.last);
        this.rotating.last.copy(this.rotating.position), i.set(r.x, r.y, 0), i.multiplyScalar(this.rotateSpeed * (this.reverseRotate ? -1 : 1)), this.rotateVelocity = i.clone().multiplyScalar(1 / A);
      } else
        this.rotateVelocity.multiplyScalar(
          Math.exp(-A / this.rotateInertia)
        ), i.addScaledVector(this.rotateVelocity, A);
      const n = new Q.Euler().setFromQuaternion(
        e.quaternion,
        "YXZ"
      );
      if (n.y -= i.x, n.x = Math.max(
        -Math.PI / 2,
        Math.min(Math.PI / 2, n.x - i.y)
      ), n.z *= Math.exp(-0 * A), e.quaternion.setFromEuler(n), this.sliding && !this.dualPress) {
        const r = this.sliding.position.clone().sub(this.sliding.last);
        this.sliding.last.copy(this.sliding.position);
        const a = this.sliding.button !== 2 ? new Q.Vector3(r.x, 0, r.y) : new Q.Vector3(r.x, -r.y, 0);
        a.multiplyScalar(this.slideSpeed * (this.reverseSlide ? -1 : 1)), a.applyQuaternion(e.quaternion), e.position.add(a), this.moveVelocity = a.clone().multiplyScalar(1 / A);
      } else
        this.moveVelocity.multiplyScalar(
          Math.exp(-A / this.moveInertia)
        ), e.position.addScaledVector(this.moveVelocity, A);
    }
    const s = this.scroll.multiplyScalar(this.scrollSpeed);
    s.set(s.x, s.z, s.y), this.reverseScroll && s.multiplyScalar(-1), s.applyQuaternion(e.quaternion), e.position.add(s), this.scroll.set(0, 0, 0);
  }
}
export {
  mC as FINGER_TIPS,
  aC as FpsMovement,
  ze as HANDS,
  Za as Hand,
  xC as HandMovement,
  Oa as JOINT_IDS,
  fC as JOINT_INDEX,
  ee as JOINT_RADIUS,
  qc as JOINT_SEGMENTS,
  Kc as JOINT_SEGMENT_STEPS,
  DC as JOINT_TIPS,
  es as JointEnum,
  wC as NUM_JOINTS,
  KA as PackedSplats,
  Be as PlyReader,
  oC as PointerControls,
  ge as Readback,
  vg as Sint8ToFloat,
  SC as SparkControls,
  Ce as SparkRenderer,
  ce as SparkViewpoint,
  Ne as SplatAccumulator,
  Ie as SplatEdit,
  _Q as SplatEditRgbaBlendMode,
  jQ as SplatEditSdf,
  KQ as SplatEditSdfType,
  OQ as SplatEdits,
  Lt as SplatFileType,
  Kt as SplatGenerator,
  gc as SplatLoader,
  ZA as SplatMesh,
  PQ as SplatModifier,
  CC as SplatSkinning,
  wt as SplatTransformer,
  xc as SpzReader,
  tt as SpzWriter,
  Rg as Uint8ToFloat,
  Ke as VRButton,
  MC as XrHands,
  hC as constructAxes,
  EC as constructGrid,
  lC as constructSpherePoints,
  BC as dyno,
  AI as flipPixels,
  se as floatToSint8,
  FA as floatToUint8,
  fA as fromHalf,
  pC as generators,
  La as getSplatFileType,
  dC as imageSplats,
  Wg as isAndroid,
  Xg as isMobile,
  $g as isOculus,
  QC as isPcSogs,
  yC as modifiers,
  tI as pixelsToPngUrl,
  ve as setPackedSplat,
  uC as textSplats,
  Ct as toHalf,
  cC as transcodeSpz,
  Ue as unpackSplat,
  Ta as unpackSplats,
  IC as utils
};
//# sourceMappingURL=spark.module.min.js.map
